<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:context="http://www.springframework.org/schema/context"
             xmlns:mvc="http://www.springframework.org/schema/task"
             xmlns:aop="http://www.springframework.org/schema/aop"
             xmlns:util="http://www.springframework.org/schema/util" xmlns:tx="http://www.springframework.org/schema/tx"
             xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd
http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd">

    <!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->

    <!-- Enables the Spring MVC @Controller programming model -->
    <mvc:annotation-driven/>
    <context:annotation-config/>
    <!--<aop:aspectj-autoproxy/>-->
    <tx:annotation-driven />
    <!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
    <beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <beans:property name="prefix" value="/WEB-INF/views/"/>
        <beans:property name="suffix" value=".jsp"/>
    </beans:bean>

    <!--Analyser-->
   <!-- <beans:bean id="analyser" class="com.inteltrader.advisor.simpleadvisor.SimpleAdvisor">
    </beans:bean>-->
    <!-- DAO LAYER -->
    <beans:bean id="instrumentDao" class="com.inteltrader.dao.InstrumentDao">
    </beans:bean>
    <beans:bean id="portfolioDao" class="com.inteltrader.dao.PortfolioDao">
    </beans:bean>
    <beans:bean id="statesDao" class="com.inteltrader.dao.StatesDao">
    </beans:bean>

 <!-- Application Service Layer -->
    <beans:bean id="instrumentService" class="com.inteltrader.service.InstrumentServiceImpl">
    </beans:bean>
    <beans:bean id="portfolioService" class="com.inteltrader.service.PortfolioServiceImpl">
    </beans:bean>
    <beans:bean id="investmentService" class="com.inteltrader.service.InvestmentServiceImpl">
    </beans:bean>
    <beans:bean id="analyserService" class="com.inteltrader.service.AnalyserServiceImpl">
    </beans:bean>

    <!-- ENTITY MANAGER... BEANIFY ENTITY MANAGER FACTORY -->
    <beans:bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <beans:property name="loadTimeWeaver">
            <beans:bean class="org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver"/>
        </beans:property>
    </beans:bean>

    <beans:bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <beans:property name="entityManagerFactory" ref="entityManagerFactory"/>
    </beans:bean>

    <!--<aop:config>
        <aop:pointcut id="allDaoMethods" expression="execution(* com.inteltrader.dao.*.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="allDaoMethods"/>
    </aop:config>

    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="*" propagation="SUPPORTS" read-only="true"/>
        </tx:attributes>
    </tx:advice>-->


    <context:component-scan base-package="com.inteltrader"/>

    <!--for logging before and after using AOP-->
    <beans:bean id="aroundMethod" class="com.inteltrader.util.BeforeAndAfterLogger"/>

    <aop:config>
        <aop:aspect id="serviceAspect" ref="aroundMethod">
            <aop:pointcut id="servicePointCutBefore" expression="execution(* com.inteltrader.service.*.*(..))"/>
            <aop:around method="aroundMethod" pointcut-ref="servicePointCutBefore"/>
        </aop:aspect>
        <aop:aspect id="daoAspect" ref="aroundMethod">
            <aop:pointcut id="daoPointCutBefore" expression="execution(* com.inteltrader.dao.*.*(..))"/>
            <aop:around method="aroundMethod" pointcut-ref="daoPointCutBefore"/>
        </aop:aspect>
        <aop:aspect id="analyserAspect" ref="aroundMethod">
            <aop:pointcut id="analyserPointCutBefore" expression="execution(* com.inteltrader.advisor.qlearningadvisor.*.*(..))"/>
            <aop:around method="aroundMethod" pointcut-ref="analyserPointCutBefore"/>
        </aop:aspect>
    </aop:config>

</beans:beans>