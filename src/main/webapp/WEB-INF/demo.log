Initializing servlet 'appServlet'
Initializing new StandardServletEnvironment
Adding [servletConfigInitParams] PropertySource with lowest search precedence
Adding [servletContextInitParams] PropertySource with lowest search precedence
Adding [jndiProperties] PropertySource with lowest search precedence
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment]
FrameworkServlet 'appServlet': initialization started
Servlet with name 'appServlet' will try to create custom WebApplicationContext context of class 'org.springframework.web.context.support.XmlWebApplicationContext', using parent context [Root WebApplicationContext: startup date [Thu Apr 18 17:22:05 IST 2013]; root of context hierarchy]
Searching for key 'spring.profiles.active' in [servletConfigInitParams]
Searching for key 'spring.profiles.active' in [servletContextInitParams]
Searching for key 'spring.profiles.active' in [jndiProperties]
Looking up JNDI object with name [java:comp/env/spring.profiles.active]
Converted JNDI name [java:comp/env/spring.profiles.active] not found - trying original name [spring.profiles.active]. javax.naming.NameNotFoundException: Name [spring.profiles.active] is not bound in this Context. Unable to find [spring.profiles.active].
Looking up JNDI object with name [spring.profiles.active]
JNDI lookup for name [spring.profiles.active] threw NamingException with message: Name [spring.profiles.active] is not bound in this Context. Unable to find [spring.profiles.active].. Returning null.
Searching for key 'spring.profiles.active' in [systemProperties]
Searching for key 'spring.profiles.active' in [systemEnvironment]
Could not find key 'spring.profiles.active' in any property source. Returning [null]
Searching for key 'spring.profiles.default' in [servletConfigInitParams]
Searching for key 'spring.profiles.default' in [servletContextInitParams]
Searching for key 'spring.profiles.default' in [jndiProperties]
Looking up JNDI object with name [java:comp/env/spring.profiles.default]
Converted JNDI name [java:comp/env/spring.profiles.default] not found - trying original name [spring.profiles.default]. javax.naming.NameNotFoundException: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].
Looking up JNDI object with name [spring.profiles.default]
JNDI lookup for name [spring.profiles.default] threw NamingException with message: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].. Returning null.
Searching for key 'spring.profiles.default' in [systemProperties]
Searching for key 'spring.profiles.default' in [systemEnvironment]
Searching for key 'spring.profiles.default' in [servletConfigInitParams]
Searching for key 'spring.profiles.default' in [servletConfigInitParams]
Searching for key 'spring.profiles.default' in [servletContextInitParams]
Searching for key 'spring.profiles.default' in [jndiProperties]
Looking up JNDI object with name [java:comp/env/spring.profiles.default]
Converted JNDI name [java:comp/env/spring.profiles.default] not found - trying original name [spring.profiles.default]. javax.naming.NameNotFoundException: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].
Looking up JNDI object with name [spring.profiles.default]
JNDI lookup for name [spring.profiles.default] threw NamingException with message: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].. Returning null.
Searching for key 'spring.profiles.default' in [systemProperties]
Searching for key 'spring.profiles.default' in [systemEnvironment]
Could not find key 'spring.profiles.default' in any property source. Returning [null]
Replacing [servletContextInitParams] PropertySource with [servletContextInitParams]
Replacing [servletConfigInitParams] PropertySource with [servletConfigInitParams]
Refreshing WebApplicationContext for namespace 'appServlet-servlet': startup date [Thu Apr 18 17:22:14 IST 2013]; parent: Root WebApplicationContext
Initializing new StandardEnvironment
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
Initializing new StandardEnvironment
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
Loading schema mappings from [META-INF/spring.schemas]
Loaded schema mappings: {http://www.springframework.org/schema/data/jpa/spring-jpa-1.2.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.2.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.1.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.1.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.5.xsd=org/springframework/data/repository/config/spring-repository-1.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.0.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.3.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.4.xsd=org/springframework/data/repository/config/spring-repository-1.4.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.3.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/data/repository/spring-repository.xsd=org/springframework/data/repository/config/spring-repository-1.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.0.xsd=org/springframework/data/repository/config/spring-repository-1.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.1.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.1.xsd
Found XML schema [http://www.springframework.org/schema/task/spring-task-3.0.xsd] in classpath: org/springframework/scheduling/config/spring-task-3.0.xsd
Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd
Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd
Found XML schema [http://www.springframework.org/schema/tx/spring-tx-3.1.xsd] in classpath: org/springframework/transaction/config/spring-tx-3.1.xsd
Loading bean definitions
Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/data/repository=org.springframework.data.repository.config.RepositoryNameSpaceHandler, http://www.springframework.org/schema/data/jpa=org.springframework.data.jpa.repository.config.JpaRepositoryNameSpaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
Neither XML 'id' nor 'name' specified - using generated bean name [org.springframework.web.servlet.view.InternalResourceViewResolver#0]
Neither XML 'id' nor 'name' specified - using generated bean name [org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver#ee883ec]
Initializing new StandardEnvironment
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
Looking for matching resources in directory tree [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Resolved location pattern [classpath*:com/inteltrader/**/*.class] to resources [file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\Advice.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\FIFOList.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\InstrumentVo.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\Strategies.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\Strategy.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\StrategyMACD.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao\IInstrumentDao.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao\InstrumentDao.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao\IPortfolioDao.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao\PortfolioDao.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Instrument.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Investment.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Portfolio.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Price.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Transactions.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest\InstrumentServiceRest.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest\PortfolioServiceRest.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\AnalyserService.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\CronService.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\InstrumentService.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\InstrumentServiceImpl.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\PortfolioService.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\PortfolioServiceImpl.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util\DownloadZip.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util\ExtractZipFile.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util\ReadPriceCsv.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util\RestCodes.class]]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Instrument.class]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Investment.class]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Portfolio.class]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest\InstrumentServiceRest.class]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest\PortfolioServiceRest.class]
Loaded 21 bean definitions from location pattern [/WEB-INF/applicationContext.xml]
Bean factory for WebApplicationContext for namespace 'appServlet-servlet': org.springframework.beans.factory.support.DefaultListableBeanFactory@432d0299: defining beans [org.springframework.context.annotation.internalAsyncAnnotationProcessor,org.springframework.context.annotation.internalScheduledAnnotationProcessor,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0,org.springframework.web.servlet.view.InternalResourceViewResolver#0,instrumentDao,portfolioDao,instrumentService,portfolioService,entityManagerFactory,transactionManager,instrument,investment,portfolio,instrumentServiceRest,portfolioServiceRest]; parent: org.springframework.beans.factory.support.DefaultListableBeanFactory@579aa202
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@5d491a2b]
Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@6a552ce5]
Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.DelegatingThemeSource@7df6a4ec]
Creating shared instance of singleton bean 'entityManagerFactory'
Creating instance of bean 'entityManagerFactory'
Eagerly caching bean 'entityManagerFactory' to allow for resolving potential circular references
Creating instance of bean 'org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver#ee883ec'
Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Creating instance of bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0' to allow for resolving potential circular references
Creating instance of bean '(inner bean)'
Creating shared instance of singleton bean 'transactionManager'
Creating instance of bean 'transactionManager'
Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
Returning eagerly cached instance of singleton bean 'entityManagerFactory' that is not fully initialized yet - a consequence of a circular reference
Ignoring currently created advisor 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0': Error creating bean with name 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0': Cannot create inner bean '(inner bean)' of type [org.springframework.transaction.interceptor.TransactionInterceptor] while setting bean property 'transactionInterceptor'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)': Cannot resolve reference to bean 'transactionManager' while setting bean property 'transactionManager'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'transactionManager' defined in ServletContext resource [/WEB-INF/applicationContext.xml]: Cannot resolve reference to bean 'entityManagerFactory' while setting bean property 'entityManagerFactory'; nested exception is org.springframework.beans.factory.BeanCurrentlyInCreationException: Error creating bean with name 'entityManagerFactory': FactoryBean which is currently in creation returned null from getObject
Finished creating instance of bean 'org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver#ee883ec'
Invoking afterPropertiesSet() on bean with name 'entityManagerFactory'
Building JPA container EntityManagerFactory for persistence unit 'intelTrader'
Adding type registration boolean -> org.hibernate.type.BooleanType@474729b4
Adding type registration boolean -> org.hibernate.type.BooleanType@474729b4
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@474729b4
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@65783901
Adding type registration true_false -> org.hibernate.type.TrueFalseType@61390255
Adding type registration yes_no -> org.hibernate.type.YesNoType@6fcde1c3
Adding type registration byte -> org.hibernate.type.ByteType@35d143d0
Adding type registration byte -> org.hibernate.type.ByteType@35d143d0
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@35d143d0
Adding type registration character -> org.hibernate.type.CharacterType@4d12a3ca
Adding type registration char -> org.hibernate.type.CharacterType@4d12a3ca
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4d12a3ca
Adding type registration short -> org.hibernate.type.ShortType@5ccfd847
Adding type registration short -> org.hibernate.type.ShortType@5ccfd847
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5ccfd847
Adding type registration integer -> org.hibernate.type.IntegerType@350164a0
Adding type registration int -> org.hibernate.type.IntegerType@350164a0
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@350164a0
Adding type registration long -> org.hibernate.type.LongType@869864f
Adding type registration long -> org.hibernate.type.LongType@869864f
Adding type registration java.lang.Long -> org.hibernate.type.LongType@869864f
Adding type registration float -> org.hibernate.type.FloatType@2a672727
Adding type registration float -> org.hibernate.type.FloatType@2a672727
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2a672727
Adding type registration double -> org.hibernate.type.DoubleType@4a61f88e
Adding type registration double -> org.hibernate.type.DoubleType@4a61f88e
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4a61f88e
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2ca759ba
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2ca759ba
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@50a2e9dc
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@50a2e9dc
Adding type registration string -> org.hibernate.type.StringType@5f2a34ce
Adding type registration java.lang.String -> org.hibernate.type.StringType@5f2a34ce
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4cb582d7
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7312c172
Adding type registration url -> org.hibernate.type.UrlType@547791fd
Adding type registration java.net.URL -> org.hibernate.type.UrlType@547791fd
Adding type registration date -> org.hibernate.type.DateType@2d0e8871
Adding type registration java.sql.Date -> org.hibernate.type.DateType@2d0e8871
Adding type registration time -> org.hibernate.type.TimeType@275dfc8a
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@275dfc8a
Adding type registration timestamp -> org.hibernate.type.TimestampType@1d5a09f0
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1d5a09f0
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1d5a09f0
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5923ec42
Adding type registration calendar -> org.hibernate.type.CalendarType@1fc59a67
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1fc59a67
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1fc59a67
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@90da34e
Adding type registration locale -> org.hibernate.type.LocaleType@61e9be1d
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@61e9be1d
Adding type registration currency -> org.hibernate.type.CurrencyType@453652f
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@453652f
Adding type registration timezone -> org.hibernate.type.TimeZoneType@48dc580e
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@48dc580e
Adding type registration class -> org.hibernate.type.ClassType@5fd59455
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5fd59455
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@16d2d5a8
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@16d2d5a8
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@51c25578
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@60d18f72
Adding type registration binary -> org.hibernate.type.BinaryType@6280cd64
Adding type registration byte[] -> org.hibernate.type.BinaryType@6280cd64
Adding type registration [B -> org.hibernate.type.BinaryType@6280cd64
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3cacce1d
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3cacce1d
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3cacce1d
Adding type registration image -> org.hibernate.type.ImageType@317cd9ca
Adding type registration characters -> org.hibernate.type.CharArrayType@50fc3c23
Adding type registration char[] -> org.hibernate.type.CharArrayType@50fc3c23
Adding type registration [C -> org.hibernate.type.CharArrayType@50fc3c23
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@31c7704d
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@31c7704d
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@31c7704d
Adding type registration text -> org.hibernate.type.TextType@1992ec5
Adding type registration ntext -> org.hibernate.type.NTextType@6a809b0d
Adding type registration blob -> org.hibernate.type.BlobType@1776c6e6
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1776c6e6
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@905a192
Adding type registration clob -> org.hibernate.type.ClobType@69ad1973
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@69ad1973
Adding type registration nclob -> org.hibernate.type.NClobType@3cfc3678
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3cfc3678
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@30791ddb
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2e96e1ee
Adding type registration serializable -> org.hibernate.type.SerializableType@1fda2814
Adding type registration object -> org.hibernate.type.ObjectType@24c74cbe
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@24c74cbe
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4bc5c28f
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@24686126
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@40c21876
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6d40c31
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4b6c6877
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3a3e8350
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5e1f170f
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4b230a0f
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Processing PersistenceUnitInfo [
	name: intelTrader
	persistence provider classname: org.hibernate.ejb.HibernatePersistence
	classloader: WebappClassLoader
  context: 
  delegate: false
  repositories:
    /WEB-INF/classes/
----------> Parent Classloader:
ClassRealm[plugin>org.apache.tomcat.maven:tomcat7-maven-plugin:2.0, parent: sun.misc.Launcher$AppClassLoader@35b284a4]

	Temporary classloader: org.springframework.instrument.classloading.SimpleThrowawayClassLoader@69698552
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/vvarm1/IdeaProjects/intelTrader/src/main/webapp/WEB-INF/classes
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.inteltrader.entity.Instrument
		com.inteltrader.entity.Portfolio
		com.inteltrader.entity.Investment]
	Mapping files names []
	Properties [
		hibernate.connection.username: root
		hibernate.connection.password: root
		hibernate.dialect: org.hibernate.dialect.MySQLDialect
		hibernate.c3p0.min_size: 10
		hibernate.connection.url: jdbc:mysql://localhost:3306/TRADER_DB
		hibernate.show_sql: true
		hibernate.connection.driver_class: com.mysql.jdbc.Driver
		hibernate.hbm2ddl.auto: update]
Detect class: true; detect hbm: true
Detect class: true; detect hbm: true
Searching mapped entities in jar/par: file:/C:/Users/vvarm1/IdeaProjects/intelTrader/src/main/webapp/WEB-INF/classes
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.ejb.event.JpaIntegrator].
No JNDI name configured for binding Ejb3Configuration
Preparing to build session factory with filters : {}
Processing hbm.xml files
Process annotated classes
Binding entity from annotated class: com.inteltrader.entity.Instrument
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Instrument
Bind entity com.inteltrader.entity.Instrument on table INSTRUMENT
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=SYMBOL_NAME, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property symbolName with lazy=false
building SimpleValue for symbolName
Building property symbolName
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=priceList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=priceList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=priceList_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='priceList_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='SYMBOL_NAME', referencedColumn='', mappedBy=''}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Collection role: com.inteltrader.entity.Instrument.priceList
Building property priceList
Binding entity from annotated class: com.inteltrader.entity.Portfolio
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Portfolio
Bind entity com.inteltrader.entity.Portfolio on table PORTFOLIO
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=PORTFOLIO_NAME, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property portfolioName with lazy=false
building SimpleValue for portfolioName
Building property portfolioName
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='associatedPortfolio'}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=investmentList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=element, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=investmentList_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='investmentList_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='associatedPortfolio'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='associatedPortfolio'}
Collection role: com.inteltrader.entity.Portfolio.investmentList
Building property investmentList
Binding entity from annotated class: com.inteltrader.entity.Investment
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Investment
Bind entity com.inteltrader.entity.Investment on table INVESTMENT
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=INVESTMENT_ID, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property investmentId with lazy=false
building SimpleValue for investmentId
Building property investmentId
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=associatedPortfolio, insertable=true, updatable=true, unique=false}
Building property associatedPortfolio
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=currentPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property currentPrice with lazy=false
building SimpleValue for currentPrice
Building property currentPrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=quantity, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property quantity with lazy=false
building SimpleValue for quantity
Building property quantity
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=INVESTMENT_SYMBOL, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property symbolName with lazy=false
building SimpleValue for symbolName
Building property symbolName
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=transactionsList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=transactionsList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=transactionsList_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='transactionsList_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='INVESTMENT_ID', referencedColumn='', mappedBy=''}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Collection role: com.inteltrader.entity.Investment.transactionsList
Building property transactionsList
Setting SimpleValue typeName for symbolName
Setting SimpleValue typeName for portfolioName
Setting SimpleValue typeName for investmentId
Setting SimpleValue typeName for currentPrice
Setting SimpleValue typeName for quantity
Setting SimpleValue typeName for symbolName
Processing fk mappings (*ToOne and JoinedSubclass)
Processing extends queue
Processing extends queue
Processing collection mappings
Second pass for collection: com.inteltrader.entity.Investment.transactionsList
Binding a collection of element: com.inteltrader.entity.Investment.transactionsList
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT_TRANSACTION), mappingColumn=quantity, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property quantity with lazy=false
building SimpleValue for quantity
Setting SimpleValue typeName for quantity
Building property quantity
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT_TRANSACTION), mappingColumn=transactionId, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property transactionId with lazy=false
building SimpleValue for transactionId
Setting SimpleValue typeName for transactionId
Building property transactionId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT_TRANSACTION), mappingColumn=transactionPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property transactionPrice with lazy=false
building SimpleValue for transactionPrice
Setting SimpleValue typeName for transactionPrice
Building property transactionPrice
Mapped collection key: INVESTMENT_ID, element: quantity, transactionId, transactionPrice
Second pass for collection: com.inteltrader.entity.Instrument.priceList
Binding a collection of element: com.inteltrader.entity.Instrument.priceList
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=closePrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property closePrice with lazy=false
building SimpleValue for closePrice
Setting SimpleValue typeName for closePrice
Building property closePrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=highPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property highPrice with lazy=false
building SimpleValue for highPrice
Setting SimpleValue typeName for highPrice
Building property highPrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=lastClosePrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property lastClosePrice with lazy=false
building SimpleValue for lastClosePrice
Setting SimpleValue typeName for lastClosePrice
Building property lastClosePrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=lowPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property lowPrice with lazy=false
building SimpleValue for lowPrice
Setting SimpleValue typeName for lowPrice
Building property lowPrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=openPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property openPrice with lazy=false
building SimpleValue for openPrice
Setting SimpleValue typeName for openPrice
Building property openPrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=priceId, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property priceId with lazy=false
building SimpleValue for priceId
Setting SimpleValue typeName for priceId
Building property priceId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=timeStamp, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property timeStamp with lazy=false
building SimpleValue for timeStamp
Setting SimpleValue typeName for timeStamp
Building property timeStamp
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=totalTradedQuantity, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property totalTradedQuantity with lazy=false
building SimpleValue for totalTradedQuantity
Setting SimpleValue typeName for totalTradedQuantity
Building property totalTradedQuantity
Mapped collection key: SYMBOL_NAME, element: closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity
Second pass for collection: com.inteltrader.entity.Portfolio.investmentList
Binding a OneToMany: com.inteltrader.entity.Portfolio.investmentList through a foreign key
Mapping collection: com.inteltrader.entity.Portfolio.investmentList -> INVESTMENT
Retrieving property com.inteltrader.entity.Investment.associatedPortfolio
Mapped collection key: associatedPortfolio_PORTFOLIO_NAME, one-to-many: com.inteltrader.entity.Investment
Processing native query and ResultSetMapping mappings
Processing association property references
Creating tables' unique integer identifiers
Processing foreign key constraints
Resolving reference to class: com.inteltrader.entity.Instrument
Resolving reference to class: com.inteltrader.entity.Portfolio
Resolving reference to class: com.inteltrader.entity.Investment
HHH000022: c3p0 properties were encountered, but the org.hibernate.service.jdbc.connections.internal.C3P0ConnectionProvider provider class was not found on the classpath; these properties are going to be ignored.
HHH000402: Using Hibernate built-in connection pool (not for production use!)
HHH000115: Hibernate connection pool size: 20
HHH000006: Autocommit mode: true
HHH000401: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/TRADER_DB]
HHH000046: Connection properties: {user=root, password=root, autocommit=true, release_mode=auto}
Opening new JDBC connection
Created connection to: jdbc:mysql://localhost:3306/TRADER_DB, Isolation Level: 4
Database ->
       name : MySQL
    version : 5.6.10-log
      major : 5
      minor : 6
Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.9 ( Revision: ${svn.Revision} )
      major : 5
      minor : 1
JDBC version : 3.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: disabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
multi-tenancy strategy : NONE
Connection release mode: auto
HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
Maximum outer join fetch depth: 2
Default batch fetch size: 1
Generate SQL with comments: disabled
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
HHH000397: Using ASTQueryTranslatorFactory
Query language substitutions: {}
JPA-QL strict compliance: enabled
Second-level cache: enabled
Query cache: disabled
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
Optimize cache for minimal puts: disabled
Structured second-level cache entries: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Named query checking : enabled
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : : disabled
Building session factory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\vvarm1\IdeaProjects\intelTrader\target\tomcat, hibernate.connection.url=jdbc:mysql://localhost:3306/TRADER_DB, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.ejb.discard_pc_on_close=false, catalina.useNaming=true, hibernate.transaction.flush_before_completion=false, os.name=Windows 7, sun.boot.class.path=C:\Program Files\Java\jdk1.7.0_10\jre\lib\resources.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\rt.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\jce.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.7.0_10\jre\classes, java.util.logging.config.file=C:\Users\vvarm1\IdeaProjects\intelTrader\target\tomcat\conf\logging.properties, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.7.0_10-b18, hibernate.connection.autocommit=true, hibernate.c3p0.min_size=10, user.name=vvarm1, shared.loader=, guice.disable.misplaced.annotation.check=true, tomcat.util.buf.StringCache.byte.enabled=true, javax.persistence.validation.mode=AUTO, hibernate.connection.release_mode=auto, idea.launcher.bin.path=C:\Program Files (x86)\JetBrains\IntelliJ IDEA Community Edition 12.0.4\bin, user.language=en, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, sun.boot.library.path=C:\Program Files\Java\jdk1.7.0_10\jre\bin, classworlds.conf=C:\Program Files\Apache Software Foundation\apache-maven-3.0.5\bin\m2.conf, java.version=1.7.0_10, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, user.timezone=Asia/Calcutta, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.7.0_10\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, file.encoding.pkg=sun.io, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.tomcat.,org.apache.jasper., file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=51.0, user.country=US, java.home=C:\Program Files\Java\jdk1.7.0_10\jre, java.vm.info=mixed mode, os.version=6.1, hibernate.transaction.factory_class=org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory, hibernate.query.jpaql_strict_compliance=true, path.separator=;, java.vm.version=23.6-b04, hibernate.connection.password=root, user.variant=, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.scan.DefaultJarScanner.jarsToSkip=bootstrap.jar,commons-daemon.jar,tomcat-juli.jar,annotations-api.jar,el-api.jar,jsp-api.jar,servlet-api.jar,catalina.jar,catalina-ant.jar,catalina-ha.jar,catalina-tribes.jar,jasper.jar,jasper-el.jar,ecj-*.jar,tomcat-api.jar,tomcat-util.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-jni.jar,tomcat-spdy.jar,tomcat-i18n-en.jar,tomcat-i18n-es.jar,tomcat-i18n-fr.jar,tomcat-i18n-ja.jar,tomcat-juli-adapters.jar,catalina-jmx-remote.jar,catalina-ws.jar,tomcat-jdbc.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,jstl.jar,geronimo-spec-jaxrpc*.jar,wsdl4j*.jar,ant.jar,ant-junit*.jar,aspectj*.jar,jmx.jar,h2*.jar,hibernate*.jar,httpclient*.jar,jmx-tools.jar,jta*.jar,log4j*.jar,mail*.jar,slf4j*.jar,xercesImpl.jar,xmlParserAPIs.jar,xml-apis.jar,access-bridge-64.jar,dnsns.jar,jaccess.jar,ldapsec.jar,localedata.jar,sunjce_provider.jar,sunmscapi.jar,sunpkcs11.jar,jhall.jar,tools.jar,sunec.jar,zipfs.jar,gnome-java-bridge.jar,pulse-java.jar,apple_provider.jar,AppleScriptEngine.jar,CoreAudio.jar,dns_sd.jar,j3daudio.jar,j3dcore.jar,j3dutils.jar,jai_core.jar,jai_codec.jar,mlibwrapper_jai.jar,MRJToolkit.jar,vecmath.jar,junit.jar,junit-*.jar,ant-launcher.jar, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.tomcat.,org.apache.jasper., user.script=, java.naming.factory.url.pkgs=org.apache.naming, user.home=C:\Users\vvarm1, org.apache.catalina.startup.ContextConfig.jarsToSkip=, java.specification.vendor=Oracle Corporation, hibernate.hbm2ddl.auto=update, java.library.path=C:\Program Files\Java\jdk1.7.0_10\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\JetBrains\IntelliJ IDEA Community Edition 12.0.4\bin\..\.\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\ThinkPad\Bluetooth Software\;C:\Program Files\ThinkPad\Bluetooth Software\syswow64;c:\Program Files\Intel\WiFi\bin\;c:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files (x86)\Git\cmd;C:\Users\vvarm1\Documents\play-2.0.3;C:\Program Files\Java\jdk1.7.0_10\bin;C:\Program Files\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\QuickTime\QTSystem\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Java\jre6\bin;C:\Program Files\Apache Software Foundation\apache-maven-3.0.5\bin;c:\program files (x86)\jetbrains\intellij idea community edition 12.0.4\jre\jre\bin;., java.vendor.url=http://java.oracle.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, org.apache.catalina.startup.TldConfig.jarsToSkip=, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, common.loader=${catalina.base}/lib,${catalina.base}/lib/*.jar,${catalina.home}/lib,${catalina.home}/lib/*.jar, maven.home=C:\Program Files\Apache Software Foundation\apache-maven-3.0.5, java.runtime.name=Java(TM) SE Runtime Environment, java.class.path=C:\Program Files\Apache Software Foundation\apache-maven-3.0.5\boot\plexus-classworlds-2.4.jar;C:\Program Files (x86)\JetBrains\IntelliJ IDEA Community Edition 12.0.4\lib\idea_rt.jar, sun.java.command=com.intellij.rt.execution.application.AppMain org.codehaus.classworlds.Launcher --no-plugin-registry --fail-fast --strict-checksums --update-snapshots org.apache.tomcat.maven:tomcat7-maven-plugin:2.0:run, hibernate.bytecode.use_reflection_optimizer=false, idea.launcher.port=7541, java.vm.specification.name=Java Virtual Machine Specification, catalina.home=C:\Users\vvarm1\IdeaProjects\intelTrader\target\tomcat, java.vm.specification.version=1.7, sun.os.patch.level=Service Pack 1, sun.cpu.endian=little, java.io.tmpdir=C:\Users\vvarm1\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, server.loader=, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, java.ext.dirs=C:\Program Files\Java\jdk1.7.0_10\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=C:\Users\vvarm1\IdeaProjects\intelTrader, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding=UTF-8, hibernate.use_identifier_rollback=false, java.specification.version=1.7, hibernate.show_sql=true}
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Static SQL for entity: com.inteltrader.entity.Investment
 Version select: select INVESTMENT_ID from TRADER_DB.INVESTMENT where INVESTMENT_ID =?
 Snapshot select: select investment_.INVESTMENT_ID, investment_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_, investment_.currentPrice as currentP2_2_, investment_.quantity as quantity2_, investment_.INVESTMENT_SYMBOL as INVESTMENT4_2_ from TRADER_DB.INVESTMENT investment_ where investment_.INVESTMENT_ID=?
 Insert 0: insert into TRADER_DB.INVESTMENT (associatedPortfolio_PORTFOLIO_NAME, currentPrice, quantity, INVESTMENT_SYMBOL, INVESTMENT_ID) values (?, ?, ?, ?, ?)
 Update 0: update TRADER_DB.INVESTMENT set associatedPortfolio_PORTFOLIO_NAME=?, currentPrice=?, quantity=?, INVESTMENT_SYMBOL=? where INVESTMENT_ID=?
 Delete 0: delete from TRADER_DB.INVESTMENT where INVESTMENT_ID=?
 Identity insert: insert into TRADER_DB.INVESTMENT (associatedPortfolio_PORTFOLIO_NAME, currentPrice, quantity, INVESTMENT_SYMBOL) values (?, ?, ?, ?)
Static SQL for entity: com.inteltrader.entity.Instrument
 Version select: select SYMBOL_NAME from TRADER_DB.INSTRUMENT where SYMBOL_NAME =?
 Snapshot select: select instrument_.SYMBOL_NAME from TRADER_DB.INSTRUMENT instrument_ where instrument_.SYMBOL_NAME=?
 Insert 0: insert into TRADER_DB.INSTRUMENT (SYMBOL_NAME) values (?)
 Update 0: null
 Delete 0: delete from TRADER_DB.INSTRUMENT where SYMBOL_NAME=?
Static SQL for entity: com.inteltrader.entity.Portfolio
 Version select: select PORTFOLIO_NAME from TRADER_DB.PORTFOLIO where PORTFOLIO_NAME =?
 Snapshot select: select portfolio_.PORTFOLIO_NAME from TRADER_DB.PORTFOLIO portfolio_ where portfolio_.PORTFOLIO_NAME=?
 Insert 0: insert into TRADER_DB.PORTFOLIO (PORTFOLIO_NAME) values (?)
 Update 0: null
 Delete 0: delete from TRADER_DB.PORTFOLIO where PORTFOLIO_NAME=?
Static SQL for collection: com.inteltrader.entity.Instrument.priceList
 Row insert: insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
 Row update: update TRADER_DB.INSTRUMENT_PRICE set closePrice=?, highPrice=?, lastClosePrice=?, lowPrice=?, openPrice=?, priceId=?, timeStamp=?, totalTradedQuantity=? where SYMBOL_NAME=? and priceId=? and totalTradedQuantity=?
 Row delete: delete from TRADER_DB.INSTRUMENT_PRICE where SYMBOL_NAME=? and priceId=? and totalTradedQuantity=?
 One-shot delete: delete from TRADER_DB.INSTRUMENT_PRICE where SYMBOL_NAME=?
Static SQL for collection: com.inteltrader.entity.Investment.transactionsList
 Row insert: insert into TRADER_DB.INVESTMENT_TRANSACTION (INVESTMENT_ID, quantity, transactionId, transactionPrice) values (?, ?, ?, ?)
 Row update: update TRADER_DB.INVESTMENT_TRANSACTION set quantity=?, transactionId=?, transactionPrice=? where INVESTMENT_ID=? and quantity=? and transactionId=? and transactionPrice=?
 Row delete: delete from TRADER_DB.INVESTMENT_TRANSACTION where INVESTMENT_ID=? and quantity=? and transactionId=? and transactionPrice=?
 One-shot delete: delete from TRADER_DB.INVESTMENT_TRANSACTION where INVESTMENT_ID=?
Static SQL for collection: com.inteltrader.entity.Portfolio.investmentList
 Row insert: update TRADER_DB.INVESTMENT set associatedPortfolio_PORTFOLIO_NAME=? where INVESTMENT_ID=?
 Row delete: update TRADER_DB.INVESTMENT set associatedPortfolio_PORTFOLIO_NAME=null where associatedPortfolio_PORTFOLIO_NAME=? and INVESTMENT_ID=?
 One-shot delete: update TRADER_DB.INVESTMENT set associatedPortfolio_PORTFOLIO_NAME=null where associatedPortfolio_PORTFOLIO_NAME=?
Static select for entity com.inteltrader.entity.Instrument [NONE]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for entity com.inteltrader.entity.Instrument [READ]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for entity com.inteltrader.entity.Instrument [UPGRADE]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [UPGRADE_NOWAIT]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [FORCE]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [PESSIMISTIC_READ]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? lock in share mode
Static select for entity com.inteltrader.entity.Instrument [PESSIMISTIC_WRITE]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [PESSIMISTIC_FORCE_INCREMENT]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [OPTIMISTIC]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for entity com.inteltrader.entity.Instrument [OPTIMISTIC_FORCE_INCREMENT]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for action ACTION_MERGE on entity com.inteltrader.entity.Instrument: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for action ACTION_REFRESH on entity com.inteltrader.entity.Instrument: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for entity com.inteltrader.entity.Investment [NONE]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_1_, investment0_.currentPrice as currentP2_2_1_, investment0_.quantity as quantity2_1_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_1_, portfolio1_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.INVESTMENT investment0_ left outer join TRADER_DB.PORTFOLIO portfolio1_ on investment0_.associatedPortfolio_PORTFOLIO_NAME=portfolio1_.PORTFOLIO_NAME where investment0_.INVESTMENT_ID=?
Static select for entity com.inteltrader.entity.Investment [READ]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_1_, investment0_.currentPrice as currentP2_2_1_, investment0_.quantity as quantity2_1_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_1_, portfolio1_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.INVESTMENT investment0_ left outer join TRADER_DB.PORTFOLIO portfolio1_ on investment0_.associatedPortfolio_PORTFOLIO_NAME=portfolio1_.PORTFOLIO_NAME where investment0_.INVESTMENT_ID=?
Static select for entity com.inteltrader.entity.Investment [UPGRADE]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [UPGRADE_NOWAIT]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [FORCE]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [PESSIMISTIC_READ]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? lock in share mode
Static select for entity com.inteltrader.entity.Investment [PESSIMISTIC_WRITE]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [PESSIMISTIC_FORCE_INCREMENT]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [OPTIMISTIC]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=?
Static select for entity com.inteltrader.entity.Investment [OPTIMISTIC_FORCE_INCREMENT]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=?
Static select for action ACTION_MERGE on entity com.inteltrader.entity.Investment: select investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_1_, investment0_.currentPrice as currentP2_2_1_, investment0_.quantity as quantity2_1_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_1_, portfolio1_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.INVESTMENT investment0_ left outer join TRADER_DB.PORTFOLIO portfolio1_ on investment0_.associatedPortfolio_PORTFOLIO_NAME=portfolio1_.PORTFOLIO_NAME where investment0_.INVESTMENT_ID=?
Static select for action ACTION_REFRESH on entity com.inteltrader.entity.Investment: select investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_1_, investment0_.currentPrice as currentP2_2_1_, investment0_.quantity as quantity2_1_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_1_, portfolio1_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.INVESTMENT investment0_ left outer join TRADER_DB.PORTFOLIO portfolio1_ on investment0_.associatedPortfolio_PORTFOLIO_NAME=portfolio1_.PORTFOLIO_NAME where investment0_.INVESTMENT_ID=?
Static select for entity com.inteltrader.entity.Portfolio [NONE]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Static select for entity com.inteltrader.entity.Portfolio [READ]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Static select for entity com.inteltrader.entity.Portfolio [UPGRADE]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [UPGRADE_NOWAIT]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [FORCE]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [PESSIMISTIC_READ]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? lock in share mode
Static select for entity com.inteltrader.entity.Portfolio [PESSIMISTIC_WRITE]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [PESSIMISTIC_FORCE_INCREMENT]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [OPTIMISTIC]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=?
Static select for entity com.inteltrader.entity.Portfolio [OPTIMISTIC_FORCE_INCREMENT]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=?
Static select for action ACTION_MERGE on entity com.inteltrader.entity.Portfolio: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Static select for action ACTION_REFRESH on entity com.inteltrader.entity.Portfolio: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Static select for collection com.inteltrader.entity.Instrument.priceList: select pricelist0_.SYMBOL_NAME as SYMBOL1_0_0_, pricelist0_.closePrice as closePrice1_0_, pricelist0_.highPrice as highPrice1_0_, pricelist0_.lastClosePrice as lastClos4_1_0_, pricelist0_.lowPrice as lowPrice1_0_, pricelist0_.openPrice as openPrice1_0_, pricelist0_.priceId as priceId1_0_, pricelist0_.timeStamp as timeStamp1_0_, pricelist0_.totalTradedQuantity as totalTra9_1_0_ from TRADER_DB.INSTRUMENT_PRICE pricelist0_ where pricelist0_.SYMBOL_NAME=?
Static select for one-to-many com.inteltrader.entity.Portfolio.investmentList: select investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_1_, investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.associatedPortfolio_PORTFOLIO_NAME=?
Static select for collection com.inteltrader.entity.Investment.transactionsList: select transactio0_.INVESTMENT_ID as INVESTMENT1_2_0_, transactio0_.quantity as quantity3_0_, transactio0_.transactionId as transact3_3_0_, transactio0_.transactionPrice as transact4_3_0_ from TRADER_DB.INVESTMENT_TRANSACTION transactio0_ where transactio0_.INVESTMENT_ID=?
Registering SessionFactory: 0cd93a13-ab2a-4976-bbaa-774475480bbf (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Instantiated session factory
HHH000228: Running hbm2ddl schema update
HHH000102: Fetching database metadata
HHH000396: Updating schema
Processing hbm.xml files
Process annotated classes
Processing fk mappings (*ToOne and JoinedSubclass)
Processing extends queue
Processing extends queue
Processing collection mappings
Processing native query and ResultSetMapping mappings
Processing association property references
Creating tables' unique integer identifiers
Processing foreign key constraints
Resolving reference to class: com.inteltrader.entity.Instrument
Resolving reference to class: com.inteltrader.entity.Portfolio
Resolving reference to class: com.inteltrader.entity.Investment
HHH000261: Table found: TRADER_DB.instrument
HHH000037: Columns: [symbol_name]
HHH000108: Foreign keys: []
HHH000126: Indexes: [primary]
HHH000261: Table found: TRADER_DB.instrument_price
HHH000037: Columns: [totaltradedquantity, timestamp, priceid, lastcloseprice, highprice, symbol_name, openprice, closeprice, lowprice]
HHH000108: Foreign keys: [fk3189a2d153ed548d]
HHH000126: Indexes: [fk3189a2d153ed548d]
HHH000261: Table found: TRADER_DB.investment
HHH000037: Columns: [investment_id, associatedportfolio_portfolio_name, currentprice, quantity, investment_symbol]
HHH000108: Foreign keys: [fk8fe41ed3c804d4f3]
HHH000126: Indexes: [fk8fe41ed3c804d4f3, primary]
HHH000261: Table found: TRADER_DB.investment_transaction
HHH000037: Columns: [transactionprice, investment_id, transactionid, quantity]
HHH000108: Foreign keys: [fka5863f52914590ae]
HHH000126: Indexes: [fka5863f52914590ae]
HHH000261: Table found: TRADER_DB.portfolio
HHH000037: Columns: [portfolio_name]
HHH000108: Foreign keys: []
HHH000126: Indexes: [primary]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
HHH000232: Schema update complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Statistics initialized [enabled=false]
Registering EntityManagerFactory: intelTrader 
HHH000436: Entity manager factory name (intelTrader) is already registered.  If entity manager will be clustered or passivated, specify a unique value for property 'hibernate.ejb.entitymanager_factory_name'
Finished creating instance of bean 'entityManagerFactory'
Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@432d0299: defining beans [org.springframework.context.annotation.internalAsyncAnnotationProcessor,org.springframework.context.annotation.internalScheduledAnnotationProcessor,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0,org.springframework.web.servlet.view.InternalResourceViewResolver#0,instrumentDao,portfolioDao,instrumentService,portfolioService,entityManagerFactory,transactionManager,instrument,investment,portfolio,instrumentServiceRest,portfolioServiceRest,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor]; parent: org.springframework.beans.factory.support.DefaultListableBeanFactory@579aa202
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Creating instance of bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0' to allow for resolving potential circular references
Creating instance of bean '(inner bean)'
Creating shared instance of singleton bean 'transactionManager'
Creating instance of bean 'transactionManager'
Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
Returning cached instance of singleton bean 'entityManagerFactory'
Invoking afterPropertiesSet() on bean with name 'transactionManager'
Finished creating instance of bean 'transactionManager'
Creating instance of bean '(inner bean)'
Finished creating instance of bean '(inner bean)'
Invoking afterPropertiesSet() on bean with name '(inner bean)'
Finished creating instance of bean '(inner bean)'
Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Creating shared instance of singleton bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Creating instance of bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Eagerly caching bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Creating shared instance of singleton bean 'instrumentDao'
Creating instance of bean 'instrumentDao'
Eagerly caching bean 'instrumentDao' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'instrumentDao'
Creating shared instance of singleton bean 'portfolioDao'
Creating instance of bean 'portfolioDao'
Eagerly caching bean 'portfolioDao' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'portfolioDao'
Creating shared instance of singleton bean 'instrumentService'
Creating instance of bean 'instrumentService'
Registered injected element on class [com.inteltrader.service.InstrumentServiceImpl]: PersistenceElement for javax.persistence.EntityManagerFactory com.inteltrader.service.InstrumentServiceImpl.entityManagerFactory
Registered injected element on class [com.inteltrader.service.InstrumentServiceImpl]: AutowiredFieldElement for private com.inteltrader.dao.IInstrumentDao com.inteltrader.service.InstrumentServiceImpl.instrumentDao
Registered injected element on class [com.inteltrader.service.InstrumentServiceImpl]: AutowiredFieldElement for private com.inteltrader.service.PortfolioService com.inteltrader.service.InstrumentServiceImpl.portfolioService
Eagerly caching bean 'instrumentService' to allow for resolving potential circular references
Processing injected method of bean 'instrumentService': PersistenceElement for javax.persistence.EntityManagerFactory com.inteltrader.service.InstrumentServiceImpl.entityManagerFactory
Returning cached instance of singleton bean 'entityManagerFactory'
Processing injected method of bean 'instrumentService': AutowiredFieldElement for private com.inteltrader.dao.IInstrumentDao com.inteltrader.service.InstrumentServiceImpl.instrumentDao
Returning cached instance of singleton bean 'instrumentDao'
Autowiring by type from bean name 'instrumentService' to bean named 'instrumentDao'
Processing injected method of bean 'instrumentService': AutowiredFieldElement for private com.inteltrader.service.PortfolioService com.inteltrader.service.InstrumentServiceImpl.portfolioService
Creating shared instance of singleton bean 'portfolioService'
Creating instance of bean 'portfolioService'
Registered injected element on class [com.inteltrader.service.PortfolioServiceImpl]: PersistenceElement for private javax.persistence.EntityManagerFactory com.inteltrader.service.PortfolioServiceImpl.entityManagerFactory
Registered injected element on class [com.inteltrader.service.PortfolioServiceImpl]: AutowiredFieldElement for private com.inteltrader.dao.IPortfolioDao com.inteltrader.service.PortfolioServiceImpl.portfolioDao
Eagerly caching bean 'portfolioService' to allow for resolving potential circular references
Processing injected method of bean 'portfolioService': PersistenceElement for private javax.persistence.EntityManagerFactory com.inteltrader.service.PortfolioServiceImpl.entityManagerFactory
Returning cached instance of singleton bean 'entityManagerFactory'
Processing injected method of bean 'portfolioService': AutowiredFieldElement for private com.inteltrader.dao.IPortfolioDao com.inteltrader.service.PortfolioServiceImpl.portfolioDao
Returning cached instance of singleton bean 'portfolioDao'
Autowiring by type from bean name 'portfolioService' to bean named 'portfolioDao'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'portfolioService'
Autowiring by type from bean name 'instrumentService' to bean named 'portfolioService'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'instrumentService'
Returning cached instance of singleton bean 'portfolioService'
Returning cached instance of singleton bean 'entityManagerFactory'
Returning cached instance of singleton bean 'transactionManager'
Creating shared instance of singleton bean 'instrument'
Creating instance of bean 'instrument'
Eagerly caching bean 'instrument' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'instrument'
Creating shared instance of singleton bean 'investment'
Creating instance of bean 'investment'
Eagerly caching bean 'investment' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'investment'
Creating shared instance of singleton bean 'portfolio'
Creating instance of bean 'portfolio'
Eagerly caching bean 'portfolio' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'portfolio'
Creating shared instance of singleton bean 'instrumentServiceRest'
Creating instance of bean 'instrumentServiceRest'
Registered injected element on class [com.inteltrader.rest.InstrumentServiceRest]: AutowiredFieldElement for private com.inteltrader.service.InstrumentService com.inteltrader.rest.InstrumentServiceRest.instrumentService
Eagerly caching bean 'instrumentServiceRest' to allow for resolving potential circular references
Processing injected method of bean 'instrumentServiceRest': AutowiredFieldElement for private com.inteltrader.service.InstrumentService com.inteltrader.rest.InstrumentServiceRest.instrumentService
Returning cached instance of singleton bean 'instrumentService'
Autowiring by type from bean name 'instrumentServiceRest' to bean named 'instrumentService'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'instrumentServiceRest'
Creating shared instance of singleton bean 'portfolioServiceRest'
Creating instance of bean 'portfolioServiceRest'
Registered injected element on class [com.inteltrader.rest.PortfolioServiceRest]: AutowiredFieldElement for private com.inteltrader.service.PortfolioService com.inteltrader.rest.PortfolioServiceRest.portfolioService
Eagerly caching bean 'portfolioServiceRest' to allow for resolving potential circular references
Processing injected method of bean 'portfolioServiceRest': AutowiredFieldElement for private com.inteltrader.service.PortfolioService com.inteltrader.rest.PortfolioServiceRest.portfolioService
Returning cached instance of singleton bean 'portfolioService'
Autowiring by type from bean name 'portfolioServiceRest' to bean named 'portfolioService'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'portfolioServiceRest'
Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@8a9258e]
Returning cached instance of singleton bean 'lifecycleProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Unable to locate MultipartResolver with name 'multipartResolver': no multipart request handling provided
Creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Unable to locate LocaleResolver with name 'localeResolver': using default [org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver@7e40e415]
Creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Unable to locate ThemeResolver with name 'themeResolver': using default [org.springframework.web.servlet.theme.FixedThemeResolver@5c87a5a6]
Creating instance of bean 'org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping'
Looking for URL mappings in application context: WebApplicationContext for namespace 'appServlet-servlet': startup date [Thu Apr 18 17:22:14 IST 2013]; parent: Root WebApplicationContext
Rejected bean name 'org.springframework.context.annotation.internalAsyncAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalScheduledAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalRequiredAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalCommonAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.aop.config.internalAutoProxyCreator': no URL paths identified
Rejected bean name 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0': no URL paths identified
Rejected bean name 'org.springframework.web.servlet.view.InternalResourceViewResolver#0': no URL paths identified
Rejected bean name 'instrumentDao': no URL paths identified
Rejected bean name 'portfolioDao': no URL paths identified
Rejected bean name 'instrumentService': no URL paths identified
Rejected bean name 'portfolioService': no URL paths identified
Rejected bean name 'entityManagerFactory': no URL paths identified
Rejected bean name 'transactionManager': no URL paths identified
Rejected bean name 'instrument': no URL paths identified
Rejected bean name 'investment': no URL paths identified
Rejected bean name 'portfolio': no URL paths identified
Rejected bean name 'instrumentServiceRest': no URL paths identified
Rejected bean name 'portfolioServiceRest': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor': no URL paths identified
Rejected bean name 'environment': no URL paths identified
Rejected bean name 'systemProperties': no URL paths identified
Rejected bean name 'systemEnvironment': no URL paths identified
Rejected bean name 'servletConfig': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry': no URL paths identified
Rejected bean name 'messageSource': no URL paths identified
Rejected bean name 'applicationEventMulticaster': no URL paths identified
Rejected bean name 'lifecycleProcessor': no URL paths identified
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping'
Creating instance of bean 'org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping'
Looking for URL mappings in application context: WebApplicationContext for namespace 'appServlet-servlet': startup date [Thu Apr 18 17:22:14 IST 2013]; parent: Root WebApplicationContext
Rejected bean name 'org.springframework.context.annotation.internalAsyncAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalScheduledAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalRequiredAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalCommonAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.aop.config.internalAutoProxyCreator': no URL paths identified
Rejected bean name 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0': no URL paths identified
Rejected bean name 'org.springframework.web.servlet.view.InternalResourceViewResolver#0': no URL paths identified
Rejected bean name 'instrumentDao': no URL paths identified
Rejected bean name 'portfolioDao': no URL paths identified
Rejected bean name 'instrumentService': no URL paths identified
Rejected bean name 'portfolioService': no URL paths identified
Rejected bean name 'entityManagerFactory': no URL paths identified
Rejected bean name 'transactionManager': no URL paths identified
Rejected bean name 'instrument': no URL paths identified
Rejected bean name 'investment': no URL paths identified
Rejected bean name 'portfolio': no URL paths identified
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/create/{symbol}] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/create/{symbol}.*] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/create/{symbol}/] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/update/{portfolioName}] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/update/{portfolioName}.*] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/update/{portfolioName}/] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/load/{symbol}] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/load/{symbol}.*] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/load/{symbol}/] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/create/{portfolioName}] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/create/{portfolioName}.*] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/create/{portfolioName}/] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/addInvestment/{portfolioName}/{symbolName}] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/addInvestment/{portfolioName}/{symbolName}.*] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/addInvestment/{portfolioName}/{symbolName}/] onto handler 'portfolioServiceRest'
Rejected bean name 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor': no URL paths identified
Rejected bean name 'environment': no URL paths identified
Rejected bean name 'systemProperties': no URL paths identified
Rejected bean name 'systemEnvironment': no URL paths identified
Rejected bean name 'servletConfig': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry': no URL paths identified
Rejected bean name 'messageSource': no URL paths identified
Rejected bean name 'applicationEventMulticaster': no URL paths identified
Rejected bean name 'lifecycleProcessor': no URL paths identified
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping'
No HandlerMappings found in servlet 'appServlet': using default
Creating instance of bean 'org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter'
Creating instance of bean 'org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter'
Creating instance of bean 'org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter'
No HandlerAdapters found in servlet 'appServlet': using default
Creating instance of bean 'org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerExceptionResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerExceptionResolver'
Creating instance of bean 'org.springframework.web.servlet.mvc.annotation.ResponseStatusExceptionResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.annotation.ResponseStatusExceptionResolver'
Creating instance of bean 'org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver'
No HandlerExceptionResolvers found in servlet 'appServlet': using default
Creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Unable to locate RequestToViewNameTranslator with name 'viewNameTranslator': using default [org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@1f2293f6]
Returning cached instance of singleton bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Returning cached instance of singleton bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Unable to locate FlashMapManager with name 'flashMapManager': using default [org.springframework.web.servlet.support.SessionFlashMapManager@722f0164]
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Searching for key 'spring.liveBeansView.mbeanDomain' in [servletConfigInitParams]
Searching for key 'spring.liveBeansView.mbeanDomain' in [servletContextInitParams]
Searching for key 'spring.liveBeansView.mbeanDomain' in [jndiProperties]
Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain]
Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException: Name [spring.liveBeansView.mbeanDomain] is not bound in this Context. Unable to find [spring.liveBeansView.mbeanDomain].
Looking up JNDI object with name [spring.liveBeansView.mbeanDomain]
JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: Name [spring.liveBeansView.mbeanDomain] is not bound in this Context. Unable to find [spring.liveBeansView.mbeanDomain].. Returning null.
Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
Published WebApplicationContext of servlet 'appServlet' as ServletContext attribute with name [org.springframework.web.servlet.FrameworkServlet.CONTEXT.appServlet]
FrameworkServlet 'appServlet': initialization completed in 597 ms
Servlet 'appServlet' configured successfully
DispatcherServlet with name 'appServlet' processing GET request for [/portfolio/create/myFirstTime]
Matching patterns for request [/portfolio/create/myFirstTime] are [/portfolio/create/{portfolioName}]
URI Template variables for request [/portfolio/create/myFirstTime] are {portfolioName=myFirstTime}
Mapping [/portfolio/create/myFirstTime] to HandlerExecutionChain with handler [com.inteltrader.rest.PortfolioServiceRest@32cd1288] and 2 interceptors
Last-Modified value for [/portfolio/create/myFirstTime] is: -1
Invoking request handler method: public org.springframework.http.ResponseEntity com.inteltrader.rest.PortfolioServiceRest.createPortfolio(java.lang.String,javax.servlet.http.HttpServletRequest)
begin
Obtaining JDBC connection
Obtained JDBC connection
initial autocommit status: true
disabling autocommit
Generated identifier: myFirstTime, using strategy: org.hibernate.id.Assigned
committing
Processing flush-time cascades
Dirty checking collections
Collection found: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime], was: [<unreferenced>] (initialized)
Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
Listing entities:
com.inteltrader.entity.Portfolio{portfolioName=myFirstTime, investmentList=[]}
insert into TRADER_DB.PORTFOLIO (PORTFOLIO_NAME) values (?)
committed JDBC Connection
re-enabling autocommit
Written [SUCCESS] as "text/html" using [org.springframework.http.converter.StringHttpMessageConverter@3179b8a8]
Null ModelAndView returned to DispatcherServlet with name 'appServlet': assuming HandlerAdapter completed request handling
Successfully completed request
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
DispatcherServlet with name 'appServlet' processing GET request for [/portfolio/addInvestment/myFirstTime/AMTEKAUTO]
Matching patterns for request [/portfolio/addInvestment/myFirstTime/AMTEKAUTO] are [/portfolio/addInvestment/{portfolioName}/{symbolName}]
URI Template variables for request [/portfolio/addInvestment/myFirstTime/AMTEKAUTO] are {portfolioName=myFirstTime, symbolName=AMTEKAUTO}
Mapping [/portfolio/addInvestment/myFirstTime/AMTEKAUTO] to HandlerExecutionChain with handler [com.inteltrader.rest.PortfolioServiceRest@32cd1288] and 2 interceptors
Last-Modified value for [/portfolio/addInvestment/myFirstTime/AMTEKAUTO] is: -1
Invoking request handler method: public org.springframework.http.ResponseEntity com.inteltrader.rest.PortfolioServiceRest.addInvestment(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
begin
Obtaining JDBC connection
Opening new JDBC connection
Created connection to: jdbc:mysql://localhost:3306/TRADER_DB, Isolation Level: 4
Obtained JDBC connection
initial autocommit status: true
disabling autocommit
Loading entity: [com.inteltrader.entity.Portfolio#myFirstTime]
select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Result set row: 0
Result row: null, EntityKey[com.inteltrader.entity.Portfolio#myFirstTime]
Result set contains (possibly empty) collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Resolving associations for [com.inteltrader.entity.Portfolio#myFirstTime]
Done materializing entity [com.inteltrader.entity.Portfolio#myFirstTime]
1 collections were found in result set for role: com.inteltrader.entity.Portfolio.investmentList
Collection fully initialized: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
1 collections initialized for role: com.inteltrader.entity.Portfolio.investmentList
Done entity load
Executing identity-insert immediately
insert into TRADER_DB.INVESTMENT (associatedPortfolio_PORTFOLIO_NAME, currentPrice, quantity, INVESTMENT_SYMBOL) values (?, ?, ?, ?)
Natively generated identity: 1
committing
Processing flush-time cascades
Dirty checking collections
Collection dirty: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Collection found: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime], was: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime] (initialized)
Collection found: [com.inteltrader.entity.Investment.transactionsList#1], was: [<unreferenced>] (initialized)
Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
Flushed: 1 (re)creations, 1 updates, 0 removals to 2 collections
Listing entities:
com.inteltrader.entity.Investment{investmentId=1, quantity=null, currentPrice=null, symbolName=AMTEKAUTO, associatedPortfolio=com.inteltrader.entity.Portfolio#myFirstTime, transactionsList=[]}
com.inteltrader.entity.Portfolio{portfolioName=myFirstTime, investmentList=[com.inteltrader.entity.Investment#1]}
Inserting collection: [com.inteltrader.entity.Investment.transactionsList#1]
Collection was empty
committed JDBC Connection
re-enabling autocommit
Written [SUCCESS] as "text/html" using [org.springframework.http.converter.StringHttpMessageConverter@3179b8a8]
Null ModelAndView returned to DispatcherServlet with name 'appServlet': assuming HandlerAdapter completed request handling
Successfully completed request
DispatcherServlet with name 'appServlet' processing GET request for [/portfolio/addInvestment/myFirstTime/CIPLA]
Matching patterns for request [/portfolio/addInvestment/myFirstTime/CIPLA] are [/portfolio/addInvestment/{portfolioName}/{symbolName}]
URI Template variables for request [/portfolio/addInvestment/myFirstTime/CIPLA] are {portfolioName=myFirstTime, symbolName=CIPLA}
Mapping [/portfolio/addInvestment/myFirstTime/CIPLA] to HandlerExecutionChain with handler [com.inteltrader.rest.PortfolioServiceRest@32cd1288] and 2 interceptors
Last-Modified value for [/portfolio/addInvestment/myFirstTime/CIPLA] is: -1
Invoking request handler method: public org.springframework.http.ResponseEntity com.inteltrader.rest.PortfolioServiceRest.addInvestment(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
begin
Obtaining JDBC connection
Opening new JDBC connection
Created connection to: jdbc:mysql://localhost:3306/TRADER_DB, Isolation Level: 4
Obtained JDBC connection
initial autocommit status: true
disabling autocommit
Loading entity: [com.inteltrader.entity.Portfolio#myFirstTime]
select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Result set row: 0
Result row: EntityKey[com.inteltrader.entity.Investment#1], EntityKey[com.inteltrader.entity.Portfolio#myFirstTime]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Resolving associations for [com.inteltrader.entity.Investment#1]
Done materializing entity [com.inteltrader.entity.Investment#1]
Resolving associations for [com.inteltrader.entity.Portfolio#myFirstTime]
Done materializing entity [com.inteltrader.entity.Portfolio#myFirstTime]
1 collections were found in result set for role: com.inteltrader.entity.Portfolio.investmentList
Collection fully initialized: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
1 collections initialized for role: com.inteltrader.entity.Portfolio.investmentList
Done entity load
Mark transaction for rollback
rolling back
rolled JDBC Connection
re-enabling autocommit
Resolving exception from handler [com.inteltrader.rest.PortfolioServiceRest@32cd1288]: javax.persistence.RollbackException: Transaction marked as rollbackOnly
Resolving exception from handler [com.inteltrader.rest.PortfolioServiceRest@32cd1288]: javax.persistence.RollbackException: Transaction marked as rollbackOnly
Resolving exception from handler [com.inteltrader.rest.PortfolioServiceRest@32cd1288]: javax.persistence.RollbackException: Transaction marked as rollbackOnly
Could not complete request
javax.persistence.RollbackException: Transaction marked as rollbackOnly
	at org.hibernate.ejb.TransactionImpl.commit(TransactionImpl.java:72)
	at com.inteltrader.service.PortfolioServiceImpl.addToPortfolio(PortfolioServiceImpl.java:66)
	at com.inteltrader.rest.PortfolioServiceRest.addInvestment(PortfolioServiceRest.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.springframework.web.bind.annotation.support.HandlerMethodInvoker.invokeHandlerMethod(HandlerMethodInvoker.java:176)
	at org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter.invokeHandlerMethod(AnnotationMethodHandlerAdapter.java:440)
	at org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter.handle(AnnotationMethodHandlerAdapter.java:428)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:925)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:856)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:920)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:816)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:621)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:801)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:722)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:305)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:222)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:123)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:472)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:168)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:99)
	at org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:929)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:118)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:407)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1002)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:585)
	at org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:312)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)
	at java.lang.Thread.run(Thread.java:722)
Initializing servlet 'appServlet'
Initializing new StandardServletEnvironment
Adding [servletConfigInitParams] PropertySource with lowest search precedence
Adding [servletContextInitParams] PropertySource with lowest search precedence
Adding [jndiProperties] PropertySource with lowest search precedence
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment]
FrameworkServlet 'appServlet': initialization started
Servlet with name 'appServlet' will try to create custom WebApplicationContext context of class 'org.springframework.web.context.support.XmlWebApplicationContext', using parent context [Root WebApplicationContext: startup date [Thu Apr 18 17:29:06 IST 2013]; root of context hierarchy]
Searching for key 'spring.profiles.active' in [servletConfigInitParams]
Searching for key 'spring.profiles.active' in [servletContextInitParams]
Searching for key 'spring.profiles.active' in [jndiProperties]
Looking up JNDI object with name [java:comp/env/spring.profiles.active]
Converted JNDI name [java:comp/env/spring.profiles.active] not found - trying original name [spring.profiles.active]. javax.naming.NameNotFoundException: Name [spring.profiles.active] is not bound in this Context. Unable to find [spring.profiles.active].
Looking up JNDI object with name [spring.profiles.active]
JNDI lookup for name [spring.profiles.active] threw NamingException with message: Name [spring.profiles.active] is not bound in this Context. Unable to find [spring.profiles.active].. Returning null.
Searching for key 'spring.profiles.active' in [systemProperties]
Searching for key 'spring.profiles.active' in [systemEnvironment]
Could not find key 'spring.profiles.active' in any property source. Returning [null]
Searching for key 'spring.profiles.default' in [servletConfigInitParams]
Searching for key 'spring.profiles.default' in [servletContextInitParams]
Searching for key 'spring.profiles.default' in [jndiProperties]
Looking up JNDI object with name [java:comp/env/spring.profiles.default]
Converted JNDI name [java:comp/env/spring.profiles.default] not found - trying original name [spring.profiles.default]. javax.naming.NameNotFoundException: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].
Looking up JNDI object with name [spring.profiles.default]
JNDI lookup for name [spring.profiles.default] threw NamingException with message: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].. Returning null.
Searching for key 'spring.profiles.default' in [systemProperties]
Searching for key 'spring.profiles.default' in [systemEnvironment]
Could not find key 'spring.profiles.default' in any property source. Returning [null]
Searching for key 'spring.profiles.default' in [servletConfigInitParams]
Searching for key 'spring.profiles.default' in [servletContextInitParams]
Searching for key 'spring.profiles.default' in [jndiProperties]
Looking up JNDI object with name [java:comp/env/spring.profiles.default]
Converted JNDI name [java:comp/env/spring.profiles.default] not found - trying original name [spring.profiles.default]. javax.naming.NameNotFoundException: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].
Looking up JNDI object with name [spring.profiles.default]
JNDI lookup for name [spring.profiles.default] threw NamingException with message: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].. Returning null.
Searching for key 'spring.profiles.default' in [systemProperties]
Searching for key 'spring.profiles.default' in [systemEnvironment]
Could not find key 'spring.profiles.default' in any property source. Returning [null]
Replacing [servletContextInitParams] PropertySource with [servletContextInitParams]
Replacing [servletConfigInitParams] PropertySource with [servletConfigInitParams]
Refreshing WebApplicationContext for namespace 'appServlet-servlet': startup date [Thu Apr 18 17:29:08 IST 2013]; parent: Root WebApplicationContext
Initializing new StandardEnvironment
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
Initializing new StandardEnvironment
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
Loading schema mappings from [META-INF/spring.schemas]
Loaded schema mappings: {http://www.springframework.org/schema/data/jpa/spring-jpa-1.2.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.2.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.1.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.1.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.5.xsd=org/springframework/data/repository/config/spring-repository-1.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.0.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.3.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.4.xsd=org/springframework/data/repository/config/spring-repository-1.4.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.3.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/data/repository/spring-repository.xsd=org/springframework/data/repository/config/spring-repository-1.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.0.xsd=org/springframework/data/repository/config/spring-repository-1.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.1.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.1.xsd
Found XML schema [http://www.springframework.org/schema/task/spring-task-3.0.xsd] in classpath: org/springframework/scheduling/config/spring-task-3.0.xsd
Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd
Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd
Found XML schema [http://www.springframework.org/schema/tx/spring-tx-3.1.xsd] in classpath: org/springframework/transaction/config/spring-tx-3.1.xsd
Loading bean definitions
Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/data/repository=org.springframework.data.repository.config.RepositoryNameSpaceHandler, http://www.springframework.org/schema/data/jpa=org.springframework.data.jpa.repository.config.JpaRepositoryNameSpaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
Neither XML 'id' nor 'name' specified - using generated bean name [org.springframework.web.servlet.view.InternalResourceViewResolver#0]
Neither XML 'id' nor 'name' specified - using generated bean name [org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver#57b67ac9]
Initializing new StandardEnvironment
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
Looking for matching resources in directory tree [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Resolved location pattern [classpath*:com/inteltrader/**/*.class] to resources [file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\Advice.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\FIFOList.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\InstrumentVo.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\Strategies.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\Strategy.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\StrategyMACD.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao\IInstrumentDao.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao\InstrumentDao.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao\IPortfolioDao.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao\PortfolioDao.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Instrument.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Investment.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Portfolio.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Price.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Transactions.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest\InstrumentServiceRest.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest\PortfolioServiceRest.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\AnalyserService.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\CronService.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\InstrumentService.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\InstrumentServiceImpl.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\PortfolioService.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\PortfolioServiceImpl.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util\DownloadZip.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util\ExtractZipFile.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util\ReadPriceCsv.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util\RestCodes.class]]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Instrument.class]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Investment.class]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Portfolio.class]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest\InstrumentServiceRest.class]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest\PortfolioServiceRest.class]
Loaded 21 bean definitions from location pattern [/WEB-INF/applicationContext.xml]
Bean factory for WebApplicationContext for namespace 'appServlet-servlet': org.springframework.beans.factory.support.DefaultListableBeanFactory@d374f1c: defining beans [org.springframework.context.annotation.internalAsyncAnnotationProcessor,org.springframework.context.annotation.internalScheduledAnnotationProcessor,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0,org.springframework.web.servlet.view.InternalResourceViewResolver#0,instrumentDao,portfolioDao,instrumentService,portfolioService,entityManagerFactory,transactionManager,instrument,investment,portfolio,instrumentServiceRest,portfolioServiceRest]; parent: org.springframework.beans.factory.support.DefaultListableBeanFactory@56f47006
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@d48d987]
Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@29c134e1]
Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.DelegatingThemeSource@4b76b531]
Creating shared instance of singleton bean 'entityManagerFactory'
Creating instance of bean 'entityManagerFactory'
Eagerly caching bean 'entityManagerFactory' to allow for resolving potential circular references
Creating instance of bean 'org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver#57b67ac9'
Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Creating instance of bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0' to allow for resolving potential circular references
Creating instance of bean '(inner bean)'
Creating shared instance of singleton bean 'transactionManager'
Creating instance of bean 'transactionManager'
Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
Returning eagerly cached instance of singleton bean 'entityManagerFactory' that is not fully initialized yet - a consequence of a circular reference
Ignoring currently created advisor 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0': Error creating bean with name 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0': Cannot create inner bean '(inner bean)' of type [org.springframework.transaction.interceptor.TransactionInterceptor] while setting bean property 'transactionInterceptor'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)': Cannot resolve reference to bean 'transactionManager' while setting bean property 'transactionManager'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'transactionManager' defined in ServletContext resource [/WEB-INF/applicationContext.xml]: Cannot resolve reference to bean 'entityManagerFactory' while setting bean property 'entityManagerFactory'; nested exception is org.springframework.beans.factory.BeanCurrentlyInCreationException: Error creating bean with name 'entityManagerFactory': FactoryBean which is currently in creation returned null from getObject
Finished creating instance of bean 'org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver#57b67ac9'
Invoking afterPropertiesSet() on bean with name 'entityManagerFactory'
Building JPA container EntityManagerFactory for persistence unit 'intelTrader'
Adding type registration boolean -> org.hibernate.type.BooleanType@5ee46d64
Adding type registration boolean -> org.hibernate.type.BooleanType@5ee46d64
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5ee46d64
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@68cb04fe
Adding type registration true_false -> org.hibernate.type.TrueFalseType@6c9657d4
Adding type registration yes_no -> org.hibernate.type.YesNoType@32fdd97c
Adding type registration byte -> org.hibernate.type.ByteType@5dae927c
Adding type registration byte -> org.hibernate.type.ByteType@5dae927c
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5dae927c
Adding type registration character -> org.hibernate.type.CharacterType@7abb8ff8
Adding type registration char -> org.hibernate.type.CharacterType@7abb8ff8
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7abb8ff8
Adding type registration short -> org.hibernate.type.ShortType@5ca7484a
Adding type registration short -> org.hibernate.type.ShortType@5ca7484a
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5ca7484a
Adding type registration integer -> org.hibernate.type.IntegerType@1a67a206
Adding type registration int -> org.hibernate.type.IntegerType@1a67a206
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1a67a206
Adding type registration long -> org.hibernate.type.LongType@6e755f8f
Adding type registration long -> org.hibernate.type.LongType@6e755f8f
Adding type registration java.lang.Long -> org.hibernate.type.LongType@6e755f8f
Adding type registration float -> org.hibernate.type.FloatType@308423ec
Adding type registration float -> org.hibernate.type.FloatType@308423ec
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@308423ec
Adding type registration double -> org.hibernate.type.DoubleType@7159fe79
Adding type registration double -> org.hibernate.type.DoubleType@7159fe79
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7159fe79
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@413caa4c
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@413caa4c
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3a644d02
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3a644d02
Adding type registration string -> org.hibernate.type.StringType@77a793df
Adding type registration java.lang.String -> org.hibernate.type.StringType@77a793df
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@297b5381
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3cff0d7
Adding type registration url -> org.hibernate.type.UrlType@20a11899
Adding type registration java.net.URL -> org.hibernate.type.UrlType@20a11899
Adding type registration date -> org.hibernate.type.DateType@3ecf955a
Adding type registration java.sql.Date -> org.hibernate.type.DateType@3ecf955a
Adding type registration time -> org.hibernate.type.TimeType@79d27722
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@79d27722
Adding type registration timestamp -> org.hibernate.type.TimestampType@40e22bb7
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@40e22bb7
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@40e22bb7
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@26004498
Adding type registration calendar -> org.hibernate.type.CalendarType@7b66d7b3
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7b66d7b3
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7b66d7b3
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5923ec42
Adding type registration locale -> org.hibernate.type.LocaleType@20b9ad57
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@20b9ad57
Adding type registration currency -> org.hibernate.type.CurrencyType@58159e0f
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@58159e0f
Adding type registration timezone -> org.hibernate.type.TimeZoneType@74b4dce5
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@74b4dce5
Adding type registration class -> org.hibernate.type.ClassType@49d13e33
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@49d13e33
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@30eed7aa
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@30eed7aa
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@79c5957b
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1d6f9042
Adding type registration binary -> org.hibernate.type.BinaryType@60d18f72
Adding type registration byte[] -> org.hibernate.type.BinaryType@60d18f72
Adding type registration [B -> org.hibernate.type.BinaryType@60d18f72
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@66ff20c3
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@66ff20c3
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@66ff20c3
Adding type registration image -> org.hibernate.type.ImageType@79711174
Adding type registration characters -> org.hibernate.type.CharArrayType@3cacce1d
Adding type registration char[] -> org.hibernate.type.CharArrayType@3cacce1d
Adding type registration [C -> org.hibernate.type.CharArrayType@3cacce1d
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@25f2dc65
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@25f2dc65
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@25f2dc65
Adding type registration text -> org.hibernate.type.TextType@7caa47b7
Adding type registration ntext -> org.hibernate.type.NTextType@1f187b14
Adding type registration blob -> org.hibernate.type.BlobType@255d572b
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@255d572b
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@61d91a71
Adding type registration clob -> org.hibernate.type.ClobType@5b8a73a0
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5b8a73a0
Adding type registration nclob -> org.hibernate.type.NClobType@7f774441
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7f774441
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@14b4feab
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1bb8c21a
Adding type registration serializable -> org.hibernate.type.SerializableType@42076ed1
Adding type registration object -> org.hibernate.type.ObjectType@4c6ad62f
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4c6ad62f
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5e71caab
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@b0d0fe
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5868d40c
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4a398d2c
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@86369c6
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@36b54a77
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@382be6b0
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4a36499f
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Processing PersistenceUnitInfo [
	name: intelTrader
	persistence provider classname: org.hibernate.ejb.HibernatePersistence
	classloader: WebappClassLoader
  context: 
  delegate: false
  repositories:
    /WEB-INF/classes/
----------> Parent Classloader:
ClassRealm[plugin>org.apache.tomcat.maven:tomcat7-maven-plugin:2.0, parent: sun.misc.Launcher$AppClassLoader@1875303f]

	Temporary classloader: org.springframework.instrument.classloading.SimpleThrowawayClassLoader@321b8bc9
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/vvarm1/IdeaProjects/intelTrader/src/main/webapp/WEB-INF/classes
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.inteltrader.entity.Instrument
		com.inteltrader.entity.Portfolio
		com.inteltrader.entity.Investment]
	Mapping files names []
	Properties [
		hibernate.connection.username: root
		hibernate.connection.password: root
		hibernate.dialect: org.hibernate.dialect.MySQLDialect
		hibernate.c3p0.min_size: 10
		hibernate.connection.url: jdbc:mysql://localhost:3306/TRADER_DB
		hibernate.show_sql: true
		hibernate.connection.driver_class: com.mysql.jdbc.Driver
		hibernate.hbm2ddl.auto: update]
Detect class: true; detect hbm: true
Detect class: true; detect hbm: true
Searching mapped entities in jar/par: file:/C:/Users/vvarm1/IdeaProjects/intelTrader/src/main/webapp/WEB-INF/classes
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.ejb.event.JpaIntegrator].
No JNDI name configured for binding Ejb3Configuration
Preparing to build session factory with filters : {}
Processing hbm.xml files
Process annotated classes
Binding entity from annotated class: com.inteltrader.entity.Instrument
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Instrument
Bind entity com.inteltrader.entity.Instrument on table INSTRUMENT
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=SYMBOL_NAME, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property symbolName with lazy=false
building SimpleValue for symbolName
Building property symbolName
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=priceList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=priceList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=priceList_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='priceList_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='SYMBOL_NAME', referencedColumn='', mappedBy=''}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Collection role: com.inteltrader.entity.Instrument.priceList
Building property priceList
Binding entity from annotated class: com.inteltrader.entity.Portfolio
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Portfolio
Bind entity com.inteltrader.entity.Portfolio on table PORTFOLIO
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=PORTFOLIO_NAME, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property portfolioName with lazy=false
building SimpleValue for portfolioName
Building property portfolioName
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='associatedPortfolio'}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=investmentList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=element, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=investmentList_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='investmentList_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='associatedPortfolio'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='associatedPortfolio'}
Collection role: com.inteltrader.entity.Portfolio.investmentList
Building property investmentList
Binding entity from annotated class: com.inteltrader.entity.Investment
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Investment
Bind entity com.inteltrader.entity.Investment on table INVESTMENT
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=INVESTMENT_ID, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property investmentId with lazy=false
building SimpleValue for investmentId
Building property investmentId
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=associatedPortfolio, insertable=true, updatable=true, unique=false}
Building property associatedPortfolio
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=currentPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property currentPrice with lazy=false
building SimpleValue for currentPrice
Building property currentPrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=quantity, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property quantity with lazy=false
building SimpleValue for quantity
Building property quantity
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=INVESTMENT_SYMBOL, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property symbolName with lazy=false
building SimpleValue for symbolName
Building property symbolName
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=transactionsList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=transactionsList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=transactionsList_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='transactionsList_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='INVESTMENT_ID', referencedColumn='', mappedBy=''}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Collection role: com.inteltrader.entity.Investment.transactionsList
Building property transactionsList
Setting SimpleValue typeName for symbolName
Setting SimpleValue typeName for portfolioName
Setting SimpleValue typeName for investmentId
Setting SimpleValue typeName for currentPrice
Setting SimpleValue typeName for quantity
Setting SimpleValue typeName for symbolName
Processing fk mappings (*ToOne and JoinedSubclass)
Processing extends queue
Processing extends queue
Processing collection mappings
Second pass for collection: com.inteltrader.entity.Investment.transactionsList
Binding a collection of element: com.inteltrader.entity.Investment.transactionsList
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT_TRANSACTION), mappingColumn=quantity, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property quantity with lazy=false
building SimpleValue for quantity
Setting SimpleValue typeName for quantity
Building property quantity
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT_TRANSACTION), mappingColumn=transactionId, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property transactionId with lazy=false
building SimpleValue for transactionId
Setting SimpleValue typeName for transactionId
Building property transactionId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT_TRANSACTION), mappingColumn=transactionPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property transactionPrice with lazy=false
building SimpleValue for transactionPrice
Setting SimpleValue typeName for transactionPrice
Building property transactionPrice
Mapped collection key: INVESTMENT_ID, element: quantity, transactionId, transactionPrice
Second pass for collection: com.inteltrader.entity.Instrument.priceList
Binding a collection of element: com.inteltrader.entity.Instrument.priceList
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=closePrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property closePrice with lazy=false
building SimpleValue for closePrice
Setting SimpleValue typeName for closePrice
Building property closePrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=highPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property highPrice with lazy=false
building SimpleValue for highPrice
Setting SimpleValue typeName for highPrice
Building property highPrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=lastClosePrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property lastClosePrice with lazy=false
building SimpleValue for lastClosePrice
Setting SimpleValue typeName for lastClosePrice
Building property lastClosePrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=lowPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property lowPrice with lazy=false
building SimpleValue for lowPrice
Setting SimpleValue typeName for lowPrice
Building property lowPrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=openPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property openPrice with lazy=false
building SimpleValue for openPrice
Setting SimpleValue typeName for openPrice
Building property openPrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=priceId, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property priceId with lazy=false
building SimpleValue for priceId
Setting SimpleValue typeName for priceId
Building property priceId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=timeStamp, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property timeStamp with lazy=false
building SimpleValue for timeStamp
Setting SimpleValue typeName for timeStamp
Building property timeStamp
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=totalTradedQuantity, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property totalTradedQuantity with lazy=false
building SimpleValue for totalTradedQuantity
Setting SimpleValue typeName for totalTradedQuantity
Building property totalTradedQuantity
Mapped collection key: SYMBOL_NAME, element: closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity
Second pass for collection: com.inteltrader.entity.Portfolio.investmentList
Binding a OneToMany: com.inteltrader.entity.Portfolio.investmentList through a foreign key
Mapping collection: com.inteltrader.entity.Portfolio.investmentList -> INVESTMENT
Retrieving property com.inteltrader.entity.Investment.associatedPortfolio
Mapped collection key: associatedPortfolio_PORTFOLIO_NAME, one-to-many: com.inteltrader.entity.Investment
Processing native query and ResultSetMapping mappings
Processing association property references
Creating tables' unique integer identifiers
Processing foreign key constraints
Resolving reference to class: com.inteltrader.entity.Instrument
Resolving reference to class: com.inteltrader.entity.Portfolio
Resolving reference to class: com.inteltrader.entity.Investment
HHH000022: c3p0 properties were encountered, but the org.hibernate.service.jdbc.connections.internal.C3P0ConnectionProvider provider class was not found on the classpath; these properties are going to be ignored.
HHH000402: Using Hibernate built-in connection pool (not for production use!)
HHH000115: Hibernate connection pool size: 20
HHH000006: Autocommit mode: true
HHH000401: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/TRADER_DB]
HHH000046: Connection properties: {user=root, password=root, autocommit=true, release_mode=auto}
Opening new JDBC connection
Created connection to: jdbc:mysql://localhost:3306/TRADER_DB, Isolation Level: 4
Database ->
       name : MySQL
    version : 5.6.10-log
      major : 5
      minor : 6
Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.9 ( Revision: ${svn.Revision} )
      major : 5
      minor : 1
JDBC version : 3.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: disabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
multi-tenancy strategy : NONE
Connection release mode: auto
HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
Maximum outer join fetch depth: 2
Default batch fetch size: 1
Generate SQL with comments: disabled
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
HHH000397: Using ASTQueryTranslatorFactory
Query language substitutions: {}
JPA-QL strict compliance: enabled
Second-level cache: enabled
Query cache: disabled
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
Optimize cache for minimal puts: disabled
Structured second-level cache entries: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Named query checking : enabled
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : : disabled
Building session factory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\vvarm1\IdeaProjects\intelTrader\target\tomcat, hibernate.connection.url=jdbc:mysql://localhost:3306/TRADER_DB, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.ejb.discard_pc_on_close=false, catalina.useNaming=true, hibernate.transaction.flush_before_completion=false, os.name=Windows 7, sun.boot.class.path=C:\Program Files\Java\jdk1.7.0_10\jre\lib\resources.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\rt.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\jce.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.7.0_10\jre\classes, java.util.logging.config.file=C:\Users\vvarm1\IdeaProjects\intelTrader\target\tomcat\conf\logging.properties, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.7.0_10-b18, hibernate.connection.autocommit=true, hibernate.c3p0.min_size=10, user.name=vvarm1, shared.loader=, guice.disable.misplaced.annotation.check=true, tomcat.util.buf.StringCache.byte.enabled=true, javax.persistence.validation.mode=AUTO, hibernate.connection.release_mode=auto, idea.launcher.bin.path=C:\Program Files (x86)\JetBrains\IntelliJ IDEA Community Edition 12.0.4\bin, user.language=en, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, sun.boot.library.path=C:\Program Files\Java\jdk1.7.0_10\jre\bin, classworlds.conf=C:\Program Files\Apache Software Foundation\apache-maven-3.0.5\bin\m2.conf, java.version=1.7.0_10, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, user.timezone=Asia/Calcutta, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.7.0_10\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, file.encoding.pkg=sun.io, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.tomcat.,org.apache.jasper., file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=51.0, user.country=US, java.home=C:\Program Files\Java\jdk1.7.0_10\jre, java.vm.info=mixed mode, os.version=6.1, hibernate.transaction.factory_class=org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory, hibernate.query.jpaql_strict_compliance=true, path.separator=;, java.vm.version=23.6-b04, hibernate.connection.password=root, user.variant=, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.scan.DefaultJarScanner.jarsToSkip=bootstrap.jar,commons-daemon.jar,tomcat-juli.jar,annotations-api.jar,el-api.jar,jsp-api.jar,servlet-api.jar,catalina.jar,catalina-ant.jar,catalina-ha.jar,catalina-tribes.jar,jasper.jar,jasper-el.jar,ecj-*.jar,tomcat-api.jar,tomcat-util.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-jni.jar,tomcat-spdy.jar,tomcat-i18n-en.jar,tomcat-i18n-es.jar,tomcat-i18n-fr.jar,tomcat-i18n-ja.jar,tomcat-juli-adapters.jar,catalina-jmx-remote.jar,catalina-ws.jar,tomcat-jdbc.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,jstl.jar,geronimo-spec-jaxrpc*.jar,wsdl4j*.jar,ant.jar,ant-junit*.jar,aspectj*.jar,jmx.jar,h2*.jar,hibernate*.jar,httpclient*.jar,jmx-tools.jar,jta*.jar,log4j*.jar,mail*.jar,slf4j*.jar,xercesImpl.jar,xmlParserAPIs.jar,xml-apis.jar,access-bridge-64.jar,dnsns.jar,jaccess.jar,ldapsec.jar,localedata.jar,sunjce_provider.jar,sunmscapi.jar,sunpkcs11.jar,jhall.jar,tools.jar,sunec.jar,zipfs.jar,gnome-java-bridge.jar,pulse-java.jar,apple_provider.jar,AppleScriptEngine.jar,CoreAudio.jar,dns_sd.jar,j3daudio.jar,j3dcore.jar,j3dutils.jar,jai_core.jar,jai_codec.jar,mlibwrapper_jai.jar,MRJToolkit.jar,vecmath.jar,junit.jar,junit-*.jar,ant-launcher.jar, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.tomcat.,org.apache.jasper., user.script=, java.naming.factory.url.pkgs=org.apache.naming, user.home=C:\Users\vvarm1, org.apache.catalina.startup.ContextConfig.jarsToSkip=, java.specification.vendor=Oracle Corporation, hibernate.hbm2ddl.auto=update, java.library.path=C:\Program Files\Java\jdk1.7.0_10\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\JetBrains\IntelliJ IDEA Community Edition 12.0.4\bin\..\.\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\ThinkPad\Bluetooth Software\;C:\Program Files\ThinkPad\Bluetooth Software\syswow64;c:\Program Files\Intel\WiFi\bin\;c:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files (x86)\Git\cmd;C:\Users\vvarm1\Documents\play-2.0.3;C:\Program Files\Java\jdk1.7.0_10\bin;C:\Program Files\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\QuickTime\QTSystem\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Java\jre6\bin;C:\Program Files\Apache Software Foundation\apache-maven-3.0.5\bin;c:\program files (x86)\jetbrains\intellij idea community edition 12.0.4\jre\jre\bin;., java.vendor.url=http://java.oracle.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, org.apache.catalina.startup.TldConfig.jarsToSkip=, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, common.loader=${catalina.base}/lib,${catalina.base}/lib/*.jar,${catalina.home}/lib,${catalina.home}/lib/*.jar, maven.home=C:\Program Files\Apache Software Foundation\apache-maven-3.0.5, java.runtime.name=Java(TM) SE Runtime Environment, java.class.path=C:\Program Files\Apache Software Foundation\apache-maven-3.0.5\boot\plexus-classworlds-2.4.jar;C:\Program Files (x86)\JetBrains\IntelliJ IDEA Community Edition 12.0.4\lib\idea_rt.jar, sun.java.command=com.intellij.rt.execution.application.AppMain org.codehaus.classworlds.Launcher --no-plugin-registry --fail-fast --strict-checksums --update-snapshots org.apache.tomcat.maven:tomcat7-maven-plugin:2.0:run, hibernate.bytecode.use_reflection_optimizer=false, idea.launcher.port=7533, java.vm.specification.name=Java Virtual Machine Specification, catalina.home=C:\Users\vvarm1\IdeaProjects\intelTrader\target\tomcat, java.vm.specification.version=1.7, sun.os.patch.level=Service Pack 1, sun.cpu.endian=little, java.io.tmpdir=C:\Users\vvarm1\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, server.loader=, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, java.ext.dirs=C:\Program Files\Java\jdk1.7.0_10\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=C:\Users\vvarm1\IdeaProjects\intelTrader, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding=UTF-8, hibernate.use_identifier_rollback=false, java.specification.version=1.7, hibernate.show_sql=true}
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Static SQL for entity: com.inteltrader.entity.Investment
 Version select: select INVESTMENT_ID from TRADER_DB.INVESTMENT where INVESTMENT_ID =?
 Snapshot select: select investment_.INVESTMENT_ID, investment_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_, investment_.currentPrice as currentP2_2_, investment_.quantity as quantity2_, investment_.INVESTMENT_SYMBOL as INVESTMENT4_2_ from TRADER_DB.INVESTMENT investment_ where investment_.INVESTMENT_ID=?
 Insert 0: insert into TRADER_DB.INVESTMENT (associatedPortfolio_PORTFOLIO_NAME, currentPrice, quantity, INVESTMENT_SYMBOL, INVESTMENT_ID) values (?, ?, ?, ?, ?)
 Update 0: update TRADER_DB.INVESTMENT set associatedPortfolio_PORTFOLIO_NAME=?, currentPrice=?, quantity=?, INVESTMENT_SYMBOL=? where INVESTMENT_ID=?
 Delete 0: delete from TRADER_DB.INVESTMENT where INVESTMENT_ID=?
 Identity insert: insert into TRADER_DB.INVESTMENT (associatedPortfolio_PORTFOLIO_NAME, currentPrice, quantity, INVESTMENT_SYMBOL) values (?, ?, ?, ?)
Static SQL for entity: com.inteltrader.entity.Instrument
 Version select: select SYMBOL_NAME from TRADER_DB.INSTRUMENT where SYMBOL_NAME =?
 Snapshot select: select instrument_.SYMBOL_NAME from TRADER_DB.INSTRUMENT instrument_ where instrument_.SYMBOL_NAME=?
 Insert 0: insert into TRADER_DB.INSTRUMENT (SYMBOL_NAME) values (?)
 Update 0: null
 Delete 0: delete from TRADER_DB.INSTRUMENT where SYMBOL_NAME=?
Static SQL for entity: com.inteltrader.entity.Portfolio
 Version select: select PORTFOLIO_NAME from TRADER_DB.PORTFOLIO where PORTFOLIO_NAME =?
 Snapshot select: select portfolio_.PORTFOLIO_NAME from TRADER_DB.PORTFOLIO portfolio_ where portfolio_.PORTFOLIO_NAME=?
 Insert 0: insert into TRADER_DB.PORTFOLIO (PORTFOLIO_NAME) values (?)
 Update 0: null
 Delete 0: delete from TRADER_DB.PORTFOLIO where PORTFOLIO_NAME=?
Static SQL for collection: com.inteltrader.entity.Instrument.priceList
 Row insert: insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
 Row update: update TRADER_DB.INSTRUMENT_PRICE set closePrice=?, highPrice=?, lastClosePrice=?, lowPrice=?, openPrice=?, priceId=?, timeStamp=?, totalTradedQuantity=? where SYMBOL_NAME=? and priceId=? and totalTradedQuantity=?
 Row delete: delete from TRADER_DB.INSTRUMENT_PRICE where SYMBOL_NAME=? and priceId=? and totalTradedQuantity=?
 One-shot delete: delete from TRADER_DB.INSTRUMENT_PRICE where SYMBOL_NAME=?
Static SQL for collection: com.inteltrader.entity.Investment.transactionsList
 Row insert: insert into TRADER_DB.INVESTMENT_TRANSACTION (INVESTMENT_ID, quantity, transactionId, transactionPrice) values (?, ?, ?, ?)
 Row update: update TRADER_DB.INVESTMENT_TRANSACTION set quantity=?, transactionId=?, transactionPrice=? where INVESTMENT_ID=? and quantity=? and transactionId=? and transactionPrice=?
 Row delete: delete from TRADER_DB.INVESTMENT_TRANSACTION where INVESTMENT_ID=? and quantity=? and transactionId=? and transactionPrice=?
 One-shot delete: delete from TRADER_DB.INVESTMENT_TRANSACTION where INVESTMENT_ID=?
Static SQL for collection: com.inteltrader.entity.Portfolio.investmentList
 Row insert: update TRADER_DB.INVESTMENT set associatedPortfolio_PORTFOLIO_NAME=? where INVESTMENT_ID=?
 Row delete: update TRADER_DB.INVESTMENT set associatedPortfolio_PORTFOLIO_NAME=null where associatedPortfolio_PORTFOLIO_NAME=? and INVESTMENT_ID=?
 One-shot delete: update TRADER_DB.INVESTMENT set associatedPortfolio_PORTFOLIO_NAME=null where associatedPortfolio_PORTFOLIO_NAME=?
Static select for entity com.inteltrader.entity.Instrument [NONE]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for entity com.inteltrader.entity.Instrument [READ]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for entity com.inteltrader.entity.Instrument [UPGRADE]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [UPGRADE_NOWAIT]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [FORCE]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [PESSIMISTIC_READ]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? lock in share mode
Static select for entity com.inteltrader.entity.Instrument [PESSIMISTIC_WRITE]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [PESSIMISTIC_FORCE_INCREMENT]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [OPTIMISTIC]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for entity com.inteltrader.entity.Instrument [OPTIMISTIC_FORCE_INCREMENT]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for action ACTION_MERGE on entity com.inteltrader.entity.Instrument: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for action ACTION_REFRESH on entity com.inteltrader.entity.Instrument: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for entity com.inteltrader.entity.Investment [NONE]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_1_, investment0_.currentPrice as currentP2_2_1_, investment0_.quantity as quantity2_1_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_1_, portfolio1_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.INVESTMENT investment0_ left outer join TRADER_DB.PORTFOLIO portfolio1_ on investment0_.associatedPortfolio_PORTFOLIO_NAME=portfolio1_.PORTFOLIO_NAME where investment0_.INVESTMENT_ID=?
Static select for entity com.inteltrader.entity.Investment [READ]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_1_, investment0_.currentPrice as currentP2_2_1_, investment0_.quantity as quantity2_1_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_1_, portfolio1_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.INVESTMENT investment0_ left outer join TRADER_DB.PORTFOLIO portfolio1_ on investment0_.associatedPortfolio_PORTFOLIO_NAME=portfolio1_.PORTFOLIO_NAME where investment0_.INVESTMENT_ID=?
Static select for entity com.inteltrader.entity.Investment [UPGRADE]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [UPGRADE_NOWAIT]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [FORCE]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [PESSIMISTIC_READ]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? lock in share mode
Static select for entity com.inteltrader.entity.Investment [PESSIMISTIC_WRITE]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [PESSIMISTIC_FORCE_INCREMENT]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [OPTIMISTIC]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=?
Static select for entity com.inteltrader.entity.Investment [OPTIMISTIC_FORCE_INCREMENT]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=?
Static select for action ACTION_MERGE on entity com.inteltrader.entity.Investment: select investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_1_, investment0_.currentPrice as currentP2_2_1_, investment0_.quantity as quantity2_1_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_1_, portfolio1_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.INVESTMENT investment0_ left outer join TRADER_DB.PORTFOLIO portfolio1_ on investment0_.associatedPortfolio_PORTFOLIO_NAME=portfolio1_.PORTFOLIO_NAME where investment0_.INVESTMENT_ID=?
Static select for action ACTION_REFRESH on entity com.inteltrader.entity.Investment: select investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_1_, investment0_.currentPrice as currentP2_2_1_, investment0_.quantity as quantity2_1_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_1_, portfolio1_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.INVESTMENT investment0_ left outer join TRADER_DB.PORTFOLIO portfolio1_ on investment0_.associatedPortfolio_PORTFOLIO_NAME=portfolio1_.PORTFOLIO_NAME where investment0_.INVESTMENT_ID=?
Static select for entity com.inteltrader.entity.Portfolio [NONE]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Static select for entity com.inteltrader.entity.Portfolio [READ]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Static select for entity com.inteltrader.entity.Portfolio [UPGRADE]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [UPGRADE_NOWAIT]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [FORCE]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [PESSIMISTIC_READ]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? lock in share mode
Static select for entity com.inteltrader.entity.Portfolio [PESSIMISTIC_WRITE]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [PESSIMISTIC_FORCE_INCREMENT]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [OPTIMISTIC]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=?
Static select for entity com.inteltrader.entity.Portfolio [OPTIMISTIC_FORCE_INCREMENT]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=?
Static select for action ACTION_MERGE on entity com.inteltrader.entity.Portfolio: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Static select for action ACTION_REFRESH on entity com.inteltrader.entity.Portfolio: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Static select for collection com.inteltrader.entity.Instrument.priceList: select pricelist0_.SYMBOL_NAME as SYMBOL1_0_0_, pricelist0_.closePrice as closePrice1_0_, pricelist0_.highPrice as highPrice1_0_, pricelist0_.lastClosePrice as lastClos4_1_0_, pricelist0_.lowPrice as lowPrice1_0_, pricelist0_.openPrice as openPrice1_0_, pricelist0_.priceId as priceId1_0_, pricelist0_.timeStamp as timeStamp1_0_, pricelist0_.totalTradedQuantity as totalTra9_1_0_ from TRADER_DB.INSTRUMENT_PRICE pricelist0_ where pricelist0_.SYMBOL_NAME=?
Static select for one-to-many com.inteltrader.entity.Portfolio.investmentList: select investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_1_, investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.associatedPortfolio_PORTFOLIO_NAME=?
Static select for collection com.inteltrader.entity.Investment.transactionsList: select transactio0_.INVESTMENT_ID as INVESTMENT1_2_0_, transactio0_.quantity as quantity3_0_, transactio0_.transactionId as transact3_3_0_, transactio0_.transactionPrice as transact4_3_0_ from TRADER_DB.INVESTMENT_TRANSACTION transactio0_ where transactio0_.INVESTMENT_ID=?
Registering SessionFactory: 88031570-ebe7-4f3e-8815-8a56cb328993 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Instantiated session factory
HHH000228: Running hbm2ddl schema update
HHH000102: Fetching database metadata
HHH000396: Updating schema
Processing hbm.xml files
Process annotated classes
Processing fk mappings (*ToOne and JoinedSubclass)
Processing extends queue
Processing extends queue
Processing collection mappings
Processing native query and ResultSetMapping mappings
Processing association property references
Creating tables' unique integer identifiers
Processing foreign key constraints
Resolving reference to class: com.inteltrader.entity.Instrument
Resolving reference to class: com.inteltrader.entity.Portfolio
Resolving reference to class: com.inteltrader.entity.Investment
HHH000261: Table found: TRADER_DB.instrument
HHH000037: Columns: [symbol_name]
HHH000108: Foreign keys: []
HHH000126: Indexes: [primary]
HHH000261: Table found: TRADER_DB.instrument_price
HHH000037: Columns: [totaltradedquantity, timestamp, priceid, lastcloseprice, highprice, symbol_name, openprice, closeprice, lowprice]
HHH000108: Foreign keys: [fk3189a2d153ed548d]
HHH000126: Indexes: [fk3189a2d153ed548d]
HHH000261: Table found: TRADER_DB.investment
HHH000037: Columns: [investment_id, associatedportfolio_portfolio_name, currentprice, quantity, investment_symbol]
HHH000108: Foreign keys: [fk8fe41ed3c804d4f3]
HHH000126: Indexes: [fk8fe41ed3c804d4f3, primary]
HHH000261: Table found: TRADER_DB.investment_transaction
HHH000037: Columns: [transactionprice, investment_id, transactionid, quantity]
HHH000108: Foreign keys: [fka5863f52914590ae]
HHH000126: Indexes: [fka5863f52914590ae]
HHH000261: Table found: TRADER_DB.portfolio
HHH000037: Columns: [portfolio_name]
HHH000108: Foreign keys: []
HHH000126: Indexes: [primary]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
HHH000232: Schema update complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Statistics initialized [enabled=false]
Registering EntityManagerFactory: intelTrader 
HHH000436: Entity manager factory name (intelTrader) is already registered.  If entity manager will be clustered or passivated, specify a unique value for property 'hibernate.ejb.entitymanager_factory_name'
Finished creating instance of bean 'entityManagerFactory'
Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@d374f1c: defining beans [org.springframework.context.annotation.internalAsyncAnnotationProcessor,org.springframework.context.annotation.internalScheduledAnnotationProcessor,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0,org.springframework.web.servlet.view.InternalResourceViewResolver#0,instrumentDao,portfolioDao,instrumentService,portfolioService,entityManagerFactory,transactionManager,instrument,investment,portfolio,instrumentServiceRest,portfolioServiceRest,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor]; parent: org.springframework.beans.factory.support.DefaultListableBeanFactory@56f47006
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Creating instance of bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0' to allow for resolving potential circular references
Creating instance of bean '(inner bean)'
Creating shared instance of singleton bean 'transactionManager'
Creating instance of bean 'transactionManager'
Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
Returning cached instance of singleton bean 'entityManagerFactory'
Invoking afterPropertiesSet() on bean with name 'transactionManager'
Finished creating instance of bean 'transactionManager'
Creating instance of bean '(inner bean)'
Finished creating instance of bean '(inner bean)'
Invoking afterPropertiesSet() on bean with name '(inner bean)'
Finished creating instance of bean '(inner bean)'
Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Creating shared instance of singleton bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Creating instance of bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Eagerly caching bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Creating shared instance of singleton bean 'instrumentDao'
Creating instance of bean 'instrumentDao'
Eagerly caching bean 'instrumentDao' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'instrumentDao'
Creating shared instance of singleton bean 'portfolioDao'
Creating instance of bean 'portfolioDao'
Eagerly caching bean 'portfolioDao' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'portfolioDao'
Creating shared instance of singleton bean 'instrumentService'
Creating instance of bean 'instrumentService'
Registered injected element on class [com.inteltrader.service.InstrumentServiceImpl]: PersistenceElement for javax.persistence.EntityManagerFactory com.inteltrader.service.InstrumentServiceImpl.entityManagerFactory
Registered injected element on class [com.inteltrader.service.InstrumentServiceImpl]: AutowiredFieldElement for private com.inteltrader.dao.IInstrumentDao com.inteltrader.service.InstrumentServiceImpl.instrumentDao
Registered injected element on class [com.inteltrader.service.InstrumentServiceImpl]: AutowiredFieldElement for private com.inteltrader.service.PortfolioService com.inteltrader.service.InstrumentServiceImpl.portfolioService
Eagerly caching bean 'instrumentService' to allow for resolving potential circular references
Processing injected method of bean 'instrumentService': PersistenceElement for javax.persistence.EntityManagerFactory com.inteltrader.service.InstrumentServiceImpl.entityManagerFactory
Returning cached instance of singleton bean 'entityManagerFactory'
Processing injected method of bean 'instrumentService': AutowiredFieldElement for private com.inteltrader.dao.IInstrumentDao com.inteltrader.service.InstrumentServiceImpl.instrumentDao
Returning cached instance of singleton bean 'instrumentDao'
Autowiring by type from bean name 'instrumentService' to bean named 'instrumentDao'
Processing injected method of bean 'instrumentService': AutowiredFieldElement for private com.inteltrader.service.PortfolioService com.inteltrader.service.InstrumentServiceImpl.portfolioService
Creating shared instance of singleton bean 'portfolioService'
Creating instance of bean 'portfolioService'
Registered injected element on class [com.inteltrader.service.PortfolioServiceImpl]: PersistenceElement for private javax.persistence.EntityManagerFactory com.inteltrader.service.PortfolioServiceImpl.entityManagerFactory
Registered injected element on class [com.inteltrader.service.PortfolioServiceImpl]: AutowiredFieldElement for private com.inteltrader.dao.IPortfolioDao com.inteltrader.service.PortfolioServiceImpl.portfolioDao
Eagerly caching bean 'portfolioService' to allow for resolving potential circular references
Processing injected method of bean 'portfolioService': PersistenceElement for private javax.persistence.EntityManagerFactory com.inteltrader.service.PortfolioServiceImpl.entityManagerFactory
Returning cached instance of singleton bean 'entityManagerFactory'
Processing injected method of bean 'portfolioService': AutowiredFieldElement for private com.inteltrader.dao.IPortfolioDao com.inteltrader.service.PortfolioServiceImpl.portfolioDao
Returning cached instance of singleton bean 'portfolioDao'
Autowiring by type from bean name 'portfolioService' to bean named 'portfolioDao'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'portfolioService'
Autowiring by type from bean name 'instrumentService' to bean named 'portfolioService'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'instrumentService'
Returning cached instance of singleton bean 'portfolioService'
Returning cached instance of singleton bean 'entityManagerFactory'
Returning cached instance of singleton bean 'transactionManager'
Creating shared instance of singleton bean 'instrument'
Creating instance of bean 'instrument'
Eagerly caching bean 'instrument' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'instrument'
Creating shared instance of singleton bean 'investment'
Creating instance of bean 'investment'
Eagerly caching bean 'investment' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'investment'
Creating shared instance of singleton bean 'portfolio'
Creating instance of bean 'portfolio'
Eagerly caching bean 'portfolio' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'portfolio'
Creating shared instance of singleton bean 'instrumentServiceRest'
Creating instance of bean 'instrumentServiceRest'
Registered injected element on class [com.inteltrader.rest.InstrumentServiceRest]: AutowiredFieldElement for private com.inteltrader.service.InstrumentService com.inteltrader.rest.InstrumentServiceRest.instrumentService
Eagerly caching bean 'instrumentServiceRest' to allow for resolving potential circular references
Processing injected method of bean 'instrumentServiceRest': AutowiredFieldElement for private com.inteltrader.service.InstrumentService com.inteltrader.rest.InstrumentServiceRest.instrumentService
Returning cached instance of singleton bean 'instrumentService'
Autowiring by type from bean name 'instrumentServiceRest' to bean named 'instrumentService'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'instrumentServiceRest'
Creating shared instance of singleton bean 'portfolioServiceRest'
Creating instance of bean 'portfolioServiceRest'
Registered injected element on class [com.inteltrader.rest.PortfolioServiceRest]: AutowiredFieldElement for private com.inteltrader.service.PortfolioService com.inteltrader.rest.PortfolioServiceRest.portfolioService
Eagerly caching bean 'portfolioServiceRest' to allow for resolving potential circular references
Processing injected method of bean 'portfolioServiceRest': AutowiredFieldElement for private com.inteltrader.service.PortfolioService com.inteltrader.rest.PortfolioServiceRest.portfolioService
Returning cached instance of singleton bean 'portfolioService'
Autowiring by type from bean name 'portfolioServiceRest' to bean named 'portfolioService'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'portfolioServiceRest'
Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@6373fd5]
Returning cached instance of singleton bean 'lifecycleProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Unable to locate MultipartResolver with name 'multipartResolver': no multipart request handling provided
Creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Unable to locate LocaleResolver with name 'localeResolver': using default [org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver@42649dcf]
Creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Unable to locate ThemeResolver with name 'themeResolver': using default [org.springframework.web.servlet.theme.FixedThemeResolver@734ea391]
Creating instance of bean 'org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping'
Looking for URL mappings in application context: WebApplicationContext for namespace 'appServlet-servlet': startup date [Thu Apr 18 17:29:08 IST 2013]; parent: Root WebApplicationContext
Rejected bean name 'org.springframework.context.annotation.internalAsyncAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalScheduledAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalRequiredAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalCommonAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.aop.config.internalAutoProxyCreator': no URL paths identified
Rejected bean name 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0': no URL paths identified
Rejected bean name 'org.springframework.web.servlet.view.InternalResourceViewResolver#0': no URL paths identified
Rejected bean name 'instrumentDao': no URL paths identified
Rejected bean name 'portfolioDao': no URL paths identified
Rejected bean name 'instrumentService': no URL paths identified
Rejected bean name 'portfolioService': no URL paths identified
Rejected bean name 'entityManagerFactory': no URL paths identified
Rejected bean name 'transactionManager': no URL paths identified
Rejected bean name 'instrument': no URL paths identified
Rejected bean name 'investment': no URL paths identified
Rejected bean name 'portfolio': no URL paths identified
Rejected bean name 'instrumentServiceRest': no URL paths identified
Rejected bean name 'portfolioServiceRest': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor': no URL paths identified
Rejected bean name 'environment': no URL paths identified
Rejected bean name 'systemProperties': no URL paths identified
Rejected bean name 'systemEnvironment': no URL paths identified
Rejected bean name 'servletConfig': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry': no URL paths identified
Rejected bean name 'messageSource': no URL paths identified
Rejected bean name 'applicationEventMulticaster': no URL paths identified
Rejected bean name 'lifecycleProcessor': no URL paths identified
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping'
Creating instance of bean 'org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping'
Looking for URL mappings in application context: WebApplicationContext for namespace 'appServlet-servlet': startup date [Thu Apr 18 17:29:08 IST 2013]; parent: Root WebApplicationContext
Rejected bean name 'org.springframework.context.annotation.internalAsyncAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalScheduledAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalRequiredAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalCommonAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.aop.config.internalAutoProxyCreator': no URL paths identified
Rejected bean name 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0': no URL paths identified
Rejected bean name 'org.springframework.web.servlet.view.InternalResourceViewResolver#0': no URL paths identified
Rejected bean name 'instrumentDao': no URL paths identified
Rejected bean name 'portfolioDao': no URL paths identified
Rejected bean name 'instrumentService': no URL paths identified
Rejected bean name 'portfolioService': no URL paths identified
Rejected bean name 'entityManagerFactory': no URL paths identified
Rejected bean name 'transactionManager': no URL paths identified
Rejected bean name 'instrument': no URL paths identified
Rejected bean name 'investment': no URL paths identified
Rejected bean name 'portfolio': no URL paths identified
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/create/{symbol}] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/create/{symbol}.*] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/create/{symbol}/] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/update/{portfolioName}] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/update/{portfolioName}.*] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/update/{portfolioName}/] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/load/{symbol}] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/load/{symbol}.*] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/load/{symbol}/] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/create/{portfolioName}] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/create/{portfolioName}.*] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/create/{portfolioName}/] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/addInvestment/{portfolioName}/{symbolName}] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/addInvestment/{portfolioName}/{symbolName}.*] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/addInvestment/{portfolioName}/{symbolName}/] onto handler 'portfolioServiceRest'
Rejected bean name 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor': no URL paths identified
Rejected bean name 'environment': no URL paths identified
Rejected bean name 'systemProperties': no URL paths identified
Rejected bean name 'systemEnvironment': no URL paths identified
Rejected bean name 'servletConfig': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry': no URL paths identified
Rejected bean name 'messageSource': no URL paths identified
Rejected bean name 'applicationEventMulticaster': no URL paths identified
Rejected bean name 'lifecycleProcessor': no URL paths identified
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping'
No HandlerMappings found in servlet 'appServlet': using default
Creating instance of bean 'org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter'
Creating instance of bean 'org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter'
Creating instance of bean 'org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter'
No HandlerAdapters found in servlet 'appServlet': using default
Creating instance of bean 'org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerExceptionResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerExceptionResolver'
Creating instance of bean 'org.springframework.web.servlet.mvc.annotation.ResponseStatusExceptionResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.annotation.ResponseStatusExceptionResolver'
Creating instance of bean 'org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver'
No HandlerExceptionResolvers found in servlet 'appServlet': using default
Creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Unable to locate RequestToViewNameTranslator with name 'viewNameTranslator': using default [org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@3056de27]
Returning cached instance of singleton bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Returning cached instance of singleton bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Unable to locate FlashMapManager with name 'flashMapManager': using default [org.springframework.web.servlet.support.SessionFlashMapManager@73d97d26]
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Searching for key 'spring.liveBeansView.mbeanDomain' in [servletConfigInitParams]
Searching for key 'spring.liveBeansView.mbeanDomain' in [servletContextInitParams]
Searching for key 'spring.liveBeansView.mbeanDomain' in [jndiProperties]
Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain]
Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException: Name [spring.liveBeansView.mbeanDomain] is not bound in this Context. Unable to find [spring.liveBeansView.mbeanDomain].
Looking up JNDI object with name [spring.liveBeansView.mbeanDomain]
JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: Name [spring.liveBeansView.mbeanDomain] is not bound in this Context. Unable to find [spring.liveBeansView.mbeanDomain].. Returning null.
Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
Published WebApplicationContext of servlet 'appServlet' as ServletContext attribute with name [org.springframework.web.servlet.FrameworkServlet.CONTEXT.appServlet]
FrameworkServlet 'appServlet': initialization completed in 509 ms
Servlet 'appServlet' configured successfully
DispatcherServlet with name 'appServlet' processing GET request for [/portfolio/addInvestment/myFirstTime/CIPLA]
Matching patterns for request [/portfolio/addInvestment/myFirstTime/CIPLA] are [/portfolio/addInvestment/{portfolioName}/{symbolName}]
URI Template variables for request [/portfolio/addInvestment/myFirstTime/CIPLA] are {portfolioName=myFirstTime, symbolName=CIPLA}
Mapping [/portfolio/addInvestment/myFirstTime/CIPLA] to HandlerExecutionChain with handler [com.inteltrader.rest.PortfolioServiceRest@40eecb3b] and 2 interceptors
Last-Modified value for [/portfolio/addInvestment/myFirstTime/CIPLA] is: -1
Invoking request handler method: public org.springframework.http.ResponseEntity com.inteltrader.rest.PortfolioServiceRest.addInvestment(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
begin
Obtaining JDBC connection
Obtained JDBC connection
initial autocommit status: true
disabling autocommit
Loading entity: [com.inteltrader.entity.Portfolio#myFirstTime]
select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Result set row: 0
Result row: EntityKey[com.inteltrader.entity.Investment#1], EntityKey[com.inteltrader.entity.Portfolio#myFirstTime]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Resolving associations for [com.inteltrader.entity.Investment#1]
Done materializing entity [com.inteltrader.entity.Investment#1]
Resolving associations for [com.inteltrader.entity.Portfolio#myFirstTime]
Done materializing entity [com.inteltrader.entity.Portfolio#myFirstTime]
1 collections were found in result set for role: com.inteltrader.entity.Portfolio.investmentList
Collection fully initialized: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
1 collections initialized for role: com.inteltrader.entity.Portfolio.investmentList
Done entity load
Mark transaction for rollback
rolling back
rolled JDBC Connection
re-enabling autocommit
Resolving exception from handler [com.inteltrader.rest.PortfolioServiceRest@40eecb3b]: javax.persistence.RollbackException: Transaction marked as rollbackOnly
Resolving exception from handler [com.inteltrader.rest.PortfolioServiceRest@40eecb3b]: javax.persistence.RollbackException: Transaction marked as rollbackOnly
Resolving exception from handler [com.inteltrader.rest.PortfolioServiceRest@40eecb3b]: javax.persistence.RollbackException: Transaction marked as rollbackOnly
Could not complete request
javax.persistence.RollbackException: Transaction marked as rollbackOnly
	at org.hibernate.ejb.TransactionImpl.commit(TransactionImpl.java:72)
	at com.inteltrader.service.PortfolioServiceImpl.addToPortfolio(PortfolioServiceImpl.java:66)
	at com.inteltrader.rest.PortfolioServiceRest.addInvestment(PortfolioServiceRest.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.springframework.web.bind.annotation.support.HandlerMethodInvoker.invokeHandlerMethod(HandlerMethodInvoker.java:176)
	at org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter.invokeHandlerMethod(AnnotationMethodHandlerAdapter.java:440)
	at org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter.handle(AnnotationMethodHandlerAdapter.java:428)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:925)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:856)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:920)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:816)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:621)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:801)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:722)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:305)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:222)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:123)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:472)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:168)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:99)
	at org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:929)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:118)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:407)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1002)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:585)
	at org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:310)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)
	at java.lang.Thread.run(Thread.java:722)
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Initializing servlet 'appServlet'
Initializing new StandardServletEnvironment
Adding [servletConfigInitParams] PropertySource with lowest search precedence
Adding [servletContextInitParams] PropertySource with lowest search precedence
Adding [jndiProperties] PropertySource with lowest search precedence
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment]
FrameworkServlet 'appServlet': initialization started
Servlet with name 'appServlet' will try to create custom WebApplicationContext context of class 'org.springframework.web.context.support.XmlWebApplicationContext', using parent context [Root WebApplicationContext: startup date [Thu Apr 18 17:30:38 IST 2013]; root of context hierarchy]
Searching for key 'spring.profiles.active' in [servletConfigInitParams]
Searching for key 'spring.profiles.active' in [servletContextInitParams]
Searching for key 'spring.profiles.active' in [jndiProperties]
Looking up JNDI object with name [java:comp/env/spring.profiles.active]
Converted JNDI name [java:comp/env/spring.profiles.active] not found - trying original name [spring.profiles.active]. javax.naming.NameNotFoundException: Name [spring.profiles.active] is not bound in this Context. Unable to find [spring.profiles.active].
Looking up JNDI object with name [spring.profiles.active]
JNDI lookup for name [spring.profiles.active] threw NamingException with message: Name [spring.profiles.active] is not bound in this Context. Unable to find [spring.profiles.active].. Returning null.
Searching for key 'spring.profiles.active' in [systemProperties]
Searching for key 'spring.profiles.active' in [systemEnvironment]
Could not find key 'spring.profiles.active' in any property source. Returning [null]
Searching for key 'spring.profiles.default' in [servletConfigInitParams]
Searching for key 'spring.profiles.default' in [servletContextInitParams]
Searching for key 'spring.profiles.default' in [jndiProperties]
Looking up JNDI object with name [java:comp/env/spring.profiles.default]
Converted JNDI name [java:comp/env/spring.profiles.default] not found - trying original name [spring.profiles.default]. javax.naming.NameNotFoundException: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].
Looking up JNDI object with name [spring.profiles.default]
JNDI lookup for name [spring.profiles.default] threw NamingException with message: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].. Returning null.
Searching for key 'spring.profiles.default' in [systemProperties]
Searching for key 'spring.profiles.default' in [systemEnvironment]
Could not find key 'spring.profiles.default' in any property source. Returning [null]
Searching for key 'spring.profiles.default' in [servletConfigInitParams]
Searching for key 'spring.profiles.default' in [servletContextInitParams]
Searching for key 'spring.profiles.default' in [jndiProperties]
Looking up JNDI object with name [java:comp/env/spring.profiles.default]
Converted JNDI name [java:comp/env/spring.profiles.default] not found - trying original name [spring.profiles.default]. javax.naming.NameNotFoundException: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].
Looking up JNDI object with name [spring.profiles.default]
JNDI lookup for name [spring.profiles.default] threw NamingException with message: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].. Returning null.
Searching for key 'spring.profiles.default' in [systemProperties]
Searching for key 'spring.profiles.default' in [systemEnvironment]
Could not find key 'spring.profiles.default' in any property source. Returning [null]
Replacing [servletContextInitParams] PropertySource with [servletContextInitParams]
Replacing [servletConfigInitParams] PropertySource with [servletConfigInitParams]
Refreshing WebApplicationContext for namespace 'appServlet-servlet': startup date [Thu Apr 18 17:30:41 IST 2013]; parent: Root WebApplicationContext
Initializing new StandardEnvironment
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
Initializing new StandardEnvironment
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
Loading schema mappings from [META-INF/spring.schemas]
Loaded schema mappings: {http://www.springframework.org/schema/data/jpa/spring-jpa-1.2.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.2.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.1.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.1.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.5.xsd=org/springframework/data/repository/config/spring-repository-1.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.0.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.3.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.4.xsd=org/springframework/data/repository/config/spring-repository-1.4.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.3.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/data/repository/spring-repository.xsd=org/springframework/data/repository/config/spring-repository-1.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.0.xsd=org/springframework/data/repository/config/spring-repository-1.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.1.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.1.xsd
Found XML schema [http://www.springframework.org/schema/task/spring-task-3.0.xsd] in classpath: org/springframework/scheduling/config/spring-task-3.0.xsd
Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd
Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd
Found XML schema [http://www.springframework.org/schema/tx/spring-tx-3.1.xsd] in classpath: org/springframework/transaction/config/spring-tx-3.1.xsd
Loading bean definitions
Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/data/repository=org.springframework.data.repository.config.RepositoryNameSpaceHandler, http://www.springframework.org/schema/data/jpa=org.springframework.data.jpa.repository.config.JpaRepositoryNameSpaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
Neither XML 'id' nor 'name' specified - using generated bean name [org.springframework.web.servlet.view.InternalResourceViewResolver#0]
Neither XML 'id' nor 'name' specified - using generated bean name [org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver#52939927]
Initializing new StandardEnvironment
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
Looking for matching resources in directory tree [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Resolved location pattern [classpath*:com/inteltrader/**/*.class] to resources [file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\Advice.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\FIFOList.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\InstrumentVo.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\Strategies.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\Strategy.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\StrategyMACD.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao\IInstrumentDao.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao\InstrumentDao.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao\IPortfolioDao.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao\PortfolioDao.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Instrument.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Investment.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Portfolio.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Price.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Transactions.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest\InstrumentServiceRest.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest\PortfolioServiceRest.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\AnalyserService.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\CronService.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\InstrumentService.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\InstrumentServiceImpl.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\PortfolioService.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\PortfolioServiceImpl.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util\DownloadZip.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util\ExtractZipFile.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util\ReadPriceCsv.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util\RestCodes.class]]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Instrument.class]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Investment.class]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Portfolio.class]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest\InstrumentServiceRest.class]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest\PortfolioServiceRest.class]
Loaded 21 bean definitions from location pattern [/WEB-INF/applicationContext.xml]
Bean factory for WebApplicationContext for namespace 'appServlet-servlet': org.springframework.beans.factory.support.DefaultListableBeanFactory@582bf9cb: defining beans [org.springframework.context.annotation.internalAsyncAnnotationProcessor,org.springframework.context.annotation.internalScheduledAnnotationProcessor,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0,org.springframework.web.servlet.view.InternalResourceViewResolver#0,instrumentDao,portfolioDao,instrumentService,portfolioService,entityManagerFactory,transactionManager,instrument,investment,portfolio,instrumentServiceRest,portfolioServiceRest]; parent: org.springframework.beans.factory.support.DefaultListableBeanFactory@590839ce
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@72ad3b3d]
Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@4b0c5c9c]
Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.DelegatingThemeSource@18942c42]
Creating shared instance of singleton bean 'entityManagerFactory'
Creating instance of bean 'entityManagerFactory'
Eagerly caching bean 'entityManagerFactory' to allow for resolving potential circular references
Creating instance of bean 'org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver#52939927'
Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Creating instance of bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0' to allow for resolving potential circular references
Creating instance of bean '(inner bean)'
Creating shared instance of singleton bean 'transactionManager'
Creating instance of bean 'transactionManager'
Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
Returning eagerly cached instance of singleton bean 'entityManagerFactory' that is not fully initialized yet - a consequence of a circular reference
Ignoring currently created advisor 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0': Error creating bean with name 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0': Cannot create inner bean '(inner bean)' of type [org.springframework.transaction.interceptor.TransactionInterceptor] while setting bean property 'transactionInterceptor'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)': Cannot resolve reference to bean 'transactionManager' while setting bean property 'transactionManager'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'transactionManager' defined in ServletContext resource [/WEB-INF/applicationContext.xml]: Cannot resolve reference to bean 'entityManagerFactory' while setting bean property 'entityManagerFactory'; nested exception is org.springframework.beans.factory.BeanCurrentlyInCreationException: Error creating bean with name 'entityManagerFactory': FactoryBean which is currently in creation returned null from getObject
Finished creating instance of bean 'org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver#52939927'
Invoking afterPropertiesSet() on bean with name 'entityManagerFactory'
Building JPA container EntityManagerFactory for persistence unit 'intelTrader'
Adding type registration boolean -> org.hibernate.type.BooleanType@38835669
Adding type registration boolean -> org.hibernate.type.BooleanType@38835669
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@38835669
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@31017e98
Adding type registration true_false -> org.hibernate.type.TrueFalseType@403e93f2
Adding type registration yes_no -> org.hibernate.type.YesNoType@789cca2a
Adding type registration byte -> org.hibernate.type.ByteType@19c7a5d3
Adding type registration byte -> org.hibernate.type.ByteType@19c7a5d3
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@19c7a5d3
Adding type registration character -> org.hibernate.type.CharacterType@61869e64
Adding type registration char -> org.hibernate.type.CharacterType@61869e64
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@61869e64
Adding type registration short -> org.hibernate.type.ShortType@3a52ba0a
Adding type registration short -> org.hibernate.type.ShortType@3a52ba0a
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3a52ba0a
Adding type registration integer -> org.hibernate.type.IntegerType@73eec08e
Adding type registration int -> org.hibernate.type.IntegerType@73eec08e
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@73eec08e
Adding type registration long -> org.hibernate.type.LongType@4ec58c66
Adding type registration long -> org.hibernate.type.LongType@4ec58c66
Adding type registration java.lang.Long -> org.hibernate.type.LongType@4ec58c66
Adding type registration float -> org.hibernate.type.FloatType@483d495e
Adding type registration float -> org.hibernate.type.FloatType@483d495e
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@483d495e
Adding type registration double -> org.hibernate.type.DoubleType@60f4cff
Adding type registration double -> org.hibernate.type.DoubleType@60f4cff
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@60f4cff
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5cec9b6b
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5cec9b6b
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@e70b525
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@e70b525
Adding type registration string -> org.hibernate.type.StringType@629f76cf
Adding type registration java.lang.String -> org.hibernate.type.StringType@629f76cf
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@56b64bbe
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@16c8570c
Adding type registration url -> org.hibernate.type.UrlType@1164b9cc
Adding type registration java.net.URL -> org.hibernate.type.UrlType@1164b9cc
Adding type registration date -> org.hibernate.type.DateType@3f807a01
Adding type registration java.sql.Date -> org.hibernate.type.DateType@3f807a01
Adding type registration time -> org.hibernate.type.TimeType@31beefdc
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@31beefdc
Adding type registration timestamp -> org.hibernate.type.TimestampType@4b642b59
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4b642b59
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4b642b59
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5dde386b
Adding type registration calendar -> org.hibernate.type.CalendarType@16c8d9df
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@16c8d9df
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@16c8d9df
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@42486f7d
Adding type registration locale -> org.hibernate.type.LocaleType@2b536f50
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2b536f50
Adding type registration currency -> org.hibernate.type.CurrencyType@5dbd2a8
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5dbd2a8
Adding type registration timezone -> org.hibernate.type.TimeZoneType@7280487
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7280487
Adding type registration class -> org.hibernate.type.ClassType@df7adfe
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@df7adfe
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1d68c8e7
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1d68c8e7
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@47bed53c
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@31c50872
Adding type registration binary -> org.hibernate.type.BinaryType@e9b3f1
Adding type registration byte[] -> org.hibernate.type.BinaryType@e9b3f1
Adding type registration [B -> org.hibernate.type.BinaryType@e9b3f1
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4a407c9f
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4a407c9f
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4a407c9f
Adding type registration image -> org.hibernate.type.ImageType@5b9b10cd
Adding type registration characters -> org.hibernate.type.CharArrayType@49ef527d
Adding type registration char[] -> org.hibernate.type.CharArrayType@49ef527d
Adding type registration [C -> org.hibernate.type.CharArrayType@49ef527d
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1783715b
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1783715b
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1783715b
Adding type registration text -> org.hibernate.type.TextType@2194d8f5
Adding type registration ntext -> org.hibernate.type.NTextType@6c807f3b
Adding type registration blob -> org.hibernate.type.BlobType@219e55c2
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@219e55c2
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@45c066e2
Adding type registration clob -> org.hibernate.type.ClobType@18e8cce2
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@18e8cce2
Adding type registration nclob -> org.hibernate.type.NClobType@19fed8d0
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@19fed8d0
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2e1045a2
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7a96b386
Adding type registration serializable -> org.hibernate.type.SerializableType@56ad57ee
Adding type registration object -> org.hibernate.type.ObjectType@2ba95c45
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2ba95c45
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@27e5ada9
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@57ec46b5
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5916422b
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@445242be
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@749beafc
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@28608233
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5803f6fa
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6c4bc43a
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Processing PersistenceUnitInfo [
	name: intelTrader
	persistence provider classname: org.hibernate.ejb.HibernatePersistence
	classloader: WebappClassLoader
  context: 
  delegate: false
  repositories:
    /WEB-INF/classes/
----------> Parent Classloader:
ClassRealm[plugin>org.apache.tomcat.maven:tomcat7-maven-plugin:2.0, parent: sun.misc.Launcher$AppClassLoader@1875303f]

	Temporary classloader: org.springframework.instrument.classloading.SimpleThrowawayClassLoader@623ff361
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/vvarm1/IdeaProjects/intelTrader/src/main/webapp/WEB-INF/classes
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.inteltrader.entity.Instrument
		com.inteltrader.entity.Portfolio
		com.inteltrader.entity.Investment]
	Mapping files names []
	Properties [
		hibernate.connection.username: root
		hibernate.connection.password: root
		hibernate.dialect: org.hibernate.dialect.MySQLDialect
		hibernate.c3p0.min_size: 10
		hibernate.connection.url: jdbc:mysql://localhost:3306/TRADER_DB
		hibernate.show_sql: true
		hibernate.connection.driver_class: com.mysql.jdbc.Driver
		hibernate.hbm2ddl.auto: update]
Detect class: true; detect hbm: true
Detect class: true; detect hbm: true
Searching mapped entities in jar/par: file:/C:/Users/vvarm1/IdeaProjects/intelTrader/src/main/webapp/WEB-INF/classes
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.ejb.event.JpaIntegrator].
No JNDI name configured for binding Ejb3Configuration
Preparing to build session factory with filters : {}
Processing hbm.xml files
Process annotated classes
Binding entity from annotated class: com.inteltrader.entity.Instrument
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Instrument
Bind entity com.inteltrader.entity.Instrument on table INSTRUMENT
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=SYMBOL_NAME, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property symbolName with lazy=false
building SimpleValue for symbolName
Building property symbolName
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=priceList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=priceList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=priceList_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='priceList_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='SYMBOL_NAME', referencedColumn='', mappedBy=''}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Collection role: com.inteltrader.entity.Instrument.priceList
Building property priceList
Binding entity from annotated class: com.inteltrader.entity.Portfolio
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Portfolio
Bind entity com.inteltrader.entity.Portfolio on table PORTFOLIO
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=PORTFOLIO_NAME, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property portfolioName with lazy=false
building SimpleValue for portfolioName
Building property portfolioName
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='associatedPortfolio'}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=investmentList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=element, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=investmentList_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='investmentList_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='associatedPortfolio'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='associatedPortfolio'}
Collection role: com.inteltrader.entity.Portfolio.investmentList
Building property investmentList
Binding entity from annotated class: com.inteltrader.entity.Investment
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Investment
Bind entity com.inteltrader.entity.Investment on table INVESTMENT
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=INVESTMENT_ID, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property investmentId with lazy=false
building SimpleValue for investmentId
Building property investmentId
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=associatedPortfolio, insertable=true, updatable=true, unique=false}
Building property associatedPortfolio
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=currentPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property currentPrice with lazy=false
building SimpleValue for currentPrice
Building property currentPrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=quantity, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property quantity with lazy=false
building SimpleValue for quantity
Building property quantity
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=INVESTMENT_SYMBOL, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property symbolName with lazy=false
building SimpleValue for symbolName
Building property symbolName
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=transactionsList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=transactionsList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=transactionsList_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='transactionsList_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='INVESTMENT_ID', referencedColumn='', mappedBy=''}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Collection role: com.inteltrader.entity.Investment.transactionsList
Building property transactionsList
Setting SimpleValue typeName for symbolName
Setting SimpleValue typeName for portfolioName
Setting SimpleValue typeName for investmentId
Setting SimpleValue typeName for currentPrice
Setting SimpleValue typeName for quantity
Setting SimpleValue typeName for symbolName
Processing fk mappings (*ToOne and JoinedSubclass)
Processing extends queue
Processing extends queue
Processing collection mappings
Second pass for collection: com.inteltrader.entity.Investment.transactionsList
Binding a collection of element: com.inteltrader.entity.Investment.transactionsList
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT_TRANSACTION), mappingColumn=quantity, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property quantity with lazy=false
building SimpleValue for quantity
Setting SimpleValue typeName for quantity
Building property quantity
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT_TRANSACTION), mappingColumn=transactionId, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property transactionId with lazy=false
building SimpleValue for transactionId
Setting SimpleValue typeName for transactionId
Building property transactionId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT_TRANSACTION), mappingColumn=transactionPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property transactionPrice with lazy=false
building SimpleValue for transactionPrice
Setting SimpleValue typeName for transactionPrice
Building property transactionPrice
Mapped collection key: INVESTMENT_ID, element: quantity, transactionId, transactionPrice
Second pass for collection: com.inteltrader.entity.Instrument.priceList
Binding a collection of element: com.inteltrader.entity.Instrument.priceList
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=closePrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property closePrice with lazy=false
building SimpleValue for closePrice
Setting SimpleValue typeName for closePrice
Building property closePrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=highPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property highPrice with lazy=false
building SimpleValue for highPrice
Setting SimpleValue typeName for highPrice
Building property highPrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=lastClosePrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property lastClosePrice with lazy=false
building SimpleValue for lastClosePrice
Setting SimpleValue typeName for lastClosePrice
Building property lastClosePrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=lowPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property lowPrice with lazy=false
building SimpleValue for lowPrice
Setting SimpleValue typeName for lowPrice
Building property lowPrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=openPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property openPrice with lazy=false
building SimpleValue for openPrice
Setting SimpleValue typeName for openPrice
Building property openPrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=priceId, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property priceId with lazy=false
building SimpleValue for priceId
Setting SimpleValue typeName for priceId
Building property priceId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=timeStamp, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property timeStamp with lazy=false
building SimpleValue for timeStamp
Setting SimpleValue typeName for timeStamp
Building property timeStamp
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=totalTradedQuantity, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property totalTradedQuantity with lazy=false
building SimpleValue for totalTradedQuantity
Setting SimpleValue typeName for totalTradedQuantity
Building property totalTradedQuantity
Mapped collection key: SYMBOL_NAME, element: closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity
Second pass for collection: com.inteltrader.entity.Portfolio.investmentList
Binding a OneToMany: com.inteltrader.entity.Portfolio.investmentList through a foreign key
Mapping collection: com.inteltrader.entity.Portfolio.investmentList -> INVESTMENT
Retrieving property com.inteltrader.entity.Investment.associatedPortfolio
Mapped collection key: associatedPortfolio_PORTFOLIO_NAME, one-to-many: com.inteltrader.entity.Investment
Processing native query and ResultSetMapping mappings
Processing association property references
Creating tables' unique integer identifiers
Processing foreign key constraints
Resolving reference to class: com.inteltrader.entity.Instrument
Resolving reference to class: com.inteltrader.entity.Portfolio
Resolving reference to class: com.inteltrader.entity.Investment
HHH000022: c3p0 properties were encountered, but the org.hibernate.service.jdbc.connections.internal.C3P0ConnectionProvider provider class was not found on the classpath; these properties are going to be ignored.
HHH000402: Using Hibernate built-in connection pool (not for production use!)
HHH000115: Hibernate connection pool size: 20
HHH000006: Autocommit mode: true
HHH000401: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/TRADER_DB]
HHH000046: Connection properties: {user=root, password=root, autocommit=true, release_mode=auto}
Opening new JDBC connection
Created connection to: jdbc:mysql://localhost:3306/TRADER_DB, Isolation Level: 4
Database ->
       name : MySQL
    version : 5.6.10-log
      major : 5
      minor : 6
Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.9 ( Revision: ${svn.Revision} )
      major : 5
      minor : 1
JDBC version : 3.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: disabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
multi-tenancy strategy : NONE
Connection release mode: auto
HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
Maximum outer join fetch depth: 2
Default batch fetch size: 1
Generate SQL with comments: disabled
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
HHH000397: Using ASTQueryTranslatorFactory
Query language substitutions: {}
JPA-QL strict compliance: enabled
Second-level cache: enabled
Query cache: disabled
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
Optimize cache for minimal puts: disabled
Structured second-level cache entries: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Named query checking : enabled
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : : disabled
Building session factory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\vvarm1\IdeaProjects\intelTrader\target\tomcat, hibernate.connection.url=jdbc:mysql://localhost:3306/TRADER_DB, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.ejb.discard_pc_on_close=false, catalina.useNaming=true, hibernate.transaction.flush_before_completion=false, os.name=Windows 7, sun.boot.class.path=C:\Program Files\Java\jdk1.7.0_10\jre\lib\resources.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\rt.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\jce.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.7.0_10\jre\classes, java.util.logging.config.file=C:\Users\vvarm1\IdeaProjects\intelTrader\target\tomcat\conf\logging.properties, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.7.0_10-b18, hibernate.connection.autocommit=true, hibernate.c3p0.min_size=10, user.name=vvarm1, shared.loader=, guice.disable.misplaced.annotation.check=true, tomcat.util.buf.StringCache.byte.enabled=true, javax.persistence.validation.mode=AUTO, hibernate.connection.release_mode=auto, idea.launcher.bin.path=C:\Program Files (x86)\JetBrains\IntelliJ IDEA Community Edition 12.0.4\bin, user.language=en, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, sun.boot.library.path=C:\Program Files\Java\jdk1.7.0_10\jre\bin, classworlds.conf=C:\Program Files\Apache Software Foundation\apache-maven-3.0.5\bin\m2.conf, java.version=1.7.0_10, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, user.timezone=Asia/Calcutta, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.7.0_10\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, file.encoding.pkg=sun.io, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.tomcat.,org.apache.jasper., file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=51.0, user.country=US, java.home=C:\Program Files\Java\jdk1.7.0_10\jre, java.vm.info=mixed mode, os.version=6.1, hibernate.transaction.factory_class=org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory, hibernate.query.jpaql_strict_compliance=true, path.separator=;, java.vm.version=23.6-b04, hibernate.connection.password=root, user.variant=, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.scan.DefaultJarScanner.jarsToSkip=bootstrap.jar,commons-daemon.jar,tomcat-juli.jar,annotations-api.jar,el-api.jar,jsp-api.jar,servlet-api.jar,catalina.jar,catalina-ant.jar,catalina-ha.jar,catalina-tribes.jar,jasper.jar,jasper-el.jar,ecj-*.jar,tomcat-api.jar,tomcat-util.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-jni.jar,tomcat-spdy.jar,tomcat-i18n-en.jar,tomcat-i18n-es.jar,tomcat-i18n-fr.jar,tomcat-i18n-ja.jar,tomcat-juli-adapters.jar,catalina-jmx-remote.jar,catalina-ws.jar,tomcat-jdbc.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,jstl.jar,geronimo-spec-jaxrpc*.jar,wsdl4j*.jar,ant.jar,ant-junit*.jar,aspectj*.jar,jmx.jar,h2*.jar,hibernate*.jar,httpclient*.jar,jmx-tools.jar,jta*.jar,log4j*.jar,mail*.jar,slf4j*.jar,xercesImpl.jar,xmlParserAPIs.jar,xml-apis.jar,access-bridge-64.jar,dnsns.jar,jaccess.jar,ldapsec.jar,localedata.jar,sunjce_provider.jar,sunmscapi.jar,sunpkcs11.jar,jhall.jar,tools.jar,sunec.jar,zipfs.jar,gnome-java-bridge.jar,pulse-java.jar,apple_provider.jar,AppleScriptEngine.jar,CoreAudio.jar,dns_sd.jar,j3daudio.jar,j3dcore.jar,j3dutils.jar,jai_core.jar,jai_codec.jar,mlibwrapper_jai.jar,MRJToolkit.jar,vecmath.jar,junit.jar,junit-*.jar,ant-launcher.jar, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.tomcat.,org.apache.jasper., user.script=, java.naming.factory.url.pkgs=org.apache.naming, user.home=C:\Users\vvarm1, org.apache.catalina.startup.ContextConfig.jarsToSkip=, java.specification.vendor=Oracle Corporation, hibernate.hbm2ddl.auto=update, java.library.path=C:\Program Files\Java\jdk1.7.0_10\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\JetBrains\IntelliJ IDEA Community Edition 12.0.4\bin\..\.\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\ThinkPad\Bluetooth Software\;C:\Program Files\ThinkPad\Bluetooth Software\syswow64;c:\Program Files\Intel\WiFi\bin\;c:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files (x86)\Git\cmd;C:\Users\vvarm1\Documents\play-2.0.3;C:\Program Files\Java\jdk1.7.0_10\bin;C:\Program Files\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\QuickTime\QTSystem\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Java\jre6\bin;C:\Program Files\Apache Software Foundation\apache-maven-3.0.5\bin;c:\program files (x86)\jetbrains\intellij idea community edition 12.0.4\jre\jre\bin;., java.vendor.url=http://java.oracle.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, org.apache.catalina.startup.TldConfig.jarsToSkip=, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, common.loader=${catalina.base}/lib,${catalina.base}/lib/*.jar,${catalina.home}/lib,${catalina.home}/lib/*.jar, maven.home=C:\Program Files\Apache Software Foundation\apache-maven-3.0.5, java.runtime.name=Java(TM) SE Runtime Environment, java.class.path=C:\Program Files\Apache Software Foundation\apache-maven-3.0.5\boot\plexus-classworlds-2.4.jar;C:\Program Files (x86)\JetBrains\IntelliJ IDEA Community Edition 12.0.4\lib\idea_rt.jar, sun.java.command=com.intellij.rt.execution.application.AppMain org.codehaus.classworlds.Launcher --no-plugin-registry --fail-fast --strict-checksums --update-snapshots org.apache.tomcat.maven:tomcat7-maven-plugin:2.0:run, hibernate.bytecode.use_reflection_optimizer=false, idea.launcher.port=7534, java.vm.specification.name=Java Virtual Machine Specification, catalina.home=C:\Users\vvarm1\IdeaProjects\intelTrader\target\tomcat, java.vm.specification.version=1.7, sun.os.patch.level=Service Pack 1, sun.cpu.endian=little, java.io.tmpdir=C:\Users\vvarm1\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, server.loader=, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, java.ext.dirs=C:\Program Files\Java\jdk1.7.0_10\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=C:\Users\vvarm1\IdeaProjects\intelTrader, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding=UTF-8, hibernate.use_identifier_rollback=false, java.specification.version=1.7, hibernate.show_sql=true}
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Static SQL for entity: com.inteltrader.entity.Investment
 Version select: select INVESTMENT_ID from TRADER_DB.INVESTMENT where INVESTMENT_ID =?
 Snapshot select: select investment_.INVESTMENT_ID, investment_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_, investment_.currentPrice as currentP2_2_, investment_.quantity as quantity2_, investment_.INVESTMENT_SYMBOL as INVESTMENT4_2_ from TRADER_DB.INVESTMENT investment_ where investment_.INVESTMENT_ID=?
 Insert 0: insert into TRADER_DB.INVESTMENT (associatedPortfolio_PORTFOLIO_NAME, currentPrice, quantity, INVESTMENT_SYMBOL, INVESTMENT_ID) values (?, ?, ?, ?, ?)
 Update 0: update TRADER_DB.INVESTMENT set associatedPortfolio_PORTFOLIO_NAME=?, currentPrice=?, quantity=?, INVESTMENT_SYMBOL=? where INVESTMENT_ID=?
 Delete 0: delete from TRADER_DB.INVESTMENT where INVESTMENT_ID=?
 Identity insert: insert into TRADER_DB.INVESTMENT (associatedPortfolio_PORTFOLIO_NAME, currentPrice, quantity, INVESTMENT_SYMBOL) values (?, ?, ?, ?)
Static SQL for entity: com.inteltrader.entity.Instrument
 Version select: select SYMBOL_NAME from TRADER_DB.INSTRUMENT where SYMBOL_NAME =?
 Snapshot select: select instrument_.SYMBOL_NAME from TRADER_DB.INSTRUMENT instrument_ where instrument_.SYMBOL_NAME=?
 Insert 0: insert into TRADER_DB.INSTRUMENT (SYMBOL_NAME) values (?)
 Update 0: null
 Delete 0: delete from TRADER_DB.INSTRUMENT where SYMBOL_NAME=?
Static SQL for entity: com.inteltrader.entity.Portfolio
 Version select: select PORTFOLIO_NAME from TRADER_DB.PORTFOLIO where PORTFOLIO_NAME =?
 Snapshot select: select portfolio_.PORTFOLIO_NAME from TRADER_DB.PORTFOLIO portfolio_ where portfolio_.PORTFOLIO_NAME=?
 Insert 0: insert into TRADER_DB.PORTFOLIO (PORTFOLIO_NAME) values (?)
 Update 0: null
 Delete 0: delete from TRADER_DB.PORTFOLIO where PORTFOLIO_NAME=?
Static SQL for collection: com.inteltrader.entity.Instrument.priceList
 Row insert: insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
 Row update: update TRADER_DB.INSTRUMENT_PRICE set closePrice=?, highPrice=?, lastClosePrice=?, lowPrice=?, openPrice=?, priceId=?, timeStamp=?, totalTradedQuantity=? where SYMBOL_NAME=? and priceId=? and totalTradedQuantity=?
 Row delete: delete from TRADER_DB.INSTRUMENT_PRICE where SYMBOL_NAME=? and priceId=? and totalTradedQuantity=?
 One-shot delete: delete from TRADER_DB.INSTRUMENT_PRICE where SYMBOL_NAME=?
Static SQL for collection: com.inteltrader.entity.Investment.transactionsList
 Row insert: insert into TRADER_DB.INVESTMENT_TRANSACTION (INVESTMENT_ID, quantity, transactionId, transactionPrice) values (?, ?, ?, ?)
 Row update: update TRADER_DB.INVESTMENT_TRANSACTION set quantity=?, transactionId=?, transactionPrice=? where INVESTMENT_ID=? and quantity=? and transactionId=? and transactionPrice=?
 Row delete: delete from TRADER_DB.INVESTMENT_TRANSACTION where INVESTMENT_ID=? and quantity=? and transactionId=? and transactionPrice=?
 One-shot delete: delete from TRADER_DB.INVESTMENT_TRANSACTION where INVESTMENT_ID=?
Static SQL for collection: com.inteltrader.entity.Portfolio.investmentList
 Row insert: update TRADER_DB.INVESTMENT set associatedPortfolio_PORTFOLIO_NAME=? where INVESTMENT_ID=?
 Row delete: update TRADER_DB.INVESTMENT set associatedPortfolio_PORTFOLIO_NAME=null where associatedPortfolio_PORTFOLIO_NAME=? and INVESTMENT_ID=?
 One-shot delete: update TRADER_DB.INVESTMENT set associatedPortfolio_PORTFOLIO_NAME=null where associatedPortfolio_PORTFOLIO_NAME=?
Static select for entity com.inteltrader.entity.Instrument [NONE]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for entity com.inteltrader.entity.Instrument [READ]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for entity com.inteltrader.entity.Instrument [UPGRADE]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [UPGRADE_NOWAIT]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [FORCE]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [PESSIMISTIC_READ]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? lock in share mode
Static select for entity com.inteltrader.entity.Instrument [PESSIMISTIC_WRITE]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [PESSIMISTIC_FORCE_INCREMENT]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [OPTIMISTIC]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for entity com.inteltrader.entity.Instrument [OPTIMISTIC_FORCE_INCREMENT]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for action ACTION_MERGE on entity com.inteltrader.entity.Instrument: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for action ACTION_REFRESH on entity com.inteltrader.entity.Instrument: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for entity com.inteltrader.entity.Investment [NONE]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_1_, investment0_.currentPrice as currentP2_2_1_, investment0_.quantity as quantity2_1_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_1_, portfolio1_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.INVESTMENT investment0_ left outer join TRADER_DB.PORTFOLIO portfolio1_ on investment0_.associatedPortfolio_PORTFOLIO_NAME=portfolio1_.PORTFOLIO_NAME where investment0_.INVESTMENT_ID=?
Static select for entity com.inteltrader.entity.Investment [READ]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_1_, investment0_.currentPrice as currentP2_2_1_, investment0_.quantity as quantity2_1_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_1_, portfolio1_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.INVESTMENT investment0_ left outer join TRADER_DB.PORTFOLIO portfolio1_ on investment0_.associatedPortfolio_PORTFOLIO_NAME=portfolio1_.PORTFOLIO_NAME where investment0_.INVESTMENT_ID=?
Static select for entity com.inteltrader.entity.Investment [UPGRADE]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [UPGRADE_NOWAIT]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [FORCE]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [PESSIMISTIC_READ]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? lock in share mode
Static select for entity com.inteltrader.entity.Investment [PESSIMISTIC_WRITE]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [PESSIMISTIC_FORCE_INCREMENT]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [OPTIMISTIC]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=?
Static select for entity com.inteltrader.entity.Investment [OPTIMISTIC_FORCE_INCREMENT]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=?
Static select for action ACTION_MERGE on entity com.inteltrader.entity.Investment: select investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_1_, investment0_.currentPrice as currentP2_2_1_, investment0_.quantity as quantity2_1_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_1_, portfolio1_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.INVESTMENT investment0_ left outer join TRADER_DB.PORTFOLIO portfolio1_ on investment0_.associatedPortfolio_PORTFOLIO_NAME=portfolio1_.PORTFOLIO_NAME where investment0_.INVESTMENT_ID=?
Static select for action ACTION_REFRESH on entity com.inteltrader.entity.Investment: select investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_1_, investment0_.currentPrice as currentP2_2_1_, investment0_.quantity as quantity2_1_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_1_, portfolio1_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.INVESTMENT investment0_ left outer join TRADER_DB.PORTFOLIO portfolio1_ on investment0_.associatedPortfolio_PORTFOLIO_NAME=portfolio1_.PORTFOLIO_NAME where investment0_.INVESTMENT_ID=?
Static select for entity com.inteltrader.entity.Portfolio [NONE]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Static select for entity com.inteltrader.entity.Portfolio [READ]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Static select for entity com.inteltrader.entity.Portfolio [UPGRADE]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [UPGRADE_NOWAIT]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [FORCE]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [PESSIMISTIC_READ]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? lock in share mode
Static select for entity com.inteltrader.entity.Portfolio [PESSIMISTIC_WRITE]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [PESSIMISTIC_FORCE_INCREMENT]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [OPTIMISTIC]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=?
Static select for entity com.inteltrader.entity.Portfolio [OPTIMISTIC_FORCE_INCREMENT]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=?
Static select for action ACTION_MERGE on entity com.inteltrader.entity.Portfolio: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Static select for action ACTION_REFRESH on entity com.inteltrader.entity.Portfolio: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Static select for collection com.inteltrader.entity.Instrument.priceList: select pricelist0_.SYMBOL_NAME as SYMBOL1_0_0_, pricelist0_.closePrice as closePrice1_0_, pricelist0_.highPrice as highPrice1_0_, pricelist0_.lastClosePrice as lastClos4_1_0_, pricelist0_.lowPrice as lowPrice1_0_, pricelist0_.openPrice as openPrice1_0_, pricelist0_.priceId as priceId1_0_, pricelist0_.timeStamp as timeStamp1_0_, pricelist0_.totalTradedQuantity as totalTra9_1_0_ from TRADER_DB.INSTRUMENT_PRICE pricelist0_ where pricelist0_.SYMBOL_NAME=?
Static select for one-to-many com.inteltrader.entity.Portfolio.investmentList: select investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_1_, investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.associatedPortfolio_PORTFOLIO_NAME=?
Static select for collection com.inteltrader.entity.Investment.transactionsList: select transactio0_.INVESTMENT_ID as INVESTMENT1_2_0_, transactio0_.quantity as quantity3_0_, transactio0_.transactionId as transact3_3_0_, transactio0_.transactionPrice as transact4_3_0_ from TRADER_DB.INVESTMENT_TRANSACTION transactio0_ where transactio0_.INVESTMENT_ID=?
Registering SessionFactory: 138b78f4-7573-45a3-ba59-564fd750bbbe (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Instantiated session factory
HHH000228: Running hbm2ddl schema update
HHH000102: Fetching database metadata
HHH000396: Updating schema
Processing hbm.xml files
Process annotated classes
Processing fk mappings (*ToOne and JoinedSubclass)
Processing extends queue
Processing extends queue
Processing collection mappings
Processing native query and ResultSetMapping mappings
Processing association property references
Creating tables' unique integer identifiers
Processing foreign key constraints
Resolving reference to class: com.inteltrader.entity.Instrument
Resolving reference to class: com.inteltrader.entity.Portfolio
Resolving reference to class: com.inteltrader.entity.Investment
HHH000261: Table found: TRADER_DB.instrument
HHH000037: Columns: [symbol_name]
HHH000108: Foreign keys: []
HHH000126: Indexes: [primary]
HHH000261: Table found: TRADER_DB.instrument_price
HHH000037: Columns: [totaltradedquantity, timestamp, priceid, lastcloseprice, highprice, symbol_name, openprice, closeprice, lowprice]
HHH000108: Foreign keys: [fk3189a2d153ed548d]
HHH000126: Indexes: [fk3189a2d153ed548d]
HHH000261: Table found: TRADER_DB.investment
HHH000037: Columns: [investment_id, associatedportfolio_portfolio_name, currentprice, quantity, investment_symbol]
HHH000108: Foreign keys: [fk8fe41ed3c804d4f3]
HHH000126: Indexes: [fk8fe41ed3c804d4f3, primary]
HHH000261: Table found: TRADER_DB.investment_transaction
HHH000037: Columns: [transactionprice, investment_id, transactionid, quantity]
HHH000108: Foreign keys: [fka5863f52914590ae]
HHH000126: Indexes: [fka5863f52914590ae]
HHH000261: Table found: TRADER_DB.portfolio
HHH000037: Columns: [portfolio_name]
HHH000108: Foreign keys: []
HHH000126: Indexes: [primary]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
HHH000232: Schema update complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Statistics initialized [enabled=false]
Registering EntityManagerFactory: intelTrader 
HHH000436: Entity manager factory name (intelTrader) is already registered.  If entity manager will be clustered or passivated, specify a unique value for property 'hibernate.ejb.entitymanager_factory_name'
Finished creating instance of bean 'entityManagerFactory'
Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@582bf9cb: defining beans [org.springframework.context.annotation.internalAsyncAnnotationProcessor,org.springframework.context.annotation.internalScheduledAnnotationProcessor,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0,org.springframework.web.servlet.view.InternalResourceViewResolver#0,instrumentDao,portfolioDao,instrumentService,portfolioService,entityManagerFactory,transactionManager,instrument,investment,portfolio,instrumentServiceRest,portfolioServiceRest,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor]; parent: org.springframework.beans.factory.support.DefaultListableBeanFactory@590839ce
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Creating instance of bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0' to allow for resolving potential circular references
Creating instance of bean '(inner bean)'
Creating shared instance of singleton bean 'transactionManager'
Creating instance of bean 'transactionManager'
Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
Returning cached instance of singleton bean 'entityManagerFactory'
Invoking afterPropertiesSet() on bean with name 'transactionManager'
Finished creating instance of bean 'transactionManager'
Creating instance of bean '(inner bean)'
Finished creating instance of bean '(inner bean)'
Invoking afterPropertiesSet() on bean with name '(inner bean)'
Finished creating instance of bean '(inner bean)'
Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Creating shared instance of singleton bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Creating instance of bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Eagerly caching bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Creating shared instance of singleton bean 'instrumentDao'
Creating instance of bean 'instrumentDao'
Eagerly caching bean 'instrumentDao' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'instrumentDao'
Creating shared instance of singleton bean 'portfolioDao'
Creating instance of bean 'portfolioDao'
Eagerly caching bean 'portfolioDao' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'portfolioDao'
Creating shared instance of singleton bean 'instrumentService'
Creating instance of bean 'instrumentService'
Registered injected element on class [com.inteltrader.service.InstrumentServiceImpl]: PersistenceElement for javax.persistence.EntityManagerFactory com.inteltrader.service.InstrumentServiceImpl.entityManagerFactory
Registered injected element on class [com.inteltrader.service.InstrumentServiceImpl]: AutowiredFieldElement for private com.inteltrader.dao.IInstrumentDao com.inteltrader.service.InstrumentServiceImpl.instrumentDao
Registered injected element on class [com.inteltrader.service.InstrumentServiceImpl]: AutowiredFieldElement for private com.inteltrader.service.PortfolioService com.inteltrader.service.InstrumentServiceImpl.portfolioService
Eagerly caching bean 'instrumentService' to allow for resolving potential circular references
Processing injected method of bean 'instrumentService': PersistenceElement for javax.persistence.EntityManagerFactory com.inteltrader.service.InstrumentServiceImpl.entityManagerFactory
Returning cached instance of singleton bean 'entityManagerFactory'
Processing injected method of bean 'instrumentService': AutowiredFieldElement for private com.inteltrader.dao.IInstrumentDao com.inteltrader.service.InstrumentServiceImpl.instrumentDao
Returning cached instance of singleton bean 'instrumentDao'
Autowiring by type from bean name 'instrumentService' to bean named 'instrumentDao'
Processing injected method of bean 'instrumentService': AutowiredFieldElement for private com.inteltrader.service.PortfolioService com.inteltrader.service.InstrumentServiceImpl.portfolioService
Creating shared instance of singleton bean 'portfolioService'
Creating instance of bean 'portfolioService'
Registered injected element on class [com.inteltrader.service.PortfolioServiceImpl]: PersistenceElement for private javax.persistence.EntityManagerFactory com.inteltrader.service.PortfolioServiceImpl.entityManagerFactory
Registered injected element on class [com.inteltrader.service.PortfolioServiceImpl]: AutowiredFieldElement for private com.inteltrader.dao.IPortfolioDao com.inteltrader.service.PortfolioServiceImpl.portfolioDao
Eagerly caching bean 'portfolioService' to allow for resolving potential circular references
Processing injected method of bean 'portfolioService': PersistenceElement for private javax.persistence.EntityManagerFactory com.inteltrader.service.PortfolioServiceImpl.entityManagerFactory
Returning cached instance of singleton bean 'entityManagerFactory'
Processing injected method of bean 'portfolioService': AutowiredFieldElement for private com.inteltrader.dao.IPortfolioDao com.inteltrader.service.PortfolioServiceImpl.portfolioDao
Returning cached instance of singleton bean 'portfolioDao'
Autowiring by type from bean name 'portfolioService' to bean named 'portfolioDao'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'portfolioService'
Autowiring by type from bean name 'instrumentService' to bean named 'portfolioService'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'instrumentService'
Returning cached instance of singleton bean 'portfolioService'
Returning cached instance of singleton bean 'entityManagerFactory'
Returning cached instance of singleton bean 'transactionManager'
Creating shared instance of singleton bean 'instrument'
Creating instance of bean 'instrument'
Eagerly caching bean 'instrument' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'instrument'
Creating shared instance of singleton bean 'investment'
Creating instance of bean 'investment'
Eagerly caching bean 'investment' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'investment'
Creating shared instance of singleton bean 'portfolio'
Creating instance of bean 'portfolio'
Eagerly caching bean 'portfolio' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'portfolio'
Creating shared instance of singleton bean 'instrumentServiceRest'
Creating instance of bean 'instrumentServiceRest'
Registered injected element on class [com.inteltrader.rest.InstrumentServiceRest]: AutowiredFieldElement for private com.inteltrader.service.InstrumentService com.inteltrader.rest.InstrumentServiceRest.instrumentService
Eagerly caching bean 'instrumentServiceRest' to allow for resolving potential circular references
Processing injected method of bean 'instrumentServiceRest': AutowiredFieldElement for private com.inteltrader.service.InstrumentService com.inteltrader.rest.InstrumentServiceRest.instrumentService
Returning cached instance of singleton bean 'instrumentService'
Autowiring by type from bean name 'instrumentServiceRest' to bean named 'instrumentService'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'instrumentServiceRest'
Creating shared instance of singleton bean 'portfolioServiceRest'
Creating instance of bean 'portfolioServiceRest'
Registered injected element on class [com.inteltrader.rest.PortfolioServiceRest]: AutowiredFieldElement for private com.inteltrader.service.PortfolioService com.inteltrader.rest.PortfolioServiceRest.portfolioService
Eagerly caching bean 'portfolioServiceRest' to allow for resolving potential circular references
Processing injected method of bean 'portfolioServiceRest': AutowiredFieldElement for private com.inteltrader.service.PortfolioService com.inteltrader.rest.PortfolioServiceRest.portfolioService
Returning cached instance of singleton bean 'portfolioService'
Autowiring by type from bean name 'portfolioServiceRest' to bean named 'portfolioService'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'portfolioServiceRest'
Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@7c02bcaa]
Returning cached instance of singleton bean 'lifecycleProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Unable to locate MultipartResolver with name 'multipartResolver': no multipart request handling provided
Creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Unable to locate LocaleResolver with name 'localeResolver': using default [org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver@47e242d4]
Creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Unable to locate ThemeResolver with name 'themeResolver': using default [org.springframework.web.servlet.theme.FixedThemeResolver@54768cc4]
Creating instance of bean 'org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping'
Looking for URL mappings in application context: WebApplicationContext for namespace 'appServlet-servlet': startup date [Thu Apr 18 17:30:41 IST 2013]; parent: Root WebApplicationContext
Rejected bean name 'org.springframework.context.annotation.internalAsyncAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalScheduledAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalRequiredAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalCommonAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.aop.config.internalAutoProxyCreator': no URL paths identified
Rejected bean name 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0': no URL paths identified
Rejected bean name 'org.springframework.web.servlet.view.InternalResourceViewResolver#0': no URL paths identified
Rejected bean name 'instrumentDao': no URL paths identified
Rejected bean name 'portfolioDao': no URL paths identified
Rejected bean name 'instrumentService': no URL paths identified
Rejected bean name 'portfolioService': no URL paths identified
Rejected bean name 'entityManagerFactory': no URL paths identified
Rejected bean name 'transactionManager': no URL paths identified
Rejected bean name 'instrument': no URL paths identified
Rejected bean name 'investment': no URL paths identified
Rejected bean name 'portfolio': no URL paths identified
Rejected bean name 'instrumentServiceRest': no URL paths identified
Rejected bean name 'portfolioServiceRest': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor': no URL paths identified
Rejected bean name 'environment': no URL paths identified
Rejected bean name 'systemProperties': no URL paths identified
Rejected bean name 'systemEnvironment': no URL paths identified
Rejected bean name 'servletConfig': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry': no URL paths identified
Rejected bean name 'messageSource': no URL paths identified
Rejected bean name 'applicationEventMulticaster': no URL paths identified
Rejected bean name 'lifecycleProcessor': no URL paths identified
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping'
Creating instance of bean 'org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping'
Looking for URL mappings in application context: WebApplicationContext for namespace 'appServlet-servlet': startup date [Thu Apr 18 17:30:41 IST 2013]; parent: Root WebApplicationContext
Rejected bean name 'org.springframework.context.annotation.internalAsyncAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalScheduledAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalRequiredAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalCommonAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.aop.config.internalAutoProxyCreator': no URL paths identified
Rejected bean name 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0': no URL paths identified
Rejected bean name 'org.springframework.web.servlet.view.InternalResourceViewResolver#0': no URL paths identified
Rejected bean name 'instrumentDao': no URL paths identified
Rejected bean name 'portfolioDao': no URL paths identified
Rejected bean name 'instrumentService': no URL paths identified
Rejected bean name 'portfolioService': no URL paths identified
Rejected bean name 'entityManagerFactory': no URL paths identified
Rejected bean name 'transactionManager': no URL paths identified
Rejected bean name 'instrument': no URL paths identified
Rejected bean name 'investment': no URL paths identified
Rejected bean name 'portfolio': no URL paths identified
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/create/{symbol}] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/create/{symbol}.*] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/create/{symbol}/] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/update/{portfolioName}] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/update/{portfolioName}.*] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/update/{portfolioName}/] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/load/{symbol}] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/load/{symbol}.*] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/load/{symbol}/] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/create/{portfolioName}] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/create/{portfolioName}.*] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/create/{portfolioName}/] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/addInvestment/{portfolioName}/{symbolName}] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/addInvestment/{portfolioName}/{symbolName}.*] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/addInvestment/{portfolioName}/{symbolName}/] onto handler 'portfolioServiceRest'
Rejected bean name 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor': no URL paths identified
Rejected bean name 'environment': no URL paths identified
Rejected bean name 'systemProperties': no URL paths identified
Rejected bean name 'systemEnvironment': no URL paths identified
Rejected bean name 'servletConfig': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry': no URL paths identified
Rejected bean name 'messageSource': no URL paths identified
Rejected bean name 'applicationEventMulticaster': no URL paths identified
Rejected bean name 'lifecycleProcessor': no URL paths identified
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping'
No HandlerMappings found in servlet 'appServlet': using default
Creating instance of bean 'org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter'
Creating instance of bean 'org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter'
Creating instance of bean 'org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter'
No HandlerAdapters found in servlet 'appServlet': using default
Creating instance of bean 'org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerExceptionResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerExceptionResolver'
Creating instance of bean 'org.springframework.web.servlet.mvc.annotation.ResponseStatusExceptionResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.annotation.ResponseStatusExceptionResolver'
Creating instance of bean 'org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver'
No HandlerExceptionResolvers found in servlet 'appServlet': using default
Creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Unable to locate RequestToViewNameTranslator with name 'viewNameTranslator': using default [org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@3bc28c53]
Returning cached instance of singleton bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Returning cached instance of singleton bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Unable to locate FlashMapManager with name 'flashMapManager': using default [org.springframework.web.servlet.support.SessionFlashMapManager@5dd2ad30]
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Searching for key 'spring.liveBeansView.mbeanDomain' in [servletConfigInitParams]
Searching for key 'spring.liveBeansView.mbeanDomain' in [servletContextInitParams]
Searching for key 'spring.liveBeansView.mbeanDomain' in [jndiProperties]
Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain]
Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException: Name [spring.liveBeansView.mbeanDomain] is not bound in this Context. Unable to find [spring.liveBeansView.mbeanDomain].
Looking up JNDI object with name [spring.liveBeansView.mbeanDomain]
JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: Name [spring.liveBeansView.mbeanDomain] is not bound in this Context. Unable to find [spring.liveBeansView.mbeanDomain].. Returning null.
Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
Published WebApplicationContext of servlet 'appServlet' as ServletContext attribute with name [org.springframework.web.servlet.FrameworkServlet.CONTEXT.appServlet]
FrameworkServlet 'appServlet': initialization completed in 522 ms
Servlet 'appServlet' configured successfully
DispatcherServlet with name 'appServlet' processing GET request for [/portfolio/addInvestment/myFirstTime/CIPLA]
Matching patterns for request [/portfolio/addInvestment/myFirstTime/CIPLA] are [/portfolio/addInvestment/{portfolioName}/{symbolName}]
URI Template variables for request [/portfolio/addInvestment/myFirstTime/CIPLA] are {portfolioName=myFirstTime, symbolName=CIPLA}
Mapping [/portfolio/addInvestment/myFirstTime/CIPLA] to HandlerExecutionChain with handler [com.inteltrader.rest.PortfolioServiceRest@63f51c5e] and 2 interceptors
Last-Modified value for [/portfolio/addInvestment/myFirstTime/CIPLA] is: -1
Invoking request handler method: public org.springframework.http.ResponseEntity com.inteltrader.rest.PortfolioServiceRest.addInvestment(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
begin
Obtaining JDBC connection
Obtained JDBC connection
initial autocommit status: true
disabling autocommit
Loading entity: [com.inteltrader.entity.Portfolio#myFirstTime]
select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Result set row: 0
Result row: EntityKey[com.inteltrader.entity.Investment#1], EntityKey[com.inteltrader.entity.Portfolio#myFirstTime]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Resolving associations for [com.inteltrader.entity.Investment#1]
Done materializing entity [com.inteltrader.entity.Investment#1]
Resolving associations for [com.inteltrader.entity.Portfolio#myFirstTime]
Done materializing entity [com.inteltrader.entity.Portfolio#myFirstTime]
1 collections were found in result set for role: com.inteltrader.entity.Portfolio.investmentList
Collection fully initialized: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
1 collections initialized for role: com.inteltrader.entity.Portfolio.investmentList
Done entity load
Loading collection: [com.inteltrader.entity.Investment.transactionsList#1]
select transactio0_.INVESTMENT_ID as INVESTMENT1_2_0_, transactio0_.quantity as quantity3_0_, transactio0_.transactionId as transact3_3_0_, transactio0_.transactionPrice as transact4_3_0_ from TRADER_DB.INVESTMENT_TRANSACTION transactio0_ where transactio0_.INVESTMENT_ID=?
Result set contains (possibly empty) collection: [com.inteltrader.entity.Investment.transactionsList#1]
1 collections were found in result set for role: com.inteltrader.entity.Investment.transactionsList
Collection fully initialized: [com.inteltrader.entity.Investment.transactionsList#1]
1 collections initialized for role: com.inteltrader.entity.Investment.transactionsList
Done loading collection
Mark transaction for rollback
rolling back
rolled JDBC Connection
re-enabling autocommit
Resolving exception from handler [com.inteltrader.rest.PortfolioServiceRest@63f51c5e]: javax.persistence.RollbackException: Transaction marked as rollbackOnly
Resolving exception from handler [com.inteltrader.rest.PortfolioServiceRest@63f51c5e]: javax.persistence.RollbackException: Transaction marked as rollbackOnly
Resolving exception from handler [com.inteltrader.rest.PortfolioServiceRest@63f51c5e]: javax.persistence.RollbackException: Transaction marked as rollbackOnly
Could not complete request
javax.persistence.RollbackException: Transaction marked as rollbackOnly
	at org.hibernate.ejb.TransactionImpl.commit(TransactionImpl.java:72)
	at com.inteltrader.service.PortfolioServiceImpl.addToPortfolio(PortfolioServiceImpl.java:68)
	at com.inteltrader.rest.PortfolioServiceRest.addInvestment(PortfolioServiceRest.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.springframework.web.bind.annotation.support.HandlerMethodInvoker.invokeHandlerMethod(HandlerMethodInvoker.java:176)
	at org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter.invokeHandlerMethod(AnnotationMethodHandlerAdapter.java:440)
	at org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter.handle(AnnotationMethodHandlerAdapter.java:428)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:925)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:856)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:920)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:816)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:621)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:801)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:722)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:305)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:222)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:123)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:472)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:168)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:99)
	at org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:929)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:118)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:407)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1002)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:585)
	at org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:310)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)
	at java.lang.Thread.run(Thread.java:722)
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Initializing servlet 'appServlet'
Initializing new StandardServletEnvironment
Adding [servletConfigInitParams] PropertySource with lowest search precedence
Adding [servletContextInitParams] PropertySource with lowest search precedence
Adding [jndiProperties] PropertySource with lowest search precedence
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment]
FrameworkServlet 'appServlet': initialization started
Servlet with name 'appServlet' will try to create custom WebApplicationContext context of class 'org.springframework.web.context.support.XmlWebApplicationContext', using parent context [Root WebApplicationContext: startup date [Thu Apr 18 17:32:24 IST 2013]; root of context hierarchy]
Searching for key 'spring.profiles.active' in [servletConfigInitParams]
Searching for key 'spring.profiles.active' in [servletContextInitParams]
Searching for key 'spring.profiles.active' in [jndiProperties]
Looking up JNDI object with name [java:comp/env/spring.profiles.active]
Converted JNDI name [java:comp/env/spring.profiles.active] not found - trying original name [spring.profiles.active]. javax.naming.NameNotFoundException: Name [spring.profiles.active] is not bound in this Context. Unable to find [spring.profiles.active].
Looking up JNDI object with name [spring.profiles.active]
JNDI lookup for name [spring.profiles.active] threw NamingException with message: Name [spring.profiles.active] is not bound in this Context. Unable to find [spring.profiles.active].. Returning null.
Searching for key 'spring.profiles.active' in [systemProperties]
Searching for key 'spring.profiles.active' in [systemEnvironment]
Could not find key 'spring.profiles.active' in any property source. Returning [null]
Searching for key 'spring.profiles.default' in [servletConfigInitParams]
Searching for key 'spring.profiles.default' in [servletContextInitParams]
Searching for key 'spring.profiles.default' in [jndiProperties]
Looking up JNDI object with name [java:comp/env/spring.profiles.default]
Converted JNDI name [java:comp/env/spring.profiles.default] not found - trying original name [spring.profiles.default]. javax.naming.NameNotFoundException: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].
Looking up JNDI object with name [spring.profiles.default]
JNDI lookup for name [spring.profiles.default] threw NamingException with message: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].. Returning null.
Searching for key 'spring.profiles.default' in [systemProperties]
Searching for key 'spring.profiles.default' in [systemEnvironment]
Could not find key 'spring.profiles.default' in any property source. Returning [null]
Searching for key 'spring.profiles.default' in [servletConfigInitParams]
Searching for key 'spring.profiles.default' in [servletContextInitParams]
Searching for key 'spring.profiles.default' in [jndiProperties]
Looking up JNDI object with name [java:comp/env/spring.profiles.default]
Converted JNDI name [java:comp/env/spring.profiles.default] not found - trying original name [spring.profiles.default]. javax.naming.NameNotFoundException: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].
Looking up JNDI object with name [spring.profiles.default]
JNDI lookup for name [spring.profiles.default] threw NamingException with message: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].. Returning null.
Searching for key 'spring.profiles.default' in [systemProperties]
Searching for key 'spring.profiles.default' in [systemEnvironment]
Could not find key 'spring.profiles.default' in any property source. Returning [null]
Replacing [servletContextInitParams] PropertySource with [servletContextInitParams]
Replacing [servletConfigInitParams] PropertySource with [servletConfigInitParams]
Refreshing WebApplicationContext for namespace 'appServlet-servlet': startup date [Thu Apr 18 17:32:26 IST 2013]; parent: Root WebApplicationContext
Initializing new StandardEnvironment
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
Initializing new StandardEnvironment
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
Loading schema mappings from [META-INF/spring.schemas]
Loaded schema mappings: {http://www.springframework.org/schema/data/jpa/spring-jpa-1.2.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.2.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.1.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.1.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.5.xsd=org/springframework/data/repository/config/spring-repository-1.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.0.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.3.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.4.xsd=org/springframework/data/repository/config/spring-repository-1.4.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.3.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/data/repository/spring-repository.xsd=org/springframework/data/repository/config/spring-repository-1.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.0.xsd=org/springframework/data/repository/config/spring-repository-1.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.1.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.1.xsd
Found XML schema [http://www.springframework.org/schema/task/spring-task-3.0.xsd] in classpath: org/springframework/scheduling/config/spring-task-3.0.xsd
Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd
Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd
Found XML schema [http://www.springframework.org/schema/tx/spring-tx-3.1.xsd] in classpath: org/springframework/transaction/config/spring-tx-3.1.xsd
Loading bean definitions
Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/data/repository=org.springframework.data.repository.config.RepositoryNameSpaceHandler, http://www.springframework.org/schema/data/jpa=org.springframework.data.jpa.repository.config.JpaRepositoryNameSpaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
Neither XML 'id' nor 'name' specified - using generated bean name [org.springframework.web.servlet.view.InternalResourceViewResolver#0]
Neither XML 'id' nor 'name' specified - using generated bean name [org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver#6a9dd6a4]
Initializing new StandardEnvironment
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
Looking for matching resources in directory tree [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Resolved location pattern [classpath*:com/inteltrader/**/*.class] to resources [file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\Advice.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\FIFOList.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\InstrumentVo.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\Strategies.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\Strategy.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\StrategyMACD.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao\IInstrumentDao.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao\InstrumentDao.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao\IPortfolioDao.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao\PortfolioDao.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Instrument.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Investment.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Portfolio.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Price.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Transactions.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest\InstrumentServiceRest.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest\PortfolioServiceRest.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\AnalyserService.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\CronService.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\InstrumentService.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\InstrumentServiceImpl.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\PortfolioService.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\PortfolioServiceImpl.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util\DownloadZip.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util\ExtractZipFile.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util\ReadPriceCsv.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util\RestCodes.class]]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Instrument.class]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Investment.class]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Portfolio.class]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest\InstrumentServiceRest.class]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest\PortfolioServiceRest.class]
Loaded 21 bean definitions from location pattern [/WEB-INF/applicationContext.xml]
Bean factory for WebApplicationContext for namespace 'appServlet-servlet': org.springframework.beans.factory.support.DefaultListableBeanFactory@2076dfab: defining beans [org.springframework.context.annotation.internalAsyncAnnotationProcessor,org.springframework.context.annotation.internalScheduledAnnotationProcessor,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0,org.springframework.web.servlet.view.InternalResourceViewResolver#0,instrumentDao,portfolioDao,instrumentService,portfolioService,entityManagerFactory,transactionManager,instrument,investment,portfolio,instrumentServiceRest,portfolioServiceRest]; parent: org.springframework.beans.factory.support.DefaultListableBeanFactory@4d61d293
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@799723cb]
Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@31af22ca]
Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.DelegatingThemeSource@61151541]
Creating shared instance of singleton bean 'entityManagerFactory'
Creating instance of bean 'entityManagerFactory'
Eagerly caching bean 'entityManagerFactory' to allow for resolving potential circular references
Creating instance of bean 'org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver#6a9dd6a4'
Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Creating instance of bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0' to allow for resolving potential circular references
Creating instance of bean '(inner bean)'
Creating shared instance of singleton bean 'transactionManager'
Creating instance of bean 'transactionManager'
Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
Returning eagerly cached instance of singleton bean 'entityManagerFactory' that is not fully initialized yet - a consequence of a circular reference
Ignoring currently created advisor 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0': Error creating bean with name 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0': Cannot create inner bean '(inner bean)' of type [org.springframework.transaction.interceptor.TransactionInterceptor] while setting bean property 'transactionInterceptor'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)': Cannot resolve reference to bean 'transactionManager' while setting bean property 'transactionManager'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'transactionManager' defined in ServletContext resource [/WEB-INF/applicationContext.xml]: Cannot resolve reference to bean 'entityManagerFactory' while setting bean property 'entityManagerFactory'; nested exception is org.springframework.beans.factory.BeanCurrentlyInCreationException: Error creating bean with name 'entityManagerFactory': FactoryBean which is currently in creation returned null from getObject
Finished creating instance of bean 'org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver#6a9dd6a4'
Invoking afterPropertiesSet() on bean with name 'entityManagerFactory'
Building JPA container EntityManagerFactory for persistence unit 'intelTrader'
Adding type registration boolean -> org.hibernate.type.BooleanType@3f2f5317
Adding type registration boolean -> org.hibernate.type.BooleanType@3f2f5317
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3f2f5317
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4b9530ed
Adding type registration true_false -> org.hibernate.type.TrueFalseType@103560e1
Adding type registration yes_no -> org.hibernate.type.YesNoType@305d52e
Adding type registration byte -> org.hibernate.type.ByteType@4ec58c66
Adding type registration byte -> org.hibernate.type.ByteType@4ec58c66
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4ec58c66
Adding type registration character -> org.hibernate.type.CharacterType@2101f023
Adding type registration char -> org.hibernate.type.CharacterType@2101f023
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2101f023
Adding type registration short -> org.hibernate.type.ShortType@550002cd
Adding type registration short -> org.hibernate.type.ShortType@550002cd
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@550002cd
Adding type registration integer -> org.hibernate.type.IntegerType@cf1f1ae
Adding type registration int -> org.hibernate.type.IntegerType@cf1f1ae
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@cf1f1ae
Adding type registration long -> org.hibernate.type.LongType@2298ca79
Adding type registration long -> org.hibernate.type.LongType@2298ca79
Adding type registration java.lang.Long -> org.hibernate.type.LongType@2298ca79
Adding type registration float -> org.hibernate.type.FloatType@2a5c0ab8
Adding type registration float -> org.hibernate.type.FloatType@2a5c0ab8
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2a5c0ab8
Adding type registration double -> org.hibernate.type.DoubleType@7e47ced2
Adding type registration double -> org.hibernate.type.DoubleType@7e47ced2
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7e47ced2
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7bedccdd
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7bedccdd
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@69292550
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@69292550
Adding type registration string -> org.hibernate.type.StringType@6ffb8048
Adding type registration java.lang.String -> org.hibernate.type.StringType@6ffb8048
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@33c4ea91
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@22c39ba
Adding type registration url -> org.hibernate.type.UrlType@32b45786
Adding type registration java.net.URL -> org.hibernate.type.UrlType@32b45786
Adding type registration date -> org.hibernate.type.DateType@568fc348
Adding type registration java.sql.Date -> org.hibernate.type.DateType@568fc348
Adding type registration time -> org.hibernate.type.TimeType@7d94d0e7
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7d94d0e7
Adding type registration timestamp -> org.hibernate.type.TimestampType@55dfd2b4
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@55dfd2b4
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@55dfd2b4
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4474b94c
Adding type registration calendar -> org.hibernate.type.CalendarType@1ccc187
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1ccc187
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1ccc187
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4ff0678c
Adding type registration locale -> org.hibernate.type.LocaleType@1d68c8e7
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1d68c8e7
Adding type registration currency -> org.hibernate.type.CurrencyType@513a6c34
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@513a6c34
Adding type registration timezone -> org.hibernate.type.TimeZoneType@25d496c7
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@25d496c7
Adding type registration class -> org.hibernate.type.ClassType@10bf7fed
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@10bf7fed
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@49ef527d
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@49ef527d
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2f9a5d31
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@2f53db06
Adding type registration binary -> org.hibernate.type.BinaryType@5b62cd3d
Adding type registration byte[] -> org.hibernate.type.BinaryType@5b62cd3d
Adding type registration [B -> org.hibernate.type.BinaryType@5b62cd3d
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6809cf9d
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6809cf9d
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6809cf9d
Adding type registration image -> org.hibernate.type.ImageType@4f04554e
Adding type registration characters -> org.hibernate.type.CharArrayType@7a1a43c0
Adding type registration char[] -> org.hibernate.type.CharArrayType@7a1a43c0
Adding type registration [C -> org.hibernate.type.CharArrayType@7a1a43c0
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@69d47f66
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@69d47f66
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@69d47f66
Adding type registration text -> org.hibernate.type.TextType@112b13f1
Adding type registration ntext -> org.hibernate.type.NTextType@33b4cfcc
Adding type registration blob -> org.hibernate.type.BlobType@6a60a669
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6a60a669
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@12cf3a3c
Adding type registration clob -> org.hibernate.type.ClobType@6997c55
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6997c55
Adding type registration nclob -> org.hibernate.type.NClobType@33657f5e
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@33657f5e
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1bf6c1f0
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5c6ff75
Adding type registration serializable -> org.hibernate.type.SerializableType@7be8cc67
Adding type registration object -> org.hibernate.type.ObjectType@f2d9ce9
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@f2d9ce9
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2f269032
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@cc4dacd
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4ff8cf47
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@57f06755
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@68102a8d
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7d59c45a
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@106a3101
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2bb74112
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Processing PersistenceUnitInfo [
	name: intelTrader
	persistence provider classname: org.hibernate.ejb.HibernatePersistence
	classloader: WebappClassLoader
  context: 
  delegate: false
  repositories:
    /WEB-INF/classes/
----------> Parent Classloader:
ClassRealm[plugin>org.apache.tomcat.maven:tomcat7-maven-plugin:2.0, parent: sun.misc.Launcher$AppClassLoader@1875303f]

	Temporary classloader: org.springframework.instrument.classloading.SimpleThrowawayClassLoader@c111b2a
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/vvarm1/IdeaProjects/intelTrader/src/main/webapp/WEB-INF/classes
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.inteltrader.entity.Instrument
		com.inteltrader.entity.Portfolio
		com.inteltrader.entity.Investment]
	Mapping files names []
	Properties [
		hibernate.connection.username: root
		hibernate.connection.password: root
		hibernate.dialect: org.hibernate.dialect.MySQLDialect
		hibernate.c3p0.min_size: 10
		hibernate.connection.url: jdbc:mysql://localhost:3306/TRADER_DB
		hibernate.show_sql: true
		hibernate.connection.driver_class: com.mysql.jdbc.Driver
		hibernate.hbm2ddl.auto: update]
Detect class: true; detect hbm: true
Detect class: true; detect hbm: true
Searching mapped entities in jar/par: file:/C:/Users/vvarm1/IdeaProjects/intelTrader/src/main/webapp/WEB-INF/classes
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.ejb.event.JpaIntegrator].
No JNDI name configured for binding Ejb3Configuration
Preparing to build session factory with filters : {}
Processing hbm.xml files
Process annotated classes
Binding entity from annotated class: com.inteltrader.entity.Instrument
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Instrument
Bind entity com.inteltrader.entity.Instrument on table INSTRUMENT
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=SYMBOL_NAME, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property symbolName with lazy=false
building SimpleValue for symbolName
Building property symbolName
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=priceList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=priceList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=priceList_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='priceList_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='SYMBOL_NAME', referencedColumn='', mappedBy=''}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Collection role: com.inteltrader.entity.Instrument.priceList
Building property priceList
Binding entity from annotated class: com.inteltrader.entity.Portfolio
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Portfolio
Bind entity com.inteltrader.entity.Portfolio on table PORTFOLIO
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=PORTFOLIO_NAME, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property portfolioName with lazy=false
building SimpleValue for portfolioName
Building property portfolioName
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='associatedPortfolio'}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=investmentList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=element, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=investmentList_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='investmentList_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='associatedPortfolio'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='associatedPortfolio'}
Collection role: com.inteltrader.entity.Portfolio.investmentList
Building property investmentList
Binding entity from annotated class: com.inteltrader.entity.Investment
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Investment
Bind entity com.inteltrader.entity.Investment on table INVESTMENT
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=INVESTMENT_ID, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property investmentId with lazy=false
building SimpleValue for investmentId
Building property investmentId
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=associatedPortfolio, insertable=true, updatable=true, unique=false}
Building property associatedPortfolio
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=currentPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property currentPrice with lazy=false
building SimpleValue for currentPrice
Building property currentPrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=quantity, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property quantity with lazy=false
building SimpleValue for quantity
Building property quantity
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=INVESTMENT_SYMBOL, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property symbolName with lazy=false
building SimpleValue for symbolName
Building property symbolName
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=transactionsList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=transactionsList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=transactionsList_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='transactionsList_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='INVESTMENT_ID', referencedColumn='', mappedBy=''}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Collection role: com.inteltrader.entity.Investment.transactionsList
Building property transactionsList
Setting SimpleValue typeName for symbolName
Setting SimpleValue typeName for portfolioName
Setting SimpleValue typeName for investmentId
Setting SimpleValue typeName for currentPrice
Setting SimpleValue typeName for quantity
Setting SimpleValue typeName for symbolName
Processing fk mappings (*ToOne and JoinedSubclass)
Processing extends queue
Processing extends queue
Processing collection mappings
Second pass for collection: com.inteltrader.entity.Investment.transactionsList
Binding a collection of element: com.inteltrader.entity.Investment.transactionsList
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT_TRANSACTION), mappingColumn=quantity, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property quantity with lazy=false
building SimpleValue for quantity
Setting SimpleValue typeName for quantity
Building property quantity
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT_TRANSACTION), mappingColumn=transactionId, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property transactionId with lazy=false
building SimpleValue for transactionId
Setting SimpleValue typeName for transactionId
Building property transactionId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT_TRANSACTION), mappingColumn=transactionPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property transactionPrice with lazy=false
building SimpleValue for transactionPrice
Setting SimpleValue typeName for transactionPrice
Building property transactionPrice
Mapped collection key: INVESTMENT_ID, element: quantity, transactionId, transactionPrice
Second pass for collection: com.inteltrader.entity.Instrument.priceList
Binding a collection of element: com.inteltrader.entity.Instrument.priceList
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=closePrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property closePrice with lazy=false
building SimpleValue for closePrice
Setting SimpleValue typeName for closePrice
Building property closePrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=highPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property highPrice with lazy=false
building SimpleValue for highPrice
Setting SimpleValue typeName for highPrice
Building property highPrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=lastClosePrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property lastClosePrice with lazy=false
building SimpleValue for lastClosePrice
Setting SimpleValue typeName for lastClosePrice
Building property lastClosePrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=lowPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property lowPrice with lazy=false
building SimpleValue for lowPrice
Setting SimpleValue typeName for lowPrice
Building property lowPrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=openPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property openPrice with lazy=false
building SimpleValue for openPrice
Setting SimpleValue typeName for openPrice
Building property openPrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=priceId, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property priceId with lazy=false
building SimpleValue for priceId
Setting SimpleValue typeName for priceId
Building property priceId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=timeStamp, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property timeStamp with lazy=false
building SimpleValue for timeStamp
Setting SimpleValue typeName for timeStamp
Building property timeStamp
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=totalTradedQuantity, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property totalTradedQuantity with lazy=false
building SimpleValue for totalTradedQuantity
Setting SimpleValue typeName for totalTradedQuantity
Building property totalTradedQuantity
Mapped collection key: SYMBOL_NAME, element: closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity
Second pass for collection: com.inteltrader.entity.Portfolio.investmentList
Binding a OneToMany: com.inteltrader.entity.Portfolio.investmentList through a foreign key
Mapping collection: com.inteltrader.entity.Portfolio.investmentList -> INVESTMENT
Retrieving property com.inteltrader.entity.Investment.associatedPortfolio
Mapped collection key: associatedPortfolio_PORTFOLIO_NAME, one-to-many: com.inteltrader.entity.Investment
Processing native query and ResultSetMapping mappings
Processing association property references
Creating tables' unique integer identifiers
Processing foreign key constraints
Resolving reference to class: com.inteltrader.entity.Instrument
Resolving reference to class: com.inteltrader.entity.Portfolio
Resolving reference to class: com.inteltrader.entity.Investment
HHH000022: c3p0 properties were encountered, but the org.hibernate.service.jdbc.connections.internal.C3P0ConnectionProvider provider class was not found on the classpath; these properties are going to be ignored.
HHH000402: Using Hibernate built-in connection pool (not for production use!)
HHH000115: Hibernate connection pool size: 20
HHH000006: Autocommit mode: true
HHH000401: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/TRADER_DB]
HHH000046: Connection properties: {user=root, password=root, autocommit=true, release_mode=auto}
Opening new JDBC connection
Created connection to: jdbc:mysql://localhost:3306/TRADER_DB, Isolation Level: 4
Database ->
       name : MySQL
    version : 5.6.10-log
      major : 5
      minor : 6
Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.9 ( Revision: ${svn.Revision} )
      major : 5
      minor : 1
JDBC version : 3.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: disabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
multi-tenancy strategy : NONE
Connection release mode: auto
HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
Maximum outer join fetch depth: 2
Default batch fetch size: 1
Generate SQL with comments: disabled
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
HHH000397: Using ASTQueryTranslatorFactory
Query language substitutions: {}
JPA-QL strict compliance: enabled
Second-level cache: enabled
Query cache: disabled
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
Optimize cache for minimal puts: disabled
Structured second-level cache entries: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Named query checking : enabled
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : : disabled
Building session factory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\vvarm1\IdeaProjects\intelTrader\target\tomcat, hibernate.connection.url=jdbc:mysql://localhost:3306/TRADER_DB, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.ejb.discard_pc_on_close=false, catalina.useNaming=true, hibernate.transaction.flush_before_completion=false, os.name=Windows 7, sun.boot.class.path=C:\Program Files\Java\jdk1.7.0_10\jre\lib\resources.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\rt.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\jce.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.7.0_10\jre\classes, java.util.logging.config.file=C:\Users\vvarm1\IdeaProjects\intelTrader\target\tomcat\conf\logging.properties, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.7.0_10-b18, hibernate.connection.autocommit=true, hibernate.c3p0.min_size=10, user.name=vvarm1, shared.loader=, guice.disable.misplaced.annotation.check=true, tomcat.util.buf.StringCache.byte.enabled=true, javax.persistence.validation.mode=AUTO, hibernate.connection.release_mode=auto, idea.launcher.bin.path=C:\Program Files (x86)\JetBrains\IntelliJ IDEA Community Edition 12.0.4\bin, user.language=en, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, sun.boot.library.path=C:\Program Files\Java\jdk1.7.0_10\jre\bin, classworlds.conf=C:\Program Files\Apache Software Foundation\apache-maven-3.0.5\bin\m2.conf, java.version=1.7.0_10, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, user.timezone=Asia/Calcutta, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.7.0_10\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, file.encoding.pkg=sun.io, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.tomcat.,org.apache.jasper., file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=51.0, user.country=US, java.home=C:\Program Files\Java\jdk1.7.0_10\jre, java.vm.info=mixed mode, os.version=6.1, hibernate.transaction.factory_class=org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory, hibernate.query.jpaql_strict_compliance=true, path.separator=;, java.vm.version=23.6-b04, hibernate.connection.password=root, user.variant=, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.scan.DefaultJarScanner.jarsToSkip=bootstrap.jar,commons-daemon.jar,tomcat-juli.jar,annotations-api.jar,el-api.jar,jsp-api.jar,servlet-api.jar,catalina.jar,catalina-ant.jar,catalina-ha.jar,catalina-tribes.jar,jasper.jar,jasper-el.jar,ecj-*.jar,tomcat-api.jar,tomcat-util.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-jni.jar,tomcat-spdy.jar,tomcat-i18n-en.jar,tomcat-i18n-es.jar,tomcat-i18n-fr.jar,tomcat-i18n-ja.jar,tomcat-juli-adapters.jar,catalina-jmx-remote.jar,catalina-ws.jar,tomcat-jdbc.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,jstl.jar,geronimo-spec-jaxrpc*.jar,wsdl4j*.jar,ant.jar,ant-junit*.jar,aspectj*.jar,jmx.jar,h2*.jar,hibernate*.jar,httpclient*.jar,jmx-tools.jar,jta*.jar,log4j*.jar,mail*.jar,slf4j*.jar,xercesImpl.jar,xmlParserAPIs.jar,xml-apis.jar,access-bridge-64.jar,dnsns.jar,jaccess.jar,ldapsec.jar,localedata.jar,sunjce_provider.jar,sunmscapi.jar,sunpkcs11.jar,jhall.jar,tools.jar,sunec.jar,zipfs.jar,gnome-java-bridge.jar,pulse-java.jar,apple_provider.jar,AppleScriptEngine.jar,CoreAudio.jar,dns_sd.jar,j3daudio.jar,j3dcore.jar,j3dutils.jar,jai_core.jar,jai_codec.jar,mlibwrapper_jai.jar,MRJToolkit.jar,vecmath.jar,junit.jar,junit-*.jar,ant-launcher.jar, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.tomcat.,org.apache.jasper., user.script=, java.naming.factory.url.pkgs=org.apache.naming, user.home=C:\Users\vvarm1, org.apache.catalina.startup.ContextConfig.jarsToSkip=, java.specification.vendor=Oracle Corporation, hibernate.hbm2ddl.auto=update, java.library.path=C:\Program Files\Java\jdk1.7.0_10\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\JetBrains\IntelliJ IDEA Community Edition 12.0.4\bin\..\.\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\ThinkPad\Bluetooth Software\;C:\Program Files\ThinkPad\Bluetooth Software\syswow64;c:\Program Files\Intel\WiFi\bin\;c:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files (x86)\Git\cmd;C:\Users\vvarm1\Documents\play-2.0.3;C:\Program Files\Java\jdk1.7.0_10\bin;C:\Program Files\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\QuickTime\QTSystem\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Java\jre6\bin;C:\Program Files\Apache Software Foundation\apache-maven-3.0.5\bin;c:\program files (x86)\jetbrains\intellij idea community edition 12.0.4\jre\jre\bin;., java.vendor.url=http://java.oracle.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, org.apache.catalina.startup.TldConfig.jarsToSkip=, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, common.loader=${catalina.base}/lib,${catalina.base}/lib/*.jar,${catalina.home}/lib,${catalina.home}/lib/*.jar, maven.home=C:\Program Files\Apache Software Foundation\apache-maven-3.0.5, java.runtime.name=Java(TM) SE Runtime Environment, java.class.path=C:\Program Files\Apache Software Foundation\apache-maven-3.0.5\boot\plexus-classworlds-2.4.jar;C:\Program Files (x86)\JetBrains\IntelliJ IDEA Community Edition 12.0.4\lib\idea_rt.jar, sun.java.command=com.intellij.rt.execution.application.AppMain org.codehaus.classworlds.Launcher --no-plugin-registry --fail-fast --strict-checksums --update-snapshots org.apache.tomcat.maven:tomcat7-maven-plugin:2.0:run, hibernate.bytecode.use_reflection_optimizer=false, idea.launcher.port=7535, java.vm.specification.name=Java Virtual Machine Specification, catalina.home=C:\Users\vvarm1\IdeaProjects\intelTrader\target\tomcat, java.vm.specification.version=1.7, sun.os.patch.level=Service Pack 1, sun.cpu.endian=little, java.io.tmpdir=C:\Users\vvarm1\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, server.loader=, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, java.ext.dirs=C:\Program Files\Java\jdk1.7.0_10\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=C:\Users\vvarm1\IdeaProjects\intelTrader, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding=UTF-8, hibernate.use_identifier_rollback=false, java.specification.version=1.7, hibernate.show_sql=true}
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Static SQL for entity: com.inteltrader.entity.Investment
 Version select: select INVESTMENT_ID from TRADER_DB.INVESTMENT where INVESTMENT_ID =?
 Snapshot select: select investment_.INVESTMENT_ID, investment_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_, investment_.currentPrice as currentP2_2_, investment_.quantity as quantity2_, investment_.INVESTMENT_SYMBOL as INVESTMENT4_2_ from TRADER_DB.INVESTMENT investment_ where investment_.INVESTMENT_ID=?
 Insert 0: insert into TRADER_DB.INVESTMENT (associatedPortfolio_PORTFOLIO_NAME, currentPrice, quantity, INVESTMENT_SYMBOL, INVESTMENT_ID) values (?, ?, ?, ?, ?)
 Update 0: update TRADER_DB.INVESTMENT set associatedPortfolio_PORTFOLIO_NAME=?, currentPrice=?, quantity=?, INVESTMENT_SYMBOL=? where INVESTMENT_ID=?
 Delete 0: delete from TRADER_DB.INVESTMENT where INVESTMENT_ID=?
 Identity insert: insert into TRADER_DB.INVESTMENT (associatedPortfolio_PORTFOLIO_NAME, currentPrice, quantity, INVESTMENT_SYMBOL) values (?, ?, ?, ?)
Static SQL for entity: com.inteltrader.entity.Instrument
 Version select: select SYMBOL_NAME from TRADER_DB.INSTRUMENT where SYMBOL_NAME =?
 Snapshot select: select instrument_.SYMBOL_NAME from TRADER_DB.INSTRUMENT instrument_ where instrument_.SYMBOL_NAME=?
 Insert 0: insert into TRADER_DB.INSTRUMENT (SYMBOL_NAME) values (?)
 Update 0: null
 Delete 0: delete from TRADER_DB.INSTRUMENT where SYMBOL_NAME=?
Static SQL for entity: com.inteltrader.entity.Portfolio
 Version select: select PORTFOLIO_NAME from TRADER_DB.PORTFOLIO where PORTFOLIO_NAME =?
 Snapshot select: select portfolio_.PORTFOLIO_NAME from TRADER_DB.PORTFOLIO portfolio_ where portfolio_.PORTFOLIO_NAME=?
 Insert 0: insert into TRADER_DB.PORTFOLIO (PORTFOLIO_NAME) values (?)
 Update 0: null
 Delete 0: delete from TRADER_DB.PORTFOLIO where PORTFOLIO_NAME=?
Static SQL for collection: com.inteltrader.entity.Instrument.priceList
 Row insert: insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
 Row update: update TRADER_DB.INSTRUMENT_PRICE set closePrice=?, highPrice=?, lastClosePrice=?, lowPrice=?, openPrice=?, priceId=?, timeStamp=?, totalTradedQuantity=? where SYMBOL_NAME=? and priceId=? and totalTradedQuantity=?
 Row delete: delete from TRADER_DB.INSTRUMENT_PRICE where SYMBOL_NAME=? and priceId=? and totalTradedQuantity=?
 One-shot delete: delete from TRADER_DB.INSTRUMENT_PRICE where SYMBOL_NAME=?
Static SQL for collection: com.inteltrader.entity.Investment.transactionsList
 Row insert: insert into TRADER_DB.INVESTMENT_TRANSACTION (INVESTMENT_ID, quantity, transactionId, transactionPrice) values (?, ?, ?, ?)
 Row update: update TRADER_DB.INVESTMENT_TRANSACTION set quantity=?, transactionId=?, transactionPrice=? where INVESTMENT_ID=? and quantity=? and transactionId=? and transactionPrice=?
 Row delete: delete from TRADER_DB.INVESTMENT_TRANSACTION where INVESTMENT_ID=? and quantity=? and transactionId=? and transactionPrice=?
 One-shot delete: delete from TRADER_DB.INVESTMENT_TRANSACTION where INVESTMENT_ID=?
Static SQL for collection: com.inteltrader.entity.Portfolio.investmentList
 Row insert: update TRADER_DB.INVESTMENT set associatedPortfolio_PORTFOLIO_NAME=? where INVESTMENT_ID=?
 Row delete: update TRADER_DB.INVESTMENT set associatedPortfolio_PORTFOLIO_NAME=null where associatedPortfolio_PORTFOLIO_NAME=? and INVESTMENT_ID=?
 One-shot delete: update TRADER_DB.INVESTMENT set associatedPortfolio_PORTFOLIO_NAME=null where associatedPortfolio_PORTFOLIO_NAME=?
Static select for entity com.inteltrader.entity.Instrument [NONE]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for entity com.inteltrader.entity.Instrument [READ]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for entity com.inteltrader.entity.Instrument [UPGRADE]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [UPGRADE_NOWAIT]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [FORCE]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [PESSIMISTIC_READ]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? lock in share mode
Static select for entity com.inteltrader.entity.Instrument [PESSIMISTIC_WRITE]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [PESSIMISTIC_FORCE_INCREMENT]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [OPTIMISTIC]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for entity com.inteltrader.entity.Instrument [OPTIMISTIC_FORCE_INCREMENT]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for action ACTION_MERGE on entity com.inteltrader.entity.Instrument: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for action ACTION_REFRESH on entity com.inteltrader.entity.Instrument: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for entity com.inteltrader.entity.Investment [NONE]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_1_, investment0_.currentPrice as currentP2_2_1_, investment0_.quantity as quantity2_1_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_1_, portfolio1_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.INVESTMENT investment0_ left outer join TRADER_DB.PORTFOLIO portfolio1_ on investment0_.associatedPortfolio_PORTFOLIO_NAME=portfolio1_.PORTFOLIO_NAME where investment0_.INVESTMENT_ID=?
Static select for entity com.inteltrader.entity.Investment [READ]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_1_, investment0_.currentPrice as currentP2_2_1_, investment0_.quantity as quantity2_1_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_1_, portfolio1_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.INVESTMENT investment0_ left outer join TRADER_DB.PORTFOLIO portfolio1_ on investment0_.associatedPortfolio_PORTFOLIO_NAME=portfolio1_.PORTFOLIO_NAME where investment0_.INVESTMENT_ID=?
Static select for entity com.inteltrader.entity.Investment [UPGRADE]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [UPGRADE_NOWAIT]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [FORCE]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [PESSIMISTIC_READ]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? lock in share mode
Static select for entity com.inteltrader.entity.Investment [PESSIMISTIC_WRITE]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [PESSIMISTIC_FORCE_INCREMENT]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [OPTIMISTIC]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=?
Static select for entity com.inteltrader.entity.Investment [OPTIMISTIC_FORCE_INCREMENT]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=?
Static select for action ACTION_MERGE on entity com.inteltrader.entity.Investment: select investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_1_, investment0_.currentPrice as currentP2_2_1_, investment0_.quantity as quantity2_1_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_1_, portfolio1_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.INVESTMENT investment0_ left outer join TRADER_DB.PORTFOLIO portfolio1_ on investment0_.associatedPortfolio_PORTFOLIO_NAME=portfolio1_.PORTFOLIO_NAME where investment0_.INVESTMENT_ID=?
Static select for action ACTION_REFRESH on entity com.inteltrader.entity.Investment: select investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_1_, investment0_.currentPrice as currentP2_2_1_, investment0_.quantity as quantity2_1_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_1_, portfolio1_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.INVESTMENT investment0_ left outer join TRADER_DB.PORTFOLIO portfolio1_ on investment0_.associatedPortfolio_PORTFOLIO_NAME=portfolio1_.PORTFOLIO_NAME where investment0_.INVESTMENT_ID=?
Static select for entity com.inteltrader.entity.Portfolio [NONE]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Static select for entity com.inteltrader.entity.Portfolio [READ]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Static select for entity com.inteltrader.entity.Portfolio [UPGRADE]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [UPGRADE_NOWAIT]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [FORCE]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [PESSIMISTIC_READ]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? lock in share mode
Static select for entity com.inteltrader.entity.Portfolio [PESSIMISTIC_WRITE]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [PESSIMISTIC_FORCE_INCREMENT]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [OPTIMISTIC]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=?
Static select for entity com.inteltrader.entity.Portfolio [OPTIMISTIC_FORCE_INCREMENT]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=?
Static select for action ACTION_MERGE on entity com.inteltrader.entity.Portfolio: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Static select for action ACTION_REFRESH on entity com.inteltrader.entity.Portfolio: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Static select for collection com.inteltrader.entity.Instrument.priceList: select pricelist0_.SYMBOL_NAME as SYMBOL1_0_0_, pricelist0_.closePrice as closePrice1_0_, pricelist0_.highPrice as highPrice1_0_, pricelist0_.lastClosePrice as lastClos4_1_0_, pricelist0_.lowPrice as lowPrice1_0_, pricelist0_.openPrice as openPrice1_0_, pricelist0_.priceId as priceId1_0_, pricelist0_.timeStamp as timeStamp1_0_, pricelist0_.totalTradedQuantity as totalTra9_1_0_ from TRADER_DB.INSTRUMENT_PRICE pricelist0_ where pricelist0_.SYMBOL_NAME=?
Static select for one-to-many com.inteltrader.entity.Portfolio.investmentList: select investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_1_, investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.associatedPortfolio_PORTFOLIO_NAME=?
Static select for collection com.inteltrader.entity.Investment.transactionsList: select transactio0_.INVESTMENT_ID as INVESTMENT1_2_0_, transactio0_.quantity as quantity3_0_, transactio0_.transactionId as transact3_3_0_, transactio0_.transactionPrice as transact4_3_0_ from TRADER_DB.INVESTMENT_TRANSACTION transactio0_ where transactio0_.INVESTMENT_ID=?
Registering SessionFactory: bedff709-b43d-44de-8041-e050fb839a96 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Instantiated session factory
HHH000228: Running hbm2ddl schema update
HHH000102: Fetching database metadata
HHH000396: Updating schema
Processing hbm.xml files
Process annotated classes
Processing fk mappings (*ToOne and JoinedSubclass)
Processing extends queue
Processing extends queue
Processing collection mappings
Processing native query and ResultSetMapping mappings
Processing association property references
Creating tables' unique integer identifiers
Processing foreign key constraints
Resolving reference to class: com.inteltrader.entity.Instrument
Resolving reference to class: com.inteltrader.entity.Portfolio
Resolving reference to class: com.inteltrader.entity.Investment
HHH000261: Table found: TRADER_DB.instrument
HHH000037: Columns: [symbol_name]
HHH000108: Foreign keys: []
HHH000126: Indexes: [primary]
HHH000261: Table found: TRADER_DB.instrument_price
HHH000037: Columns: [totaltradedquantity, timestamp, priceid, lastcloseprice, highprice, symbol_name, openprice, closeprice, lowprice]
HHH000108: Foreign keys: [fk3189a2d153ed548d]
HHH000126: Indexes: [fk3189a2d153ed548d]
HHH000261: Table found: TRADER_DB.investment
HHH000037: Columns: [investment_id, associatedportfolio_portfolio_name, currentprice, quantity, investment_symbol]
HHH000108: Foreign keys: [fk8fe41ed3c804d4f3]
HHH000126: Indexes: [fk8fe41ed3c804d4f3, primary]
HHH000261: Table found: TRADER_DB.investment_transaction
HHH000037: Columns: [transactionprice, investment_id, transactionid, quantity]
HHH000108: Foreign keys: [fka5863f52914590ae]
HHH000126: Indexes: [fka5863f52914590ae]
HHH000261: Table found: TRADER_DB.portfolio
HHH000037: Columns: [portfolio_name]
HHH000108: Foreign keys: []
HHH000126: Indexes: [primary]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
HHH000232: Schema update complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Statistics initialized [enabled=false]
Registering EntityManagerFactory: intelTrader 
HHH000436: Entity manager factory name (intelTrader) is already registered.  If entity manager will be clustered or passivated, specify a unique value for property 'hibernate.ejb.entitymanager_factory_name'
Finished creating instance of bean 'entityManagerFactory'
Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@2076dfab: defining beans [org.springframework.context.annotation.internalAsyncAnnotationProcessor,org.springframework.context.annotation.internalScheduledAnnotationProcessor,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0,org.springframework.web.servlet.view.InternalResourceViewResolver#0,instrumentDao,portfolioDao,instrumentService,portfolioService,entityManagerFactory,transactionManager,instrument,investment,portfolio,instrumentServiceRest,portfolioServiceRest,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor]; parent: org.springframework.beans.factory.support.DefaultListableBeanFactory@4d61d293
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Creating instance of bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0' to allow for resolving potential circular references
Creating instance of bean '(inner bean)'
Creating shared instance of singleton bean 'transactionManager'
Creating instance of bean 'transactionManager'
Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
Returning cached instance of singleton bean 'entityManagerFactory'
Invoking afterPropertiesSet() on bean with name 'transactionManager'
Finished creating instance of bean 'transactionManager'
Creating instance of bean '(inner bean)'
Finished creating instance of bean '(inner bean)'
Invoking afterPropertiesSet() on bean with name '(inner bean)'
Finished creating instance of bean '(inner bean)'
Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Creating shared instance of singleton bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Creating instance of bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Eagerly caching bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Creating shared instance of singleton bean 'instrumentDao'
Creating instance of bean 'instrumentDao'
Eagerly caching bean 'instrumentDao' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'instrumentDao'
Creating shared instance of singleton bean 'portfolioDao'
Creating instance of bean 'portfolioDao'
Eagerly caching bean 'portfolioDao' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'portfolioDao'
Creating shared instance of singleton bean 'instrumentService'
Creating instance of bean 'instrumentService'
Registered injected element on class [com.inteltrader.service.InstrumentServiceImpl]: PersistenceElement for javax.persistence.EntityManagerFactory com.inteltrader.service.InstrumentServiceImpl.entityManagerFactory
Registered injected element on class [com.inteltrader.service.InstrumentServiceImpl]: AutowiredFieldElement for private com.inteltrader.dao.IInstrumentDao com.inteltrader.service.InstrumentServiceImpl.instrumentDao
Registered injected element on class [com.inteltrader.service.InstrumentServiceImpl]: AutowiredFieldElement for private com.inteltrader.service.PortfolioService com.inteltrader.service.InstrumentServiceImpl.portfolioService
Eagerly caching bean 'instrumentService' to allow for resolving potential circular references
Processing injected method of bean 'instrumentService': PersistenceElement for javax.persistence.EntityManagerFactory com.inteltrader.service.InstrumentServiceImpl.entityManagerFactory
Returning cached instance of singleton bean 'entityManagerFactory'
Processing injected method of bean 'instrumentService': AutowiredFieldElement for private com.inteltrader.dao.IInstrumentDao com.inteltrader.service.InstrumentServiceImpl.instrumentDao
Returning cached instance of singleton bean 'instrumentDao'
Autowiring by type from bean name 'instrumentService' to bean named 'instrumentDao'
Processing injected method of bean 'instrumentService': AutowiredFieldElement for private com.inteltrader.service.PortfolioService com.inteltrader.service.InstrumentServiceImpl.portfolioService
Creating shared instance of singleton bean 'portfolioService'
Creating instance of bean 'portfolioService'
Registered injected element on class [com.inteltrader.service.PortfolioServiceImpl]: PersistenceElement for private javax.persistence.EntityManagerFactory com.inteltrader.service.PortfolioServiceImpl.entityManagerFactory
Registered injected element on class [com.inteltrader.service.PortfolioServiceImpl]: AutowiredFieldElement for private com.inteltrader.dao.IPortfolioDao com.inteltrader.service.PortfolioServiceImpl.portfolioDao
Eagerly caching bean 'portfolioService' to allow for resolving potential circular references
Processing injected method of bean 'portfolioService': PersistenceElement for private javax.persistence.EntityManagerFactory com.inteltrader.service.PortfolioServiceImpl.entityManagerFactory
Returning cached instance of singleton bean 'entityManagerFactory'
Processing injected method of bean 'portfolioService': AutowiredFieldElement for private com.inteltrader.dao.IPortfolioDao com.inteltrader.service.PortfolioServiceImpl.portfolioDao
Returning cached instance of singleton bean 'portfolioDao'
Autowiring by type from bean name 'portfolioService' to bean named 'portfolioDao'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'portfolioService'
Autowiring by type from bean name 'instrumentService' to bean named 'portfolioService'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'instrumentService'
Returning cached instance of singleton bean 'portfolioService'
Returning cached instance of singleton bean 'entityManagerFactory'
Returning cached instance of singleton bean 'transactionManager'
Creating shared instance of singleton bean 'instrument'
Creating instance of bean 'instrument'
Eagerly caching bean 'instrument' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'instrument'
Creating shared instance of singleton bean 'investment'
Creating instance of bean 'investment'
Eagerly caching bean 'investment' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'investment'
Creating shared instance of singleton bean 'portfolio'
Creating instance of bean 'portfolio'
Eagerly caching bean 'portfolio' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'portfolio'
Creating shared instance of singleton bean 'instrumentServiceRest'
Creating instance of bean 'instrumentServiceRest'
Registered injected element on class [com.inteltrader.rest.InstrumentServiceRest]: AutowiredFieldElement for private com.inteltrader.service.InstrumentService com.inteltrader.rest.InstrumentServiceRest.instrumentService
Eagerly caching bean 'instrumentServiceRest' to allow for resolving potential circular references
Processing injected method of bean 'instrumentServiceRest': AutowiredFieldElement for private com.inteltrader.service.InstrumentService com.inteltrader.rest.InstrumentServiceRest.instrumentService
Returning cached instance of singleton bean 'instrumentService'
Autowiring by type from bean name 'instrumentServiceRest' to bean named 'instrumentService'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'instrumentServiceRest'
Creating shared instance of singleton bean 'portfolioServiceRest'
Creating instance of bean 'portfolioServiceRest'
Registered injected element on class [com.inteltrader.rest.PortfolioServiceRest]: AutowiredFieldElement for private com.inteltrader.service.PortfolioService com.inteltrader.rest.PortfolioServiceRest.portfolioService
Eagerly caching bean 'portfolioServiceRest' to allow for resolving potential circular references
Processing injected method of bean 'portfolioServiceRest': AutowiredFieldElement for private com.inteltrader.service.PortfolioService com.inteltrader.rest.PortfolioServiceRest.portfolioService
Returning cached instance of singleton bean 'portfolioService'
Autowiring by type from bean name 'portfolioServiceRest' to bean named 'portfolioService'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'portfolioServiceRest'
Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@419a5fcd]
Returning cached instance of singleton bean 'lifecycleProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Unable to locate MultipartResolver with name 'multipartResolver': no multipart request handling provided
Creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Unable to locate LocaleResolver with name 'localeResolver': using default [org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver@2e514722]
Creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Unable to locate ThemeResolver with name 'themeResolver': using default [org.springframework.web.servlet.theme.FixedThemeResolver@576515dc]
Creating instance of bean 'org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping'
Looking for URL mappings in application context: WebApplicationContext for namespace 'appServlet-servlet': startup date [Thu Apr 18 17:32:26 IST 2013]; parent: Root WebApplicationContext
Rejected bean name 'org.springframework.context.annotation.internalAsyncAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalScheduledAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalRequiredAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalCommonAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.aop.config.internalAutoProxyCreator': no URL paths identified
Rejected bean name 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0': no URL paths identified
Rejected bean name 'org.springframework.web.servlet.view.InternalResourceViewResolver#0': no URL paths identified
Rejected bean name 'instrumentDao': no URL paths identified
Rejected bean name 'portfolioDao': no URL paths identified
Rejected bean name 'instrumentService': no URL paths identified
Rejected bean name 'portfolioService': no URL paths identified
Rejected bean name 'entityManagerFactory': no URL paths identified
Rejected bean name 'transactionManager': no URL paths identified
Rejected bean name 'instrument': no URL paths identified
Rejected bean name 'investment': no URL paths identified
Rejected bean name 'portfolio': no URL paths identified
Rejected bean name 'instrumentServiceRest': no URL paths identified
Rejected bean name 'portfolioServiceRest': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor': no URL paths identified
Rejected bean name 'environment': no URL paths identified
Rejected bean name 'systemProperties': no URL paths identified
Rejected bean name 'systemEnvironment': no URL paths identified
Rejected bean name 'servletConfig': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry': no URL paths identified
Rejected bean name 'messageSource': no URL paths identified
Rejected bean name 'applicationEventMulticaster': no URL paths identified
Rejected bean name 'lifecycleProcessor': no URL paths identified
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping'
Creating instance of bean 'org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping'
Looking for URL mappings in application context: WebApplicationContext for namespace 'appServlet-servlet': startup date [Thu Apr 18 17:32:26 IST 2013]; parent: Root WebApplicationContext
Rejected bean name 'org.springframework.context.annotation.internalAsyncAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalScheduledAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalRequiredAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalCommonAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.aop.config.internalAutoProxyCreator': no URL paths identified
Rejected bean name 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0': no URL paths identified
Rejected bean name 'org.springframework.web.servlet.view.InternalResourceViewResolver#0': no URL paths identified
Rejected bean name 'instrumentDao': no URL paths identified
Rejected bean name 'portfolioDao': no URL paths identified
Rejected bean name 'instrumentService': no URL paths identified
Rejected bean name 'portfolioService': no URL paths identified
Rejected bean name 'entityManagerFactory': no URL paths identified
Rejected bean name 'transactionManager': no URL paths identified
Rejected bean name 'instrument': no URL paths identified
Rejected bean name 'investment': no URL paths identified
Rejected bean name 'portfolio': no URL paths identified
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/create/{symbol}] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/create/{symbol}.*] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/create/{symbol}/] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/update/{portfolioName}] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/update/{portfolioName}.*] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/update/{portfolioName}/] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/load/{symbol}] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/load/{symbol}.*] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/load/{symbol}/] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/create/{portfolioName}] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/create/{portfolioName}.*] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/create/{portfolioName}/] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/addInvestment/{portfolioName}/{symbolName}] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/addInvestment/{portfolioName}/{symbolName}.*] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/addInvestment/{portfolioName}/{symbolName}/] onto handler 'portfolioServiceRest'
Rejected bean name 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor': no URL paths identified
Rejected bean name 'environment': no URL paths identified
Rejected bean name 'systemProperties': no URL paths identified
Rejected bean name 'systemEnvironment': no URL paths identified
Rejected bean name 'servletConfig': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry': no URL paths identified
Rejected bean name 'messageSource': no URL paths identified
Rejected bean name 'applicationEventMulticaster': no URL paths identified
Rejected bean name 'lifecycleProcessor': no URL paths identified
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping'
No HandlerMappings found in servlet 'appServlet': using default
Creating instance of bean 'org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter'
Creating instance of bean 'org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter'
Creating instance of bean 'org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter'
No HandlerAdapters found in servlet 'appServlet': using default
Creating instance of bean 'org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerExceptionResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerExceptionResolver'
Creating instance of bean 'org.springframework.web.servlet.mvc.annotation.ResponseStatusExceptionResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.annotation.ResponseStatusExceptionResolver'
Creating instance of bean 'org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver'
No HandlerExceptionResolvers found in servlet 'appServlet': using default
Creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Unable to locate RequestToViewNameTranslator with name 'viewNameTranslator': using default [org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@6772b78e]
Returning cached instance of singleton bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Returning cached instance of singleton bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Unable to locate FlashMapManager with name 'flashMapManager': using default [org.springframework.web.servlet.support.SessionFlashMapManager@3a39e220]
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Searching for key 'spring.liveBeansView.mbeanDomain' in [servletConfigInitParams]
Searching for key 'spring.liveBeansView.mbeanDomain' in [servletContextInitParams]
Searching for key 'spring.liveBeansView.mbeanDomain' in [jndiProperties]
Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain]
Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException: Name [spring.liveBeansView.mbeanDomain] is not bound in this Context. Unable to find [spring.liveBeansView.mbeanDomain].
Looking up JNDI object with name [spring.liveBeansView.mbeanDomain]
JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: Name [spring.liveBeansView.mbeanDomain] is not bound in this Context. Unable to find [spring.liveBeansView.mbeanDomain].. Returning null.
Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
Published WebApplicationContext of servlet 'appServlet' as ServletContext attribute with name [org.springframework.web.servlet.FrameworkServlet.CONTEXT.appServlet]
FrameworkServlet 'appServlet': initialization completed in 534 ms
Servlet 'appServlet' configured successfully
DispatcherServlet with name 'appServlet' processing GET request for [/portfolio/addInvestment/myFirstTime/CIPLA]
Matching patterns for request [/portfolio/addInvestment/myFirstTime/CIPLA] are [/portfolio/addInvestment/{portfolioName}/{symbolName}]
URI Template variables for request [/portfolio/addInvestment/myFirstTime/CIPLA] are {portfolioName=myFirstTime, symbolName=CIPLA}
Mapping [/portfolio/addInvestment/myFirstTime/CIPLA] to HandlerExecutionChain with handler [com.inteltrader.rest.PortfolioServiceRest@7468e270] and 2 interceptors
Last-Modified value for [/portfolio/addInvestment/myFirstTime/CIPLA] is: -1
Invoking request handler method: public org.springframework.http.ResponseEntity com.inteltrader.rest.PortfolioServiceRest.addInvestment(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
begin
Obtaining JDBC connection
Obtained JDBC connection
initial autocommit status: true
disabling autocommit
Loading entity: [com.inteltrader.entity.Portfolio#myFirstTime]
select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Result set row: 0
Result row: EntityKey[com.inteltrader.entity.Investment#1], EntityKey[com.inteltrader.entity.Portfolio#myFirstTime]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Resolving associations for [com.inteltrader.entity.Investment#1]
Done materializing entity [com.inteltrader.entity.Investment#1]
Resolving associations for [com.inteltrader.entity.Portfolio#myFirstTime]
Done materializing entity [com.inteltrader.entity.Portfolio#myFirstTime]
1 collections were found in result set for role: com.inteltrader.entity.Portfolio.investmentList
Collection fully initialized: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
1 collections initialized for role: com.inteltrader.entity.Portfolio.investmentList
Done entity load
Loading collection: [com.inteltrader.entity.Investment.transactionsList#1]
select transactio0_.INVESTMENT_ID as INVESTMENT1_2_0_, transactio0_.quantity as quantity3_0_, transactio0_.transactionId as transact3_3_0_, transactio0_.transactionPrice as transact4_3_0_ from TRADER_DB.INVESTMENT_TRANSACTION transactio0_ where transactio0_.INVESTMENT_ID=?
Result set contains (possibly empty) collection: [com.inteltrader.entity.Investment.transactionsList#1]
1 collections were found in result set for role: com.inteltrader.entity.Investment.transactionsList
Collection fully initialized: [com.inteltrader.entity.Investment.transactionsList#1]
1 collections initialized for role: com.inteltrader.entity.Investment.transactionsList
Done loading collection
Mark transaction for rollback
Written [FAILURE] as "text/html" using [org.springframework.http.converter.StringHttpMessageConverter@5f6df472]
Null ModelAndView returned to DispatcherServlet with name 'appServlet': assuming HandlerAdapter completed request handling
Successfully completed request
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Initializing servlet 'appServlet'
Initializing new StandardServletEnvironment
Adding [servletConfigInitParams] PropertySource with lowest search precedence
Adding [servletContextInitParams] PropertySource with lowest search precedence
Adding [jndiProperties] PropertySource with lowest search precedence
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment]
FrameworkServlet 'appServlet': initialization started
Servlet with name 'appServlet' will try to create custom WebApplicationContext context of class 'org.springframework.web.context.support.XmlWebApplicationContext', using parent context [Root WebApplicationContext: startup date [Thu Apr 18 17:36:47 IST 2013]; root of context hierarchy]
Searching for key 'spring.profiles.active' in [servletConfigInitParams]
Searching for key 'spring.profiles.active' in [servletContextInitParams]
Searching for key 'spring.profiles.active' in [jndiProperties]
Looking up JNDI object with name [java:comp/env/spring.profiles.active]
Converted JNDI name [java:comp/env/spring.profiles.active] not found - trying original name [spring.profiles.active]. javax.naming.NameNotFoundException: Name [spring.profiles.active] is not bound in this Context. Unable to find [spring.profiles.active].
Looking up JNDI object with name [spring.profiles.active]
JNDI lookup for name [spring.profiles.active] threw NamingException with message: Name [spring.profiles.active] is not bound in this Context. Unable to find [spring.profiles.active].. Returning null.
Searching for key 'spring.profiles.active' in [systemProperties]
Searching for key 'spring.profiles.active' in [systemEnvironment]
Could not find key 'spring.profiles.active' in any property source. Returning [null]
Searching for key 'spring.profiles.default' in [servletConfigInitParams]
Searching for key 'spring.profiles.default' in [servletContextInitParams]
Searching for key 'spring.profiles.default' in [jndiProperties]
Looking up JNDI object with name [java:comp/env/spring.profiles.default]
Converted JNDI name [java:comp/env/spring.profiles.default] not found - trying original name [spring.profiles.default]. javax.naming.NameNotFoundException: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].
Looking up JNDI object with name [spring.profiles.default]
JNDI lookup for name [spring.profiles.default] threw NamingException with message: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].. Returning null.
Searching for key 'spring.profiles.default' in [systemProperties]
Searching for key 'spring.profiles.default' in [systemEnvironment]
Could not find key 'spring.profiles.default' in any property source. Returning [null]
Searching for key 'spring.profiles.default' in [servletConfigInitParams]
Searching for key 'spring.profiles.default' in [servletContextInitParams]
Searching for key 'spring.profiles.default' in [jndiProperties]
Looking up JNDI object with name [java:comp/env/spring.profiles.default]
Converted JNDI name [java:comp/env/spring.profiles.default] not found - trying original name [spring.profiles.default]. javax.naming.NameNotFoundException: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].
Looking up JNDI object with name [spring.profiles.default]
JNDI lookup for name [spring.profiles.default] threw NamingException with message: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].. Returning null.
Searching for key 'spring.profiles.default' in [systemProperties]
Searching for key 'spring.profiles.default' in [systemEnvironment]
Could not find key 'spring.profiles.default' in any property source. Returning [null]
Replacing [servletContextInitParams] PropertySource with [servletContextInitParams]
Replacing [servletConfigInitParams] PropertySource with [servletConfigInitParams]
Refreshing WebApplicationContext for namespace 'appServlet-servlet': startup date [Thu Apr 18 17:36:50 IST 2013]; parent: Root WebApplicationContext
Initializing new StandardEnvironment
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
Initializing new StandardEnvironment
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
Loading schema mappings from [META-INF/spring.schemas]
Loaded schema mappings: {http://www.springframework.org/schema/data/jpa/spring-jpa-1.2.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.2.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.1.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.1.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.5.xsd=org/springframework/data/repository/config/spring-repository-1.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.0.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.3.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.4.xsd=org/springframework/data/repository/config/spring-repository-1.4.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.3.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/data/repository/spring-repository.xsd=org/springframework/data/repository/config/spring-repository-1.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.0.xsd=org/springframework/data/repository/config/spring-repository-1.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.1.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.1.xsd
Found XML schema [http://www.springframework.org/schema/task/spring-task-3.0.xsd] in classpath: org/springframework/scheduling/config/spring-task-3.0.xsd
Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd
Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd
Found XML schema [http://www.springframework.org/schema/tx/spring-tx-3.1.xsd] in classpath: org/springframework/transaction/config/spring-tx-3.1.xsd
Loading bean definitions
Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/data/repository=org.springframework.data.repository.config.RepositoryNameSpaceHandler, http://www.springframework.org/schema/data/jpa=org.springframework.data.jpa.repository.config.JpaRepositoryNameSpaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
Neither XML 'id' nor 'name' specified - using generated bean name [org.springframework.web.servlet.view.InternalResourceViewResolver#0]
Neither XML 'id' nor 'name' specified - using generated bean name [org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver#2e9bded0]
Initializing new StandardEnvironment
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
Looking for matching resources in directory tree [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Resolved location pattern [classpath*:com/inteltrader/**/*.class] to resources [file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\Advice.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\FIFOList.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\InstrumentVo.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\Strategies.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\Strategy.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\StrategyMACD.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao\IInstrumentDao.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao\InstrumentDao.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao\IPortfolioDao.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao\PortfolioDao.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Instrument.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Investment.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Portfolio.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Price.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Transactions.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest\InstrumentServiceRest.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest\PortfolioServiceRest.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\AnalyserService.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\CronService.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\InstrumentService.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\InstrumentServiceImpl.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\PortfolioService.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\PortfolioServiceImpl.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util\DownloadZip.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util\ExtractZipFile.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util\ReadPriceCsv.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util\RestCodes.class]]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Instrument.class]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Investment.class]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Portfolio.class]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest\InstrumentServiceRest.class]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest\PortfolioServiceRest.class]
Loaded 21 bean definitions from location pattern [/WEB-INF/applicationContext.xml]
Bean factory for WebApplicationContext for namespace 'appServlet-servlet': org.springframework.beans.factory.support.DefaultListableBeanFactory@7b414197: defining beans [org.springframework.context.annotation.internalAsyncAnnotationProcessor,org.springframework.context.annotation.internalScheduledAnnotationProcessor,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0,org.springframework.web.servlet.view.InternalResourceViewResolver#0,instrumentDao,portfolioDao,instrumentService,portfolioService,entityManagerFactory,transactionManager,instrument,investment,portfolio,instrumentServiceRest,portfolioServiceRest]; parent: org.springframework.beans.factory.support.DefaultListableBeanFactory@2840a9b2
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@6338a96]
Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@21cf8108]
Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.DelegatingThemeSource@3e20458f]
Creating shared instance of singleton bean 'entityManagerFactory'
Creating instance of bean 'entityManagerFactory'
Eagerly caching bean 'entityManagerFactory' to allow for resolving potential circular references
Creating instance of bean 'org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver#2e9bded0'
Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Creating instance of bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0' to allow for resolving potential circular references
Creating instance of bean '(inner bean)'
Creating shared instance of singleton bean 'transactionManager'
Creating instance of bean 'transactionManager'
Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
Returning eagerly cached instance of singleton bean 'entityManagerFactory' that is not fully initialized yet - a consequence of a circular reference
Ignoring currently created advisor 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0': Error creating bean with name 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0': Cannot create inner bean '(inner bean)' of type [org.springframework.transaction.interceptor.TransactionInterceptor] while setting bean property 'transactionInterceptor'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)': Cannot resolve reference to bean 'transactionManager' while setting bean property 'transactionManager'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'transactionManager' defined in ServletContext resource [/WEB-INF/applicationContext.xml]: Cannot resolve reference to bean 'entityManagerFactory' while setting bean property 'entityManagerFactory'; nested exception is org.springframework.beans.factory.BeanCurrentlyInCreationException: Error creating bean with name 'entityManagerFactory': FactoryBean which is currently in creation returned null from getObject
Finished creating instance of bean 'org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver#2e9bded0'
Invoking afterPropertiesSet() on bean with name 'entityManagerFactory'
Building JPA container EntityManagerFactory for persistence unit 'intelTrader'
Adding type registration boolean -> org.hibernate.type.BooleanType@24350ad6
Adding type registration boolean -> org.hibernate.type.BooleanType@24350ad6
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@24350ad6
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@319939ca
Adding type registration true_false -> org.hibernate.type.TrueFalseType@1612df4a
Adding type registration yes_no -> org.hibernate.type.YesNoType@2974c545
Adding type registration byte -> org.hibernate.type.ByteType@33f5c786
Adding type registration byte -> org.hibernate.type.ByteType@33f5c786
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@33f5c786
Adding type registration character -> org.hibernate.type.CharacterType@524b0405
Adding type registration char -> org.hibernate.type.CharacterType@524b0405
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@524b0405
Adding type registration short -> org.hibernate.type.ShortType@3f2f5317
Adding type registration short -> org.hibernate.type.ShortType@3f2f5317
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3f2f5317
Adding type registration integer -> org.hibernate.type.IntegerType@3a52ba0a
Adding type registration int -> org.hibernate.type.IntegerType@3a52ba0a
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3a52ba0a
Adding type registration long -> org.hibernate.type.LongType@76612299
Adding type registration long -> org.hibernate.type.LongType@76612299
Adding type registration java.lang.Long -> org.hibernate.type.LongType@76612299
Adding type registration float -> org.hibernate.type.FloatType@45a1742b
Adding type registration float -> org.hibernate.type.FloatType@45a1742b
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@45a1742b
Adding type registration double -> org.hibernate.type.DoubleType@280c11bd
Adding type registration double -> org.hibernate.type.DoubleType@280c11bd
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@280c11bd
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@77741d35
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@77741d35
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5cec9b6b
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5cec9b6b
Adding type registration string -> org.hibernate.type.StringType@62af5cb0
Adding type registration java.lang.String -> org.hibernate.type.StringType@62af5cb0
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2a5c0ab8
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3b51f2a9
Adding type registration url -> org.hibernate.type.UrlType@1ddeedb6
Adding type registration java.net.URL -> org.hibernate.type.UrlType@1ddeedb6
Adding type registration date -> org.hibernate.type.DateType@6a23f3c7
Adding type registration java.sql.Date -> org.hibernate.type.DateType@6a23f3c7
Adding type registration time -> org.hibernate.type.TimeType@bc9f839
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@bc9f839
Adding type registration timestamp -> org.hibernate.type.TimestampType@4503f024
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4503f024
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4503f024
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@22c39ba
Adding type registration calendar -> org.hibernate.type.CalendarType@1dcebc46
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1dcebc46
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1dcebc46
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1be801f7
Adding type registration locale -> org.hibernate.type.LocaleType@218f998a
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@218f998a
Adding type registration currency -> org.hibernate.type.CurrencyType@aacc49a
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@aacc49a
Adding type registration timezone -> org.hibernate.type.TimeZoneType@6ae0a8b3
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6ae0a8b3
Adding type registration class -> org.hibernate.type.ClassType@118130e9
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@118130e9
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@301e4154
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@301e4154
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@22ab38d1
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@4a5dc4c6
Adding type registration binary -> org.hibernate.type.BinaryType@4a8dd32c
Adding type registration byte[] -> org.hibernate.type.BinaryType@4a8dd32c
Adding type registration [B -> org.hibernate.type.BinaryType@4a8dd32c
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6e9701a1
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6e9701a1
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6e9701a1
Adding type registration image -> org.hibernate.type.ImageType@68f41a22
Adding type registration characters -> org.hibernate.type.CharArrayType@7006da8
Adding type registration char[] -> org.hibernate.type.CharArrayType@7006da8
Adding type registration [C -> org.hibernate.type.CharArrayType@7006da8
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3a55334a
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3a55334a
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3a55334a
Adding type registration text -> org.hibernate.type.TextType@585b8a10
Adding type registration ntext -> org.hibernate.type.NTextType@3687196c
Adding type registration blob -> org.hibernate.type.BlobType@2d322222
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2d322222
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7271d362
Adding type registration clob -> org.hibernate.type.ClobType@65553762
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@65553762
Adding type registration nclob -> org.hibernate.type.NClobType@5c984c50
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5c984c50
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7088d037
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@24cc7141
Adding type registration serializable -> org.hibernate.type.SerializableType@6997c55
Adding type registration object -> org.hibernate.type.ObjectType@683312d8
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@683312d8
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@38b6cf26
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@69d9e4e0
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6041646a
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@65279c84
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@b94d1fe
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@576680a2
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@a873882
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@338ee434
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Processing PersistenceUnitInfo [
	name: intelTrader
	persistence provider classname: org.hibernate.ejb.HibernatePersistence
	classloader: WebappClassLoader
  context: 
  delegate: false
  repositories:
    /WEB-INF/classes/
----------> Parent Classloader:
ClassRealm[plugin>org.apache.tomcat.maven:tomcat7-maven-plugin:2.0, parent: sun.misc.Launcher$AppClassLoader@1875303f]

	Temporary classloader: org.springframework.instrument.classloading.SimpleThrowawayClassLoader@6a282c5d
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/vvarm1/IdeaProjects/intelTrader/src/main/webapp/WEB-INF/classes
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.inteltrader.entity.Instrument
		com.inteltrader.entity.Portfolio
		com.inteltrader.entity.Investment]
	Mapping files names []
	Properties [
		hibernate.connection.username: root
		hibernate.connection.password: root
		hibernate.dialect: org.hibernate.dialect.MySQLDialect
		hibernate.c3p0.min_size: 10
		hibernate.connection.url: jdbc:mysql://localhost:3306/TRADER_DB
		hibernate.show_sql: true
		hibernate.connection.driver_class: com.mysql.jdbc.Driver
		hibernate.hbm2ddl.auto: update]
Detect class: true; detect hbm: true
Detect class: true; detect hbm: true
Searching mapped entities in jar/par: file:/C:/Users/vvarm1/IdeaProjects/intelTrader/src/main/webapp/WEB-INF/classes
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.ejb.event.JpaIntegrator].
No JNDI name configured for binding Ejb3Configuration
Preparing to build session factory with filters : {}
Processing hbm.xml files
Process annotated classes
Binding entity from annotated class: com.inteltrader.entity.Instrument
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Instrument
Bind entity com.inteltrader.entity.Instrument on table INSTRUMENT
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=SYMBOL_NAME, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property symbolName with lazy=false
building SimpleValue for symbolName
Building property symbolName
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=priceList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=priceList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=priceList_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='priceList_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='SYMBOL_NAME', referencedColumn='', mappedBy=''}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Collection role: com.inteltrader.entity.Instrument.priceList
Building property priceList
Binding entity from annotated class: com.inteltrader.entity.Portfolio
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Portfolio
Bind entity com.inteltrader.entity.Portfolio on table PORTFOLIO
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=PORTFOLIO_NAME, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property portfolioName with lazy=false
building SimpleValue for portfolioName
Building property portfolioName
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='associatedPortfolio'}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=investmentList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=element, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=investmentList_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='investmentList_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='associatedPortfolio'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='associatedPortfolio'}
Collection role: com.inteltrader.entity.Portfolio.investmentList
Building property investmentList
Binding entity from annotated class: com.inteltrader.entity.Investment
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Investment
Bind entity com.inteltrader.entity.Investment on table INVESTMENT
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=INVESTMENT_ID, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property investmentId with lazy=false
building SimpleValue for investmentId
Building property investmentId
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=associatedPortfolio, insertable=true, updatable=true, unique=false}
Building property associatedPortfolio
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=currentPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property currentPrice with lazy=false
building SimpleValue for currentPrice
Building property currentPrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=quantity, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property quantity with lazy=false
building SimpleValue for quantity
Building property quantity
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=INVESTMENT_SYMBOL, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property symbolName with lazy=false
building SimpleValue for symbolName
Building property symbolName
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=transactionsList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=transactionsList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=transactionsList_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='transactionsList_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='INVESTMENT_ID', referencedColumn='', mappedBy=''}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Collection role: com.inteltrader.entity.Investment.transactionsList
Building property transactionsList
Setting SimpleValue typeName for symbolName
Setting SimpleValue typeName for portfolioName
Setting SimpleValue typeName for investmentId
Setting SimpleValue typeName for currentPrice
Setting SimpleValue typeName for quantity
Setting SimpleValue typeName for symbolName
Processing fk mappings (*ToOne and JoinedSubclass)
Processing extends queue
Processing extends queue
Processing collection mappings
Second pass for collection: com.inteltrader.entity.Investment.transactionsList
Binding a collection of element: com.inteltrader.entity.Investment.transactionsList
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT_TRANSACTION), mappingColumn=quantity, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property quantity with lazy=false
building SimpleValue for quantity
Setting SimpleValue typeName for quantity
Building property quantity
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT_TRANSACTION), mappingColumn=transactionId, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property transactionId with lazy=false
building SimpleValue for transactionId
Setting SimpleValue typeName for transactionId
Building property transactionId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT_TRANSACTION), mappingColumn=transactionPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property transactionPrice with lazy=false
building SimpleValue for transactionPrice
Setting SimpleValue typeName for transactionPrice
Building property transactionPrice
Mapped collection key: INVESTMENT_ID, element: quantity, transactionId, transactionPrice
Second pass for collection: com.inteltrader.entity.Instrument.priceList
Binding a collection of element: com.inteltrader.entity.Instrument.priceList
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=closePrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property closePrice with lazy=false
building SimpleValue for closePrice
Setting SimpleValue typeName for closePrice
Building property closePrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=highPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property highPrice with lazy=false
building SimpleValue for highPrice
Setting SimpleValue typeName for highPrice
Building property highPrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=lastClosePrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property lastClosePrice with lazy=false
building SimpleValue for lastClosePrice
Setting SimpleValue typeName for lastClosePrice
Building property lastClosePrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=lowPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property lowPrice with lazy=false
building SimpleValue for lowPrice
Setting SimpleValue typeName for lowPrice
Building property lowPrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=openPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property openPrice with lazy=false
building SimpleValue for openPrice
Setting SimpleValue typeName for openPrice
Building property openPrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=priceId, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property priceId with lazy=false
building SimpleValue for priceId
Setting SimpleValue typeName for priceId
Building property priceId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=timeStamp, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property timeStamp with lazy=false
building SimpleValue for timeStamp
Setting SimpleValue typeName for timeStamp
Building property timeStamp
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=totalTradedQuantity, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property totalTradedQuantity with lazy=false
building SimpleValue for totalTradedQuantity
Setting SimpleValue typeName for totalTradedQuantity
Building property totalTradedQuantity
Mapped collection key: SYMBOL_NAME, element: closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity
Second pass for collection: com.inteltrader.entity.Portfolio.investmentList
Binding a OneToMany: com.inteltrader.entity.Portfolio.investmentList through a foreign key
Mapping collection: com.inteltrader.entity.Portfolio.investmentList -> INVESTMENT
Retrieving property com.inteltrader.entity.Investment.associatedPortfolio
Mapped collection key: associatedPortfolio_PORTFOLIO_NAME, one-to-many: com.inteltrader.entity.Investment
Processing native query and ResultSetMapping mappings
Processing association property references
Creating tables' unique integer identifiers
Processing foreign key constraints
Resolving reference to class: com.inteltrader.entity.Instrument
Resolving reference to class: com.inteltrader.entity.Portfolio
Resolving reference to class: com.inteltrader.entity.Investment
HHH000022: c3p0 properties were encountered, but the org.hibernate.service.jdbc.connections.internal.C3P0ConnectionProvider provider class was not found on the classpath; these properties are going to be ignored.
HHH000402: Using Hibernate built-in connection pool (not for production use!)
HHH000115: Hibernate connection pool size: 20
HHH000006: Autocommit mode: true
HHH000401: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/TRADER_DB]
HHH000046: Connection properties: {user=root, password=root, autocommit=true, release_mode=auto}
Opening new JDBC connection
Created connection to: jdbc:mysql://localhost:3306/TRADER_DB, Isolation Level: 4
Database ->
       name : MySQL
    version : 5.6.10-log
      major : 5
      minor : 6
Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.9 ( Revision: ${svn.Revision} )
      major : 5
      minor : 1
JDBC version : 3.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: disabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
multi-tenancy strategy : NONE
Connection release mode: auto
HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
Maximum outer join fetch depth: 2
Default batch fetch size: 1
Generate SQL with comments: disabled
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
HHH000397: Using ASTQueryTranslatorFactory
Query language substitutions: {}
JPA-QL strict compliance: enabled
Second-level cache: enabled
Query cache: disabled
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
Optimize cache for minimal puts: disabled
Structured second-level cache entries: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Named query checking : enabled
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : : disabled
Building session factory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\vvarm1\IdeaProjects\intelTrader\target\tomcat, hibernate.connection.url=jdbc:mysql://localhost:3306/TRADER_DB, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.ejb.discard_pc_on_close=false, catalina.useNaming=true, hibernate.transaction.flush_before_completion=false, os.name=Windows 7, sun.boot.class.path=C:\Program Files\Java\jdk1.7.0_10\jre\lib\resources.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\rt.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\jce.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.7.0_10\jre\classes, java.util.logging.config.file=C:\Users\vvarm1\IdeaProjects\intelTrader\target\tomcat\conf\logging.properties, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.7.0_10-b18, hibernate.connection.autocommit=true, hibernate.c3p0.min_size=10, user.name=vvarm1, shared.loader=, guice.disable.misplaced.annotation.check=true, tomcat.util.buf.StringCache.byte.enabled=true, javax.persistence.validation.mode=AUTO, hibernate.connection.release_mode=auto, idea.launcher.bin.path=C:\Program Files (x86)\JetBrains\IntelliJ IDEA Community Edition 12.0.4\bin, user.language=en, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, sun.boot.library.path=C:\Program Files\Java\jdk1.7.0_10\jre\bin, classworlds.conf=C:\Program Files\Apache Software Foundation\apache-maven-3.0.5\bin\m2.conf, java.version=1.7.0_10, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, user.timezone=Asia/Calcutta, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.7.0_10\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, file.encoding.pkg=sun.io, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.tomcat.,org.apache.jasper., file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=51.0, user.country=US, java.home=C:\Program Files\Java\jdk1.7.0_10\jre, java.vm.info=mixed mode, os.version=6.1, hibernate.transaction.factory_class=org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory, hibernate.query.jpaql_strict_compliance=true, path.separator=;, java.vm.version=23.6-b04, hibernate.connection.password=root, user.variant=, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.scan.DefaultJarScanner.jarsToSkip=bootstrap.jar,commons-daemon.jar,tomcat-juli.jar,annotations-api.jar,el-api.jar,jsp-api.jar,servlet-api.jar,catalina.jar,catalina-ant.jar,catalina-ha.jar,catalina-tribes.jar,jasper.jar,jasper-el.jar,ecj-*.jar,tomcat-api.jar,tomcat-util.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-jni.jar,tomcat-spdy.jar,tomcat-i18n-en.jar,tomcat-i18n-es.jar,tomcat-i18n-fr.jar,tomcat-i18n-ja.jar,tomcat-juli-adapters.jar,catalina-jmx-remote.jar,catalina-ws.jar,tomcat-jdbc.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,jstl.jar,geronimo-spec-jaxrpc*.jar,wsdl4j*.jar,ant.jar,ant-junit*.jar,aspectj*.jar,jmx.jar,h2*.jar,hibernate*.jar,httpclient*.jar,jmx-tools.jar,jta*.jar,log4j*.jar,mail*.jar,slf4j*.jar,xercesImpl.jar,xmlParserAPIs.jar,xml-apis.jar,access-bridge-64.jar,dnsns.jar,jaccess.jar,ldapsec.jar,localedata.jar,sunjce_provider.jar,sunmscapi.jar,sunpkcs11.jar,jhall.jar,tools.jar,sunec.jar,zipfs.jar,gnome-java-bridge.jar,pulse-java.jar,apple_provider.jar,AppleScriptEngine.jar,CoreAudio.jar,dns_sd.jar,j3daudio.jar,j3dcore.jar,j3dutils.jar,jai_core.jar,jai_codec.jar,mlibwrapper_jai.jar,MRJToolkit.jar,vecmath.jar,junit.jar,junit-*.jar,ant-launcher.jar, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.tomcat.,org.apache.jasper., user.script=, java.naming.factory.url.pkgs=org.apache.naming, user.home=C:\Users\vvarm1, org.apache.catalina.startup.ContextConfig.jarsToSkip=, java.specification.vendor=Oracle Corporation, hibernate.hbm2ddl.auto=update, java.library.path=C:\Program Files\Java\jdk1.7.0_10\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\JetBrains\IntelliJ IDEA Community Edition 12.0.4\bin\..\.\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\ThinkPad\Bluetooth Software\;C:\Program Files\ThinkPad\Bluetooth Software\syswow64;c:\Program Files\Intel\WiFi\bin\;c:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files (x86)\Git\cmd;C:\Users\vvarm1\Documents\play-2.0.3;C:\Program Files\Java\jdk1.7.0_10\bin;C:\Program Files\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\QuickTime\QTSystem\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Java\jre6\bin;C:\Program Files\Apache Software Foundation\apache-maven-3.0.5\bin;c:\program files (x86)\jetbrains\intellij idea community edition 12.0.4\jre\jre\bin;., java.vendor.url=http://java.oracle.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, org.apache.catalina.startup.TldConfig.jarsToSkip=, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, common.loader=${catalina.base}/lib,${catalina.base}/lib/*.jar,${catalina.home}/lib,${catalina.home}/lib/*.jar, maven.home=C:\Program Files\Apache Software Foundation\apache-maven-3.0.5, java.runtime.name=Java(TM) SE Runtime Environment, java.class.path=C:\Program Files\Apache Software Foundation\apache-maven-3.0.5\boot\plexus-classworlds-2.4.jar;C:\Program Files (x86)\JetBrains\IntelliJ IDEA Community Edition 12.0.4\lib\idea_rt.jar, sun.java.command=com.intellij.rt.execution.application.AppMain org.codehaus.classworlds.Launcher --no-plugin-registry --fail-fast --strict-checksums --update-snapshots org.apache.tomcat.maven:tomcat7-maven-plugin:2.0:run, hibernate.bytecode.use_reflection_optimizer=false, idea.launcher.port=7533, java.vm.specification.name=Java Virtual Machine Specification, catalina.home=C:\Users\vvarm1\IdeaProjects\intelTrader\target\tomcat, java.vm.specification.version=1.7, sun.os.patch.level=Service Pack 1, sun.cpu.endian=little, java.io.tmpdir=C:\Users\vvarm1\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, server.loader=, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, java.ext.dirs=C:\Program Files\Java\jdk1.7.0_10\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=C:\Users\vvarm1\IdeaProjects\intelTrader, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding=UTF-8, hibernate.use_identifier_rollback=false, java.specification.version=1.7, hibernate.show_sql=true}
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Static SQL for entity: com.inteltrader.entity.Investment
 Version select: select INVESTMENT_ID from TRADER_DB.INVESTMENT where INVESTMENT_ID =?
 Snapshot select: select investment_.INVESTMENT_ID, investment_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_, investment_.currentPrice as currentP2_2_, investment_.quantity as quantity2_, investment_.INVESTMENT_SYMBOL as INVESTMENT4_2_ from TRADER_DB.INVESTMENT investment_ where investment_.INVESTMENT_ID=?
 Insert 0: insert into TRADER_DB.INVESTMENT (associatedPortfolio_PORTFOLIO_NAME, currentPrice, quantity, INVESTMENT_SYMBOL, INVESTMENT_ID) values (?, ?, ?, ?, ?)
 Update 0: update TRADER_DB.INVESTMENT set associatedPortfolio_PORTFOLIO_NAME=?, currentPrice=?, quantity=?, INVESTMENT_SYMBOL=? where INVESTMENT_ID=?
 Delete 0: delete from TRADER_DB.INVESTMENT where INVESTMENT_ID=?
 Identity insert: insert into TRADER_DB.INVESTMENT (associatedPortfolio_PORTFOLIO_NAME, currentPrice, quantity, INVESTMENT_SYMBOL) values (?, ?, ?, ?)
Static SQL for entity: com.inteltrader.entity.Instrument
 Version select: select SYMBOL_NAME from TRADER_DB.INSTRUMENT where SYMBOL_NAME =?
 Snapshot select: select instrument_.SYMBOL_NAME from TRADER_DB.INSTRUMENT instrument_ where instrument_.SYMBOL_NAME=?
 Insert 0: insert into TRADER_DB.INSTRUMENT (SYMBOL_NAME) values (?)
 Update 0: null
 Delete 0: delete from TRADER_DB.INSTRUMENT where SYMBOL_NAME=?
Static SQL for entity: com.inteltrader.entity.Portfolio
 Version select: select PORTFOLIO_NAME from TRADER_DB.PORTFOLIO where PORTFOLIO_NAME =?
 Snapshot select: select portfolio_.PORTFOLIO_NAME from TRADER_DB.PORTFOLIO portfolio_ where portfolio_.PORTFOLIO_NAME=?
 Insert 0: insert into TRADER_DB.PORTFOLIO (PORTFOLIO_NAME) values (?)
 Update 0: null
 Delete 0: delete from TRADER_DB.PORTFOLIO where PORTFOLIO_NAME=?
Static SQL for collection: com.inteltrader.entity.Instrument.priceList
 Row insert: insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
 Row update: update TRADER_DB.INSTRUMENT_PRICE set closePrice=?, highPrice=?, lastClosePrice=?, lowPrice=?, openPrice=?, priceId=?, timeStamp=?, totalTradedQuantity=? where SYMBOL_NAME=? and priceId=? and totalTradedQuantity=?
 Row delete: delete from TRADER_DB.INSTRUMENT_PRICE where SYMBOL_NAME=? and priceId=? and totalTradedQuantity=?
 One-shot delete: delete from TRADER_DB.INSTRUMENT_PRICE where SYMBOL_NAME=?
Static SQL for collection: com.inteltrader.entity.Investment.transactionsList
 Row insert: insert into TRADER_DB.INVESTMENT_TRANSACTION (INVESTMENT_ID, quantity, transactionId, transactionPrice) values (?, ?, ?, ?)
 Row update: update TRADER_DB.INVESTMENT_TRANSACTION set quantity=?, transactionId=?, transactionPrice=? where INVESTMENT_ID=? and quantity=? and transactionId=? and transactionPrice=?
 Row delete: delete from TRADER_DB.INVESTMENT_TRANSACTION where INVESTMENT_ID=? and quantity=? and transactionId=? and transactionPrice=?
 One-shot delete: delete from TRADER_DB.INVESTMENT_TRANSACTION where INVESTMENT_ID=?
Static SQL for collection: com.inteltrader.entity.Portfolio.investmentList
 Row insert: update TRADER_DB.INVESTMENT set associatedPortfolio_PORTFOLIO_NAME=? where INVESTMENT_ID=?
 Row delete: update TRADER_DB.INVESTMENT set associatedPortfolio_PORTFOLIO_NAME=null where associatedPortfolio_PORTFOLIO_NAME=? and INVESTMENT_ID=?
 One-shot delete: update TRADER_DB.INVESTMENT set associatedPortfolio_PORTFOLIO_NAME=null where associatedPortfolio_PORTFOLIO_NAME=?
Static select for entity com.inteltrader.entity.Instrument [NONE]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for entity com.inteltrader.entity.Instrument [READ]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for entity com.inteltrader.entity.Instrument [UPGRADE]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [UPGRADE_NOWAIT]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [FORCE]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [PESSIMISTIC_READ]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? lock in share mode
Static select for entity com.inteltrader.entity.Instrument [PESSIMISTIC_WRITE]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [PESSIMISTIC_FORCE_INCREMENT]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [OPTIMISTIC]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for entity com.inteltrader.entity.Instrument [OPTIMISTIC_FORCE_INCREMENT]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for action ACTION_MERGE on entity com.inteltrader.entity.Instrument: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for action ACTION_REFRESH on entity com.inteltrader.entity.Instrument: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for entity com.inteltrader.entity.Investment [NONE]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_1_, investment0_.currentPrice as currentP2_2_1_, investment0_.quantity as quantity2_1_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_1_, portfolio1_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.INVESTMENT investment0_ left outer join TRADER_DB.PORTFOLIO portfolio1_ on investment0_.associatedPortfolio_PORTFOLIO_NAME=portfolio1_.PORTFOLIO_NAME where investment0_.INVESTMENT_ID=?
Static select for entity com.inteltrader.entity.Investment [READ]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_1_, investment0_.currentPrice as currentP2_2_1_, investment0_.quantity as quantity2_1_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_1_, portfolio1_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.INVESTMENT investment0_ left outer join TRADER_DB.PORTFOLIO portfolio1_ on investment0_.associatedPortfolio_PORTFOLIO_NAME=portfolio1_.PORTFOLIO_NAME where investment0_.INVESTMENT_ID=?
Static select for entity com.inteltrader.entity.Investment [UPGRADE]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [UPGRADE_NOWAIT]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [FORCE]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [PESSIMISTIC_READ]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? lock in share mode
Static select for entity com.inteltrader.entity.Investment [PESSIMISTIC_WRITE]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [PESSIMISTIC_FORCE_INCREMENT]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [OPTIMISTIC]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=?
Static select for entity com.inteltrader.entity.Investment [OPTIMISTIC_FORCE_INCREMENT]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=?
Static select for action ACTION_MERGE on entity com.inteltrader.entity.Investment: select investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_1_, investment0_.currentPrice as currentP2_2_1_, investment0_.quantity as quantity2_1_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_1_, portfolio1_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.INVESTMENT investment0_ left outer join TRADER_DB.PORTFOLIO portfolio1_ on investment0_.associatedPortfolio_PORTFOLIO_NAME=portfolio1_.PORTFOLIO_NAME where investment0_.INVESTMENT_ID=?
Static select for action ACTION_REFRESH on entity com.inteltrader.entity.Investment: select investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_1_, investment0_.currentPrice as currentP2_2_1_, investment0_.quantity as quantity2_1_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_1_, portfolio1_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.INVESTMENT investment0_ left outer join TRADER_DB.PORTFOLIO portfolio1_ on investment0_.associatedPortfolio_PORTFOLIO_NAME=portfolio1_.PORTFOLIO_NAME where investment0_.INVESTMENT_ID=?
Static select for entity com.inteltrader.entity.Portfolio [NONE]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Static select for entity com.inteltrader.entity.Portfolio [READ]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Static select for entity com.inteltrader.entity.Portfolio [UPGRADE]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [UPGRADE_NOWAIT]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [FORCE]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [PESSIMISTIC_READ]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? lock in share mode
Static select for entity com.inteltrader.entity.Portfolio [PESSIMISTIC_WRITE]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [PESSIMISTIC_FORCE_INCREMENT]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [OPTIMISTIC]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=?
Static select for entity com.inteltrader.entity.Portfolio [OPTIMISTIC_FORCE_INCREMENT]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=?
Static select for action ACTION_MERGE on entity com.inteltrader.entity.Portfolio: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Static select for action ACTION_REFRESH on entity com.inteltrader.entity.Portfolio: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Static select for collection com.inteltrader.entity.Instrument.priceList: select pricelist0_.SYMBOL_NAME as SYMBOL1_0_0_, pricelist0_.closePrice as closePrice1_0_, pricelist0_.highPrice as highPrice1_0_, pricelist0_.lastClosePrice as lastClos4_1_0_, pricelist0_.lowPrice as lowPrice1_0_, pricelist0_.openPrice as openPrice1_0_, pricelist0_.priceId as priceId1_0_, pricelist0_.timeStamp as timeStamp1_0_, pricelist0_.totalTradedQuantity as totalTra9_1_0_ from TRADER_DB.INSTRUMENT_PRICE pricelist0_ where pricelist0_.SYMBOL_NAME=?
Static select for one-to-many com.inteltrader.entity.Portfolio.investmentList: select investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_1_, investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.associatedPortfolio_PORTFOLIO_NAME=?
Static select for collection com.inteltrader.entity.Investment.transactionsList: select transactio0_.INVESTMENT_ID as INVESTMENT1_2_0_, transactio0_.quantity as quantity3_0_, transactio0_.transactionId as transact3_3_0_, transactio0_.transactionPrice as transact4_3_0_ from TRADER_DB.INVESTMENT_TRANSACTION transactio0_ where transactio0_.INVESTMENT_ID=?
Registering SessionFactory: ef6076cb-7438-4bac-b828-136e750fcd2e (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Instantiated session factory
HHH000228: Running hbm2ddl schema update
HHH000102: Fetching database metadata
HHH000396: Updating schema
Processing hbm.xml files
Process annotated classes
Processing fk mappings (*ToOne and JoinedSubclass)
Processing extends queue
Processing extends queue
Processing collection mappings
Processing native query and ResultSetMapping mappings
Processing association property references
Creating tables' unique integer identifiers
Processing foreign key constraints
Resolving reference to class: com.inteltrader.entity.Instrument
Resolving reference to class: com.inteltrader.entity.Portfolio
Resolving reference to class: com.inteltrader.entity.Investment
HHH000261: Table found: TRADER_DB.instrument
HHH000037: Columns: [symbol_name]
HHH000108: Foreign keys: []
HHH000126: Indexes: [primary]
HHH000261: Table found: TRADER_DB.instrument_price
HHH000037: Columns: [totaltradedquantity, timestamp, priceid, lastcloseprice, highprice, symbol_name, openprice, closeprice, lowprice]
HHH000108: Foreign keys: [fk3189a2d153ed548d]
HHH000126: Indexes: [fk3189a2d153ed548d]
HHH000261: Table found: TRADER_DB.investment
HHH000037: Columns: [investment_id, associatedportfolio_portfolio_name, currentprice, quantity, investment_symbol]
HHH000108: Foreign keys: [fk8fe41ed3c804d4f3]
HHH000126: Indexes: [fk8fe41ed3c804d4f3, primary]
HHH000261: Table found: TRADER_DB.investment_transaction
HHH000037: Columns: [transactionprice, investment_id, transactionid, quantity]
HHH000108: Foreign keys: [fka5863f52914590ae]
HHH000126: Indexes: [fka5863f52914590ae]
HHH000261: Table found: TRADER_DB.portfolio
HHH000037: Columns: [portfolio_name]
HHH000108: Foreign keys: []
HHH000126: Indexes: [primary]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
HHH000232: Schema update complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Statistics initialized [enabled=false]
Registering EntityManagerFactory: intelTrader 
HHH000436: Entity manager factory name (intelTrader) is already registered.  If entity manager will be clustered or passivated, specify a unique value for property 'hibernate.ejb.entitymanager_factory_name'
Finished creating instance of bean 'entityManagerFactory'
Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@7b414197: defining beans [org.springframework.context.annotation.internalAsyncAnnotationProcessor,org.springframework.context.annotation.internalScheduledAnnotationProcessor,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0,org.springframework.web.servlet.view.InternalResourceViewResolver#0,instrumentDao,portfolioDao,instrumentService,portfolioService,entityManagerFactory,transactionManager,instrument,investment,portfolio,instrumentServiceRest,portfolioServiceRest,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor]; parent: org.springframework.beans.factory.support.DefaultListableBeanFactory@2840a9b2
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Creating instance of bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0' to allow for resolving potential circular references
Creating instance of bean '(inner bean)'
Creating shared instance of singleton bean 'transactionManager'
Creating instance of bean 'transactionManager'
Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
Returning cached instance of singleton bean 'entityManagerFactory'
Invoking afterPropertiesSet() on bean with name 'transactionManager'
Finished creating instance of bean 'transactionManager'
Creating instance of bean '(inner bean)'
Finished creating instance of bean '(inner bean)'
Invoking afterPropertiesSet() on bean with name '(inner bean)'
Finished creating instance of bean '(inner bean)'
Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Creating shared instance of singleton bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Creating instance of bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Eagerly caching bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Creating shared instance of singleton bean 'instrumentDao'
Creating instance of bean 'instrumentDao'
Eagerly caching bean 'instrumentDao' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'instrumentDao'
Creating shared instance of singleton bean 'portfolioDao'
Creating instance of bean 'portfolioDao'
Eagerly caching bean 'portfolioDao' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'portfolioDao'
Creating shared instance of singleton bean 'instrumentService'
Creating instance of bean 'instrumentService'
Registered injected element on class [com.inteltrader.service.InstrumentServiceImpl]: PersistenceElement for javax.persistence.EntityManagerFactory com.inteltrader.service.InstrumentServiceImpl.entityManagerFactory
Registered injected element on class [com.inteltrader.service.InstrumentServiceImpl]: AutowiredFieldElement for private com.inteltrader.dao.IInstrumentDao com.inteltrader.service.InstrumentServiceImpl.instrumentDao
Registered injected element on class [com.inteltrader.service.InstrumentServiceImpl]: AutowiredFieldElement for private com.inteltrader.service.PortfolioService com.inteltrader.service.InstrumentServiceImpl.portfolioService
Eagerly caching bean 'instrumentService' to allow for resolving potential circular references
Processing injected method of bean 'instrumentService': PersistenceElement for javax.persistence.EntityManagerFactory com.inteltrader.service.InstrumentServiceImpl.entityManagerFactory
Returning cached instance of singleton bean 'entityManagerFactory'
Processing injected method of bean 'instrumentService': AutowiredFieldElement for private com.inteltrader.dao.IInstrumentDao com.inteltrader.service.InstrumentServiceImpl.instrumentDao
Returning cached instance of singleton bean 'instrumentDao'
Autowiring by type from bean name 'instrumentService' to bean named 'instrumentDao'
Processing injected method of bean 'instrumentService': AutowiredFieldElement for private com.inteltrader.service.PortfolioService com.inteltrader.service.InstrumentServiceImpl.portfolioService
Creating shared instance of singleton bean 'portfolioService'
Creating instance of bean 'portfolioService'
Registered injected element on class [com.inteltrader.service.PortfolioServiceImpl]: PersistenceElement for private javax.persistence.EntityManagerFactory com.inteltrader.service.PortfolioServiceImpl.entityManagerFactory
Registered injected element on class [com.inteltrader.service.PortfolioServiceImpl]: AutowiredFieldElement for private com.inteltrader.dao.IPortfolioDao com.inteltrader.service.PortfolioServiceImpl.portfolioDao
Eagerly caching bean 'portfolioService' to allow for resolving potential circular references
Processing injected method of bean 'portfolioService': PersistenceElement for private javax.persistence.EntityManagerFactory com.inteltrader.service.PortfolioServiceImpl.entityManagerFactory
Returning cached instance of singleton bean 'entityManagerFactory'
Processing injected method of bean 'portfolioService': AutowiredFieldElement for private com.inteltrader.dao.IPortfolioDao com.inteltrader.service.PortfolioServiceImpl.portfolioDao
Returning cached instance of singleton bean 'portfolioDao'
Autowiring by type from bean name 'portfolioService' to bean named 'portfolioDao'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'portfolioService'
Autowiring by type from bean name 'instrumentService' to bean named 'portfolioService'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'instrumentService'
Returning cached instance of singleton bean 'portfolioService'
Returning cached instance of singleton bean 'entityManagerFactory'
Returning cached instance of singleton bean 'transactionManager'
Creating shared instance of singleton bean 'instrument'
Creating instance of bean 'instrument'
Eagerly caching bean 'instrument' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'instrument'
Creating shared instance of singleton bean 'investment'
Creating instance of bean 'investment'
Eagerly caching bean 'investment' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'investment'
Creating shared instance of singleton bean 'portfolio'
Creating instance of bean 'portfolio'
Eagerly caching bean 'portfolio' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'portfolio'
Creating shared instance of singleton bean 'instrumentServiceRest'
Creating instance of bean 'instrumentServiceRest'
Registered injected element on class [com.inteltrader.rest.InstrumentServiceRest]: AutowiredFieldElement for private com.inteltrader.service.InstrumentService com.inteltrader.rest.InstrumentServiceRest.instrumentService
Eagerly caching bean 'instrumentServiceRest' to allow for resolving potential circular references
Processing injected method of bean 'instrumentServiceRest': AutowiredFieldElement for private com.inteltrader.service.InstrumentService com.inteltrader.rest.InstrumentServiceRest.instrumentService
Returning cached instance of singleton bean 'instrumentService'
Autowiring by type from bean name 'instrumentServiceRest' to bean named 'instrumentService'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'instrumentServiceRest'
Creating shared instance of singleton bean 'portfolioServiceRest'
Creating instance of bean 'portfolioServiceRest'
Registered injected element on class [com.inteltrader.rest.PortfolioServiceRest]: AutowiredFieldElement for private com.inteltrader.service.PortfolioService com.inteltrader.rest.PortfolioServiceRest.portfolioService
Eagerly caching bean 'portfolioServiceRest' to allow for resolving potential circular references
Processing injected method of bean 'portfolioServiceRest': AutowiredFieldElement for private com.inteltrader.service.PortfolioService com.inteltrader.rest.PortfolioServiceRest.portfolioService
Returning cached instance of singleton bean 'portfolioService'
Autowiring by type from bean name 'portfolioServiceRest' to bean named 'portfolioService'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'portfolioServiceRest'
Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@54bb8009]
Returning cached instance of singleton bean 'lifecycleProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Unable to locate MultipartResolver with name 'multipartResolver': no multipart request handling provided
Creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Unable to locate LocaleResolver with name 'localeResolver': using default [org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver@16a28a96]
Creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Unable to locate ThemeResolver with name 'themeResolver': using default [org.springframework.web.servlet.theme.FixedThemeResolver@7f8b9ad4]
Creating instance of bean 'org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping'
Looking for URL mappings in application context: WebApplicationContext for namespace 'appServlet-servlet': startup date [Thu Apr 18 17:36:50 IST 2013]; parent: Root WebApplicationContext
Rejected bean name 'org.springframework.context.annotation.internalAsyncAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalScheduledAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalRequiredAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalCommonAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.aop.config.internalAutoProxyCreator': no URL paths identified
Rejected bean name 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0': no URL paths identified
Rejected bean name 'org.springframework.web.servlet.view.InternalResourceViewResolver#0': no URL paths identified
Rejected bean name 'instrumentDao': no URL paths identified
Rejected bean name 'portfolioDao': no URL paths identified
Rejected bean name 'instrumentService': no URL paths identified
Rejected bean name 'portfolioService': no URL paths identified
Rejected bean name 'entityManagerFactory': no URL paths identified
Rejected bean name 'transactionManager': no URL paths identified
Rejected bean name 'instrument': no URL paths identified
Rejected bean name 'investment': no URL paths identified
Rejected bean name 'portfolio': no URL paths identified
Rejected bean name 'instrumentServiceRest': no URL paths identified
Rejected bean name 'portfolioServiceRest': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor': no URL paths identified
Rejected bean name 'environment': no URL paths identified
Rejected bean name 'systemProperties': no URL paths identified
Rejected bean name 'systemEnvironment': no URL paths identified
Rejected bean name 'servletConfig': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry': no URL paths identified
Rejected bean name 'messageSource': no URL paths identified
Rejected bean name 'applicationEventMulticaster': no URL paths identified
Rejected bean name 'lifecycleProcessor': no URL paths identified
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping'
Creating instance of bean 'org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping'
Looking for URL mappings in application context: WebApplicationContext for namespace 'appServlet-servlet': startup date [Thu Apr 18 17:36:50 IST 2013]; parent: Root WebApplicationContext
Rejected bean name 'org.springframework.context.annotation.internalAsyncAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalScheduledAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalRequiredAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalCommonAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.aop.config.internalAutoProxyCreator': no URL paths identified
Rejected bean name 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0': no URL paths identified
Rejected bean name 'org.springframework.web.servlet.view.InternalResourceViewResolver#0': no URL paths identified
Rejected bean name 'instrumentDao': no URL paths identified
Rejected bean name 'portfolioDao': no URL paths identified
Rejected bean name 'instrumentService': no URL paths identified
Rejected bean name 'portfolioService': no URL paths identified
Rejected bean name 'entityManagerFactory': no URL paths identified
Rejected bean name 'transactionManager': no URL paths identified
Rejected bean name 'instrument': no URL paths identified
Rejected bean name 'investment': no URL paths identified
Rejected bean name 'portfolio': no URL paths identified
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/create/{symbol}] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/create/{symbol}.*] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/create/{symbol}/] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/update/{portfolioName}] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/update/{portfolioName}.*] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/update/{portfolioName}/] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/load/{symbol}] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/load/{symbol}.*] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/load/{symbol}/] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/create/{portfolioName}] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/create/{portfolioName}.*] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/create/{portfolioName}/] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/addInvestment/{portfolioName}/{symbolName}] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/addInvestment/{portfolioName}/{symbolName}.*] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/addInvestment/{portfolioName}/{symbolName}/] onto handler 'portfolioServiceRest'
Rejected bean name 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor': no URL paths identified
Rejected bean name 'environment': no URL paths identified
Rejected bean name 'systemProperties': no URL paths identified
Rejected bean name 'systemEnvironment': no URL paths identified
Rejected bean name 'servletConfig': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry': no URL paths identified
Rejected bean name 'messageSource': no URL paths identified
Rejected bean name 'applicationEventMulticaster': no URL paths identified
Rejected bean name 'lifecycleProcessor': no URL paths identified
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping'
No HandlerMappings found in servlet 'appServlet': using default
Creating instance of bean 'org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter'
Creating instance of bean 'org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter'
Creating instance of bean 'org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter'
No HandlerAdapters found in servlet 'appServlet': using default
Creating instance of bean 'org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerExceptionResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerExceptionResolver'
Creating instance of bean 'org.springframework.web.servlet.mvc.annotation.ResponseStatusExceptionResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.annotation.ResponseStatusExceptionResolver'
Creating instance of bean 'org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver'
No HandlerExceptionResolvers found in servlet 'appServlet': using default
Creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Unable to locate RequestToViewNameTranslator with name 'viewNameTranslator': using default [org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@20026067]
Returning cached instance of singleton bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Returning cached instance of singleton bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Unable to locate FlashMapManager with name 'flashMapManager': using default [org.springframework.web.servlet.support.SessionFlashMapManager@20c1400a]
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Searching for key 'spring.liveBeansView.mbeanDomain' in [servletConfigInitParams]
Searching for key 'spring.liveBeansView.mbeanDomain' in [servletContextInitParams]
Searching for key 'spring.liveBeansView.mbeanDomain' in [jndiProperties]
Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain]
Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException: Name [spring.liveBeansView.mbeanDomain] is not bound in this Context. Unable to find [spring.liveBeansView.mbeanDomain].
Looking up JNDI object with name [spring.liveBeansView.mbeanDomain]
JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: Name [spring.liveBeansView.mbeanDomain] is not bound in this Context. Unable to find [spring.liveBeansView.mbeanDomain].. Returning null.
Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
Published WebApplicationContext of servlet 'appServlet' as ServletContext attribute with name [org.springframework.web.servlet.FrameworkServlet.CONTEXT.appServlet]
FrameworkServlet 'appServlet': initialization completed in 485 ms
Servlet 'appServlet' configured successfully
DispatcherServlet with name 'appServlet' processing GET request for [/portfolio/addInvestment/myFirstTime/CIPLA]
Matching patterns for request [/portfolio/addInvestment/myFirstTime/CIPLA] are [/portfolio/addInvestment/{portfolioName}/{symbolName}]
URI Template variables for request [/portfolio/addInvestment/myFirstTime/CIPLA] are {portfolioName=myFirstTime, symbolName=CIPLA}
Mapping [/portfolio/addInvestment/myFirstTime/CIPLA] to HandlerExecutionChain with handler [com.inteltrader.rest.PortfolioServiceRest@1dcb3890] and 2 interceptors
Last-Modified value for [/portfolio/addInvestment/myFirstTime/CIPLA] is: -1
Invoking request handler method: public org.springframework.http.ResponseEntity com.inteltrader.rest.PortfolioServiceRest.addInvestment(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
begin
Obtaining JDBC connection
Obtained JDBC connection
initial autocommit status: true
disabling autocommit
Loading entity: [com.inteltrader.entity.Portfolio#myFirstTime]
select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Result set row: 0
Result row: EntityKey[com.inteltrader.entity.Investment#1], EntityKey[com.inteltrader.entity.Portfolio#myFirstTime]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Resolving associations for [com.inteltrader.entity.Investment#1]
Done materializing entity [com.inteltrader.entity.Investment#1]
Resolving associations for [com.inteltrader.entity.Portfolio#myFirstTime]
Done materializing entity [com.inteltrader.entity.Portfolio#myFirstTime]
1 collections were found in result set for role: com.inteltrader.entity.Portfolio.investmentList
Collection fully initialized: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
1 collections initialized for role: com.inteltrader.entity.Portfolio.investmentList
Done entity load
Loading collection: [com.inteltrader.entity.Investment.transactionsList#1]
select transactio0_.INVESTMENT_ID as INVESTMENT1_2_0_, transactio0_.quantity as quantity3_0_, transactio0_.transactionId as transact3_3_0_, transactio0_.transactionPrice as transact4_3_0_ from TRADER_DB.INVESTMENT_TRANSACTION transactio0_ where transactio0_.INVESTMENT_ID=?
Result set contains (possibly empty) collection: [com.inteltrader.entity.Investment.transactionsList#1]
1 collections were found in result set for role: com.inteltrader.entity.Investment.transactionsList
Collection fully initialized: [com.inteltrader.entity.Investment.transactionsList#1]
1 collections initialized for role: com.inteltrader.entity.Investment.transactionsList
Done loading collection
Mark transaction for rollback
Written [FAILURE] as "text/html" using [org.springframework.http.converter.StringHttpMessageConverter@1a6c3de]
Null ModelAndView returned to DispatcherServlet with name 'appServlet': assuming HandlerAdapter completed request handling
Successfully completed request
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
DispatcherServlet with name 'appServlet' processing GET request for [/portfolio/addInvestment/myFirstTime/CIPLA]
Matching patterns for request [/portfolio/addInvestment/myFirstTime/CIPLA] are [/portfolio/addInvestment/{portfolioName}/{symbolName}]
URI Template variables for request [/portfolio/addInvestment/myFirstTime/CIPLA] are {portfolioName=myFirstTime, symbolName=CIPLA}
Mapping [/portfolio/addInvestment/myFirstTime/CIPLA] to HandlerExecutionChain with handler [com.inteltrader.rest.PortfolioServiceRest@1dcb3890] and 2 interceptors
Last-Modified value for [/portfolio/addInvestment/myFirstTime/CIPLA] is: -1
Invoking request handler method: public org.springframework.http.ResponseEntity com.inteltrader.rest.PortfolioServiceRest.addInvestment(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
begin
Obtaining JDBC connection
Opening new JDBC connection
Created connection to: jdbc:mysql://localhost:3306/TRADER_DB, Isolation Level: 4
Obtained JDBC connection
initial autocommit status: true
disabling autocommit
Loading entity: [com.inteltrader.entity.Portfolio#myFirstTime]
select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Result set row: 0
Result row: EntityKey[com.inteltrader.entity.Investment#1], EntityKey[com.inteltrader.entity.Portfolio#myFirstTime]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Resolving associations for [com.inteltrader.entity.Investment#1]
Done materializing entity [com.inteltrader.entity.Investment#1]
Resolving associations for [com.inteltrader.entity.Portfolio#myFirstTime]
Done materializing entity [com.inteltrader.entity.Portfolio#myFirstTime]
1 collections were found in result set for role: com.inteltrader.entity.Portfolio.investmentList
Collection fully initialized: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
1 collections initialized for role: com.inteltrader.entity.Portfolio.investmentList
Done entity load
Loading collection: [com.inteltrader.entity.Investment.transactionsList#1]
select transactio0_.INVESTMENT_ID as INVESTMENT1_2_0_, transactio0_.quantity as quantity3_0_, transactio0_.transactionId as transact3_3_0_, transactio0_.transactionPrice as transact4_3_0_ from TRADER_DB.INVESTMENT_TRANSACTION transactio0_ where transactio0_.INVESTMENT_ID=?
Result set contains (possibly empty) collection: [com.inteltrader.entity.Investment.transactionsList#1]
1 collections were found in result set for role: com.inteltrader.entity.Investment.transactionsList
Collection fully initialized: [com.inteltrader.entity.Investment.transactionsList#1]
1 collections initialized for role: com.inteltrader.entity.Investment.transactionsList
Done loading collection
Mark transaction for rollback
Written [FAILURE] as "text/html" using [org.springframework.http.converter.StringHttpMessageConverter@1a6c3de]
Null ModelAndView returned to DispatcherServlet with name 'appServlet': assuming HandlerAdapter completed request handling
Successfully completed request
