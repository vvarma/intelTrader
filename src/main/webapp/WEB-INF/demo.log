Initializing servlet 'appServlet'
Initializing new StandardServletEnvironment
Adding [servletConfigInitParams] PropertySource with lowest search precedence
Adding [servletContextInitParams] PropertySource with lowest search precedence
Adding [jndiProperties] PropertySource with lowest search precedence
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment]
FrameworkServlet 'appServlet': initialization started
Servlet with name 'appServlet' will try to create custom WebApplicationContext context of class 'org.springframework.web.context.support.XmlWebApplicationContext', using parent context [Root WebApplicationContext: startup date [Fri Apr 19 10:39:50 IST 2013]; root of context hierarchy]
Searching for key 'spring.profiles.active' in [servletConfigInitParams]
Searching for key 'spring.profiles.active' in [servletContextInitParams]
Searching for key 'spring.profiles.active' in [jndiProperties]
Looking up JNDI object with name [java:comp/env/spring.profiles.active]
Converted JNDI name [java:comp/env/spring.profiles.active] not found - trying original name [spring.profiles.active]. javax.naming.NameNotFoundException: Name [spring.profiles.active] is not bound in this Context. Unable to find [spring.profiles.active].
Looking up JNDI object with name [spring.profiles.active]
JNDI lookup for name [spring.profiles.active] threw NamingException with message: Name [spring.profiles.active] is not bound in this Context. Unable to find [spring.profiles.active].. Returning null.
Searching for key 'spring.profiles.active' in [systemProperties]
Searching for key 'spring.profiles.active' in [systemEnvironment]
Could not find key 'spring.profiles.active' in any property source. Returning [null]
Searching for key 'spring.profiles.default' in [servletConfigInitParams]
Searching for key 'spring.profiles.default' in [servletContextInitParams]
Searching for key 'spring.profiles.default' in [jndiProperties]
Looking up JNDI object with name [java:comp/env/spring.profiles.default]
Converted JNDI name [java:comp/env/spring.profiles.default] not found - trying original name [spring.profiles.default]. javax.naming.NameNotFoundException: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].
Looking up JNDI object with name [spring.profiles.default]
JNDI lookup for name [spring.profiles.default] threw NamingException with message: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].. Returning null.
Searching for key 'spring.profiles.default' in [systemProperties]
Searching for key 'spring.profiles.default' in [systemEnvironment]
Could not find key 'spring.profiles.default' in any property source. Returning [null]
Searching for key 'spring.profiles.default' in [servletConfigInitParams]
Searching for key 'spring.profiles.default' in [servletContextInitParams]
Searching for key 'spring.profiles.default' in [jndiProperties]
Looking up JNDI object with name [java:comp/env/spring.profiles.default]
Converted JNDI name [java:comp/env/spring.profiles.default] not found - trying original name [spring.profiles.default]. javax.naming.NameNotFoundException: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].
Looking up JNDI object with name [spring.profiles.default]
JNDI lookup for name [spring.profiles.default] threw NamingException with message: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].. Returning null.
Searching for key 'spring.profiles.default' in [systemProperties]
Searching for key 'spring.profiles.default' in [systemEnvironment]
Could not find key 'spring.profiles.default' in any property source. Returning [null]
Replacing [servletContextInitParams] PropertySource with [servletContextInitParams]
Replacing [servletConfigInitParams] PropertySource with [servletConfigInitParams]
Refreshing WebApplicationContext for namespace 'appServlet-servlet': startup date [Fri Apr 19 10:39:55 IST 2013]; parent: Root WebApplicationContext
Initializing new StandardEnvironment
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
Initializing new StandardEnvironment
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
Loading schema mappings from [META-INF/spring.schemas]
Loaded schema mappings: {http://www.springframework.org/schema/data/jpa/spring-jpa-1.2.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.2.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.1.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.1.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.5.xsd=org/springframework/data/repository/config/spring-repository-1.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.0.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.3.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.4.xsd=org/springframework/data/repository/config/spring-repository-1.4.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.3.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/data/repository/spring-repository.xsd=org/springframework/data/repository/config/spring-repository-1.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.0.xsd=org/springframework/data/repository/config/spring-repository-1.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.1.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.1.xsd
Found XML schema [http://www.springframework.org/schema/task/spring-task-3.0.xsd] in classpath: org/springframework/scheduling/config/spring-task-3.0.xsd
Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd
Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd
Found XML schema [http://www.springframework.org/schema/tx/spring-tx-3.1.xsd] in classpath: org/springframework/transaction/config/spring-tx-3.1.xsd
Loading bean definitions
Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/data/repository=org.springframework.data.repository.config.RepositoryNameSpaceHandler, http://www.springframework.org/schema/data/jpa=org.springframework.data.jpa.repository.config.JpaRepositoryNameSpaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
Neither XML 'id' nor 'name' specified - using generated bean name [org.springframework.web.servlet.view.InternalResourceViewResolver#0]
Neither XML 'id' nor 'name' specified - using generated bean name [org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver#3d36ea90]
Initializing new StandardEnvironment
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
Looking for matching resources in directory tree [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Resolved location pattern [classpath*:com/inteltrader/**/*.class] to resources [file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\Advice.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\FIFOList.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\InstrumentVo.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\Strategies.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\Strategy.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\StrategyMACD.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao\IInstrumentDao.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao\InstrumentDao.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao\IPortfolioDao.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao\PortfolioDao.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Instrument.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Investment.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Portfolio.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Price.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Transactions.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest\InstrumentServiceRest.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest\PortfolioServiceRest.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\AnalyserService.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\CronService.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\InstrumentService.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\InstrumentServiceImpl.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\PortfolioService.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\PortfolioServiceImpl.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util\DownloadZip.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util\ExtractZipFile.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util\ReadPriceCsv.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util\RestCodes.class]]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Instrument.class]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Investment.class]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Portfolio.class]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest\InstrumentServiceRest.class]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest\PortfolioServiceRest.class]
Loaded 21 bean definitions from location pattern [/WEB-INF/applicationContext.xml]
Bean factory for WebApplicationContext for namespace 'appServlet-servlet': org.springframework.beans.factory.support.DefaultListableBeanFactory@6061b355: defining beans [org.springframework.context.annotation.internalAsyncAnnotationProcessor,org.springframework.context.annotation.internalScheduledAnnotationProcessor,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0,org.springframework.web.servlet.view.InternalResourceViewResolver#0,instrumentDao,portfolioDao,instrumentService,portfolioService,entityManagerFactory,transactionManager,instrument,investment,portfolio,instrumentServiceRest,portfolioServiceRest]; parent: org.springframework.beans.factory.support.DefaultListableBeanFactory@37c18481
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@5dc01aaa]
Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@6f16befb]
Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.DelegatingThemeSource@3e5489b7]
Creating shared instance of singleton bean 'entityManagerFactory'
Creating instance of bean 'entityManagerFactory'
Eagerly caching bean 'entityManagerFactory' to allow for resolving potential circular references
Creating instance of bean 'org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver#3d36ea90'
Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Creating instance of bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0' to allow for resolving potential circular references
Creating instance of bean '(inner bean)'
Creating shared instance of singleton bean 'transactionManager'
Creating instance of bean 'transactionManager'
Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
Returning eagerly cached instance of singleton bean 'entityManagerFactory' that is not fully initialized yet - a consequence of a circular reference
Ignoring currently created advisor 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0': Error creating bean with name 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0': Cannot create inner bean '(inner bean)' of type [org.springframework.transaction.interceptor.TransactionInterceptor] while setting bean property 'transactionInterceptor'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)': Cannot resolve reference to bean 'transactionManager' while setting bean property 'transactionManager'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'transactionManager' defined in ServletContext resource [/WEB-INF/applicationContext.xml]: Cannot resolve reference to bean 'entityManagerFactory' while setting bean property 'entityManagerFactory'; nested exception is org.springframework.beans.factory.BeanCurrentlyInCreationException: Error creating bean with name 'entityManagerFactory': FactoryBean which is currently in creation returned null from getObject
Finished creating instance of bean 'org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver#3d36ea90'
Invoking afterPropertiesSet() on bean with name 'entityManagerFactory'
Building JPA container EntityManagerFactory for persistence unit 'intelTrader'
Adding type registration boolean -> org.hibernate.type.BooleanType@450f4f9e
Adding type registration boolean -> org.hibernate.type.BooleanType@450f4f9e
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@450f4f9e
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@69c18b78
Adding type registration true_false -> org.hibernate.type.TrueFalseType@753425c4
Adding type registration yes_no -> org.hibernate.type.YesNoType@65281828
Adding type registration byte -> org.hibernate.type.ByteType@44742f73
Adding type registration byte -> org.hibernate.type.ByteType@44742f73
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@44742f73
Adding type registration character -> org.hibernate.type.CharacterType@1fbf7a1f
Adding type registration char -> org.hibernate.type.CharacterType@1fbf7a1f
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1fbf7a1f
Adding type registration short -> org.hibernate.type.ShortType@65534fec
Adding type registration short -> org.hibernate.type.ShortType@65534fec
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@65534fec
Adding type registration integer -> org.hibernate.type.IntegerType@60b5c1eb
Adding type registration int -> org.hibernate.type.IntegerType@60b5c1eb
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@60b5c1eb
Adding type registration long -> org.hibernate.type.LongType@576bca9e
Adding type registration long -> org.hibernate.type.LongType@576bca9e
Adding type registration java.lang.Long -> org.hibernate.type.LongType@576bca9e
Adding type registration float -> org.hibernate.type.FloatType@2101f023
Adding type registration float -> org.hibernate.type.FloatType@2101f023
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2101f023
Adding type registration double -> org.hibernate.type.DoubleType@196ad326
Adding type registration double -> org.hibernate.type.DoubleType@196ad326
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@196ad326
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6fca0e2
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6fca0e2
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@49ff75f3
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@49ff75f3
Adding type registration string -> org.hibernate.type.StringType@792f1d1b
Adding type registration java.lang.String -> org.hibernate.type.StringType@792f1d1b
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3b51f2a9
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5a26d36b
Adding type registration url -> org.hibernate.type.UrlType@7647df5e
Adding type registration java.net.URL -> org.hibernate.type.UrlType@7647df5e
Adding type registration date -> org.hibernate.type.DateType@c50dd20
Adding type registration java.sql.Date -> org.hibernate.type.DateType@c50dd20
Adding type registration time -> org.hibernate.type.TimeType@42296d15
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@42296d15
Adding type registration timestamp -> org.hibernate.type.TimestampType@2581e373
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2581e373
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2581e373
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4b642b59
Adding type registration calendar -> org.hibernate.type.CalendarType@74d41df8
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@74d41df8
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@74d41df8
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3221e751
Adding type registration locale -> org.hibernate.type.LocaleType@785dd85d
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@785dd85d
Adding type registration currency -> org.hibernate.type.CurrencyType@7babd6d0
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7babd6d0
Adding type registration timezone -> org.hibernate.type.TimeZoneType@53c75a1d
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@53c75a1d
Adding type registration class -> org.hibernate.type.ClassType@7d3fe3aa
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7d3fe3aa
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4e8bf62
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4e8bf62
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@47aef63a
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@33a1bf22
Adding type registration binary -> org.hibernate.type.BinaryType@25d496c7
Adding type registration byte[] -> org.hibernate.type.BinaryType@25d496c7
Adding type registration [B -> org.hibernate.type.BinaryType@25d496c7
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@68f41a22
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@68f41a22
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@68f41a22
Adding type registration image -> org.hibernate.type.ImageType@4fb5d0ce
Adding type registration characters -> org.hibernate.type.CharArrayType@7b02fa42
Adding type registration char[] -> org.hibernate.type.CharArrayType@7b02fa42
Adding type registration [C -> org.hibernate.type.CharArrayType@7b02fa42
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@585b8a10
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@585b8a10
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@585b8a10
Adding type registration text -> org.hibernate.type.TextType@3687196c
Adding type registration ntext -> org.hibernate.type.NTextType@332fce0c
Adding type registration blob -> org.hibernate.type.BlobType@36a351b6
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@36a351b6
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@174a94af
Adding type registration clob -> org.hibernate.type.ClobType@36fe428e
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@36fe428e
Adding type registration nclob -> org.hibernate.type.NClobType@24cc7141
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@24cc7141
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@59d2e131
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2a4c4d05
Adding type registration serializable -> org.hibernate.type.SerializableType@11bae008
Adding type registration object -> org.hibernate.type.ObjectType@7f6d0b6d
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7f6d0b6d
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@201d6d59
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6bf5fe87
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@63198870
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@214ca3e4
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2e9bded0
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7b414197
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@79395fb8
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@25bb6735
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Processing PersistenceUnitInfo [
	name: intelTrader
	persistence provider classname: org.hibernate.ejb.HibernatePersistence
	classloader: WebappClassLoader
  context: 
  delegate: false
  repositories:
    /WEB-INF/classes/
----------> Parent Classloader:
ClassRealm[plugin>org.apache.tomcat.maven:tomcat7-maven-plugin:2.0, parent: sun.misc.Launcher$AppClassLoader@1875303f]

	Temporary classloader: org.springframework.instrument.classloading.SimpleThrowawayClassLoader@3274dbed
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/vvarm1/IdeaProjects/intelTrader/src/main/webapp/WEB-INF/classes
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.inteltrader.entity.Instrument
		com.inteltrader.entity.Portfolio
		com.inteltrader.entity.Investment]
	Mapping files names []
	Properties [
		hibernate.connection.username: root
		hibernate.connection.password: root
		hibernate.dialect: org.hibernate.dialect.MySQLDialect
		hibernate.c3p0.min_size: 10
		hibernate.connection.url: jdbc:mysql://localhost:3306/TRADER_DB
		hibernate.show_sql: true
		hibernate.connection.driver_class: com.mysql.jdbc.Driver
		hibernate.hbm2ddl.auto: update]
Detect class: true; detect hbm: true
Detect class: true; detect hbm: true
Searching mapped entities in jar/par: file:/C:/Users/vvarm1/IdeaProjects/intelTrader/src/main/webapp/WEB-INF/classes
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.ejb.event.JpaIntegrator].
No JNDI name configured for binding Ejb3Configuration
Preparing to build session factory with filters : {}
Processing hbm.xml files
Process annotated classes
Binding entity from annotated class: com.inteltrader.entity.Instrument
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Instrument
Bind entity com.inteltrader.entity.Instrument on table INSTRUMENT
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=SYMBOL_NAME, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property symbolName with lazy=false
building SimpleValue for symbolName
Building property symbolName
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=priceList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=priceList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=priceList_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='priceList_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='SYMBOL_NAME', referencedColumn='', mappedBy=''}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Collection role: com.inteltrader.entity.Instrument.priceList
Building property priceList
Binding entity from annotated class: com.inteltrader.entity.Portfolio
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Portfolio
Bind entity com.inteltrader.entity.Portfolio on table PORTFOLIO
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=PORTFOLIO_NAME, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property portfolioName with lazy=false
building SimpleValue for portfolioName
Building property portfolioName
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='associatedPortfolio'}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=investmentList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=element, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=investmentList_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='investmentList_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='associatedPortfolio'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='associatedPortfolio'}
Collection role: com.inteltrader.entity.Portfolio.investmentList
Building property investmentList
Binding entity from annotated class: com.inteltrader.entity.Investment
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Investment
Bind entity com.inteltrader.entity.Investment on table INVESTMENT
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=INVESTMENT_ID, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property investmentId with lazy=false
building SimpleValue for investmentId
Building property investmentId
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=associatedPortfolio, insertable=true, updatable=true, unique=false}
Building property associatedPortfolio
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=currentPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property currentPrice with lazy=false
building SimpleValue for currentPrice
Building property currentPrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=quantity, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property quantity with lazy=false
building SimpleValue for quantity
Building property quantity
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=INVESTMENT_SYMBOL, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property symbolName with lazy=false
building SimpleValue for symbolName
Building property symbolName
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=transactionsList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=transactionsList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=transactionsList_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='transactionsList_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='INVESTMENT_ID', referencedColumn='', mappedBy=''}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Collection role: com.inteltrader.entity.Investment.transactionsList
Building property transactionsList
Setting SimpleValue typeName for symbolName
Setting SimpleValue typeName for portfolioName
Setting SimpleValue typeName for investmentId
Setting SimpleValue typeName for currentPrice
Setting SimpleValue typeName for quantity
Setting SimpleValue typeName for symbolName
Processing fk mappings (*ToOne and JoinedSubclass)
Processing extends queue
Processing extends queue
Processing collection mappings
Second pass for collection: com.inteltrader.entity.Investment.transactionsList
Binding a collection of element: com.inteltrader.entity.Investment.transactionsList
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT_TRANSACTION), mappingColumn=quantity, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property quantity with lazy=false
building SimpleValue for quantity
Setting SimpleValue typeName for quantity
Building property quantity
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT_TRANSACTION), mappingColumn=transactionId, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property transactionId with lazy=false
building SimpleValue for transactionId
Setting SimpleValue typeName for transactionId
Building property transactionId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT_TRANSACTION), mappingColumn=transactionPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property transactionPrice with lazy=false
building SimpleValue for transactionPrice
Setting SimpleValue typeName for transactionPrice
Building property transactionPrice
Mapped collection key: INVESTMENT_ID, element: quantity, transactionId, transactionPrice
Second pass for collection: com.inteltrader.entity.Instrument.priceList
Binding a collection of element: com.inteltrader.entity.Instrument.priceList
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=closePrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property closePrice with lazy=false
building SimpleValue for closePrice
Setting SimpleValue typeName for closePrice
Building property closePrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=highPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property highPrice with lazy=false
building SimpleValue for highPrice
Setting SimpleValue typeName for highPrice
Building property highPrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=lastClosePrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property lastClosePrice with lazy=false
building SimpleValue for lastClosePrice
Setting SimpleValue typeName for lastClosePrice
Building property lastClosePrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=lowPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property lowPrice with lazy=false
building SimpleValue for lowPrice
Setting SimpleValue typeName for lowPrice
Building property lowPrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=openPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property openPrice with lazy=false
building SimpleValue for openPrice
Setting SimpleValue typeName for openPrice
Building property openPrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=priceId, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property priceId with lazy=false
building SimpleValue for priceId
Setting SimpleValue typeName for priceId
Building property priceId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=timeStamp, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property timeStamp with lazy=false
building SimpleValue for timeStamp
Setting SimpleValue typeName for timeStamp
Building property timeStamp
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=totalTradedQuantity, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property totalTradedQuantity with lazy=false
building SimpleValue for totalTradedQuantity
Setting SimpleValue typeName for totalTradedQuantity
Building property totalTradedQuantity
Mapped collection key: SYMBOL_NAME, element: closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity
Second pass for collection: com.inteltrader.entity.Portfolio.investmentList
Binding a OneToMany: com.inteltrader.entity.Portfolio.investmentList through a foreign key
Mapping collection: com.inteltrader.entity.Portfolio.investmentList -> INVESTMENT
Retrieving property com.inteltrader.entity.Investment.associatedPortfolio
Mapped collection key: associatedPortfolio_PORTFOLIO_NAME, one-to-many: com.inteltrader.entity.Investment
Processing native query and ResultSetMapping mappings
Processing association property references
Creating tables' unique integer identifiers
Processing foreign key constraints
Resolving reference to class: com.inteltrader.entity.Instrument
Resolving reference to class: com.inteltrader.entity.Portfolio
Resolving reference to class: com.inteltrader.entity.Investment
HHH000022: c3p0 properties were encountered, but the org.hibernate.service.jdbc.connections.internal.C3P0ConnectionProvider provider class was not found on the classpath; these properties are going to be ignored.
HHH000402: Using Hibernate built-in connection pool (not for production use!)
HHH000115: Hibernate connection pool size: 20
HHH000006: Autocommit mode: true
HHH000401: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/TRADER_DB]
HHH000046: Connection properties: {user=root, password=root, autocommit=true, release_mode=auto}
Opening new JDBC connection
Created connection to: jdbc:mysql://localhost:3306/TRADER_DB, Isolation Level: 4
Database ->
       name : MySQL
    version : 5.6.10-log
      major : 5
      minor : 6
Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.9 ( Revision: ${svn.Revision} )
      major : 5
      minor : 1
JDBC version : 3.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: disabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
multi-tenancy strategy : NONE
Connection release mode: auto
HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
Maximum outer join fetch depth: 2
Default batch fetch size: 1
Generate SQL with comments: disabled
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
HHH000397: Using ASTQueryTranslatorFactory
Query language substitutions: {}
JPA-QL strict compliance: enabled
Second-level cache: enabled
Query cache: disabled
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
Optimize cache for minimal puts: disabled
Structured second-level cache entries: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Named query checking : enabled
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : : disabled
Building session factory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\vvarm1\IdeaProjects\intelTrader\target\tomcat, hibernate.connection.url=jdbc:mysql://localhost:3306/TRADER_DB, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.ejb.discard_pc_on_close=false, catalina.useNaming=true, hibernate.transaction.flush_before_completion=false, os.name=Windows 7, sun.boot.class.path=C:\Program Files\Java\jdk1.7.0_10\jre\lib\resources.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\rt.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\jce.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.7.0_10\jre\classes, java.util.logging.config.file=C:\Users\vvarm1\IdeaProjects\intelTrader\target\tomcat\conf\logging.properties, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.7.0_10-b18, hibernate.connection.autocommit=true, hibernate.c3p0.min_size=10, user.name=vvarm1, shared.loader=, guice.disable.misplaced.annotation.check=true, tomcat.util.buf.StringCache.byte.enabled=true, javax.persistence.validation.mode=AUTO, hibernate.connection.release_mode=auto, idea.launcher.bin.path=C:\Program Files (x86)\JetBrains\IntelliJ IDEA Community Edition 12.0.4\bin, user.language=en, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, sun.boot.library.path=C:\Program Files\Java\jdk1.7.0_10\jre\bin, classworlds.conf=C:\Program Files\Apache Software Foundation\apache-maven-3.0.5\bin\m2.conf, java.version=1.7.0_10, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, user.timezone=Asia/Calcutta, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.7.0_10\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, file.encoding.pkg=sun.io, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.tomcat.,org.apache.jasper., file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=51.0, user.country=US, java.home=C:\Program Files\Java\jdk1.7.0_10\jre, java.vm.info=mixed mode, os.version=6.1, hibernate.transaction.factory_class=org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory, hibernate.query.jpaql_strict_compliance=true, path.separator=;, java.vm.version=23.6-b04, hibernate.connection.password=root, user.variant=, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.scan.DefaultJarScanner.jarsToSkip=bootstrap.jar,commons-daemon.jar,tomcat-juli.jar,annotations-api.jar,el-api.jar,jsp-api.jar,servlet-api.jar,catalina.jar,catalina-ant.jar,catalina-ha.jar,catalina-tribes.jar,jasper.jar,jasper-el.jar,ecj-*.jar,tomcat-api.jar,tomcat-util.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-jni.jar,tomcat-spdy.jar,tomcat-i18n-en.jar,tomcat-i18n-es.jar,tomcat-i18n-fr.jar,tomcat-i18n-ja.jar,tomcat-juli-adapters.jar,catalina-jmx-remote.jar,catalina-ws.jar,tomcat-jdbc.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,jstl.jar,geronimo-spec-jaxrpc*.jar,wsdl4j*.jar,ant.jar,ant-junit*.jar,aspectj*.jar,jmx.jar,h2*.jar,hibernate*.jar,httpclient*.jar,jmx-tools.jar,jta*.jar,log4j*.jar,mail*.jar,slf4j*.jar,xercesImpl.jar,xmlParserAPIs.jar,xml-apis.jar,access-bridge-64.jar,dnsns.jar,jaccess.jar,ldapsec.jar,localedata.jar,sunjce_provider.jar,sunmscapi.jar,sunpkcs11.jar,jhall.jar,tools.jar,sunec.jar,zipfs.jar,gnome-java-bridge.jar,pulse-java.jar,apple_provider.jar,AppleScriptEngine.jar,CoreAudio.jar,dns_sd.jar,j3daudio.jar,j3dcore.jar,j3dutils.jar,jai_core.jar,jai_codec.jar,mlibwrapper_jai.jar,MRJToolkit.jar,vecmath.jar,junit.jar,junit-*.jar,ant-launcher.jar, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.tomcat.,org.apache.jasper., user.script=, java.naming.factory.url.pkgs=org.apache.naming, user.home=C:\Users\vvarm1, org.apache.catalina.startup.ContextConfig.jarsToSkip=, java.specification.vendor=Oracle Corporation, hibernate.hbm2ddl.auto=update, java.library.path=C:\Program Files\Java\jdk1.7.0_10\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\JetBrains\IntelliJ IDEA Community Edition 12.0.4\bin\..\.\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\ThinkPad\Bluetooth Software\;C:\Program Files\ThinkPad\Bluetooth Software\syswow64;c:\Program Files\Intel\WiFi\bin\;c:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files (x86)\Git\cmd;C:\Users\vvarm1\Documents\play-2.0.3;C:\Program Files\Java\jdk1.7.0_10\bin;C:\Program Files\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\QuickTime\QTSystem\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Java\jre6\bin;C:\Program Files\Apache Software Foundation\apache-maven-3.0.5\bin;c:\program files (x86)\jetbrains\intellij idea community edition 12.0.4\jre\jre\bin;., java.vendor.url=http://java.oracle.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, org.apache.catalina.startup.TldConfig.jarsToSkip=, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, common.loader=${catalina.base}/lib,${catalina.base}/lib/*.jar,${catalina.home}/lib,${catalina.home}/lib/*.jar, maven.home=C:\Program Files\Apache Software Foundation\apache-maven-3.0.5, java.runtime.name=Java(TM) SE Runtime Environment, java.class.path=C:\Program Files\Apache Software Foundation\apache-maven-3.0.5\boot\plexus-classworlds-2.4.jar;C:\Program Files (x86)\JetBrains\IntelliJ IDEA Community Edition 12.0.4\lib\idea_rt.jar, sun.java.command=com.intellij.rt.execution.application.AppMain org.codehaus.classworlds.Launcher --no-plugin-registry --fail-fast --strict-checksums --update-snapshots org.apache.tomcat.maven:tomcat7-maven-plugin:2.0:run, hibernate.bytecode.use_reflection_optimizer=false, idea.launcher.port=7533, java.vm.specification.name=Java Virtual Machine Specification, catalina.home=C:\Users\vvarm1\IdeaProjects\intelTrader\target\tomcat, java.vm.specification.version=1.7, sun.os.patch.level=Service Pack 1, sun.cpu.endian=little, java.io.tmpdir=C:\Users\vvarm1\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, server.loader=, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, java.ext.dirs=C:\Program Files\Java\jdk1.7.0_10\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=C:\Users\vvarm1\IdeaProjects\intelTrader, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding=UTF-8, hibernate.use_identifier_rollback=false, java.specification.version=1.7, hibernate.show_sql=true}
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Static SQL for entity: com.inteltrader.entity.Investment
 Version select: select INVESTMENT_ID from TRADER_DB.INVESTMENT where INVESTMENT_ID =?
 Snapshot select: select investment_.INVESTMENT_ID, investment_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_, investment_.currentPrice as currentP2_2_, investment_.quantity as quantity2_, investment_.INVESTMENT_SYMBOL as INVESTMENT4_2_ from TRADER_DB.INVESTMENT investment_ where investment_.INVESTMENT_ID=?
 Insert 0: insert into TRADER_DB.INVESTMENT (associatedPortfolio_PORTFOLIO_NAME, currentPrice, quantity, INVESTMENT_SYMBOL, INVESTMENT_ID) values (?, ?, ?, ?, ?)
 Update 0: update TRADER_DB.INVESTMENT set associatedPortfolio_PORTFOLIO_NAME=?, currentPrice=?, quantity=?, INVESTMENT_SYMBOL=? where INVESTMENT_ID=?
 Delete 0: delete from TRADER_DB.INVESTMENT where INVESTMENT_ID=?
 Identity insert: insert into TRADER_DB.INVESTMENT (associatedPortfolio_PORTFOLIO_NAME, currentPrice, quantity, INVESTMENT_SYMBOL) values (?, ?, ?, ?)
Static SQL for entity: com.inteltrader.entity.Instrument
 Version select: select SYMBOL_NAME from TRADER_DB.INSTRUMENT where SYMBOL_NAME =?
 Snapshot select: select instrument_.SYMBOL_NAME from TRADER_DB.INSTRUMENT instrument_ where instrument_.SYMBOL_NAME=?
 Insert 0: insert into TRADER_DB.INSTRUMENT (SYMBOL_NAME) values (?)
 Update 0: null
 Delete 0: delete from TRADER_DB.INSTRUMENT where SYMBOL_NAME=?
Static SQL for entity: com.inteltrader.entity.Portfolio
 Version select: select PORTFOLIO_NAME from TRADER_DB.PORTFOLIO where PORTFOLIO_NAME =?
 Snapshot select: select portfolio_.PORTFOLIO_NAME from TRADER_DB.PORTFOLIO portfolio_ where portfolio_.PORTFOLIO_NAME=?
 Insert 0: insert into TRADER_DB.PORTFOLIO (PORTFOLIO_NAME) values (?)
 Update 0: null
 Delete 0: delete from TRADER_DB.PORTFOLIO where PORTFOLIO_NAME=?
Static SQL for collection: com.inteltrader.entity.Instrument.priceList
 Row insert: insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
 Row update: update TRADER_DB.INSTRUMENT_PRICE set closePrice=?, highPrice=?, lastClosePrice=?, lowPrice=?, openPrice=?, priceId=?, timeStamp=?, totalTradedQuantity=? where SYMBOL_NAME=? and priceId=? and totalTradedQuantity=?
 Row delete: delete from TRADER_DB.INSTRUMENT_PRICE where SYMBOL_NAME=? and priceId=? and totalTradedQuantity=?
 One-shot delete: delete from TRADER_DB.INSTRUMENT_PRICE where SYMBOL_NAME=?
Static SQL for collection: com.inteltrader.entity.Investment.transactionsList
 Row insert: insert into TRADER_DB.INVESTMENT_TRANSACTION (INVESTMENT_ID, quantity, transactionId, transactionPrice) values (?, ?, ?, ?)
 Row update: update TRADER_DB.INVESTMENT_TRANSACTION set quantity=?, transactionId=?, transactionPrice=? where INVESTMENT_ID=? and quantity=? and transactionId=? and transactionPrice=?
 Row delete: delete from TRADER_DB.INVESTMENT_TRANSACTION where INVESTMENT_ID=? and quantity=? and transactionId=? and transactionPrice=?
 One-shot delete: delete from TRADER_DB.INVESTMENT_TRANSACTION where INVESTMENT_ID=?
Static SQL for collection: com.inteltrader.entity.Portfolio.investmentList
 Row insert: update TRADER_DB.INVESTMENT set associatedPortfolio_PORTFOLIO_NAME=? where INVESTMENT_ID=?
 Row delete: update TRADER_DB.INVESTMENT set associatedPortfolio_PORTFOLIO_NAME=null where associatedPortfolio_PORTFOLIO_NAME=? and INVESTMENT_ID=?
 One-shot delete: update TRADER_DB.INVESTMENT set associatedPortfolio_PORTFOLIO_NAME=null where associatedPortfolio_PORTFOLIO_NAME=?
Static select for entity com.inteltrader.entity.Instrument [NONE]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for entity com.inteltrader.entity.Instrument [READ]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for entity com.inteltrader.entity.Instrument [UPGRADE]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [UPGRADE_NOWAIT]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [FORCE]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [PESSIMISTIC_READ]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? lock in share mode
Static select for entity com.inteltrader.entity.Instrument [PESSIMISTIC_WRITE]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [PESSIMISTIC_FORCE_INCREMENT]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [OPTIMISTIC]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for entity com.inteltrader.entity.Instrument [OPTIMISTIC_FORCE_INCREMENT]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for action ACTION_MERGE on entity com.inteltrader.entity.Instrument: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for action ACTION_REFRESH on entity com.inteltrader.entity.Instrument: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for entity com.inteltrader.entity.Investment [NONE]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_1_, investment0_.currentPrice as currentP2_2_1_, investment0_.quantity as quantity2_1_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_1_, portfolio1_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.INVESTMENT investment0_ left outer join TRADER_DB.PORTFOLIO portfolio1_ on investment0_.associatedPortfolio_PORTFOLIO_NAME=portfolio1_.PORTFOLIO_NAME where investment0_.INVESTMENT_ID=?
Static select for entity com.inteltrader.entity.Investment [READ]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_1_, investment0_.currentPrice as currentP2_2_1_, investment0_.quantity as quantity2_1_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_1_, portfolio1_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.INVESTMENT investment0_ left outer join TRADER_DB.PORTFOLIO portfolio1_ on investment0_.associatedPortfolio_PORTFOLIO_NAME=portfolio1_.PORTFOLIO_NAME where investment0_.INVESTMENT_ID=?
Static select for entity com.inteltrader.entity.Investment [UPGRADE]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [UPGRADE_NOWAIT]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [FORCE]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [PESSIMISTIC_READ]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? lock in share mode
Static select for entity com.inteltrader.entity.Investment [PESSIMISTIC_WRITE]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [PESSIMISTIC_FORCE_INCREMENT]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [OPTIMISTIC]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=?
Static select for entity com.inteltrader.entity.Investment [OPTIMISTIC_FORCE_INCREMENT]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=?
Static select for action ACTION_MERGE on entity com.inteltrader.entity.Investment: select investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_1_, investment0_.currentPrice as currentP2_2_1_, investment0_.quantity as quantity2_1_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_1_, portfolio1_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.INVESTMENT investment0_ left outer join TRADER_DB.PORTFOLIO portfolio1_ on investment0_.associatedPortfolio_PORTFOLIO_NAME=portfolio1_.PORTFOLIO_NAME where investment0_.INVESTMENT_ID=?
Static select for action ACTION_REFRESH on entity com.inteltrader.entity.Investment: select investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_1_, investment0_.currentPrice as currentP2_2_1_, investment0_.quantity as quantity2_1_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_1_, portfolio1_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.INVESTMENT investment0_ left outer join TRADER_DB.PORTFOLIO portfolio1_ on investment0_.associatedPortfolio_PORTFOLIO_NAME=portfolio1_.PORTFOLIO_NAME where investment0_.INVESTMENT_ID=?
Static select for entity com.inteltrader.entity.Portfolio [NONE]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Static select for entity com.inteltrader.entity.Portfolio [READ]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Static select for entity com.inteltrader.entity.Portfolio [UPGRADE]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [UPGRADE_NOWAIT]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [FORCE]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [PESSIMISTIC_READ]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? lock in share mode
Static select for entity com.inteltrader.entity.Portfolio [PESSIMISTIC_WRITE]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [PESSIMISTIC_FORCE_INCREMENT]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [OPTIMISTIC]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=?
Static select for entity com.inteltrader.entity.Portfolio [OPTIMISTIC_FORCE_INCREMENT]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=?
Static select for action ACTION_MERGE on entity com.inteltrader.entity.Portfolio: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Static select for action ACTION_REFRESH on entity com.inteltrader.entity.Portfolio: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Static select for collection com.inteltrader.entity.Instrument.priceList: select pricelist0_.SYMBOL_NAME as SYMBOL1_0_0_, pricelist0_.closePrice as closePrice1_0_, pricelist0_.highPrice as highPrice1_0_, pricelist0_.lastClosePrice as lastClos4_1_0_, pricelist0_.lowPrice as lowPrice1_0_, pricelist0_.openPrice as openPrice1_0_, pricelist0_.priceId as priceId1_0_, pricelist0_.timeStamp as timeStamp1_0_, pricelist0_.totalTradedQuantity as totalTra9_1_0_ from TRADER_DB.INSTRUMENT_PRICE pricelist0_ where pricelist0_.SYMBOL_NAME=?
Static select for one-to-many com.inteltrader.entity.Portfolio.investmentList: select investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_1_, investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.associatedPortfolio_PORTFOLIO_NAME=?
Static select for collection com.inteltrader.entity.Investment.transactionsList: select transactio0_.INVESTMENT_ID as INVESTMENT1_2_0_, transactio0_.quantity as quantity3_0_, transactio0_.transactionId as transact3_3_0_, transactio0_.transactionPrice as transact4_3_0_ from TRADER_DB.INVESTMENT_TRANSACTION transactio0_ where transactio0_.INVESTMENT_ID=?
Registering SessionFactory: 7888d134-27f2-4119-b36a-5b5d58227c6e (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Instantiated session factory
HHH000228: Running hbm2ddl schema update
HHH000102: Fetching database metadata
HHH000396: Updating schema
Processing hbm.xml files
Process annotated classes
Processing fk mappings (*ToOne and JoinedSubclass)
Processing extends queue
Processing extends queue
Processing collection mappings
Processing native query and ResultSetMapping mappings
Processing association property references
Creating tables' unique integer identifiers
Processing foreign key constraints
Resolving reference to class: com.inteltrader.entity.Instrument
Resolving reference to class: com.inteltrader.entity.Portfolio
Resolving reference to class: com.inteltrader.entity.Investment
HHH000261: Table found: TRADER_DB.instrument
HHH000037: Columns: [symbol_name]
HHH000108: Foreign keys: []
HHH000126: Indexes: [primary]
HHH000261: Table found: TRADER_DB.instrument_price
HHH000037: Columns: [totaltradedquantity, timestamp, priceid, lastcloseprice, highprice, symbol_name, openprice, closeprice, lowprice]
HHH000108: Foreign keys: [fk3189a2d153ed548d]
HHH000126: Indexes: [fk3189a2d153ed548d]
HHH000261: Table found: TRADER_DB.investment
HHH000037: Columns: [investment_id, associatedportfolio_portfolio_name, currentprice, quantity, investment_symbol]
HHH000108: Foreign keys: [fk8fe41ed3c804d4f3]
HHH000126: Indexes: [fk8fe41ed3c804d4f3, primary]
HHH000261: Table found: TRADER_DB.investment_transaction
HHH000037: Columns: [transactionprice, investment_id, transactionid, quantity]
HHH000108: Foreign keys: [fka5863f52914590ae]
HHH000126: Indexes: [fka5863f52914590ae]
HHH000261: Table found: TRADER_DB.portfolio
HHH000037: Columns: [portfolio_name]
HHH000108: Foreign keys: []
HHH000126: Indexes: [primary]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
HHH000232: Schema update complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Statistics initialized [enabled=false]
Registering EntityManagerFactory: intelTrader 
HHH000436: Entity manager factory name (intelTrader) is already registered.  If entity manager will be clustered or passivated, specify a unique value for property 'hibernate.ejb.entitymanager_factory_name'
Finished creating instance of bean 'entityManagerFactory'
Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@6061b355: defining beans [org.springframework.context.annotation.internalAsyncAnnotationProcessor,org.springframework.context.annotation.internalScheduledAnnotationProcessor,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0,org.springframework.web.servlet.view.InternalResourceViewResolver#0,instrumentDao,portfolioDao,instrumentService,portfolioService,entityManagerFactory,transactionManager,instrument,investment,portfolio,instrumentServiceRest,portfolioServiceRest,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor]; parent: org.springframework.beans.factory.support.DefaultListableBeanFactory@37c18481
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Creating instance of bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0' to allow for resolving potential circular references
Creating instance of bean '(inner bean)'
Creating shared instance of singleton bean 'transactionManager'
Creating instance of bean 'transactionManager'
Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
Returning cached instance of singleton bean 'entityManagerFactory'
Invoking afterPropertiesSet() on bean with name 'transactionManager'
Finished creating instance of bean 'transactionManager'
Creating instance of bean '(inner bean)'
Finished creating instance of bean '(inner bean)'
Invoking afterPropertiesSet() on bean with name '(inner bean)'
Finished creating instance of bean '(inner bean)'
Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Creating shared instance of singleton bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Creating instance of bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Eagerly caching bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Creating shared instance of singleton bean 'instrumentDao'
Creating instance of bean 'instrumentDao'
Eagerly caching bean 'instrumentDao' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'instrumentDao'
Creating shared instance of singleton bean 'portfolioDao'
Creating instance of bean 'portfolioDao'
Eagerly caching bean 'portfolioDao' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'portfolioDao'
Creating shared instance of singleton bean 'instrumentService'
Creating instance of bean 'instrumentService'
Registered injected element on class [com.inteltrader.service.InstrumentServiceImpl]: PersistenceElement for javax.persistence.EntityManagerFactory com.inteltrader.service.InstrumentServiceImpl.entityManagerFactory
Registered injected element on class [com.inteltrader.service.InstrumentServiceImpl]: AutowiredFieldElement for private com.inteltrader.dao.IInstrumentDao com.inteltrader.service.InstrumentServiceImpl.instrumentDao
Registered injected element on class [com.inteltrader.service.InstrumentServiceImpl]: AutowiredFieldElement for private com.inteltrader.service.PortfolioService com.inteltrader.service.InstrumentServiceImpl.portfolioService
Eagerly caching bean 'instrumentService' to allow for resolving potential circular references
Processing injected method of bean 'instrumentService': PersistenceElement for javax.persistence.EntityManagerFactory com.inteltrader.service.InstrumentServiceImpl.entityManagerFactory
Returning cached instance of singleton bean 'entityManagerFactory'
Processing injected method of bean 'instrumentService': AutowiredFieldElement for private com.inteltrader.dao.IInstrumentDao com.inteltrader.service.InstrumentServiceImpl.instrumentDao
Returning cached instance of singleton bean 'instrumentDao'
Autowiring by type from bean name 'instrumentService' to bean named 'instrumentDao'
Processing injected method of bean 'instrumentService': AutowiredFieldElement for private com.inteltrader.service.PortfolioService com.inteltrader.service.InstrumentServiceImpl.portfolioService
Creating shared instance of singleton bean 'portfolioService'
Creating instance of bean 'portfolioService'
Registered injected element on class [com.inteltrader.service.PortfolioServiceImpl]: PersistenceElement for private javax.persistence.EntityManagerFactory com.inteltrader.service.PortfolioServiceImpl.entityManagerFactory
Registered injected element on class [com.inteltrader.service.PortfolioServiceImpl]: AutowiredFieldElement for private com.inteltrader.dao.IPortfolioDao com.inteltrader.service.PortfolioServiceImpl.portfolioDao
Eagerly caching bean 'portfolioService' to allow for resolving potential circular references
Processing injected method of bean 'portfolioService': PersistenceElement for private javax.persistence.EntityManagerFactory com.inteltrader.service.PortfolioServiceImpl.entityManagerFactory
Returning cached instance of singleton bean 'entityManagerFactory'
Processing injected method of bean 'portfolioService': AutowiredFieldElement for private com.inteltrader.dao.IPortfolioDao com.inteltrader.service.PortfolioServiceImpl.portfolioDao
Returning cached instance of singleton bean 'portfolioDao'
Autowiring by type from bean name 'portfolioService' to bean named 'portfolioDao'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'portfolioService'
Autowiring by type from bean name 'instrumentService' to bean named 'portfolioService'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'instrumentService'
Returning cached instance of singleton bean 'portfolioService'
Returning cached instance of singleton bean 'entityManagerFactory'
Returning cached instance of singleton bean 'transactionManager'
Creating shared instance of singleton bean 'instrument'
Creating instance of bean 'instrument'
Eagerly caching bean 'instrument' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'instrument'
Creating shared instance of singleton bean 'investment'
Creating instance of bean 'investment'
Eagerly caching bean 'investment' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'investment'
Creating shared instance of singleton bean 'portfolio'
Creating instance of bean 'portfolio'
Eagerly caching bean 'portfolio' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'portfolio'
Creating shared instance of singleton bean 'instrumentServiceRest'
Creating instance of bean 'instrumentServiceRest'
Registered injected element on class [com.inteltrader.rest.InstrumentServiceRest]: AutowiredFieldElement for private com.inteltrader.service.InstrumentService com.inteltrader.rest.InstrumentServiceRest.instrumentService
Eagerly caching bean 'instrumentServiceRest' to allow for resolving potential circular references
Processing injected method of bean 'instrumentServiceRest': AutowiredFieldElement for private com.inteltrader.service.InstrumentService com.inteltrader.rest.InstrumentServiceRest.instrumentService
Returning cached instance of singleton bean 'instrumentService'
Autowiring by type from bean name 'instrumentServiceRest' to bean named 'instrumentService'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'instrumentServiceRest'
Creating shared instance of singleton bean 'portfolioServiceRest'
Creating instance of bean 'portfolioServiceRest'
Registered injected element on class [com.inteltrader.rest.PortfolioServiceRest]: AutowiredFieldElement for private com.inteltrader.service.PortfolioService com.inteltrader.rest.PortfolioServiceRest.portfolioService
Eagerly caching bean 'portfolioServiceRest' to allow for resolving potential circular references
Processing injected method of bean 'portfolioServiceRest': AutowiredFieldElement for private com.inteltrader.service.PortfolioService com.inteltrader.rest.PortfolioServiceRest.portfolioService
Returning cached instance of singleton bean 'portfolioService'
Autowiring by type from bean name 'portfolioServiceRest' to bean named 'portfolioService'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'portfolioServiceRest'
Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@e4af21f]
Returning cached instance of singleton bean 'lifecycleProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Unable to locate MultipartResolver with name 'multipartResolver': no multipart request handling provided
Creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Unable to locate LocaleResolver with name 'localeResolver': using default [org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver@3f676103]
Creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Unable to locate ThemeResolver with name 'themeResolver': using default [org.springframework.web.servlet.theme.FixedThemeResolver@4284b6b7]
Creating instance of bean 'org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping'
Looking for URL mappings in application context: WebApplicationContext for namespace 'appServlet-servlet': startup date [Fri Apr 19 10:39:55 IST 2013]; parent: Root WebApplicationContext
Rejected bean name 'org.springframework.context.annotation.internalAsyncAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalScheduledAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalRequiredAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalCommonAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.aop.config.internalAutoProxyCreator': no URL paths identified
Rejected bean name 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0': no URL paths identified
Rejected bean name 'org.springframework.web.servlet.view.InternalResourceViewResolver#0': no URL paths identified
Rejected bean name 'instrumentDao': no URL paths identified
Rejected bean name 'portfolioDao': no URL paths identified
Rejected bean name 'instrumentService': no URL paths identified
Rejected bean name 'portfolioService': no URL paths identified
Rejected bean name 'entityManagerFactory': no URL paths identified
Rejected bean name 'transactionManager': no URL paths identified
Rejected bean name 'instrument': no URL paths identified
Rejected bean name 'investment': no URL paths identified
Rejected bean name 'portfolio': no URL paths identified
Rejected bean name 'instrumentServiceRest': no URL paths identified
Rejected bean name 'portfolioServiceRest': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor': no URL paths identified
Rejected bean name 'environment': no URL paths identified
Rejected bean name 'systemProperties': no URL paths identified
Rejected bean name 'systemEnvironment': no URL paths identified
Rejected bean name 'servletConfig': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry': no URL paths identified
Rejected bean name 'messageSource': no URL paths identified
Rejected bean name 'applicationEventMulticaster': no URL paths identified
Rejected bean name 'lifecycleProcessor': no URL paths identified
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping'
Creating instance of bean 'org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping'
Looking for URL mappings in application context: WebApplicationContext for namespace 'appServlet-servlet': startup date [Fri Apr 19 10:39:55 IST 2013]; parent: Root WebApplicationContext
Rejected bean name 'org.springframework.context.annotation.internalAsyncAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalScheduledAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalRequiredAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalCommonAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.aop.config.internalAutoProxyCreator': no URL paths identified
Rejected bean name 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0': no URL paths identified
Rejected bean name 'org.springframework.web.servlet.view.InternalResourceViewResolver#0': no URL paths identified
Rejected bean name 'instrumentDao': no URL paths identified
Rejected bean name 'portfolioDao': no URL paths identified
Rejected bean name 'instrumentService': no URL paths identified
Rejected bean name 'portfolioService': no URL paths identified
Rejected bean name 'entityManagerFactory': no URL paths identified
Rejected bean name 'transactionManager': no URL paths identified
Rejected bean name 'instrument': no URL paths identified
Rejected bean name 'investment': no URL paths identified
Rejected bean name 'portfolio': no URL paths identified
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/create/{symbol}] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/create/{symbol}.*] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/create/{symbol}/] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/update/{portfolioName}] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/update/{portfolioName}.*] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/update/{portfolioName}/] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/load/{symbol}] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/load/{symbol}.*] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/load/{symbol}/] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/create/{portfolioName}] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/create/{portfolioName}.*] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/create/{portfolioName}/] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/addInvestment/{portfolioName}/{symbolName}] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/addInvestment/{portfolioName}/{symbolName}.*] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/addInvestment/{portfolioName}/{symbolName}/] onto handler 'portfolioServiceRest'
Rejected bean name 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor': no URL paths identified
Rejected bean name 'environment': no URL paths identified
Rejected bean name 'systemProperties': no URL paths identified
Rejected bean name 'systemEnvironment': no URL paths identified
Rejected bean name 'servletConfig': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry': no URL paths identified
Rejected bean name 'messageSource': no URL paths identified
Rejected bean name 'applicationEventMulticaster': no URL paths identified
Rejected bean name 'lifecycleProcessor': no URL paths identified
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping'
No HandlerMappings found in servlet 'appServlet': using default
Creating instance of bean 'org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter'
Creating instance of bean 'org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter'
Creating instance of bean 'org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter'
No HandlerAdapters found in servlet 'appServlet': using default
Creating instance of bean 'org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerExceptionResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerExceptionResolver'
Creating instance of bean 'org.springframework.web.servlet.mvc.annotation.ResponseStatusExceptionResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.annotation.ResponseStatusExceptionResolver'
Creating instance of bean 'org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver'
No HandlerExceptionResolvers found in servlet 'appServlet': using default
Creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Unable to locate RequestToViewNameTranslator with name 'viewNameTranslator': using default [org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@2ccb1655]
Returning cached instance of singleton bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Returning cached instance of singleton bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Unable to locate FlashMapManager with name 'flashMapManager': using default [org.springframework.web.servlet.support.SessionFlashMapManager@1a4af7b7]
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Searching for key 'spring.liveBeansView.mbeanDomain' in [servletConfigInitParams]
Searching for key 'spring.liveBeansView.mbeanDomain' in [servletContextInitParams]
Searching for key 'spring.liveBeansView.mbeanDomain' in [jndiProperties]
Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain]
Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException: Name [spring.liveBeansView.mbeanDomain] is not bound in this Context. Unable to find [spring.liveBeansView.mbeanDomain].
Looking up JNDI object with name [spring.liveBeansView.mbeanDomain]
JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: Name [spring.liveBeansView.mbeanDomain] is not bound in this Context. Unable to find [spring.liveBeansView.mbeanDomain].. Returning null.
Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
Published WebApplicationContext of servlet 'appServlet' as ServletContext attribute with name [org.springframework.web.servlet.FrameworkServlet.CONTEXT.appServlet]
FrameworkServlet 'appServlet': initialization completed in 526 ms
Servlet 'appServlet' configured successfully
DispatcherServlet with name 'appServlet' processing GET request for [/portfolio/create/myFirstTime]
Matching patterns for request [/portfolio/create/myFirstTime] are [/portfolio/create/{portfolioName}]
URI Template variables for request [/portfolio/create/myFirstTime] are {portfolioName=myFirstTime}
Mapping [/portfolio/create/myFirstTime] to HandlerExecutionChain with handler [com.inteltrader.rest.PortfolioServiceRest@5d7518b1] and 2 interceptors
Last-Modified value for [/portfolio/create/myFirstTime] is: -1
Invoking request handler method: public org.springframework.http.ResponseEntity com.inteltrader.rest.PortfolioServiceRest.createPortfolio(java.lang.String,javax.servlet.http.HttpServletRequest)
begin
Obtaining JDBC connection
Obtained JDBC connection
initial autocommit status: true
disabling autocommit
Generated identifier: myFirstTime, using strategy: org.hibernate.id.Assigned
committing
Processing flush-time cascades
Dirty checking collections
Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
Listing entities:
com.inteltrader.entity.Portfolio{portfolioName=myFirstTime, investmentList=null}
insert into TRADER_DB.PORTFOLIO (PORTFOLIO_NAME) values (?)
committed JDBC Connection
re-enabling autocommit
Written [SUCCESS] as "text/html" using [org.springframework.http.converter.StringHttpMessageConverter@5260cee5]
Null ModelAndView returned to DispatcherServlet with name 'appServlet': assuming HandlerAdapter completed request handling
Successfully completed request
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
DispatcherServlet with name 'appServlet' processing GET request for [/portfolio/addInvestment/myFirstTime/AMTEKAUTO]
Matching patterns for request [/portfolio/addInvestment/myFirstTime/AMTEKAUTO] are [/portfolio/addInvestment/{portfolioName}/{symbolName}]
URI Template variables for request [/portfolio/addInvestment/myFirstTime/AMTEKAUTO] are {portfolioName=myFirstTime, symbolName=AMTEKAUTO}
Mapping [/portfolio/addInvestment/myFirstTime/AMTEKAUTO] to HandlerExecutionChain with handler [com.inteltrader.rest.PortfolioServiceRest@5d7518b1] and 2 interceptors
Last-Modified value for [/portfolio/addInvestment/myFirstTime/AMTEKAUTO] is: -1
Invoking request handler method: public org.springframework.http.ResponseEntity com.inteltrader.rest.PortfolioServiceRest.addInvestment(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
begin
Obtaining JDBC connection
Opening new JDBC connection
Created connection to: jdbc:mysql://localhost:3306/TRADER_DB, Isolation Level: 4
Obtained JDBC connection
initial autocommit status: true
disabling autocommit
Loading entity: [com.inteltrader.entity.Portfolio#myFirstTime]
select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Result set row: 0
Result row: null, EntityKey[com.inteltrader.entity.Portfolio#myFirstTime]
Result set contains (possibly empty) collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Resolving associations for [com.inteltrader.entity.Portfolio#myFirstTime]
Done materializing entity [com.inteltrader.entity.Portfolio#myFirstTime]
1 collections were found in result set for role: com.inteltrader.entity.Portfolio.investmentList
Collection fully initialized: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
1 collections initialized for role: com.inteltrader.entity.Portfolio.investmentList
Done entity load
Executing identity-insert immediately
insert into TRADER_DB.INVESTMENT (associatedPortfolio_PORTFOLIO_NAME, currentPrice, quantity, INVESTMENT_SYMBOL) values (?, ?, ?, ?)
Natively generated identity: 1
committing
Processing flush-time cascades
Dirty checking collections
Collection dirty: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Collection found: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime], was: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime] (initialized)
Collection found: [com.inteltrader.entity.Investment.transactionsList#1], was: [<unreferenced>] (initialized)
Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
Flushed: 1 (re)creations, 1 updates, 0 removals to 2 collections
Listing entities:
com.inteltrader.entity.Investment{investmentId=1, quantity=null, currentPrice=null, symbolName=AMTEKAUTO, associatedPortfolio=com.inteltrader.entity.Portfolio#myFirstTime, transactionsList=[]}
com.inteltrader.entity.Portfolio{portfolioName=myFirstTime, investmentList=[com.inteltrader.entity.Investment#1]}
Inserting collection: [com.inteltrader.entity.Investment.transactionsList#1]
Collection was empty
committed JDBC Connection
re-enabling autocommit
Written [SUCCESS] as "text/html" using [org.springframework.http.converter.StringHttpMessageConverter@5260cee5]
Null ModelAndView returned to DispatcherServlet with name 'appServlet': assuming HandlerAdapter completed request handling
Successfully completed request
DispatcherServlet with name 'appServlet' processing GET request for [/portfolio/addInvestment/myFirstTime/CIPLA]
Matching patterns for request [/portfolio/addInvestment/myFirstTime/CIPLA] are [/portfolio/addInvestment/{portfolioName}/{symbolName}]
URI Template variables for request [/portfolio/addInvestment/myFirstTime/CIPLA] are {portfolioName=myFirstTime, symbolName=CIPLA}
Mapping [/portfolio/addInvestment/myFirstTime/CIPLA] to HandlerExecutionChain with handler [com.inteltrader.rest.PortfolioServiceRest@5d7518b1] and 2 interceptors
Last-Modified value for [/portfolio/addInvestment/myFirstTime/CIPLA] is: -1
Invoking request handler method: public org.springframework.http.ResponseEntity com.inteltrader.rest.PortfolioServiceRest.addInvestment(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
begin
Obtaining JDBC connection
Opening new JDBC connection
Created connection to: jdbc:mysql://localhost:3306/TRADER_DB, Isolation Level: 4
Obtained JDBC connection
initial autocommit status: true
disabling autocommit
Loading entity: [com.inteltrader.entity.Portfolio#myFirstTime]
select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Result set row: 0
Result row: EntityKey[com.inteltrader.entity.Investment#1], EntityKey[com.inteltrader.entity.Portfolio#myFirstTime]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Resolving associations for [com.inteltrader.entity.Investment#1]
Done materializing entity [com.inteltrader.entity.Investment#1]
Resolving associations for [com.inteltrader.entity.Portfolio#myFirstTime]
Done materializing entity [com.inteltrader.entity.Portfolio#myFirstTime]
1 collections were found in result set for role: com.inteltrader.entity.Portfolio.investmentList
Collection fully initialized: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
1 collections initialized for role: com.inteltrader.entity.Portfolio.investmentList
Done entity load
Loading collection: [com.inteltrader.entity.Investment.transactionsList#1]
select transactio0_.INVESTMENT_ID as INVESTMENT1_2_0_, transactio0_.quantity as quantity3_0_, transactio0_.transactionId as transact3_3_0_, transactio0_.transactionPrice as transact4_3_0_ from TRADER_DB.INVESTMENT_TRANSACTION transactio0_ where transactio0_.INVESTMENT_ID=?
Result set contains (possibly empty) collection: [com.inteltrader.entity.Investment.transactionsList#1]
1 collections were found in result set for role: com.inteltrader.entity.Investment.transactionsList
Collection fully initialized: [com.inteltrader.entity.Investment.transactionsList#1]
1 collections initialized for role: com.inteltrader.entity.Investment.transactionsList
Done loading collection
Mark transaction for rollback
Written [FAILURE] as "text/html" using [org.springframework.http.converter.StringHttpMessageConverter@5260cee5]
Null ModelAndView returned to DispatcherServlet with name 'appServlet': assuming HandlerAdapter completed request handling
Successfully completed request
Initializing servlet 'appServlet'
Initializing new StandardServletEnvironment
Adding [servletConfigInitParams] PropertySource with lowest search precedence
Adding [servletContextInitParams] PropertySource with lowest search precedence
Adding [jndiProperties] PropertySource with lowest search precedence
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment]
FrameworkServlet 'appServlet': initialization started
Servlet with name 'appServlet' will try to create custom WebApplicationContext context of class 'org.springframework.web.context.support.XmlWebApplicationContext', using parent context [Root WebApplicationContext: startup date [Fri Apr 19 10:54:21 IST 2013]; root of context hierarchy]
Searching for key 'spring.profiles.active' in [servletConfigInitParams]
Searching for key 'spring.profiles.active' in [servletContextInitParams]
Searching for key 'spring.profiles.active' in [jndiProperties]
Looking up JNDI object with name [java:comp/env/spring.profiles.active]
Converted JNDI name [java:comp/env/spring.profiles.active] not found - trying original name [spring.profiles.active]. javax.naming.NameNotFoundException: Name [spring.profiles.active] is not bound in this Context. Unable to find [spring.profiles.active].
Looking up JNDI object with name [spring.profiles.active]
JNDI lookup for name [spring.profiles.active] threw NamingException with message: Name [spring.profiles.active] is not bound in this Context. Unable to find [spring.profiles.active].. Returning null.
Searching for key 'spring.profiles.active' in [systemProperties]
Searching for key 'spring.profiles.active' in [systemEnvironment]
Could not find key 'spring.profiles.active' in any property source. Returning [null]
Searching for key 'spring.profiles.default' in [servletConfigInitParams]
Searching for key 'spring.profiles.default' in [servletContextInitParams]
Searching for key 'spring.profiles.default' in [jndiProperties]
Looking up JNDI object with name [java:comp/env/spring.profiles.default]
Converted JNDI name [java:comp/env/spring.profiles.default] not found - trying original name [spring.profiles.default]. javax.naming.NameNotFoundException: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].
Looking up JNDI object with name [spring.profiles.default]
JNDI lookup for name [spring.profiles.default] threw NamingException with message: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].. Returning null.
Searching for key 'spring.profiles.default' in [systemProperties]
Searching for key 'spring.profiles.default' in [systemEnvironment]
Could not find key 'spring.profiles.default' in any property source. Returning [null]
Searching for key 'spring.profiles.default' in [servletConfigInitParams]
Searching for key 'spring.profiles.default' in [servletContextInitParams]
Searching for key 'spring.profiles.default' in [jndiProperties]
Looking up JNDI object with name [java:comp/env/spring.profiles.default]
Converted JNDI name [java:comp/env/spring.profiles.default] not found - trying original name [spring.profiles.default]. javax.naming.NameNotFoundException: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].
Looking up JNDI object with name [spring.profiles.default]
JNDI lookup for name [spring.profiles.default] threw NamingException with message: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].. Returning null.
Searching for key 'spring.profiles.default' in [systemProperties]
Searching for key 'spring.profiles.default' in [systemEnvironment]
Could not find key 'spring.profiles.default' in any property source. Returning [null]
Replacing [servletContextInitParams] PropertySource with [servletContextInitParams]
Replacing [servletConfigInitParams] PropertySource with [servletConfigInitParams]
Refreshing WebApplicationContext for namespace 'appServlet-servlet': startup date [Fri Apr 19 10:54:26 IST 2013]; parent: Root WebApplicationContext
Initializing new StandardEnvironment
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
Initializing new StandardEnvironment
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
Loading schema mappings from [META-INF/spring.schemas]
Loaded schema mappings: {http://www.springframework.org/schema/data/jpa/spring-jpa-1.2.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.2.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.1.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.1.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.5.xsd=org/springframework/data/repository/config/spring-repository-1.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.0.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.3.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.4.xsd=org/springframework/data/repository/config/spring-repository-1.4.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.3.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/data/repository/spring-repository.xsd=org/springframework/data/repository/config/spring-repository-1.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.0.xsd=org/springframework/data/repository/config/spring-repository-1.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.1.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.1.xsd
Found XML schema [http://www.springframework.org/schema/task/spring-task-3.0.xsd] in classpath: org/springframework/scheduling/config/spring-task-3.0.xsd
Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd
Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd
Found XML schema [http://www.springframework.org/schema/tx/spring-tx-3.1.xsd] in classpath: org/springframework/transaction/config/spring-tx-3.1.xsd
Loading bean definitions
Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/data/repository=org.springframework.data.repository.config.RepositoryNameSpaceHandler, http://www.springframework.org/schema/data/jpa=org.springframework.data.jpa.repository.config.JpaRepositoryNameSpaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
Neither XML 'id' nor 'name' specified - using generated bean name [org.springframework.web.servlet.view.InternalResourceViewResolver#0]
Neither XML 'id' nor 'name' specified - using generated bean name [org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver#38b6cf26]
Initializing new StandardEnvironment
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
Looking for matching resources in directory tree [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Resolved location pattern [classpath*:com/inteltrader/**/*.class] to resources [file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\Advice.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\FIFOList.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\InstrumentVo.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\Strategies.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\Strategy.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\StrategyMACD.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao\IInstrumentDao.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao\InstrumentDao.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao\IPortfolioDao.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao\PortfolioDao.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Instrument.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Investment.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Portfolio.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Price.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Transactions.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest\InstrumentServiceRest.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest\PortfolioServiceRest.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\AnalyserService.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\CronService.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\InstrumentService.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\InstrumentServiceImpl.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\PortfolioService.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\PortfolioServiceImpl.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util\DownloadZip.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util\ExtractZipFile.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util\ReadPriceCsv.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util\RestCodes.class]]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Instrument.class]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Investment.class]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Portfolio.class]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest\InstrumentServiceRest.class]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest\PortfolioServiceRest.class]
Loaded 21 bean definitions from location pattern [/WEB-INF/applicationContext.xml]
Bean factory for WebApplicationContext for namespace 'appServlet-servlet': org.springframework.beans.factory.support.DefaultListableBeanFactory@69d9e4e0: defining beans [org.springframework.context.annotation.internalAsyncAnnotationProcessor,org.springframework.context.annotation.internalScheduledAnnotationProcessor,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0,org.springframework.web.servlet.view.InternalResourceViewResolver#0,instrumentDao,portfolioDao,instrumentService,portfolioService,entityManagerFactory,transactionManager,instrument,investment,portfolio,instrumentServiceRest,portfolioServiceRest]; parent: org.springframework.beans.factory.support.DefaultListableBeanFactory@22bf1acf
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@6a796b64]
Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@4979a8d8]
Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.DelegatingThemeSource@523c2297]
Creating shared instance of singleton bean 'entityManagerFactory'
Creating instance of bean 'entityManagerFactory'
Eagerly caching bean 'entityManagerFactory' to allow for resolving potential circular references
Creating instance of bean 'org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver#38b6cf26'
Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Creating instance of bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0' to allow for resolving potential circular references
Creating instance of bean '(inner bean)'
Creating shared instance of singleton bean 'transactionManager'
Creating instance of bean 'transactionManager'
Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
Returning eagerly cached instance of singleton bean 'entityManagerFactory' that is not fully initialized yet - a consequence of a circular reference
Ignoring currently created advisor 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0': Error creating bean with name 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0': Cannot create inner bean '(inner bean)' of type [org.springframework.transaction.interceptor.TransactionInterceptor] while setting bean property 'transactionInterceptor'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)': Cannot resolve reference to bean 'transactionManager' while setting bean property 'transactionManager'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'transactionManager' defined in ServletContext resource [/WEB-INF/applicationContext.xml]: Cannot resolve reference to bean 'entityManagerFactory' while setting bean property 'entityManagerFactory'; nested exception is org.springframework.beans.factory.BeanCurrentlyInCreationException: Error creating bean with name 'entityManagerFactory': FactoryBean which is currently in creation returned null from getObject
Finished creating instance of bean 'org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver#38b6cf26'
Invoking afterPropertiesSet() on bean with name 'entityManagerFactory'
Building JPA container EntityManagerFactory for persistence unit 'intelTrader'
Adding type registration boolean -> org.hibernate.type.BooleanType@524b0405
Adding type registration boolean -> org.hibernate.type.BooleanType@524b0405
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@524b0405
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1381827e
Adding type registration true_false -> org.hibernate.type.TrueFalseType@21ea1941
Adding type registration yes_no -> org.hibernate.type.YesNoType@13581b3f
Adding type registration byte -> org.hibernate.type.ByteType@305d52e
Adding type registration byte -> org.hibernate.type.ByteType@305d52e
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@305d52e
Adding type registration character -> org.hibernate.type.CharacterType@65c377e8
Adding type registration char -> org.hibernate.type.CharacterType@65c377e8
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@65c377e8
Adding type registration short -> org.hibernate.type.ShortType@2101f023
Adding type registration short -> org.hibernate.type.ShortType@2101f023
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2101f023
Adding type registration integer -> org.hibernate.type.IntegerType@2552146f
Adding type registration int -> org.hibernate.type.IntegerType@2552146f
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2552146f
Adding type registration long -> org.hibernate.type.LongType@6829bfd7
Adding type registration long -> org.hibernate.type.LongType@6829bfd7
Adding type registration java.lang.Long -> org.hibernate.type.LongType@6829bfd7
Adding type registration float -> org.hibernate.type.FloatType@5d14dfad
Adding type registration float -> org.hibernate.type.FloatType@5d14dfad
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5d14dfad
Adding type registration double -> org.hibernate.type.DoubleType@60ae8e56
Adding type registration double -> org.hibernate.type.DoubleType@60ae8e56
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@60ae8e56
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@415c7850
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@415c7850
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@158bdd29
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@158bdd29
Adding type registration string -> org.hibernate.type.StringType@464ef2d7
Adding type registration java.lang.String -> org.hibernate.type.StringType@464ef2d7
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@78c76c3a
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2db89fa2
Adding type registration url -> org.hibernate.type.UrlType@d9cd67a
Adding type registration java.net.URL -> org.hibernate.type.UrlType@d9cd67a
Adding type registration date -> org.hibernate.type.DateType@1be801f7
Adding type registration java.sql.Date -> org.hibernate.type.DateType@1be801f7
Adding type registration time -> org.hibernate.type.TimeType@218f998a
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@218f998a
Adding type registration timestamp -> org.hibernate.type.TimestampType@120bc835
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@120bc835
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@120bc835
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4768546a
Adding type registration calendar -> org.hibernate.type.CalendarType@bd9a291
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@bd9a291
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@bd9a291
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7547d853
Adding type registration locale -> org.hibernate.type.LocaleType@162382a5
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@162382a5
Adding type registration currency -> org.hibernate.type.CurrencyType@22ab38d1
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@22ab38d1
Adding type registration timezone -> org.hibernate.type.TimeZoneType@508e4439
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@508e4439
Adding type registration class -> org.hibernate.type.ClassType@1f6dc928
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1f6dc928
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@480ee892
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@480ee892
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@bd30b16
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@7b02fa42
Adding type registration binary -> org.hibernate.type.BinaryType@6073ec0c
Adding type registration byte[] -> org.hibernate.type.BinaryType@6073ec0c
Adding type registration [B -> org.hibernate.type.BinaryType@6073ec0c
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@66227d3d
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@66227d3d
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@66227d3d
Adding type registration image -> org.hibernate.type.ImageType@37df8f67
Adding type registration characters -> org.hibernate.type.CharArrayType@19dba49b
Adding type registration char[] -> org.hibernate.type.CharArrayType@19dba49b
Adding type registration [C -> org.hibernate.type.CharArrayType@19dba49b
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@f5d2de6
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@f5d2de6
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@f5d2de6
Adding type registration text -> org.hibernate.type.TextType@7372b6c0
Adding type registration ntext -> org.hibernate.type.NTextType@43448c82
Adding type registration blob -> org.hibernate.type.BlobType@15459a10
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@15459a10
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@56dee91c
Adding type registration clob -> org.hibernate.type.ClobType@6a1f7546
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6a1f7546
Adding type registration nclob -> org.hibernate.type.NClobType@21ec7f43
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@21ec7f43
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2f755cd
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@31c0a99e
Adding type registration serializable -> org.hibernate.type.SerializableType@4bad5d49
Adding type registration object -> org.hibernate.type.ObjectType@13f7c0ee
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@13f7c0ee
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6a0311ae
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6f7dece1
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@344ae0f6
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1ff7514c
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@25fa64f9
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@59fb2ae9
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@78be5525
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@17c82e11
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Processing PersistenceUnitInfo [
	name: intelTrader
	persistence provider classname: org.hibernate.ejb.HibernatePersistence
	classloader: WebappClassLoader
  context: 
  delegate: false
  repositories:
    /WEB-INF/classes/
----------> Parent Classloader:
ClassRealm[plugin>org.apache.tomcat.maven:tomcat7-maven-plugin:2.0, parent: sun.misc.Launcher$AppClassLoader@35b284a4]

	Temporary classloader: org.springframework.instrument.classloading.SimpleThrowawayClassLoader@57486a49
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/vvarm1/IdeaProjects/intelTrader/src/main/webapp/WEB-INF/classes
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.inteltrader.entity.Instrument
		com.inteltrader.entity.Portfolio
		com.inteltrader.entity.Investment]
	Mapping files names []
	Properties [
		hibernate.connection.username: root
		hibernate.connection.password: root
		hibernate.dialect: org.hibernate.dialect.MySQLDialect
		hibernate.c3p0.min_size: 10
		hibernate.connection.url: jdbc:mysql://localhost:3306/TRADER_DB
		hibernate.show_sql: true
		hibernate.connection.driver_class: com.mysql.jdbc.Driver
		hibernate.hbm2ddl.auto: update]
Detect class: true; detect hbm: true
Detect class: true; detect hbm: true
Searching mapped entities in jar/par: file:/C:/Users/vvarm1/IdeaProjects/intelTrader/src/main/webapp/WEB-INF/classes
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.ejb.event.JpaIntegrator].
No JNDI name configured for binding Ejb3Configuration
Preparing to build session factory with filters : {}
Processing hbm.xml files
Process annotated classes
Binding entity from annotated class: com.inteltrader.entity.Instrument
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Instrument
Bind entity com.inteltrader.entity.Instrument on table INSTRUMENT
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=SYMBOL_NAME, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property symbolName with lazy=false
building SimpleValue for symbolName
Building property symbolName
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=priceList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=priceList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=priceList_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='priceList_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='SYMBOL_NAME', referencedColumn='', mappedBy=''}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Collection role: com.inteltrader.entity.Instrument.priceList
Building property priceList
Binding entity from annotated class: com.inteltrader.entity.Portfolio
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Portfolio
Bind entity com.inteltrader.entity.Portfolio on table PORTFOLIO
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=PORTFOLIO_NAME, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property portfolioName with lazy=false
building SimpleValue for portfolioName
Building property portfolioName
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='associatedPortfolio'}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=investmentList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=element, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=investmentList_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='investmentList_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='associatedPortfolio'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='associatedPortfolio'}
Collection role: com.inteltrader.entity.Portfolio.investmentList
Building property investmentList
Binding entity from annotated class: com.inteltrader.entity.Investment
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Investment
Bind entity com.inteltrader.entity.Investment on table INVESTMENT
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=INVESTMENT_ID, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property investmentId with lazy=false
building SimpleValue for investmentId
Building property investmentId
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=associatedPortfolio, insertable=true, updatable=true, unique=false}
Building property associatedPortfolio
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=currentPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property currentPrice with lazy=false
building SimpleValue for currentPrice
Building property currentPrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=quantity, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property quantity with lazy=false
building SimpleValue for quantity
Building property quantity
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=INVESTMENT_SYMBOL, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property symbolName with lazy=false
building SimpleValue for symbolName
Building property symbolName
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=transactionsList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=transactionsList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=transactionsList_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='transactionsList_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='INVESTMENT_ID', referencedColumn='', mappedBy=''}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Collection role: com.inteltrader.entity.Investment.transactionsList
Building property transactionsList
Setting SimpleValue typeName for symbolName
Setting SimpleValue typeName for portfolioName
Setting SimpleValue typeName for investmentId
Setting SimpleValue typeName for currentPrice
Setting SimpleValue typeName for quantity
Setting SimpleValue typeName for symbolName
Processing fk mappings (*ToOne and JoinedSubclass)
Processing extends queue
Processing extends queue
Processing collection mappings
Second pass for collection: com.inteltrader.entity.Investment.transactionsList
Binding a collection of element: com.inteltrader.entity.Investment.transactionsList
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT_TRANSACTION), mappingColumn=quantity, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property quantity with lazy=false
building SimpleValue for quantity
Setting SimpleValue typeName for quantity
Building property quantity
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT_TRANSACTION), mappingColumn=transactionId, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property transactionId with lazy=false
building SimpleValue for transactionId
Setting SimpleValue typeName for transactionId
Building property transactionId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT_TRANSACTION), mappingColumn=transactionPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property transactionPrice with lazy=false
building SimpleValue for transactionPrice
Setting SimpleValue typeName for transactionPrice
Building property transactionPrice
Mapped collection key: INVESTMENT_ID, element: quantity, transactionId, transactionPrice
Second pass for collection: com.inteltrader.entity.Instrument.priceList
Binding a collection of element: com.inteltrader.entity.Instrument.priceList
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=closePrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property closePrice with lazy=false
building SimpleValue for closePrice
Setting SimpleValue typeName for closePrice
Building property closePrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=highPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property highPrice with lazy=false
building SimpleValue for highPrice
Setting SimpleValue typeName for highPrice
Building property highPrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=lastClosePrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property lastClosePrice with lazy=false
building SimpleValue for lastClosePrice
Setting SimpleValue typeName for lastClosePrice
Building property lastClosePrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=lowPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property lowPrice with lazy=false
building SimpleValue for lowPrice
Setting SimpleValue typeName for lowPrice
Building property lowPrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=openPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property openPrice with lazy=false
building SimpleValue for openPrice
Setting SimpleValue typeName for openPrice
Building property openPrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=priceId, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property priceId with lazy=false
building SimpleValue for priceId
Setting SimpleValue typeName for priceId
Building property priceId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=timeStamp, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property timeStamp with lazy=false
building SimpleValue for timeStamp
Setting SimpleValue typeName for timeStamp
Building property timeStamp
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=totalTradedQuantity, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property totalTradedQuantity with lazy=false
building SimpleValue for totalTradedQuantity
Setting SimpleValue typeName for totalTradedQuantity
Building property totalTradedQuantity
Mapped collection key: SYMBOL_NAME, element: closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity
Second pass for collection: com.inteltrader.entity.Portfolio.investmentList
Binding a OneToMany: com.inteltrader.entity.Portfolio.investmentList through a foreign key
Mapping collection: com.inteltrader.entity.Portfolio.investmentList -> INVESTMENT
Retrieving property com.inteltrader.entity.Investment.associatedPortfolio
Mapped collection key: associatedPortfolio_PORTFOLIO_NAME, one-to-many: com.inteltrader.entity.Investment
Processing native query and ResultSetMapping mappings
Processing association property references
Creating tables' unique integer identifiers
Processing foreign key constraints
Resolving reference to class: com.inteltrader.entity.Instrument
Resolving reference to class: com.inteltrader.entity.Portfolio
Resolving reference to class: com.inteltrader.entity.Investment
HHH000022: c3p0 properties were encountered, but the org.hibernate.service.jdbc.connections.internal.C3P0ConnectionProvider provider class was not found on the classpath; these properties are going to be ignored.
HHH000402: Using Hibernate built-in connection pool (not for production use!)
HHH000115: Hibernate connection pool size: 20
HHH000006: Autocommit mode: true
HHH000401: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/TRADER_DB]
HHH000046: Connection properties: {user=root, password=root, autocommit=true, release_mode=auto}
Opening new JDBC connection
Created connection to: jdbc:mysql://localhost:3306/TRADER_DB, Isolation Level: 4
Database ->
       name : MySQL
    version : 5.6.10-log
      major : 5
      minor : 6
Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.9 ( Revision: ${svn.Revision} )
      major : 5
      minor : 1
JDBC version : 3.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: disabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
multi-tenancy strategy : NONE
Connection release mode: auto
HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
Maximum outer join fetch depth: 2
Default batch fetch size: 1
Generate SQL with comments: disabled
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
HHH000397: Using ASTQueryTranslatorFactory
Query language substitutions: {}
JPA-QL strict compliance: enabled
Second-level cache: enabled
Query cache: disabled
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
Optimize cache for minimal puts: disabled
Structured second-level cache entries: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Named query checking : enabled
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : : disabled
Building session factory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\vvarm1\IdeaProjects\intelTrader\target\tomcat, hibernate.connection.url=jdbc:mysql://localhost:3306/TRADER_DB, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.ejb.discard_pc_on_close=false, catalina.useNaming=true, hibernate.transaction.flush_before_completion=false, os.name=Windows 7, sun.boot.class.path=C:\Program Files\Java\jdk1.7.0_10\jre\lib\resources.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\rt.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\jce.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.7.0_10\jre\classes, java.util.logging.config.file=C:\Users\vvarm1\IdeaProjects\intelTrader\target\tomcat\conf\logging.properties, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.7.0_10-b18, hibernate.connection.autocommit=true, hibernate.c3p0.min_size=10, user.name=vvarm1, shared.loader=, guice.disable.misplaced.annotation.check=true, tomcat.util.buf.StringCache.byte.enabled=true, javax.persistence.validation.mode=AUTO, hibernate.connection.release_mode=auto, idea.launcher.bin.path=C:\Program Files (x86)\JetBrains\IntelliJ IDEA Community Edition 12.0.4\bin, user.language=en, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, sun.boot.library.path=C:\Program Files\Java\jdk1.7.0_10\jre\bin, classworlds.conf=C:\Program Files\Apache Software Foundation\apache-maven-3.0.5\bin\m2.conf, java.version=1.7.0_10, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, user.timezone=Asia/Calcutta, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.7.0_10\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, file.encoding.pkg=sun.io, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.tomcat.,org.apache.jasper., file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=51.0, user.country=US, java.home=C:\Program Files\Java\jdk1.7.0_10\jre, java.vm.info=mixed mode, os.version=6.1, hibernate.transaction.factory_class=org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory, hibernate.query.jpaql_strict_compliance=true, path.separator=;, java.vm.version=23.6-b04, hibernate.connection.password=root, user.variant=, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.scan.DefaultJarScanner.jarsToSkip=bootstrap.jar,commons-daemon.jar,tomcat-juli.jar,annotations-api.jar,el-api.jar,jsp-api.jar,servlet-api.jar,catalina.jar,catalina-ant.jar,catalina-ha.jar,catalina-tribes.jar,jasper.jar,jasper-el.jar,ecj-*.jar,tomcat-api.jar,tomcat-util.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-jni.jar,tomcat-spdy.jar,tomcat-i18n-en.jar,tomcat-i18n-es.jar,tomcat-i18n-fr.jar,tomcat-i18n-ja.jar,tomcat-juli-adapters.jar,catalina-jmx-remote.jar,catalina-ws.jar,tomcat-jdbc.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,jstl.jar,geronimo-spec-jaxrpc*.jar,wsdl4j*.jar,ant.jar,ant-junit*.jar,aspectj*.jar,jmx.jar,h2*.jar,hibernate*.jar,httpclient*.jar,jmx-tools.jar,jta*.jar,log4j*.jar,mail*.jar,slf4j*.jar,xercesImpl.jar,xmlParserAPIs.jar,xml-apis.jar,access-bridge-64.jar,dnsns.jar,jaccess.jar,ldapsec.jar,localedata.jar,sunjce_provider.jar,sunmscapi.jar,sunpkcs11.jar,jhall.jar,tools.jar,sunec.jar,zipfs.jar,gnome-java-bridge.jar,pulse-java.jar,apple_provider.jar,AppleScriptEngine.jar,CoreAudio.jar,dns_sd.jar,j3daudio.jar,j3dcore.jar,j3dutils.jar,jai_core.jar,jai_codec.jar,mlibwrapper_jai.jar,MRJToolkit.jar,vecmath.jar,junit.jar,junit-*.jar,ant-launcher.jar, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.tomcat.,org.apache.jasper., user.script=, java.naming.factory.url.pkgs=org.apache.naming, user.home=C:\Users\vvarm1, org.apache.catalina.startup.ContextConfig.jarsToSkip=, java.specification.vendor=Oracle Corporation, hibernate.hbm2ddl.auto=update, java.library.path=C:\Program Files\Java\jdk1.7.0_10\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\JetBrains\IntelliJ IDEA Community Edition 12.0.4\bin\..\.\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\ThinkPad\Bluetooth Software\;C:\Program Files\ThinkPad\Bluetooth Software\syswow64;c:\Program Files\Intel\WiFi\bin\;c:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files (x86)\Git\cmd;C:\Users\vvarm1\Documents\play-2.0.3;C:\Program Files\Java\jdk1.7.0_10\bin;C:\Program Files\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\QuickTime\QTSystem\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Java\jre6\bin;C:\Program Files\Apache Software Foundation\apache-maven-3.0.5\bin;c:\program files (x86)\jetbrains\intellij idea community edition 12.0.4\jre\jre\bin;., java.vendor.url=http://java.oracle.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, org.apache.catalina.startup.TldConfig.jarsToSkip=, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, common.loader=${catalina.base}/lib,${catalina.base}/lib/*.jar,${catalina.home}/lib,${catalina.home}/lib/*.jar, maven.home=C:\Program Files\Apache Software Foundation\apache-maven-3.0.5, java.runtime.name=Java(TM) SE Runtime Environment, java.class.path=C:\Program Files\Apache Software Foundation\apache-maven-3.0.5\boot\plexus-classworlds-2.4.jar;C:\Program Files (x86)\JetBrains\IntelliJ IDEA Community Edition 12.0.4\lib\idea_rt.jar, sun.java.command=com.intellij.rt.execution.application.AppMain org.codehaus.classworlds.Launcher --no-plugin-registry --fail-fast --strict-checksums --update-snapshots org.apache.tomcat.maven:tomcat7-maven-plugin:2.0:run, hibernate.bytecode.use_reflection_optimizer=false, idea.launcher.port=7534, java.vm.specification.name=Java Virtual Machine Specification, catalina.home=C:\Users\vvarm1\IdeaProjects\intelTrader\target\tomcat, java.vm.specification.version=1.7, sun.os.patch.level=Service Pack 1, sun.cpu.endian=little, java.io.tmpdir=C:\Users\vvarm1\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, server.loader=, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, java.ext.dirs=C:\Program Files\Java\jdk1.7.0_10\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=C:\Users\vvarm1\IdeaProjects\intelTrader, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding=UTF-8, hibernate.use_identifier_rollback=false, java.specification.version=1.7, hibernate.show_sql=true}
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Static SQL for entity: com.inteltrader.entity.Investment
 Version select: select INVESTMENT_ID from TRADER_DB.INVESTMENT where INVESTMENT_ID =?
 Snapshot select: select investment_.INVESTMENT_ID, investment_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_, investment_.currentPrice as currentP2_2_, investment_.quantity as quantity2_, investment_.INVESTMENT_SYMBOL as INVESTMENT4_2_ from TRADER_DB.INVESTMENT investment_ where investment_.INVESTMENT_ID=?
 Insert 0: insert into TRADER_DB.INVESTMENT (associatedPortfolio_PORTFOLIO_NAME, currentPrice, quantity, INVESTMENT_SYMBOL, INVESTMENT_ID) values (?, ?, ?, ?, ?)
 Update 0: update TRADER_DB.INVESTMENT set associatedPortfolio_PORTFOLIO_NAME=?, currentPrice=?, quantity=?, INVESTMENT_SYMBOL=? where INVESTMENT_ID=?
 Delete 0: delete from TRADER_DB.INVESTMENT where INVESTMENT_ID=?
 Identity insert: insert into TRADER_DB.INVESTMENT (associatedPortfolio_PORTFOLIO_NAME, currentPrice, quantity, INVESTMENT_SYMBOL) values (?, ?, ?, ?)
Static SQL for entity: com.inteltrader.entity.Instrument
 Version select: select SYMBOL_NAME from TRADER_DB.INSTRUMENT where SYMBOL_NAME =?
 Snapshot select: select instrument_.SYMBOL_NAME from TRADER_DB.INSTRUMENT instrument_ where instrument_.SYMBOL_NAME=?
 Insert 0: insert into TRADER_DB.INSTRUMENT (SYMBOL_NAME) values (?)
 Update 0: null
 Delete 0: delete from TRADER_DB.INSTRUMENT where SYMBOL_NAME=?
Static SQL for entity: com.inteltrader.entity.Portfolio
 Version select: select PORTFOLIO_NAME from TRADER_DB.PORTFOLIO where PORTFOLIO_NAME =?
 Snapshot select: select portfolio_.PORTFOLIO_NAME from TRADER_DB.PORTFOLIO portfolio_ where portfolio_.PORTFOLIO_NAME=?
 Insert 0: insert into TRADER_DB.PORTFOLIO (PORTFOLIO_NAME) values (?)
 Update 0: null
 Delete 0: delete from TRADER_DB.PORTFOLIO where PORTFOLIO_NAME=?
Static SQL for collection: com.inteltrader.entity.Instrument.priceList
 Row insert: insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
 Row update: update TRADER_DB.INSTRUMENT_PRICE set closePrice=?, highPrice=?, lastClosePrice=?, lowPrice=?, openPrice=?, priceId=?, timeStamp=?, totalTradedQuantity=? where SYMBOL_NAME=? and priceId=? and totalTradedQuantity=?
 Row delete: delete from TRADER_DB.INSTRUMENT_PRICE where SYMBOL_NAME=? and priceId=? and totalTradedQuantity=?
 One-shot delete: delete from TRADER_DB.INSTRUMENT_PRICE where SYMBOL_NAME=?
Static SQL for collection: com.inteltrader.entity.Investment.transactionsList
 Row insert: insert into TRADER_DB.INVESTMENT_TRANSACTION (INVESTMENT_ID, quantity, transactionId, transactionPrice) values (?, ?, ?, ?)
 Row update: update TRADER_DB.INVESTMENT_TRANSACTION set quantity=?, transactionId=?, transactionPrice=? where INVESTMENT_ID=? and quantity=? and transactionId=? and transactionPrice=?
 Row delete: delete from TRADER_DB.INVESTMENT_TRANSACTION where INVESTMENT_ID=? and quantity=? and transactionId=? and transactionPrice=?
 One-shot delete: delete from TRADER_DB.INVESTMENT_TRANSACTION where INVESTMENT_ID=?
Static SQL for collection: com.inteltrader.entity.Portfolio.investmentList
 Row insert: update TRADER_DB.INVESTMENT set associatedPortfolio_PORTFOLIO_NAME=? where INVESTMENT_ID=?
 Row delete: update TRADER_DB.INVESTMENT set associatedPortfolio_PORTFOLIO_NAME=null where associatedPortfolio_PORTFOLIO_NAME=? and INVESTMENT_ID=?
 One-shot delete: update TRADER_DB.INVESTMENT set associatedPortfolio_PORTFOLIO_NAME=null where associatedPortfolio_PORTFOLIO_NAME=?
Static select for entity com.inteltrader.entity.Instrument [NONE]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for entity com.inteltrader.entity.Instrument [READ]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for entity com.inteltrader.entity.Instrument [UPGRADE]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [UPGRADE_NOWAIT]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [FORCE]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [PESSIMISTIC_READ]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? lock in share mode
Static select for entity com.inteltrader.entity.Instrument [PESSIMISTIC_WRITE]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [PESSIMISTIC_FORCE_INCREMENT]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [OPTIMISTIC]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for entity com.inteltrader.entity.Instrument [OPTIMISTIC_FORCE_INCREMENT]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for action ACTION_MERGE on entity com.inteltrader.entity.Instrument: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for action ACTION_REFRESH on entity com.inteltrader.entity.Instrument: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for entity com.inteltrader.entity.Investment [NONE]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_1_, investment0_.currentPrice as currentP2_2_1_, investment0_.quantity as quantity2_1_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_1_, portfolio1_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.INVESTMENT investment0_ left outer join TRADER_DB.PORTFOLIO portfolio1_ on investment0_.associatedPortfolio_PORTFOLIO_NAME=portfolio1_.PORTFOLIO_NAME where investment0_.INVESTMENT_ID=?
Static select for entity com.inteltrader.entity.Investment [READ]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_1_, investment0_.currentPrice as currentP2_2_1_, investment0_.quantity as quantity2_1_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_1_, portfolio1_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.INVESTMENT investment0_ left outer join TRADER_DB.PORTFOLIO portfolio1_ on investment0_.associatedPortfolio_PORTFOLIO_NAME=portfolio1_.PORTFOLIO_NAME where investment0_.INVESTMENT_ID=?
Static select for entity com.inteltrader.entity.Investment [UPGRADE]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [UPGRADE_NOWAIT]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [FORCE]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [PESSIMISTIC_READ]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? lock in share mode
Static select for entity com.inteltrader.entity.Investment [PESSIMISTIC_WRITE]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [PESSIMISTIC_FORCE_INCREMENT]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [OPTIMISTIC]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=?
Static select for entity com.inteltrader.entity.Investment [OPTIMISTIC_FORCE_INCREMENT]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=?
Static select for action ACTION_MERGE on entity com.inteltrader.entity.Investment: select investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_1_, investment0_.currentPrice as currentP2_2_1_, investment0_.quantity as quantity2_1_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_1_, portfolio1_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.INVESTMENT investment0_ left outer join TRADER_DB.PORTFOLIO portfolio1_ on investment0_.associatedPortfolio_PORTFOLIO_NAME=portfolio1_.PORTFOLIO_NAME where investment0_.INVESTMENT_ID=?
Static select for action ACTION_REFRESH on entity com.inteltrader.entity.Investment: select investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_1_, investment0_.currentPrice as currentP2_2_1_, investment0_.quantity as quantity2_1_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_1_, portfolio1_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.INVESTMENT investment0_ left outer join TRADER_DB.PORTFOLIO portfolio1_ on investment0_.associatedPortfolio_PORTFOLIO_NAME=portfolio1_.PORTFOLIO_NAME where investment0_.INVESTMENT_ID=?
Static select for entity com.inteltrader.entity.Portfolio [NONE]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Static select for entity com.inteltrader.entity.Portfolio [READ]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Static select for entity com.inteltrader.entity.Portfolio [UPGRADE]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [UPGRADE_NOWAIT]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [FORCE]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [PESSIMISTIC_READ]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? lock in share mode
Static select for entity com.inteltrader.entity.Portfolio [PESSIMISTIC_WRITE]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [PESSIMISTIC_FORCE_INCREMENT]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [OPTIMISTIC]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=?
Static select for entity com.inteltrader.entity.Portfolio [OPTIMISTIC_FORCE_INCREMENT]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=?
Static select for action ACTION_MERGE on entity com.inteltrader.entity.Portfolio: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Static select for action ACTION_REFRESH on entity com.inteltrader.entity.Portfolio: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Static select for collection com.inteltrader.entity.Instrument.priceList: select pricelist0_.SYMBOL_NAME as SYMBOL1_0_0_, pricelist0_.closePrice as closePrice1_0_, pricelist0_.highPrice as highPrice1_0_, pricelist0_.lastClosePrice as lastClos4_1_0_, pricelist0_.lowPrice as lowPrice1_0_, pricelist0_.openPrice as openPrice1_0_, pricelist0_.priceId as priceId1_0_, pricelist0_.timeStamp as timeStamp1_0_, pricelist0_.totalTradedQuantity as totalTra9_1_0_ from TRADER_DB.INSTRUMENT_PRICE pricelist0_ where pricelist0_.SYMBOL_NAME=?
Static select for one-to-many com.inteltrader.entity.Portfolio.investmentList: select investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_1_, investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.associatedPortfolio_PORTFOLIO_NAME=?
Static select for collection com.inteltrader.entity.Investment.transactionsList: select transactio0_.INVESTMENT_ID as INVESTMENT1_2_0_, transactio0_.quantity as quantity3_0_, transactio0_.transactionId as transact3_3_0_, transactio0_.transactionPrice as transact4_3_0_ from TRADER_DB.INVESTMENT_TRANSACTION transactio0_ where transactio0_.INVESTMENT_ID=?
Registering SessionFactory: 4e136871-fcf9-4bae-9144-4aa99952cd37 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Instantiated session factory
HHH000228: Running hbm2ddl schema update
HHH000102: Fetching database metadata
HHH000396: Updating schema
Processing hbm.xml files
Process annotated classes
Processing fk mappings (*ToOne and JoinedSubclass)
Processing extends queue
Processing extends queue
Processing collection mappings
Processing native query and ResultSetMapping mappings
Processing association property references
Creating tables' unique integer identifiers
Processing foreign key constraints
Resolving reference to class: com.inteltrader.entity.Instrument
Resolving reference to class: com.inteltrader.entity.Portfolio
Resolving reference to class: com.inteltrader.entity.Investment
HHH000261: Table found: TRADER_DB.instrument
HHH000037: Columns: [symbol_name]
HHH000108: Foreign keys: []
HHH000126: Indexes: [primary]
HHH000261: Table found: TRADER_DB.instrument_price
HHH000037: Columns: [totaltradedquantity, timestamp, priceid, lastcloseprice, highprice, symbol_name, openprice, closeprice, lowprice]
HHH000108: Foreign keys: [fk3189a2d153ed548d]
HHH000126: Indexes: [fk3189a2d153ed548d]
HHH000261: Table found: TRADER_DB.investment
HHH000037: Columns: [investment_id, associatedportfolio_portfolio_name, currentprice, quantity, investment_symbol]
HHH000108: Foreign keys: [fk8fe41ed3c804d4f3]
HHH000126: Indexes: [fk8fe41ed3c804d4f3, primary]
HHH000261: Table found: TRADER_DB.investment_transaction
HHH000037: Columns: [transactionprice, investment_id, transactionid, quantity]
HHH000108: Foreign keys: [fka5863f52914590ae]
HHH000126: Indexes: [fka5863f52914590ae]
HHH000261: Table found: TRADER_DB.portfolio
HHH000037: Columns: [portfolio_name]
HHH000108: Foreign keys: []
HHH000126: Indexes: [primary]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
HHH000232: Schema update complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Statistics initialized [enabled=false]
Registering EntityManagerFactory: intelTrader 
HHH000436: Entity manager factory name (intelTrader) is already registered.  If entity manager will be clustered or passivated, specify a unique value for property 'hibernate.ejb.entitymanager_factory_name'
Finished creating instance of bean 'entityManagerFactory'
Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@69d9e4e0: defining beans [org.springframework.context.annotation.internalAsyncAnnotationProcessor,org.springframework.context.annotation.internalScheduledAnnotationProcessor,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0,org.springframework.web.servlet.view.InternalResourceViewResolver#0,instrumentDao,portfolioDao,instrumentService,portfolioService,entityManagerFactory,transactionManager,instrument,investment,portfolio,instrumentServiceRest,portfolioServiceRest,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor]; parent: org.springframework.beans.factory.support.DefaultListableBeanFactory@22bf1acf
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Creating instance of bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0' to allow for resolving potential circular references
Creating instance of bean '(inner bean)'
Creating shared instance of singleton bean 'transactionManager'
Creating instance of bean 'transactionManager'
Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
Returning cached instance of singleton bean 'entityManagerFactory'
Invoking afterPropertiesSet() on bean with name 'transactionManager'
Finished creating instance of bean 'transactionManager'
Creating instance of bean '(inner bean)'
Finished creating instance of bean '(inner bean)'
Invoking afterPropertiesSet() on bean with name '(inner bean)'
Finished creating instance of bean '(inner bean)'
Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Creating shared instance of singleton bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Creating instance of bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Eagerly caching bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Creating shared instance of singleton bean 'instrumentDao'
Creating instance of bean 'instrumentDao'
Eagerly caching bean 'instrumentDao' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'instrumentDao'
Creating shared instance of singleton bean 'portfolioDao'
Creating instance of bean 'portfolioDao'
Eagerly caching bean 'portfolioDao' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'portfolioDao'
Creating shared instance of singleton bean 'instrumentService'
Creating instance of bean 'instrumentService'
Registered injected element on class [com.inteltrader.service.InstrumentServiceImpl]: PersistenceElement for javax.persistence.EntityManagerFactory com.inteltrader.service.InstrumentServiceImpl.entityManagerFactory
Registered injected element on class [com.inteltrader.service.InstrumentServiceImpl]: AutowiredFieldElement for private com.inteltrader.dao.IInstrumentDao com.inteltrader.service.InstrumentServiceImpl.instrumentDao
Registered injected element on class [com.inteltrader.service.InstrumentServiceImpl]: AutowiredFieldElement for private com.inteltrader.service.PortfolioService com.inteltrader.service.InstrumentServiceImpl.portfolioService
Eagerly caching bean 'instrumentService' to allow for resolving potential circular references
Processing injected method of bean 'instrumentService': PersistenceElement for javax.persistence.EntityManagerFactory com.inteltrader.service.InstrumentServiceImpl.entityManagerFactory
Returning cached instance of singleton bean 'entityManagerFactory'
Processing injected method of bean 'instrumentService': AutowiredFieldElement for private com.inteltrader.dao.IInstrumentDao com.inteltrader.service.InstrumentServiceImpl.instrumentDao
Returning cached instance of singleton bean 'instrumentDao'
Autowiring by type from bean name 'instrumentService' to bean named 'instrumentDao'
Processing injected method of bean 'instrumentService': AutowiredFieldElement for private com.inteltrader.service.PortfolioService com.inteltrader.service.InstrumentServiceImpl.portfolioService
Creating shared instance of singleton bean 'portfolioService'
Creating instance of bean 'portfolioService'
Registered injected element on class [com.inteltrader.service.PortfolioServiceImpl]: PersistenceElement for private javax.persistence.EntityManagerFactory com.inteltrader.service.PortfolioServiceImpl.entityManagerFactory
Registered injected element on class [com.inteltrader.service.PortfolioServiceImpl]: AutowiredFieldElement for private com.inteltrader.dao.IPortfolioDao com.inteltrader.service.PortfolioServiceImpl.portfolioDao
Eagerly caching bean 'portfolioService' to allow for resolving potential circular references
Processing injected method of bean 'portfolioService': PersistenceElement for private javax.persistence.EntityManagerFactory com.inteltrader.service.PortfolioServiceImpl.entityManagerFactory
Returning cached instance of singleton bean 'entityManagerFactory'
Processing injected method of bean 'portfolioService': AutowiredFieldElement for private com.inteltrader.dao.IPortfolioDao com.inteltrader.service.PortfolioServiceImpl.portfolioDao
Returning cached instance of singleton bean 'portfolioDao'
Autowiring by type from bean name 'portfolioService' to bean named 'portfolioDao'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'portfolioService'
Autowiring by type from bean name 'instrumentService' to bean named 'portfolioService'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'instrumentService'
Returning cached instance of singleton bean 'portfolioService'
Returning cached instance of singleton bean 'entityManagerFactory'
Returning cached instance of singleton bean 'transactionManager'
Creating shared instance of singleton bean 'instrument'
Creating instance of bean 'instrument'
Eagerly caching bean 'instrument' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'instrument'
Creating shared instance of singleton bean 'investment'
Creating instance of bean 'investment'
Eagerly caching bean 'investment' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'investment'
Creating shared instance of singleton bean 'portfolio'
Creating instance of bean 'portfolio'
Eagerly caching bean 'portfolio' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'portfolio'
Creating shared instance of singleton bean 'instrumentServiceRest'
Creating instance of bean 'instrumentServiceRest'
Registered injected element on class [com.inteltrader.rest.InstrumentServiceRest]: AutowiredFieldElement for private com.inteltrader.service.InstrumentService com.inteltrader.rest.InstrumentServiceRest.instrumentService
Eagerly caching bean 'instrumentServiceRest' to allow for resolving potential circular references
Processing injected method of bean 'instrumentServiceRest': AutowiredFieldElement for private com.inteltrader.service.InstrumentService com.inteltrader.rest.InstrumentServiceRest.instrumentService
Returning cached instance of singleton bean 'instrumentService'
Autowiring by type from bean name 'instrumentServiceRest' to bean named 'instrumentService'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'instrumentServiceRest'
Creating shared instance of singleton bean 'portfolioServiceRest'
Creating instance of bean 'portfolioServiceRest'
Registered injected element on class [com.inteltrader.rest.PortfolioServiceRest]: AutowiredFieldElement for private com.inteltrader.service.PortfolioService com.inteltrader.rest.PortfolioServiceRest.portfolioService
Eagerly caching bean 'portfolioServiceRest' to allow for resolving potential circular references
Processing injected method of bean 'portfolioServiceRest': AutowiredFieldElement for private com.inteltrader.service.PortfolioService com.inteltrader.rest.PortfolioServiceRest.portfolioService
Returning cached instance of singleton bean 'portfolioService'
Autowiring by type from bean name 'portfolioServiceRest' to bean named 'portfolioService'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'portfolioServiceRest'
Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@1d4a4744]
Returning cached instance of singleton bean 'lifecycleProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Unable to locate MultipartResolver with name 'multipartResolver': no multipart request handling provided
Creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Unable to locate LocaleResolver with name 'localeResolver': using default [org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver@2d7e4b57]
Creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Unable to locate ThemeResolver with name 'themeResolver': using default [org.springframework.web.servlet.theme.FixedThemeResolver@39c89d7e]
Creating instance of bean 'org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping'
Looking for URL mappings in application context: WebApplicationContext for namespace 'appServlet-servlet': startup date [Fri Apr 19 10:54:26 IST 2013]; parent: Root WebApplicationContext
Rejected bean name 'org.springframework.context.annotation.internalAsyncAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalScheduledAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalRequiredAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalCommonAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.aop.config.internalAutoProxyCreator': no URL paths identified
Rejected bean name 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0': no URL paths identified
Rejected bean name 'org.springframework.web.servlet.view.InternalResourceViewResolver#0': no URL paths identified
Rejected bean name 'instrumentDao': no URL paths identified
Rejected bean name 'portfolioDao': no URL paths identified
Rejected bean name 'instrumentService': no URL paths identified
Rejected bean name 'portfolioService': no URL paths identified
Rejected bean name 'entityManagerFactory': no URL paths identified
Rejected bean name 'transactionManager': no URL paths identified
Rejected bean name 'instrument': no URL paths identified
Rejected bean name 'investment': no URL paths identified
Rejected bean name 'portfolio': no URL paths identified
Rejected bean name 'instrumentServiceRest': no URL paths identified
Rejected bean name 'portfolioServiceRest': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor': no URL paths identified
Rejected bean name 'environment': no URL paths identified
Rejected bean name 'systemProperties': no URL paths identified
Rejected bean name 'systemEnvironment': no URL paths identified
Rejected bean name 'servletConfig': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry': no URL paths identified
Rejected bean name 'messageSource': no URL paths identified
Rejected bean name 'applicationEventMulticaster': no URL paths identified
Rejected bean name 'lifecycleProcessor': no URL paths identified
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping'
Creating instance of bean 'org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping'
Looking for URL mappings in application context: WebApplicationContext for namespace 'appServlet-servlet': startup date [Fri Apr 19 10:54:26 IST 2013]; parent: Root WebApplicationContext
Rejected bean name 'org.springframework.context.annotation.internalAsyncAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalScheduledAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalRequiredAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalCommonAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.aop.config.internalAutoProxyCreator': no URL paths identified
Rejected bean name 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0': no URL paths identified
Rejected bean name 'org.springframework.web.servlet.view.InternalResourceViewResolver#0': no URL paths identified
Rejected bean name 'instrumentDao': no URL paths identified
Rejected bean name 'portfolioDao': no URL paths identified
Rejected bean name 'instrumentService': no URL paths identified
Rejected bean name 'portfolioService': no URL paths identified
Rejected bean name 'entityManagerFactory': no URL paths identified
Rejected bean name 'transactionManager': no URL paths identified
Rejected bean name 'instrument': no URL paths identified
Rejected bean name 'investment': no URL paths identified
Rejected bean name 'portfolio': no URL paths identified
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/create/{symbol}] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/create/{symbol}.*] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/create/{symbol}/] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/update/{portfolioName}] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/update/{portfolioName}.*] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/update/{portfolioName}/] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/load/{symbol}] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/load/{symbol}.*] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/load/{symbol}/] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/create/{portfolioName}] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/create/{portfolioName}.*] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/create/{portfolioName}/] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/addInvestment/{portfolioName}/{symbolName}] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/addInvestment/{portfolioName}/{symbolName}.*] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/addInvestment/{portfolioName}/{symbolName}/] onto handler 'portfolioServiceRest'
Rejected bean name 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor': no URL paths identified
Rejected bean name 'environment': no URL paths identified
Rejected bean name 'systemProperties': no URL paths identified
Rejected bean name 'systemEnvironment': no URL paths identified
Rejected bean name 'servletConfig': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry': no URL paths identified
Rejected bean name 'messageSource': no URL paths identified
Rejected bean name 'applicationEventMulticaster': no URL paths identified
Rejected bean name 'lifecycleProcessor': no URL paths identified
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping'
No HandlerMappings found in servlet 'appServlet': using default
Creating instance of bean 'org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter'
Creating instance of bean 'org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter'
Creating instance of bean 'org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter'
No HandlerAdapters found in servlet 'appServlet': using default
Creating instance of bean 'org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerExceptionResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerExceptionResolver'
Creating instance of bean 'org.springframework.web.servlet.mvc.annotation.ResponseStatusExceptionResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.annotation.ResponseStatusExceptionResolver'
Creating instance of bean 'org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver'
No HandlerExceptionResolvers found in servlet 'appServlet': using default
Creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Unable to locate RequestToViewNameTranslator with name 'viewNameTranslator': using default [org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@5ba3a12d]
Returning cached instance of singleton bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Returning cached instance of singleton bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Unable to locate FlashMapManager with name 'flashMapManager': using default [org.springframework.web.servlet.support.SessionFlashMapManager@4b34d86b]
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Searching for key 'spring.liveBeansView.mbeanDomain' in [servletConfigInitParams]
Searching for key 'spring.liveBeansView.mbeanDomain' in [servletContextInitParams]
Searching for key 'spring.liveBeansView.mbeanDomain' in [jndiProperties]
Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain]
Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException: Name [spring.liveBeansView.mbeanDomain] is not bound in this Context. Unable to find [spring.liveBeansView.mbeanDomain].
Looking up JNDI object with name [spring.liveBeansView.mbeanDomain]
JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: Name [spring.liveBeansView.mbeanDomain] is not bound in this Context. Unable to find [spring.liveBeansView.mbeanDomain].. Returning null.
Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
Published WebApplicationContext of servlet 'appServlet' as ServletContext attribute with name [org.springframework.web.servlet.FrameworkServlet.CONTEXT.appServlet]
FrameworkServlet 'appServlet': initialization completed in 600 ms
Servlet 'appServlet' configured successfully
DispatcherServlet with name 'appServlet' processing GET request for [/portfolio/create/myFirstTime]
Matching patterns for request [/portfolio/create/myFirstTime] are [/portfolio/create/{portfolioName}]
URI Template variables for request [/portfolio/create/myFirstTime] are {portfolioName=myFirstTime}
Mapping [/portfolio/create/myFirstTime] to HandlerExecutionChain with handler [com.inteltrader.rest.PortfolioServiceRest@175cfaa5] and 2 interceptors
Last-Modified value for [/portfolio/create/myFirstTime] is: -1
Invoking request handler method: public org.springframework.http.ResponseEntity com.inteltrader.rest.PortfolioServiceRest.createPortfolio(java.lang.String,javax.servlet.http.HttpServletRequest)
begin
Obtaining JDBC connection
Obtained JDBC connection
initial autocommit status: true
disabling autocommit
Generated identifier: myFirstTime, using strategy: org.hibernate.id.Assigned
committing
Processing flush-time cascades
Dirty checking collections
Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
Listing entities:
com.inteltrader.entity.Portfolio{portfolioName=myFirstTime, investmentList=null}
insert into TRADER_DB.PORTFOLIO (PORTFOLIO_NAME) values (?)
committed JDBC Connection
re-enabling autocommit
Written [SUCCESS] as "text/html" using [org.springframework.http.converter.StringHttpMessageConverter@2ac24f4f]
Null ModelAndView returned to DispatcherServlet with name 'appServlet': assuming HandlerAdapter completed request handling
Successfully completed request
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
DispatcherServlet with name 'appServlet' processing GET request for [/portfolio/addInvestment/myFirstTime/AMTEKAUTO]
Matching patterns for request [/portfolio/addInvestment/myFirstTime/AMTEKAUTO] are [/portfolio/addInvestment/{portfolioName}/{symbolName}]
URI Template variables for request [/portfolio/addInvestment/myFirstTime/AMTEKAUTO] are {portfolioName=myFirstTime, symbolName=AMTEKAUTO}
Mapping [/portfolio/addInvestment/myFirstTime/AMTEKAUTO] to HandlerExecutionChain with handler [com.inteltrader.rest.PortfolioServiceRest@175cfaa5] and 2 interceptors
Last-Modified value for [/portfolio/addInvestment/myFirstTime/AMTEKAUTO] is: -1
Invoking request handler method: public org.springframework.http.ResponseEntity com.inteltrader.rest.PortfolioServiceRest.addInvestment(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
begin
Obtaining JDBC connection
Opening new JDBC connection
Created connection to: jdbc:mysql://localhost:3306/TRADER_DB, Isolation Level: 4
Obtained JDBC connection
initial autocommit status: true
disabling autocommit
Loading entity: [com.inteltrader.entity.Portfolio#myFirstTime]
select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Result set row: 0
Result row: null, EntityKey[com.inteltrader.entity.Portfolio#myFirstTime]
Result set contains (possibly empty) collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Resolving associations for [com.inteltrader.entity.Portfolio#myFirstTime]
Done materializing entity [com.inteltrader.entity.Portfolio#myFirstTime]
1 collections were found in result set for role: com.inteltrader.entity.Portfolio.investmentList
Collection fully initialized: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
1 collections initialized for role: com.inteltrader.entity.Portfolio.investmentList
Done entity load
committing
Processing flush-time cascades
Executing identity-insert immediately
insert into TRADER_DB.INVESTMENT (associatedPortfolio_PORTFOLIO_NAME, currentPrice, quantity, INVESTMENT_SYMBOL) values (?, ?, ?, ?)
Natively generated identity: 1
Dirty checking collections
Collection dirty: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Collection found: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime], was: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime] (initialized)
Collection found: [com.inteltrader.entity.Investment.transactionsList#1], was: [<unreferenced>] (initialized)
Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
Flushed: 1 (re)creations, 1 updates, 0 removals to 2 collections
Listing entities:
com.inteltrader.entity.Investment{investmentId=1, quantity=null, currentPrice=null, symbolName=AMTEKAUTO, associatedPortfolio=com.inteltrader.entity.Portfolio#myFirstTime, transactionsList=[]}
com.inteltrader.entity.Portfolio{portfolioName=myFirstTime, investmentList=[com.inteltrader.entity.Investment#1]}
Inserting collection: [com.inteltrader.entity.Investment.transactionsList#1]
Collection was empty
committed JDBC Connection
re-enabling autocommit
Written [SUCCESS] as "text/html" using [org.springframework.http.converter.StringHttpMessageConverter@2ac24f4f]
Null ModelAndView returned to DispatcherServlet with name 'appServlet': assuming HandlerAdapter completed request handling
Successfully completed request
DispatcherServlet with name 'appServlet' processing GET request for [/portfolio/addInvestment/myFirstTime/CIPLA]
Matching patterns for request [/portfolio/addInvestment/myFirstTime/CIPLA] are [/portfolio/addInvestment/{portfolioName}/{symbolName}]
URI Template variables for request [/portfolio/addInvestment/myFirstTime/CIPLA] are {portfolioName=myFirstTime, symbolName=CIPLA}
Mapping [/portfolio/addInvestment/myFirstTime/CIPLA] to HandlerExecutionChain with handler [com.inteltrader.rest.PortfolioServiceRest@175cfaa5] and 2 interceptors
Last-Modified value for [/portfolio/addInvestment/myFirstTime/CIPLA] is: -1
Invoking request handler method: public org.springframework.http.ResponseEntity com.inteltrader.rest.PortfolioServiceRest.addInvestment(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
begin
Obtaining JDBC connection
Opening new JDBC connection
Created connection to: jdbc:mysql://localhost:3306/TRADER_DB, Isolation Level: 4
Obtained JDBC connection
initial autocommit status: true
disabling autocommit
Loading entity: [com.inteltrader.entity.Portfolio#myFirstTime]
select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Result set row: 0
Result row: EntityKey[com.inteltrader.entity.Investment#1], EntityKey[com.inteltrader.entity.Portfolio#myFirstTime]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Resolving associations for [com.inteltrader.entity.Investment#1]
Done materializing entity [com.inteltrader.entity.Investment#1]
Resolving associations for [com.inteltrader.entity.Portfolio#myFirstTime]
Done materializing entity [com.inteltrader.entity.Portfolio#myFirstTime]
1 collections were found in result set for role: com.inteltrader.entity.Portfolio.investmentList
Collection fully initialized: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
1 collections initialized for role: com.inteltrader.entity.Portfolio.investmentList
Done entity load
Loading collection: [com.inteltrader.entity.Investment.transactionsList#1]
select transactio0_.INVESTMENT_ID as INVESTMENT1_2_0_, transactio0_.quantity as quantity3_0_, transactio0_.transactionId as transact3_3_0_, transactio0_.transactionPrice as transact4_3_0_ from TRADER_DB.INVESTMENT_TRANSACTION transactio0_ where transactio0_.INVESTMENT_ID=?
Result set contains (possibly empty) collection: [com.inteltrader.entity.Investment.transactionsList#1]
1 collections were found in result set for role: com.inteltrader.entity.Investment.transactionsList
Collection fully initialized: [com.inteltrader.entity.Investment.transactionsList#1]
1 collections initialized for role: com.inteltrader.entity.Investment.transactionsList
Done loading collection
committing
Processing flush-time cascades
Executing identity-insert immediately
insert into TRADER_DB.INVESTMENT (associatedPortfolio_PORTFOLIO_NAME, currentPrice, quantity, INVESTMENT_SYMBOL) values (?, ?, ?, ?)
Natively generated identity: 2
Dirty checking collections
Collection dirty: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Collection found: [com.inteltrader.entity.Investment.transactionsList#1], was: [com.inteltrader.entity.Investment.transactionsList#1] (initialized)
Collection found: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime], was: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime] (initialized)
Collection found: [com.inteltrader.entity.Investment.transactionsList#2], was: [<unreferenced>] (initialized)
Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
Flushed: 1 (re)creations, 1 updates, 0 removals to 3 collections
Listing entities:
com.inteltrader.entity.Investment{investmentId=2, quantity=null, currentPrice=null, symbolName=CIPLA, associatedPortfolio=com.inteltrader.entity.Portfolio#myFirstTime, transactionsList=[]}
com.inteltrader.entity.Investment{investmentId=1, quantity=null, currentPrice=null, symbolName=AMTEKAUTO, associatedPortfolio=com.inteltrader.entity.Portfolio#myFirstTime, transactionsList=[]}
com.inteltrader.entity.Portfolio{portfolioName=myFirstTime, investmentList=[com.inteltrader.entity.Investment#1, com.inteltrader.entity.Investment#2]}
Inserting collection: [com.inteltrader.entity.Investment.transactionsList#2]
Collection was empty
committed JDBC Connection
re-enabling autocommit
Written [SUCCESS] as "text/html" using [org.springframework.http.converter.StringHttpMessageConverter@2ac24f4f]
Null ModelAndView returned to DispatcherServlet with name 'appServlet': assuming HandlerAdapter completed request handling
Successfully completed request
Initializing servlet 'appServlet'
Initializing new StandardServletEnvironment
Adding [servletConfigInitParams] PropertySource with lowest search precedence
Adding [servletContextInitParams] PropertySource with lowest search precedence
Adding [jndiProperties] PropertySource with lowest search precedence
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment]
FrameworkServlet 'appServlet': initialization started
Servlet with name 'appServlet' will try to create custom WebApplicationContext context of class 'org.springframework.web.context.support.XmlWebApplicationContext', using parent context [Root WebApplicationContext: startup date [Fri Apr 19 14:57:03 IST 2013]; root of context hierarchy]
Searching for key 'spring.profiles.active' in [servletConfigInitParams]
Searching for key 'spring.profiles.active' in [servletContextInitParams]
Searching for key 'spring.profiles.active' in [jndiProperties]
Looking up JNDI object with name [java:comp/env/spring.profiles.active]
Converted JNDI name [java:comp/env/spring.profiles.active] not found - trying original name [spring.profiles.active]. javax.naming.NameNotFoundException: Name [spring.profiles.active] is not bound in this Context. Unable to find [spring.profiles.active].
Looking up JNDI object with name [spring.profiles.active]
JNDI lookup for name [spring.profiles.active] threw NamingException with message: Name [spring.profiles.active] is not bound in this Context. Unable to find [spring.profiles.active].. Returning null.
Searching for key 'spring.profiles.active' in [systemProperties]
Searching for key 'spring.profiles.active' in [systemEnvironment]
Could not find key 'spring.profiles.active' in any property source. Returning [null]
Searching for key 'spring.profiles.default' in [servletConfigInitParams]
Searching for key 'spring.profiles.default' in [servletContextInitParams]
Searching for key 'spring.profiles.default' in [jndiProperties]
Looking up JNDI object with name [java:comp/env/spring.profiles.default]
Converted JNDI name [java:comp/env/spring.profiles.default] not found - trying original name [spring.profiles.default]. javax.naming.NameNotFoundException: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].
Looking up JNDI object with name [spring.profiles.default]
JNDI lookup for name [spring.profiles.default] threw NamingException with message: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].. Returning null.
Searching for key 'spring.profiles.default' in [systemProperties]
Searching for key 'spring.profiles.default' in [systemEnvironment]
Could not find key 'spring.profiles.default' in any property source. Returning [null]
Searching for key 'spring.profiles.default' in [servletConfigInitParams]
Searching for key 'spring.profiles.default' in [servletContextInitParams]
Searching for key 'spring.profiles.default' in [jndiProperties]
Looking up JNDI object with name [java:comp/env/spring.profiles.default]
Converted JNDI name [java:comp/env/spring.profiles.default] not found - trying original name [spring.profiles.default]. javax.naming.NameNotFoundException: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].
Looking up JNDI object with name [spring.profiles.default]
JNDI lookup for name [spring.profiles.default] threw NamingException with message: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].. Returning null.
Searching for key 'spring.profiles.default' in [systemProperties]
Searching for key 'spring.profiles.default' in [systemEnvironment]
Could not find key 'spring.profiles.default' in any property source. Returning [null]
Replacing [servletContextInitParams] PropertySource with [servletContextInitParams]
Replacing [servletConfigInitParams] PropertySource with [servletConfigInitParams]
Refreshing WebApplicationContext for namespace 'appServlet-servlet': startup date [Fri Apr 19 14:57:05 IST 2013]; parent: Root WebApplicationContext
Initializing new StandardEnvironment
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
Initializing new StandardEnvironment
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
Loading schema mappings from [META-INF/spring.schemas]
Loaded schema mappings: {http://www.springframework.org/schema/data/jpa/spring-jpa-1.2.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.2.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.1.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.1.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.5.xsd=org/springframework/data/repository/config/spring-repository-1.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.0.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.3.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.4.xsd=org/springframework/data/repository/config/spring-repository-1.4.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.3.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/data/repository/spring-repository.xsd=org/springframework/data/repository/config/spring-repository-1.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.0.xsd=org/springframework/data/repository/config/spring-repository-1.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.1.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.1.xsd
Found XML schema [http://www.springframework.org/schema/task/spring-task-3.0.xsd] in classpath: org/springframework/scheduling/config/spring-task-3.0.xsd
Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd
Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd
Found XML schema [http://www.springframework.org/schema/tx/spring-tx-3.1.xsd] in classpath: org/springframework/transaction/config/spring-tx-3.1.xsd
Loading bean definitions
Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/data/repository=org.springframework.data.repository.config.RepositoryNameSpaceHandler, http://www.springframework.org/schema/data/jpa=org.springframework.data.jpa.repository.config.JpaRepositoryNameSpaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
Neither XML 'id' nor 'name' specified - using generated bean name [org.springframework.web.servlet.view.InternalResourceViewResolver#0]
Neither XML 'id' nor 'name' specified - using generated bean name [org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver#1a021441]
Initializing new StandardEnvironment
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
Looking for matching resources in directory tree [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Resolved location pattern [classpath*:com/inteltrader/**/*.class] to resources [file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\Advice.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\FIFOList.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\InstrumentVo.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\Strategies.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\Strategy.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\StrategyMACD.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao\IInstrumentDao.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao\InstrumentDao.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao\IPortfolioDao.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao\PortfolioDao.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Instrument.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Investment.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Portfolio.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Price.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Transactions.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest\InstrumentServiceRest.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest\PortfolioServiceRest.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\AnalyserService.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\CronService.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\InstrumentService.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\InstrumentServiceImpl.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\PortfolioService.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\PortfolioServiceImpl.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util\DownloadZip.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util\ExtractZipFile.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util\ReadPriceCsv.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util\RestCodes.class]]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Instrument.class]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Investment.class]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Portfolio.class]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest\InstrumentServiceRest.class]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest\PortfolioServiceRest.class]
Loaded 21 bean definitions from location pattern [/WEB-INF/applicationContext.xml]
Bean factory for WebApplicationContext for namespace 'appServlet-servlet': org.springframework.beans.factory.support.DefaultListableBeanFactory@7e7fc4bd: defining beans [org.springframework.context.annotation.internalAsyncAnnotationProcessor,org.springframework.context.annotation.internalScheduledAnnotationProcessor,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0,org.springframework.web.servlet.view.InternalResourceViewResolver#0,instrumentDao,portfolioDao,instrumentService,portfolioService,entityManagerFactory,transactionManager,instrument,investment,portfolio,instrumentServiceRest,portfolioServiceRest]; parent: org.springframework.beans.factory.support.DefaultListableBeanFactory@4e91774
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@5ee19fb4]
Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@2ebc1316]
Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.DelegatingThemeSource@3d892152]
Creating shared instance of singleton bean 'entityManagerFactory'
Creating instance of bean 'entityManagerFactory'
Eagerly caching bean 'entityManagerFactory' to allow for resolving potential circular references
Creating instance of bean 'org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver#1a021441'
Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Creating instance of bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0' to allow for resolving potential circular references
Creating instance of bean '(inner bean)'
Creating shared instance of singleton bean 'transactionManager'
Creating instance of bean 'transactionManager'
Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
Returning eagerly cached instance of singleton bean 'entityManagerFactory' that is not fully initialized yet - a consequence of a circular reference
Ignoring currently created advisor 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0': Error creating bean with name 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0': Cannot create inner bean '(inner bean)' of type [org.springframework.transaction.interceptor.TransactionInterceptor] while setting bean property 'transactionInterceptor'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)': Cannot resolve reference to bean 'transactionManager' while setting bean property 'transactionManager'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'transactionManager' defined in ServletContext resource [/WEB-INF/applicationContext.xml]: Cannot resolve reference to bean 'entityManagerFactory' while setting bean property 'entityManagerFactory'; nested exception is org.springframework.beans.factory.BeanCurrentlyInCreationException: Error creating bean with name 'entityManagerFactory': FactoryBean which is currently in creation returned null from getObject
Finished creating instance of bean 'org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver#1a021441'
Invoking afterPropertiesSet() on bean with name 'entityManagerFactory'
Building JPA container EntityManagerFactory for persistence unit 'intelTrader'
Adding type registration boolean -> org.hibernate.type.BooleanType@fdbb789
Adding type registration boolean -> org.hibernate.type.BooleanType@fdbb789
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@fdbb789
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@13027cd9
Adding type registration true_false -> org.hibernate.type.TrueFalseType@4a9ed9f8
Adding type registration yes_no -> org.hibernate.type.YesNoType@5dde386b
Adding type registration byte -> org.hibernate.type.ByteType@5aa9443c
Adding type registration byte -> org.hibernate.type.ByteType@5aa9443c
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5aa9443c
Adding type registration character -> org.hibernate.type.CharacterType@7b6fda16
Adding type registration char -> org.hibernate.type.CharacterType@7b6fda16
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7b6fda16
Adding type registration short -> org.hibernate.type.ShortType@7e8f9a4f
Adding type registration short -> org.hibernate.type.ShortType@7e8f9a4f
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7e8f9a4f
Adding type registration integer -> org.hibernate.type.IntegerType@4b314fb0
Adding type registration int -> org.hibernate.type.IntegerType@4b314fb0
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4b314fb0
Adding type registration long -> org.hibernate.type.LongType@12530a7a
Adding type registration long -> org.hibernate.type.LongType@12530a7a
Adding type registration java.lang.Long -> org.hibernate.type.LongType@12530a7a
Adding type registration float -> org.hibernate.type.FloatType@400b6ba9
Adding type registration float -> org.hibernate.type.FloatType@400b6ba9
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@400b6ba9
Adding type registration double -> org.hibernate.type.DoubleType@561cc317
Adding type registration double -> org.hibernate.type.DoubleType@561cc317
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@561cc317
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@480ee892
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@480ee892
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7478220a
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7478220a
Adding type registration string -> org.hibernate.type.StringType@6073ec0c
Adding type registration java.lang.String -> org.hibernate.type.StringType@6073ec0c
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6e80103d
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@66227d3d
Adding type registration url -> org.hibernate.type.UrlType@52ec15de
Adding type registration java.net.URL -> org.hibernate.type.UrlType@52ec15de
Adding type registration date -> org.hibernate.type.DateType@7a1a43c0
Adding type registration java.sql.Date -> org.hibernate.type.DateType@7a1a43c0
Adding type registration time -> org.hibernate.type.TimeType@2a995a52
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2a995a52
Adding type registration timestamp -> org.hibernate.type.TimestampType@185061af
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@185061af
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@185061af
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3299e502
Adding type registration calendar -> org.hibernate.type.CalendarType@54cff7ee
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@54cff7ee
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@54cff7ee
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7ea0788
Adding type registration locale -> org.hibernate.type.LocaleType@42e7ad41
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@42e7ad41
Adding type registration currency -> org.hibernate.type.CurrencyType@5d3344a5
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5d3344a5
Adding type registration timezone -> org.hibernate.type.TimeZoneType@2ad82934
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2ad82934
Adding type registration class -> org.hibernate.type.ClassType@4236fb0
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4236fb0
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@30c12b86
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@30c12b86
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@490a390e
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@6c61c2ea
Adding type registration binary -> org.hibernate.type.BinaryType@261e0499
Adding type registration byte[] -> org.hibernate.type.BinaryType@261e0499
Adding type registration [B -> org.hibernate.type.BinaryType@261e0499
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7a96b386
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7a96b386
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7a96b386
Adding type registration image -> org.hibernate.type.ImageType@788f4769
Adding type registration characters -> org.hibernate.type.CharArrayType@20d7aa52
Adding type registration char[] -> org.hibernate.type.CharArrayType@20d7aa52
Adding type registration [C -> org.hibernate.type.CharArrayType@20d7aa52
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2c7ed9eb
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2c7ed9eb
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2c7ed9eb
Adding type registration text -> org.hibernate.type.TextType@5eb22a4d
Adding type registration ntext -> org.hibernate.type.NTextType@116e7f2
Adding type registration blob -> org.hibernate.type.BlobType@2fdca57b
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2fdca57b
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7a61c474
Adding type registration clob -> org.hibernate.type.ClobType@1cc6e47a
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1cc6e47a
Adding type registration nclob -> org.hibernate.type.NClobType@6979d4fb
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6979d4fb
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4f5a4576
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@215b6725
Adding type registration serializable -> org.hibernate.type.SerializableType@47e542c1
Adding type registration object -> org.hibernate.type.ObjectType@52c4410c
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@52c4410c
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@75eaae0d
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@24913f6
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@bbd7ca6
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@45427c4f
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@fef4a0f
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@26e726f5
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@11aeb2c7
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@645b2fe2
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Processing PersistenceUnitInfo [
	name: intelTrader
	persistence provider classname: org.hibernate.ejb.HibernatePersistence
	classloader: WebappClassLoader
  context: 
  delegate: false
  repositories:
    /WEB-INF/classes/
----------> Parent Classloader:
ClassRealm[plugin>org.apache.tomcat.maven:tomcat7-maven-plugin:2.0, parent: sun.misc.Launcher$AppClassLoader@1875303f]

	Temporary classloader: org.springframework.instrument.classloading.SimpleThrowawayClassLoader@1ea4d1e7
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/vvarm1/IdeaProjects/intelTrader/src/main/webapp/WEB-INF/classes
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.inteltrader.entity.Instrument
		com.inteltrader.entity.Portfolio
		com.inteltrader.entity.Investment]
	Mapping files names []
	Properties [
		hibernate.connection.username: root
		hibernate.connection.password: root
		hibernate.dialect: org.hibernate.dialect.MySQLDialect
		hibernate.c3p0.min_size: 10
		hibernate.connection.url: jdbc:mysql://localhost:3306/TRADER_DB
		hibernate.show_sql: true
		hibernate.connection.driver_class: com.mysql.jdbc.Driver
		hibernate.hbm2ddl.auto: update]
Detect class: true; detect hbm: true
Detect class: true; detect hbm: true
Searching mapped entities in jar/par: file:/C:/Users/vvarm1/IdeaProjects/intelTrader/src/main/webapp/WEB-INF/classes
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.ejb.event.JpaIntegrator].
No JNDI name configured for binding Ejb3Configuration
Preparing to build session factory with filters : {}
Processing hbm.xml files
Process annotated classes
Binding entity from annotated class: com.inteltrader.entity.Instrument
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Instrument
Bind entity com.inteltrader.entity.Instrument on table INSTRUMENT
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=SYMBOL_NAME, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property symbolName with lazy=false
building SimpleValue for symbolName
Building property symbolName
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=priceList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=priceList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=priceList_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='priceList_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='SYMBOL_NAME', referencedColumn='', mappedBy=''}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Collection role: com.inteltrader.entity.Instrument.priceList
Building property priceList
Binding entity from annotated class: com.inteltrader.entity.Portfolio
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Portfolio
Bind entity com.inteltrader.entity.Portfolio on table PORTFOLIO
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=PORTFOLIO_NAME, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property portfolioName with lazy=false
building SimpleValue for portfolioName
Building property portfolioName
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='associatedPortfolio'}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=investmentList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=element, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=investmentList_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='investmentList_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='associatedPortfolio'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='associatedPortfolio'}
Collection role: com.inteltrader.entity.Portfolio.investmentList
Building property investmentList
Binding entity from annotated class: com.inteltrader.entity.Investment
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Investment
Bind entity com.inteltrader.entity.Investment on table INVESTMENT
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=INVESTMENT_ID, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property investmentId with lazy=false
building SimpleValue for investmentId
Building property investmentId
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=associatedPortfolio, insertable=true, updatable=true, unique=false}
Building property associatedPortfolio
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=currentPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property currentPrice with lazy=false
building SimpleValue for currentPrice
Building property currentPrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=quantity, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property quantity with lazy=false
building SimpleValue for quantity
Building property quantity
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=INVESTMENT_SYMBOL, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property symbolName with lazy=false
building SimpleValue for symbolName
Building property symbolName
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=transactionsList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=transactionsList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=transactionsList_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='transactionsList_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='INVESTMENT_ID', referencedColumn='', mappedBy=''}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Collection role: com.inteltrader.entity.Investment.transactionsList
Building property transactionsList
Setting SimpleValue typeName for symbolName
Setting SimpleValue typeName for portfolioName
Setting SimpleValue typeName for investmentId
Setting SimpleValue typeName for currentPrice
Setting SimpleValue typeName for quantity
Setting SimpleValue typeName for symbolName
Processing fk mappings (*ToOne and JoinedSubclass)
Processing extends queue
Processing extends queue
Processing collection mappings
Second pass for collection: com.inteltrader.entity.Investment.transactionsList
Binding a collection of element: com.inteltrader.entity.Investment.transactionsList
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT_TRANSACTION), mappingColumn=quantity, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property quantity with lazy=false
building SimpleValue for quantity
Setting SimpleValue typeName for quantity
Building property quantity
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT_TRANSACTION), mappingColumn=transactionId, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property transactionId with lazy=false
building SimpleValue for transactionId
Setting SimpleValue typeName for transactionId
Building property transactionId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT_TRANSACTION), mappingColumn=transactionPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property transactionPrice with lazy=false
building SimpleValue for transactionPrice
Setting SimpleValue typeName for transactionPrice
Building property transactionPrice
Mapped collection key: INVESTMENT_ID, element: quantity, transactionId, transactionPrice
Second pass for collection: com.inteltrader.entity.Instrument.priceList
Binding a collection of element: com.inteltrader.entity.Instrument.priceList
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=closePrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property closePrice with lazy=false
building SimpleValue for closePrice
Setting SimpleValue typeName for closePrice
Building property closePrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=highPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property highPrice with lazy=false
building SimpleValue for highPrice
Setting SimpleValue typeName for highPrice
Building property highPrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=lastClosePrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property lastClosePrice with lazy=false
building SimpleValue for lastClosePrice
Setting SimpleValue typeName for lastClosePrice
Building property lastClosePrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=lowPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property lowPrice with lazy=false
building SimpleValue for lowPrice
Setting SimpleValue typeName for lowPrice
Building property lowPrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=openPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property openPrice with lazy=false
building SimpleValue for openPrice
Setting SimpleValue typeName for openPrice
Building property openPrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=priceId, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property priceId with lazy=false
building SimpleValue for priceId
Setting SimpleValue typeName for priceId
Building property priceId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=timeStamp, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property timeStamp with lazy=false
building SimpleValue for timeStamp
Setting SimpleValue typeName for timeStamp
Building property timeStamp
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=totalTradedQuantity, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property totalTradedQuantity with lazy=false
building SimpleValue for totalTradedQuantity
Setting SimpleValue typeName for totalTradedQuantity
Building property totalTradedQuantity
Mapped collection key: SYMBOL_NAME, element: closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity
Second pass for collection: com.inteltrader.entity.Portfolio.investmentList
Binding a OneToMany: com.inteltrader.entity.Portfolio.investmentList through a foreign key
Mapping collection: com.inteltrader.entity.Portfolio.investmentList -> INVESTMENT
Retrieving property com.inteltrader.entity.Investment.associatedPortfolio
Mapped collection key: associatedPortfolio_PORTFOLIO_NAME, one-to-many: com.inteltrader.entity.Investment
Processing native query and ResultSetMapping mappings
Processing association property references
Creating tables' unique integer identifiers
Processing foreign key constraints
Resolving reference to class: com.inteltrader.entity.Instrument
Resolving reference to class: com.inteltrader.entity.Portfolio
Resolving reference to class: com.inteltrader.entity.Investment
HHH000022: c3p0 properties were encountered, but the org.hibernate.service.jdbc.connections.internal.C3P0ConnectionProvider provider class was not found on the classpath; these properties are going to be ignored.
HHH000402: Using Hibernate built-in connection pool (not for production use!)
HHH000115: Hibernate connection pool size: 20
HHH000006: Autocommit mode: true
HHH000401: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/TRADER_DB]
HHH000046: Connection properties: {user=root, password=root, autocommit=true, release_mode=auto}
Opening new JDBC connection
Created connection to: jdbc:mysql://localhost:3306/TRADER_DB, Isolation Level: 4
Database ->
       name : MySQL
    version : 5.6.10-log
      major : 5
      minor : 6
Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.9 ( Revision: ${svn.Revision} )
      major : 5
      minor : 1
JDBC version : 3.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: disabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
multi-tenancy strategy : NONE
Connection release mode: auto
HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
Maximum outer join fetch depth: 2
Default batch fetch size: 1
Generate SQL with comments: disabled
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
HHH000397: Using ASTQueryTranslatorFactory
Query language substitutions: {}
JPA-QL strict compliance: enabled
Second-level cache: enabled
Query cache: disabled
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
Optimize cache for minimal puts: disabled
Structured second-level cache entries: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Named query checking : enabled
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : : disabled
Building session factory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\vvarm1\IdeaProjects\intelTrader\target\tomcat, hibernate.connection.url=jdbc:mysql://localhost:3306/TRADER_DB, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.ejb.discard_pc_on_close=false, catalina.useNaming=true, hibernate.transaction.flush_before_completion=false, os.name=Windows 7, sun.boot.class.path=C:\Program Files\Java\jdk1.7.0_10\jre\lib\resources.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\rt.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\jce.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.7.0_10\jre\classes, java.util.logging.config.file=C:\Users\vvarm1\IdeaProjects\intelTrader\target\tomcat\conf\logging.properties, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.7.0_10-b18, hibernate.connection.autocommit=true, hibernate.c3p0.min_size=10, user.name=vvarm1, shared.loader=, guice.disable.misplaced.annotation.check=true, tomcat.util.buf.StringCache.byte.enabled=true, javax.persistence.validation.mode=AUTO, hibernate.connection.release_mode=auto, idea.launcher.bin.path=C:\Program Files (x86)\JetBrains\IntelliJ IDEA Community Edition 12.0.4\bin, user.language=en, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, sun.boot.library.path=C:\Program Files\Java\jdk1.7.0_10\jre\bin, classworlds.conf=C:\Program Files\Apache Software Foundation\apache-maven-3.0.5\bin\m2.conf, java.version=1.7.0_10, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, user.timezone=Asia/Calcutta, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.7.0_10\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, file.encoding.pkg=sun.io, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.tomcat.,org.apache.jasper., file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=51.0, user.country=US, java.home=C:\Program Files\Java\jdk1.7.0_10\jre, java.vm.info=mixed mode, os.version=6.1, hibernate.transaction.factory_class=org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory, hibernate.query.jpaql_strict_compliance=true, path.separator=;, java.vm.version=23.6-b04, hibernate.connection.password=root, user.variant=, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.scan.DefaultJarScanner.jarsToSkip=bootstrap.jar,commons-daemon.jar,tomcat-juli.jar,annotations-api.jar,el-api.jar,jsp-api.jar,servlet-api.jar,catalina.jar,catalina-ant.jar,catalina-ha.jar,catalina-tribes.jar,jasper.jar,jasper-el.jar,ecj-*.jar,tomcat-api.jar,tomcat-util.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-jni.jar,tomcat-spdy.jar,tomcat-i18n-en.jar,tomcat-i18n-es.jar,tomcat-i18n-fr.jar,tomcat-i18n-ja.jar,tomcat-juli-adapters.jar,catalina-jmx-remote.jar,catalina-ws.jar,tomcat-jdbc.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,jstl.jar,geronimo-spec-jaxrpc*.jar,wsdl4j*.jar,ant.jar,ant-junit*.jar,aspectj*.jar,jmx.jar,h2*.jar,hibernate*.jar,httpclient*.jar,jmx-tools.jar,jta*.jar,log4j*.jar,mail*.jar,slf4j*.jar,xercesImpl.jar,xmlParserAPIs.jar,xml-apis.jar,access-bridge-64.jar,dnsns.jar,jaccess.jar,ldapsec.jar,localedata.jar,sunjce_provider.jar,sunmscapi.jar,sunpkcs11.jar,jhall.jar,tools.jar,sunec.jar,zipfs.jar,gnome-java-bridge.jar,pulse-java.jar,apple_provider.jar,AppleScriptEngine.jar,CoreAudio.jar,dns_sd.jar,j3daudio.jar,j3dcore.jar,j3dutils.jar,jai_core.jar,jai_codec.jar,mlibwrapper_jai.jar,MRJToolkit.jar,vecmath.jar,junit.jar,junit-*.jar,ant-launcher.jar, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.tomcat.,org.apache.jasper., user.script=, java.naming.factory.url.pkgs=org.apache.naming, user.home=C:\Users\vvarm1, org.apache.catalina.startup.ContextConfig.jarsToSkip=, java.specification.vendor=Oracle Corporation, hibernate.hbm2ddl.auto=update, java.library.path=C:\Program Files\Java\jdk1.7.0_10\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\JetBrains\IntelliJ IDEA Community Edition 12.0.4\bin\..\.\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\ThinkPad\Bluetooth Software\;C:\Program Files\ThinkPad\Bluetooth Software\syswow64;c:\Program Files\Intel\WiFi\bin\;c:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files (x86)\Git\cmd;C:\Users\vvarm1\Documents\play-2.0.3;C:\Program Files\Java\jdk1.7.0_10\bin;C:\Program Files\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\QuickTime\QTSystem\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Java\jre6\bin;C:\Program Files\Apache Software Foundation\apache-maven-3.0.5\bin;c:\program files (x86)\jetbrains\intellij idea community edition 12.0.4\jre\jre\bin;., java.vendor.url=http://java.oracle.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, org.apache.catalina.startup.TldConfig.jarsToSkip=, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, common.loader=${catalina.base}/lib,${catalina.base}/lib/*.jar,${catalina.home}/lib,${catalina.home}/lib/*.jar, maven.home=C:\Program Files\Apache Software Foundation\apache-maven-3.0.5, java.runtime.name=Java(TM) SE Runtime Environment, java.class.path=C:\Program Files\Apache Software Foundation\apache-maven-3.0.5\boot\plexus-classworlds-2.4.jar;C:\Program Files (x86)\JetBrains\IntelliJ IDEA Community Edition 12.0.4\lib\idea_rt.jar, sun.java.command=com.intellij.rt.execution.application.AppMain org.codehaus.classworlds.Launcher --no-plugin-registry --fail-fast --strict-checksums --update-snapshots org.apache.tomcat.maven:tomcat7-maven-plugin:2.0:run, hibernate.bytecode.use_reflection_optimizer=false, idea.launcher.port=7532, java.vm.specification.name=Java Virtual Machine Specification, catalina.home=C:\Users\vvarm1\IdeaProjects\intelTrader\target\tomcat, java.vm.specification.version=1.7, sun.os.patch.level=Service Pack 1, sun.cpu.endian=little, java.io.tmpdir=C:\Users\vvarm1\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, server.loader=, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, java.ext.dirs=C:\Program Files\Java\jdk1.7.0_10\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=C:\Users\vvarm1\IdeaProjects\intelTrader, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding=UTF-8, hibernate.use_identifier_rollback=false, java.specification.version=1.7, hibernate.show_sql=true}
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Static SQL for entity: com.inteltrader.entity.Investment
 Version select: select INVESTMENT_ID from TRADER_DB.INVESTMENT where INVESTMENT_ID =?
 Snapshot select: select investment_.INVESTMENT_ID, investment_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_, investment_.currentPrice as currentP2_2_, investment_.quantity as quantity2_, investment_.INVESTMENT_SYMBOL as INVESTMENT4_2_ from TRADER_DB.INVESTMENT investment_ where investment_.INVESTMENT_ID=?
 Insert 0: insert into TRADER_DB.INVESTMENT (associatedPortfolio_PORTFOLIO_NAME, currentPrice, quantity, INVESTMENT_SYMBOL, INVESTMENT_ID) values (?, ?, ?, ?, ?)
 Update 0: update TRADER_DB.INVESTMENT set associatedPortfolio_PORTFOLIO_NAME=?, currentPrice=?, quantity=?, INVESTMENT_SYMBOL=? where INVESTMENT_ID=?
 Delete 0: delete from TRADER_DB.INVESTMENT where INVESTMENT_ID=?
 Identity insert: insert into TRADER_DB.INVESTMENT (associatedPortfolio_PORTFOLIO_NAME, currentPrice, quantity, INVESTMENT_SYMBOL) values (?, ?, ?, ?)
Static SQL for entity: com.inteltrader.entity.Instrument
 Version select: select SYMBOL_NAME from TRADER_DB.INSTRUMENT where SYMBOL_NAME =?
 Snapshot select: select instrument_.SYMBOL_NAME from TRADER_DB.INSTRUMENT instrument_ where instrument_.SYMBOL_NAME=?
 Insert 0: insert into TRADER_DB.INSTRUMENT (SYMBOL_NAME) values (?)
 Update 0: null
 Delete 0: delete from TRADER_DB.INSTRUMENT where SYMBOL_NAME=?
Static SQL for entity: com.inteltrader.entity.Portfolio
 Version select: select PORTFOLIO_NAME from TRADER_DB.PORTFOLIO where PORTFOLIO_NAME =?
 Snapshot select: select portfolio_.PORTFOLIO_NAME from TRADER_DB.PORTFOLIO portfolio_ where portfolio_.PORTFOLIO_NAME=?
 Insert 0: insert into TRADER_DB.PORTFOLIO (PORTFOLIO_NAME) values (?)
 Update 0: null
 Delete 0: delete from TRADER_DB.PORTFOLIO where PORTFOLIO_NAME=?
Static SQL for collection: com.inteltrader.entity.Instrument.priceList
 Row insert: insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
 Row update: update TRADER_DB.INSTRUMENT_PRICE set closePrice=?, highPrice=?, lastClosePrice=?, lowPrice=?, openPrice=?, priceId=?, timeStamp=?, totalTradedQuantity=? where SYMBOL_NAME=? and priceId=? and totalTradedQuantity=?
 Row delete: delete from TRADER_DB.INSTRUMENT_PRICE where SYMBOL_NAME=? and priceId=? and totalTradedQuantity=?
 One-shot delete: delete from TRADER_DB.INSTRUMENT_PRICE where SYMBOL_NAME=?
Static SQL for collection: com.inteltrader.entity.Investment.transactionsList
 Row insert: insert into TRADER_DB.INVESTMENT_TRANSACTION (INVESTMENT_ID, quantity, transactionId, transactionPrice) values (?, ?, ?, ?)
 Row update: update TRADER_DB.INVESTMENT_TRANSACTION set quantity=?, transactionId=?, transactionPrice=? where INVESTMENT_ID=? and quantity=? and transactionId=? and transactionPrice=?
 Row delete: delete from TRADER_DB.INVESTMENT_TRANSACTION where INVESTMENT_ID=? and quantity=? and transactionId=? and transactionPrice=?
 One-shot delete: delete from TRADER_DB.INVESTMENT_TRANSACTION where INVESTMENT_ID=?
Static SQL for collection: com.inteltrader.entity.Portfolio.investmentList
 Row insert: update TRADER_DB.INVESTMENT set associatedPortfolio_PORTFOLIO_NAME=? where INVESTMENT_ID=?
 Row delete: update TRADER_DB.INVESTMENT set associatedPortfolio_PORTFOLIO_NAME=null where associatedPortfolio_PORTFOLIO_NAME=? and INVESTMENT_ID=?
 One-shot delete: update TRADER_DB.INVESTMENT set associatedPortfolio_PORTFOLIO_NAME=null where associatedPortfolio_PORTFOLIO_NAME=?
Static select for entity com.inteltrader.entity.Instrument [NONE]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for entity com.inteltrader.entity.Instrument [READ]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for entity com.inteltrader.entity.Instrument [UPGRADE]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [UPGRADE_NOWAIT]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [FORCE]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [PESSIMISTIC_READ]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? lock in share mode
Static select for entity com.inteltrader.entity.Instrument [PESSIMISTIC_WRITE]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [PESSIMISTIC_FORCE_INCREMENT]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [OPTIMISTIC]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for entity com.inteltrader.entity.Instrument [OPTIMISTIC_FORCE_INCREMENT]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for action ACTION_MERGE on entity com.inteltrader.entity.Instrument: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for action ACTION_REFRESH on entity com.inteltrader.entity.Instrument: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for entity com.inteltrader.entity.Investment [NONE]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_1_, investment0_.currentPrice as currentP2_2_1_, investment0_.quantity as quantity2_1_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_1_, portfolio1_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.INVESTMENT investment0_ left outer join TRADER_DB.PORTFOLIO portfolio1_ on investment0_.associatedPortfolio_PORTFOLIO_NAME=portfolio1_.PORTFOLIO_NAME where investment0_.INVESTMENT_ID=?
Static select for entity com.inteltrader.entity.Investment [READ]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_1_, investment0_.currentPrice as currentP2_2_1_, investment0_.quantity as quantity2_1_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_1_, portfolio1_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.INVESTMENT investment0_ left outer join TRADER_DB.PORTFOLIO portfolio1_ on investment0_.associatedPortfolio_PORTFOLIO_NAME=portfolio1_.PORTFOLIO_NAME where investment0_.INVESTMENT_ID=?
Static select for entity com.inteltrader.entity.Investment [UPGRADE]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [UPGRADE_NOWAIT]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [FORCE]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [PESSIMISTIC_READ]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? lock in share mode
Static select for entity com.inteltrader.entity.Investment [PESSIMISTIC_WRITE]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [PESSIMISTIC_FORCE_INCREMENT]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [OPTIMISTIC]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=?
Static select for entity com.inteltrader.entity.Investment [OPTIMISTIC_FORCE_INCREMENT]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=?
Static select for action ACTION_MERGE on entity com.inteltrader.entity.Investment: select investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_1_, investment0_.currentPrice as currentP2_2_1_, investment0_.quantity as quantity2_1_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_1_, portfolio1_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.INVESTMENT investment0_ left outer join TRADER_DB.PORTFOLIO portfolio1_ on investment0_.associatedPortfolio_PORTFOLIO_NAME=portfolio1_.PORTFOLIO_NAME where investment0_.INVESTMENT_ID=?
Static select for action ACTION_REFRESH on entity com.inteltrader.entity.Investment: select investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_1_, investment0_.currentPrice as currentP2_2_1_, investment0_.quantity as quantity2_1_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_1_, portfolio1_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.INVESTMENT investment0_ left outer join TRADER_DB.PORTFOLIO portfolio1_ on investment0_.associatedPortfolio_PORTFOLIO_NAME=portfolio1_.PORTFOLIO_NAME where investment0_.INVESTMENT_ID=?
Static select for entity com.inteltrader.entity.Portfolio [NONE]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Static select for entity com.inteltrader.entity.Portfolio [READ]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Static select for entity com.inteltrader.entity.Portfolio [UPGRADE]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [UPGRADE_NOWAIT]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [FORCE]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [PESSIMISTIC_READ]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? lock in share mode
Static select for entity com.inteltrader.entity.Portfolio [PESSIMISTIC_WRITE]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [PESSIMISTIC_FORCE_INCREMENT]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [OPTIMISTIC]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=?
Static select for entity com.inteltrader.entity.Portfolio [OPTIMISTIC_FORCE_INCREMENT]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=?
Static select for action ACTION_MERGE on entity com.inteltrader.entity.Portfolio: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Static select for action ACTION_REFRESH on entity com.inteltrader.entity.Portfolio: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Static select for collection com.inteltrader.entity.Instrument.priceList: select pricelist0_.SYMBOL_NAME as SYMBOL1_0_0_, pricelist0_.closePrice as closePrice1_0_, pricelist0_.highPrice as highPrice1_0_, pricelist0_.lastClosePrice as lastClos4_1_0_, pricelist0_.lowPrice as lowPrice1_0_, pricelist0_.openPrice as openPrice1_0_, pricelist0_.priceId as priceId1_0_, pricelist0_.timeStamp as timeStamp1_0_, pricelist0_.totalTradedQuantity as totalTra9_1_0_ from TRADER_DB.INSTRUMENT_PRICE pricelist0_ where pricelist0_.SYMBOL_NAME=?
Static select for one-to-many com.inteltrader.entity.Portfolio.investmentList: select investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_1_, investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.associatedPortfolio_PORTFOLIO_NAME=?
Static select for collection com.inteltrader.entity.Investment.transactionsList: select transactio0_.INVESTMENT_ID as INVESTMENT1_2_0_, transactio0_.quantity as quantity3_0_, transactio0_.transactionId as transact3_3_0_, transactio0_.transactionPrice as transact4_3_0_ from TRADER_DB.INVESTMENT_TRANSACTION transactio0_ where transactio0_.INVESTMENT_ID=?
Registering SessionFactory: 923f061c-43ad-46e5-a687-d53101f1cc90 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Instantiated session factory
HHH000228: Running hbm2ddl schema update
HHH000102: Fetching database metadata
HHH000396: Updating schema
Processing hbm.xml files
Process annotated classes
Processing fk mappings (*ToOne and JoinedSubclass)
Processing extends queue
Processing extends queue
Processing collection mappings
Processing native query and ResultSetMapping mappings
Processing association property references
Creating tables' unique integer identifiers
Processing foreign key constraints
Resolving reference to class: com.inteltrader.entity.Instrument
Resolving reference to class: com.inteltrader.entity.Portfolio
Resolving reference to class: com.inteltrader.entity.Investment
HHH000261: Table found: TRADER_DB.instrument
HHH000037: Columns: [symbol_name]
HHH000108: Foreign keys: []
HHH000126: Indexes: [primary]
HHH000261: Table found: TRADER_DB.instrument_price
HHH000037: Columns: [totaltradedquantity, timestamp, priceid, lastcloseprice, highprice, symbol_name, openprice, closeprice, lowprice]
HHH000108: Foreign keys: [fk3189a2d153ed548d]
HHH000126: Indexes: [fk3189a2d153ed548d]
HHH000261: Table found: TRADER_DB.investment
HHH000037: Columns: [investment_id, associatedportfolio_portfolio_name, currentprice, quantity, investment_symbol]
HHH000108: Foreign keys: [fk8fe41ed3c804d4f3]
HHH000126: Indexes: [fk8fe41ed3c804d4f3, primary]
HHH000261: Table found: TRADER_DB.investment_transaction
HHH000037: Columns: [transactionprice, investment_id, transactionid, quantity]
HHH000108: Foreign keys: [fka5863f52914590ae]
HHH000126: Indexes: [fka5863f52914590ae]
HHH000261: Table found: TRADER_DB.portfolio
HHH000037: Columns: [portfolio_name]
HHH000108: Foreign keys: []
HHH000126: Indexes: [primary]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
HHH000232: Schema update complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Statistics initialized [enabled=false]
Registering EntityManagerFactory: intelTrader 
HHH000436: Entity manager factory name (intelTrader) is already registered.  If entity manager will be clustered or passivated, specify a unique value for property 'hibernate.ejb.entitymanager_factory_name'
Finished creating instance of bean 'entityManagerFactory'
Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@7e7fc4bd: defining beans [org.springframework.context.annotation.internalAsyncAnnotationProcessor,org.springframework.context.annotation.internalScheduledAnnotationProcessor,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0,org.springframework.web.servlet.view.InternalResourceViewResolver#0,instrumentDao,portfolioDao,instrumentService,portfolioService,entityManagerFactory,transactionManager,instrument,investment,portfolio,instrumentServiceRest,portfolioServiceRest,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor]; parent: org.springframework.beans.factory.support.DefaultListableBeanFactory@4e91774
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Creating instance of bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0' to allow for resolving potential circular references
Creating instance of bean '(inner bean)'
Creating shared instance of singleton bean 'transactionManager'
Creating instance of bean 'transactionManager'
Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
Returning cached instance of singleton bean 'entityManagerFactory'
Invoking afterPropertiesSet() on bean with name 'transactionManager'
Finished creating instance of bean 'transactionManager'
Creating instance of bean '(inner bean)'
Finished creating instance of bean '(inner bean)'
Invoking afterPropertiesSet() on bean with name '(inner bean)'
Finished creating instance of bean '(inner bean)'
Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Creating shared instance of singleton bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Creating instance of bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Eagerly caching bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Creating shared instance of singleton bean 'instrumentDao'
Creating instance of bean 'instrumentDao'
Eagerly caching bean 'instrumentDao' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'instrumentDao'
Creating shared instance of singleton bean 'portfolioDao'
Creating instance of bean 'portfolioDao'
Eagerly caching bean 'portfolioDao' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'portfolioDao'
Creating shared instance of singleton bean 'instrumentService'
Creating instance of bean 'instrumentService'
Registered injected element on class [com.inteltrader.service.InstrumentServiceImpl]: PersistenceElement for javax.persistence.EntityManagerFactory com.inteltrader.service.InstrumentServiceImpl.entityManagerFactory
Registered injected element on class [com.inteltrader.service.InstrumentServiceImpl]: AutowiredFieldElement for private com.inteltrader.dao.IInstrumentDao com.inteltrader.service.InstrumentServiceImpl.instrumentDao
Registered injected element on class [com.inteltrader.service.InstrumentServiceImpl]: AutowiredFieldElement for private com.inteltrader.service.PortfolioService com.inteltrader.service.InstrumentServiceImpl.portfolioService
Eagerly caching bean 'instrumentService' to allow for resolving potential circular references
Processing injected method of bean 'instrumentService': PersistenceElement for javax.persistence.EntityManagerFactory com.inteltrader.service.InstrumentServiceImpl.entityManagerFactory
Returning cached instance of singleton bean 'entityManagerFactory'
Processing injected method of bean 'instrumentService': AutowiredFieldElement for private com.inteltrader.dao.IInstrumentDao com.inteltrader.service.InstrumentServiceImpl.instrumentDao
Returning cached instance of singleton bean 'instrumentDao'
Autowiring by type from bean name 'instrumentService' to bean named 'instrumentDao'
Processing injected method of bean 'instrumentService': AutowiredFieldElement for private com.inteltrader.service.PortfolioService com.inteltrader.service.InstrumentServiceImpl.portfolioService
Creating shared instance of singleton bean 'portfolioService'
Creating instance of bean 'portfolioService'
Registered injected element on class [com.inteltrader.service.PortfolioServiceImpl]: PersistenceElement for private javax.persistence.EntityManagerFactory com.inteltrader.service.PortfolioServiceImpl.entityManagerFactory
Registered injected element on class [com.inteltrader.service.PortfolioServiceImpl]: AutowiredFieldElement for private com.inteltrader.dao.IPortfolioDao com.inteltrader.service.PortfolioServiceImpl.portfolioDao
Eagerly caching bean 'portfolioService' to allow for resolving potential circular references
Processing injected method of bean 'portfolioService': PersistenceElement for private javax.persistence.EntityManagerFactory com.inteltrader.service.PortfolioServiceImpl.entityManagerFactory
Returning cached instance of singleton bean 'entityManagerFactory'
Processing injected method of bean 'portfolioService': AutowiredFieldElement for private com.inteltrader.dao.IPortfolioDao com.inteltrader.service.PortfolioServiceImpl.portfolioDao
Returning cached instance of singleton bean 'portfolioDao'
Autowiring by type from bean name 'portfolioService' to bean named 'portfolioDao'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'portfolioService'
Autowiring by type from bean name 'instrumentService' to bean named 'portfolioService'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'instrumentService'
Returning cached instance of singleton bean 'portfolioService'
Returning cached instance of singleton bean 'entityManagerFactory'
Returning cached instance of singleton bean 'transactionManager'
Creating shared instance of singleton bean 'instrument'
Creating instance of bean 'instrument'
Eagerly caching bean 'instrument' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'instrument'
Creating shared instance of singleton bean 'investment'
Creating instance of bean 'investment'
Eagerly caching bean 'investment' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'investment'
Creating shared instance of singleton bean 'portfolio'
Creating instance of bean 'portfolio'
Eagerly caching bean 'portfolio' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'portfolio'
Creating shared instance of singleton bean 'instrumentServiceRest'
Creating instance of bean 'instrumentServiceRest'
Registered injected element on class [com.inteltrader.rest.InstrumentServiceRest]: AutowiredFieldElement for private com.inteltrader.service.InstrumentService com.inteltrader.rest.InstrumentServiceRest.instrumentService
Eagerly caching bean 'instrumentServiceRest' to allow for resolving potential circular references
Processing injected method of bean 'instrumentServiceRest': AutowiredFieldElement for private com.inteltrader.service.InstrumentService com.inteltrader.rest.InstrumentServiceRest.instrumentService
Returning cached instance of singleton bean 'instrumentService'
Autowiring by type from bean name 'instrumentServiceRest' to bean named 'instrumentService'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'instrumentServiceRest'
Creating shared instance of singleton bean 'portfolioServiceRest'
Creating instance of bean 'portfolioServiceRest'
Registered injected element on class [com.inteltrader.rest.PortfolioServiceRest]: AutowiredFieldElement for private com.inteltrader.service.PortfolioService com.inteltrader.rest.PortfolioServiceRest.portfolioService
Eagerly caching bean 'portfolioServiceRest' to allow for resolving potential circular references
Processing injected method of bean 'portfolioServiceRest': AutowiredFieldElement for private com.inteltrader.service.PortfolioService com.inteltrader.rest.PortfolioServiceRest.portfolioService
Returning cached instance of singleton bean 'portfolioService'
Autowiring by type from bean name 'portfolioServiceRest' to bean named 'portfolioService'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'portfolioServiceRest'
Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@2018c8aa]
Returning cached instance of singleton bean 'lifecycleProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Unable to locate MultipartResolver with name 'multipartResolver': no multipart request handling provided
Creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Unable to locate LocaleResolver with name 'localeResolver': using default [org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver@1ac73c47]
Creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Unable to locate ThemeResolver with name 'themeResolver': using default [org.springframework.web.servlet.theme.FixedThemeResolver@1e91c550]
Creating instance of bean 'org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping'
Looking for URL mappings in application context: WebApplicationContext for namespace 'appServlet-servlet': startup date [Fri Apr 19 14:57:05 IST 2013]; parent: Root WebApplicationContext
Rejected bean name 'org.springframework.context.annotation.internalAsyncAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalScheduledAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalRequiredAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalCommonAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.aop.config.internalAutoProxyCreator': no URL paths identified
Rejected bean name 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0': no URL paths identified
Rejected bean name 'org.springframework.web.servlet.view.InternalResourceViewResolver#0': no URL paths identified
Rejected bean name 'instrumentDao': no URL paths identified
Rejected bean name 'portfolioDao': no URL paths identified
Rejected bean name 'instrumentService': no URL paths identified
Rejected bean name 'portfolioService': no URL paths identified
Rejected bean name 'entityManagerFactory': no URL paths identified
Rejected bean name 'transactionManager': no URL paths identified
Rejected bean name 'instrument': no URL paths identified
Rejected bean name 'investment': no URL paths identified
Rejected bean name 'portfolio': no URL paths identified
Rejected bean name 'instrumentServiceRest': no URL paths identified
Rejected bean name 'portfolioServiceRest': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor': no URL paths identified
Rejected bean name 'environment': no URL paths identified
Rejected bean name 'systemProperties': no URL paths identified
Rejected bean name 'systemEnvironment': no URL paths identified
Rejected bean name 'servletConfig': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry': no URL paths identified
Rejected bean name 'messageSource': no URL paths identified
Rejected bean name 'applicationEventMulticaster': no URL paths identified
Rejected bean name 'lifecycleProcessor': no URL paths identified
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping'
Creating instance of bean 'org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping'
Looking for URL mappings in application context: WebApplicationContext for namespace 'appServlet-servlet': startup date [Fri Apr 19 14:57:05 IST 2013]; parent: Root WebApplicationContext
Rejected bean name 'org.springframework.context.annotation.internalAsyncAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalScheduledAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalRequiredAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalCommonAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.aop.config.internalAutoProxyCreator': no URL paths identified
Rejected bean name 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0': no URL paths identified
Rejected bean name 'org.springframework.web.servlet.view.InternalResourceViewResolver#0': no URL paths identified
Rejected bean name 'instrumentDao': no URL paths identified
Rejected bean name 'portfolioDao': no URL paths identified
Rejected bean name 'instrumentService': no URL paths identified
Rejected bean name 'portfolioService': no URL paths identified
Rejected bean name 'entityManagerFactory': no URL paths identified
Rejected bean name 'transactionManager': no URL paths identified
Rejected bean name 'instrument': no URL paths identified
Rejected bean name 'investment': no URL paths identified
Rejected bean name 'portfolio': no URL paths identified
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/create/{symbol}] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/create/{symbol}.*] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/create/{symbol}/] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/update/{portfolioName}] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/update/{portfolioName}.*] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/update/{portfolioName}/] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/load/{symbol}] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/load/{symbol}.*] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/load/{symbol}/] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/create/{portfolioName}] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/create/{portfolioName}.*] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/create/{portfolioName}/] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/addInvestment/{portfolioName}/{symbolName}] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/addInvestment/{portfolioName}/{symbolName}.*] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/addInvestment/{portfolioName}/{symbolName}/] onto handler 'portfolioServiceRest'
Rejected bean name 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor': no URL paths identified
Rejected bean name 'environment': no URL paths identified
Rejected bean name 'systemProperties': no URL paths identified
Rejected bean name 'systemEnvironment': no URL paths identified
Rejected bean name 'servletConfig': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry': no URL paths identified
Rejected bean name 'messageSource': no URL paths identified
Rejected bean name 'applicationEventMulticaster': no URL paths identified
Rejected bean name 'lifecycleProcessor': no URL paths identified
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping'
No HandlerMappings found in servlet 'appServlet': using default
Creating instance of bean 'org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter'
Creating instance of bean 'org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter'
Creating instance of bean 'org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter'
No HandlerAdapters found in servlet 'appServlet': using default
Creating instance of bean 'org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerExceptionResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerExceptionResolver'
Creating instance of bean 'org.springframework.web.servlet.mvc.annotation.ResponseStatusExceptionResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.annotation.ResponseStatusExceptionResolver'
Creating instance of bean 'org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver'
No HandlerExceptionResolvers found in servlet 'appServlet': using default
Creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Unable to locate RequestToViewNameTranslator with name 'viewNameTranslator': using default [org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@3ed0c485]
Returning cached instance of singleton bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Returning cached instance of singleton bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Unable to locate FlashMapManager with name 'flashMapManager': using default [org.springframework.web.servlet.support.SessionFlashMapManager@74f307d5]
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Searching for key 'spring.liveBeansView.mbeanDomain' in [servletConfigInitParams]
Searching for key 'spring.liveBeansView.mbeanDomain' in [servletContextInitParams]
Searching for key 'spring.liveBeansView.mbeanDomain' in [jndiProperties]
Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain]
Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException: Name [spring.liveBeansView.mbeanDomain] is not bound in this Context. Unable to find [spring.liveBeansView.mbeanDomain].
Looking up JNDI object with name [spring.liveBeansView.mbeanDomain]
JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: Name [spring.liveBeansView.mbeanDomain] is not bound in this Context. Unable to find [spring.liveBeansView.mbeanDomain].. Returning null.
Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
Published WebApplicationContext of servlet 'appServlet' as ServletContext attribute with name [org.springframework.web.servlet.FrameworkServlet.CONTEXT.appServlet]
FrameworkServlet 'appServlet': initialization completed in 520 ms
Servlet 'appServlet' configured successfully
DispatcherServlet with name 'appServlet' processing GET request for [/instrument/create/AMTEKAUTO]
Matching patterns for request [/instrument/create/AMTEKAUTO] are [/instrument/create/{symbol}]
URI Template variables for request [/instrument/create/AMTEKAUTO] are {symbol=AMTEKAUTO}
Mapping [/instrument/create/AMTEKAUTO] to HandlerExecutionChain with handler [com.inteltrader.rest.InstrumentServiceRest@71c219ef] and 2 interceptors
Last-Modified value for [/instrument/create/AMTEKAUTO] is: -1
Invoking request handler method: public org.springframework.http.ResponseEntity com.inteltrader.rest.InstrumentServiceRest.createInstrument(java.lang.String,javax.servlet.http.HttpServletRequest)
begin
Obtaining JDBC connection
Obtained JDBC connection
initial autocommit status: true
disabling autocommit
committing
committed JDBC Connection
re-enabling autocommit
Written [FAILURE] as "text/html" using [org.springframework.http.converter.StringHttpMessageConverter@2792412e]
Null ModelAndView returned to DispatcherServlet with name 'appServlet': assuming HandlerAdapter completed request handling
Successfully completed request
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
DispatcherServlet with name 'appServlet' processing GET request for [/instrument/create/AMTEKAUTO]
Matching patterns for request [/instrument/create/AMTEKAUTO] are [/instrument/create/{symbol}]
URI Template variables for request [/instrument/create/AMTEKAUTO] are {symbol=AMTEKAUTO}
Mapping [/instrument/create/AMTEKAUTO] to HandlerExecutionChain with handler [com.inteltrader.rest.InstrumentServiceRest@71c219ef] and 2 interceptors
Last-Modified value for [/instrument/create/AMTEKAUTO] is: -1
Invoking request handler method: public org.springframework.http.ResponseEntity com.inteltrader.rest.InstrumentServiceRest.createInstrument(java.lang.String,javax.servlet.http.HttpServletRequest)
begin
Obtaining JDBC connection
Opening new JDBC connection
Created connection to: jdbc:mysql://localhost:3306/TRADER_DB, Isolation Level: 4
Obtained JDBC connection
initial autocommit status: true
disabling autocommit
Generated identifier: AMTEKAUTO, using strategy: org.hibernate.id.Assigned
committing
Processing flush-time cascades
Dirty checking collections
Collection found: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO], was: [<unreferenced>] (initialized)
Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
Listing entities:
com.inteltrader.entity.Instrument{priceList=[component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=246834, closePrice=164.5, timeStamp=java.util.GregorianCalendar[time=1303205277058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=3,WEEK_OF_YEAR=17,WEEK_OF_MONTH=4,DAY_OF_MONTH=19,DAY_OF_YEAR=109,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=162.1, priceId=0, lastClosePrice=164.2, lowPrice=162.1, highPrice=165.5}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=476676, closePrice=169.0, timeStamp=java.util.GregorianCalendar[time=1303291677058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=3,WEEK_OF_YEAR=17,WEEK_OF_MONTH=4,DAY_OF_MONTH=20,DAY_OF_YEAR=110,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=164.8, priceId=0, lastClosePrice=164.5, lowPrice=164.8, highPrice=170.0}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=301969, closePrice=170.05, timeStamp=java.util.GregorianCalendar[time=1303378077058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=3,WEEK_OF_YEAR=17,WEEK_OF_MONTH=4,DAY_OF_MONTH=21,DAY_OF_YEAR=111,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=168.45, priceId=0, lastClosePrice=169.0, lowPrice=167.7, highPrice=171.2}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=301969, closePrice=170.05, timeStamp=java.util.GregorianCalendar[time=1303464477058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=3,WEEK_OF_YEAR=17,WEEK_OF_MONTH=4,DAY_OF_MONTH=22,DAY_OF_YEAR=112,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=168.45, priceId=0, lastClosePrice=169.0, lowPrice=167.7, highPrice=171.2}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=281163, closePrice=170.05, timeStamp=java.util.GregorianCalendar[time=1303723677058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=3,WEEK_OF_YEAR=18,WEEK_OF_MONTH=5,DAY_OF_MONTH=25,DAY_OF_YEAR=115,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=169.0, priceId=0, lastClosePrice=170.05, lowPrice=166.5, highPrice=171.9}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=182989, closePrice=171.25, timeStamp=java.util.GregorianCalendar[time=1303810077058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=3,WEEK_OF_YEAR=18,WEEK_OF_MONTH=5,DAY_OF_MONTH=26,DAY_OF_YEAR=116,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=168.15, priceId=0, lastClosePrice=170.05, lowPrice=168.15, highPrice=172.3}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=397102, closePrice=171.2, timeStamp=java.util.GregorianCalendar[time=1303896477058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=3,WEEK_OF_YEAR=18,WEEK_OF_MONTH=5,DAY_OF_MONTH=27,DAY_OF_YEAR=117,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=171.35, priceId=0, lastClosePrice=171.25, lowPrice=169.0, highPrice=172.45}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=530228, closePrice=168.5, timeStamp=java.util.GregorianCalendar[time=1303982877058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=3,WEEK_OF_YEAR=18,WEEK_OF_MONTH=5,DAY_OF_MONTH=28,DAY_OF_YEAR=118,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=170.0, priceId=0, lastClosePrice=171.2, lowPrice=167.2, highPrice=172.05}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=182424, closePrice=163.4, timeStamp=java.util.GregorianCalendar[time=1304069277058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=3,WEEK_OF_YEAR=18,WEEK_OF_MONTH=5,DAY_OF_MONTH=29,DAY_OF_YEAR=119,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=169.5, priceId=0, lastClosePrice=168.5, lowPrice=158.55, highPrice=169.95}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=254689, closePrice=164.1, timeStamp=java.util.GregorianCalendar[time=1304328477058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=4,WEEK_OF_YEAR=19,WEEK_OF_MONTH=1,DAY_OF_MONTH=2,DAY_OF_YEAR=122,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=165.0, priceId=0, lastClosePrice=163.4, lowPrice=160.1, highPrice=165.75}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=151395, closePrice=157.25, timeStamp=java.util.GregorianCalendar[time=1304414877058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=4,WEEK_OF_YEAR=19,WEEK_OF_MONTH=1,DAY_OF_MONTH=3,DAY_OF_YEAR=123,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=161.55, priceId=0, lastClosePrice=164.1, lowPrice=155.1, highPrice=164.95}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=409255, closePrice=154.25, timeStamp=java.util.GregorianCalendar[time=1304501277058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=4,WEEK_OF_YEAR=19,WEEK_OF_MONTH=1,DAY_OF_MONTH=4,DAY_OF_YEAR=124,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=157.9, priceId=0, lastClosePrice=157.25, lowPrice=151.8, highPrice=158.05}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=297578, closePrice=152.85, timeStamp=java.util.GregorianCalendar[time=1304587677058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=4,WEEK_OF_YEAR=19,WEEK_OF_MONTH=1,DAY_OF_MONTH=5,DAY_OF_YEAR=125,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=152.0, priceId=0, lastClosePrice=154.25, lowPrice=149.1, highPrice=154.9}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=488116, closePrice=150.4, timeStamp=java.util.GregorianCalendar[time=1304674077058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=4,WEEK_OF_YEAR=19,WEEK_OF_MONTH=1,DAY_OF_MONTH=6,DAY_OF_YEAR=126,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=151.9, priceId=0, lastClosePrice=152.85, lowPrice=147.1, highPrice=152.0}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=429181, closePrice=144.7, timeStamp=java.util.GregorianCalendar[time=1304933277058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=4,WEEK_OF_YEAR=20,WEEK_OF_MONTH=2,DAY_OF_MONTH=9,DAY_OF_YEAR=129,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=150.05, priceId=0, lastClosePrice=150.4, lowPrice=140.8, highPrice=151.8}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=1389208, closePrice=147.75, timeStamp=java.util.GregorianCalendar[time=1305019677058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=4,WEEK_OF_YEAR=20,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=130,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=146.05, priceId=0, lastClosePrice=144.7, lowPrice=144.5, highPrice=149.85}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=84527, closePrice=152.25, timeStamp=java.util.GregorianCalendar[time=1305106077058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=4,WEEK_OF_YEAR=20,WEEK_OF_MONTH=2,DAY_OF_MONTH=11,DAY_OF_YEAR=131,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=148.3, priceId=0, lastClosePrice=147.75, lowPrice=147.5, highPrice=152.95}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=552691, closePrice=155.95, timeStamp=java.util.GregorianCalendar[time=1305192477058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=4,WEEK_OF_YEAR=20,WEEK_OF_MONTH=2,DAY_OF_MONTH=12,DAY_OF_YEAR=132,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=152.3, priceId=0, lastClosePrice=152.25, lowPrice=152.0, highPrice=157.85}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=526822, closePrice=160.7, timeStamp=java.util.GregorianCalendar[time=1305278877058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=4,WEEK_OF_YEAR=20,WEEK_OF_MONTH=2,DAY_OF_MONTH=13,DAY_OF_YEAR=133,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=156.0, priceId=0, lastClosePrice=155.95, lowPrice=153.85, highPrice=164.0}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=200963, closePrice=157.55, timeStamp=java.util.GregorianCalendar[time=1305538077058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=4,WEEK_OF_YEAR=21,WEEK_OF_MONTH=3,DAY_OF_MONTH=16,DAY_OF_YEAR=136,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=160.0, priceId=0, lastClosePrice=160.7, lowPrice=155.45, highPrice=161.95}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=105304, closePrice=159.75, timeStamp=java.util.GregorianCalendar[time=1305624477058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=4,WEEK_OF_YEAR=21,WEEK_OF_MONTH=3,DAY_OF_MONTH=17,DAY_OF_YEAR=137,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=158.0, priceId=0, lastClosePrice=157.55, lowPrice=157.7, highPrice=162.0}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=152874, closePrice=163.45, timeStamp=java.util.GregorianCalendar[time=1305710877058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=4,WEEK_OF_YEAR=21,WEEK_OF_MONTH=3,DAY_OF_MONTH=18,DAY_OF_YEAR=138,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=159.05, priceId=0, lastClosePrice=159.75, lowPrice=159.05, highPrice=164.25}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=145327, closePrice=165.5, timeStamp=java.util.GregorianCalendar[time=1305797277058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=4,WEEK_OF_YEAR=21,WEEK_OF_MONTH=3,DAY_OF_MONTH=19,DAY_OF_YEAR=139,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=163.5, priceId=0, lastClosePrice=163.45, lowPrice=163.0, highPrice=166.6}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=193349, closePrice=165.55, timeStamp=java.util.GregorianCalendar[time=1305883677058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=4,WEEK_OF_YEAR=21,WEEK_OF_MONTH=3,DAY_OF_MONTH=20,DAY_OF_YEAR=140,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=166.65, priceId=0, lastClosePrice=165.5, lowPrice=163.2, highPrice=168.0}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=78862, closePrice=164.3, timeStamp=java.util.GregorianCalendar[time=1306142877058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=4,WEEK_OF_YEAR=22,WEEK_OF_MONTH=4,DAY_OF_MONTH=23,DAY_OF_YEAR=143,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=160.0, priceId=0, lastClosePrice=165.55, lowPrice=156.95, highPrice=165.05}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=203525, closePrice=164.6, timeStamp=java.util.GregorianCalendar[time=1306229277058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=4,WEEK_OF_YEAR=22,WEEK_OF_MONTH=4,DAY_OF_MONTH=24,DAY_OF_YEAR=144,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=163.95, priceId=0, lastClosePrice=164.3, lowPrice=161.3, highPrice=165.1}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=1140161, closePrice=163.95, timeStamp=java.util.GregorianCalendar[time=1306315677058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=4,WEEK_OF_YEAR=22,WEEK_OF_MONTH=4,DAY_OF_MONTH=25,DAY_OF_YEAR=145,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=163.75, priceId=0, lastClosePrice=164.6, lowPrice=162.4, highPrice=165.5}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=452488, closePrice=164.85, timeStamp=java.util.GregorianCalendar[time=1306402077058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=4,WEEK_OF_YEAR=22,WEEK_OF_MONTH=4,DAY_OF_MONTH=26,DAY_OF_YEAR=146,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=165.9, priceId=0, lastClosePrice=163.95, lowPrice=163.15, highPrice=166.0}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=212247, closePrice=168.2, timeStamp=java.util.GregorianCalendar[time=1306488477058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=4,WEEK_OF_YEAR=22,WEEK_OF_MONTH=4,DAY_OF_MONTH=27,DAY_OF_YEAR=147,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=162.7, priceId=0, lastClosePrice=164.85, lowPrice=162.7, highPrice=169.85}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=151252, closePrice=170.0, timeStamp=java.util.GregorianCalendar[time=1306747677058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=4,WEEK_OF_YEAR=23,WEEK_OF_MONTH=5,DAY_OF_MONTH=30,DAY_OF_YEAR=150,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=169.8, priceId=0, lastClosePrice=168.2, lowPrice=167.55, highPrice=170.5}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=282423, closePrice=171.8, timeStamp=java.util.GregorianCalendar[time=1306834077058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=4,WEEK_OF_YEAR=23,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=151,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=171.25, priceId=0, lastClosePrice=170.0, lowPrice=169.15, highPrice=172.5}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=172752, closePrice=170.95, timeStamp=java.util.GregorianCalendar[time=1306920477058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=5,WEEK_OF_YEAR=23,WEEK_OF_MONTH=1,DAY_OF_MONTH=1,DAY_OF_YEAR=152,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=171.0, priceId=0, lastClosePrice=171.8, lowPrice=169.5, highPrice=171.9}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=226676, closePrice=169.2, timeStamp=java.util.GregorianCalendar[time=1307006877058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=5,WEEK_OF_YEAR=23,WEEK_OF_MONTH=1,DAY_OF_MONTH=2,DAY_OF_YEAR=153,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=168.0, priceId=0, lastClosePrice=170.95, lowPrice=167.15, highPrice=170.0}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=226224, closePrice=170.3, timeStamp=java.util.GregorianCalendar[time=1307093277058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=5,WEEK_OF_YEAR=23,WEEK_OF_MONTH=1,DAY_OF_MONTH=3,DAY_OF_YEAR=154,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=171.0, priceId=0, lastClosePrice=169.2, lowPrice=168.7, highPrice=172.4}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=166818, closePrice=169.75, timeStamp=java.util.GregorianCalendar[time=1307352477058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=5,WEEK_OF_YEAR=24,WEEK_OF_MONTH=2,DAY_OF_MONTH=6,DAY_OF_YEAR=157,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=170.45, priceId=0, lastClosePrice=170.3, lowPrice=168.1, highPrice=170.45}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=403552, closePrice=172.2, timeStamp=java.util.GregorianCalendar[time=1307438877058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=5,WEEK_OF_YEAR=24,WEEK_OF_MONTH=2,DAY_OF_MONTH=7,DAY_OF_YEAR=158,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=167.25, priceId=0, lastClosePrice=169.75, lowPrice=167.25, highPrice=172.9}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=210735, closePrice=172.25, timeStamp=java.util.GregorianCalendar[time=1307525277058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=5,WEEK_OF_YEAR=24,WEEK_OF_MONTH=2,DAY_OF_MONTH=8,DAY_OF_YEAR=159,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=173.0, priceId=0, lastClosePrice=172.2, lowPrice=170.75, highPrice=174.4}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=31495, closePrice=171.1, timeStamp=java.util.GregorianCalendar[time=1307611677058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=5,WEEK_OF_YEAR=24,WEEK_OF_MONTH=2,DAY_OF_MONTH=9,DAY_OF_YEAR=160,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=173.45, priceId=0, lastClosePrice=172.25, lowPrice=170.35, highPrice=173.45}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=98657, closePrice=170.25, timeStamp=java.util.GregorianCalendar[time=1307698077058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=5,WEEK_OF_YEAR=24,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=161,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=171.1, priceId=0, lastClosePrice=171.1, lowPrice=169.0, highPrice=171.9}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=48549, closePrice=169.85, timeStamp=java.util.GregorianCalendar[time=1307957277058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=5,WEEK_OF_YEAR=25,WEEK_OF_MONTH=3,DAY_OF_MONTH=13,DAY_OF_YEAR=164,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=165.35, priceId=0, lastClosePrice=170.25, lowPrice=165.35, highPrice=170.25}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=78114, closePrice=169.1, timeStamp=java.util.GregorianCalendar[time=1308043677058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=5,WEEK_OF_YEAR=25,WEEK_OF_MONTH=3,DAY_OF_MONTH=14,DAY_OF_YEAR=165,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=171.95, priceId=0, lastClosePrice=169.85, lowPrice=168.2, highPrice=171.95}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=57993, closePrice=168.8, timeStamp=java.util.GregorianCalendar[time=1308130077058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=5,WEEK_OF_YEAR=25,WEEK_OF_MONTH=3,DAY_OF_MONTH=15,DAY_OF_YEAR=166,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=170.95, priceId=0, lastClosePrice=169.1, lowPrice=166.85, highPrice=171.8}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=151754, closePrice=168.85, timeStamp=java.util.GregorianCalendar[time=1308216477058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=5,WEEK_OF_YEAR=25,WEEK_OF_MONTH=3,DAY_OF_MONTH=16,DAY_OF_YEAR=167,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=167.25, priceId=0, lastClosePrice=168.8, lowPrice=160.0, highPrice=169.5}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=405033, closePrice=168.5, timeStamp=java.util.GregorianCalendar[time=1308302877058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=5,WEEK_OF_YEAR=25,WEEK_OF_MONTH=3,DAY_OF_MONTH=17,DAY_OF_YEAR=168,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=170.7, priceId=0, lastClosePrice=168.85, lowPrice=166.1, highPrice=172.05}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=196188, closePrice=163.7, timeStamp=java.util.GregorianCalendar[time=1308562077058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=5,WEEK_OF_YEAR=26,WEEK_OF_MONTH=4,DAY_OF_MONTH=20,DAY_OF_YEAR=171,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=169.7, priceId=0, lastClosePrice=168.5, lowPrice=159.55, highPrice=169.7}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=124382, closePrice=161.65, timeStamp=java.util.GregorianCalendar[time=1308648477058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=5,WEEK_OF_YEAR=26,WEEK_OF_MONTH=4,DAY_OF_MONTH=21,DAY_OF_YEAR=172,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=162.0, priceId=0, lastClosePrice=163.7, lowPrice=160.1, highPrice=163.65}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=247509, closePrice=158.65, timeStamp=java.util.GregorianCalendar[time=1308734877058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=5,WEEK_OF_YEAR=26,WEEK_OF_MONTH=4,DAY_OF_MONTH=22,DAY_OF_YEAR=173,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=163.45, priceId=0, lastClosePrice=161.65, lowPrice=157.8, highPrice=163.45}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=356133, closePrice=159.65, timeStamp=java.util.GregorianCalendar[time=1308821277058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=5,WEEK_OF_YEAR=26,WEEK_OF_MONTH=4,DAY_OF_MONTH=23,DAY_OF_YEAR=174,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=157.2, priceId=0, lastClosePrice=158.65, lowPrice=155.35, highPrice=160.5}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=255410, closePrice=161.0, timeStamp=java.util.GregorianCalendar[time=1308907677058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=5,WEEK_OF_YEAR=26,WEEK_OF_MONTH=4,DAY_OF_MONTH=24,DAY_OF_YEAR=175,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=160.0, priceId=0, lastClosePrice=159.65, lowPrice=158.55, highPrice=162.4}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=567573, closePrice=160.35, timeStamp=java.util.GregorianCalendar[time=1309166877058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=5,WEEK_OF_YEAR=27,WEEK_OF_MONTH=5,DAY_OF_MONTH=27,DAY_OF_YEAR=178,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=161.4, priceId=0, lastClosePrice=161.0, lowPrice=158.25, highPrice=162.8}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=480167, closePrice=161.3, timeStamp=java.util.GregorianCalendar[time=1309253277058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=5,WEEK_OF_YEAR=27,WEEK_OF_MONTH=5,DAY_OF_MONTH=28,DAY_OF_YEAR=179,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=161.7, priceId=0, lastClosePrice=160.35, lowPrice=157.7, highPrice=166.0}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=252901, closePrice=161.45, timeStamp=java.util.GregorianCalendar[time=1309339677058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=5,WEEK_OF_YEAR=27,WEEK_OF_MONTH=5,DAY_OF_MONTH=29,DAY_OF_YEAR=180,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=164.0, priceId=0, lastClosePrice=161.3, lowPrice=160.7, highPrice=164.0}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=224066, closePrice=162.5, timeStamp=java.util.GregorianCalendar[time=1309426077058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=5,WEEK_OF_YEAR=27,WEEK_OF_MONTH=5,DAY_OF_MONTH=30,DAY_OF_YEAR=181,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=161.1, priceId=0, lastClosePrice=161.45, lowPrice=159.7, highPrice=163.0}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=163336, closePrice=162.1, timeStamp=java.util.GregorianCalendar[time=1309512477058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=6,WEEK_OF_YEAR=27,WEEK_OF_MONTH=1,DAY_OF_MONTH=1,DAY_OF_YEAR=182,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=163.9, priceId=0, lastClosePrice=162.5, lowPrice=160.25, highPrice=163.9}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=151360, closePrice=161.2, timeStamp=java.util.GregorianCalendar[time=1309771677058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=6,WEEK_OF_YEAR=28,WEEK_OF_MONTH=2,DAY_OF_MONTH=4,DAY_OF_YEAR=185,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=164.75, priceId=0, lastClosePrice=162.1, lowPrice=160.3, highPrice=164.75}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=147972, closePrice=161.45, timeStamp=java.util.GregorianCalendar[time=1309858077058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=6,WEEK_OF_YEAR=28,WEEK_OF_MONTH=2,DAY_OF_MONTH=5,DAY_OF_YEAR=186,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=162.8, priceId=0, lastClosePrice=161.2, lowPrice=160.85, highPrice=163.5}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=136754, closePrice=163.15, timeStamp=java.util.GregorianCalendar[time=1309944477058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=6,WEEK_OF_YEAR=28,WEEK_OF_MONTH=2,DAY_OF_MONTH=6,DAY_OF_YEAR=187,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=162.85, priceId=0, lastClosePrice=161.45, lowPrice=161.7, highPrice=163.95}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=83654, closePrice=164.45, timeStamp=java.util.GregorianCalendar[time=1310030877058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=6,WEEK_OF_YEAR=28,WEEK_OF_MONTH=2,DAY_OF_MONTH=7,DAY_OF_YEAR=188,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=164.85, priceId=0, lastClosePrice=163.15, lowPrice=162.65, highPrice=165.35}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=249942, closePrice=165.65, timeStamp=java.util.GregorianCalendar[time=1310117277058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=6,WEEK_OF_YEAR=28,WEEK_OF_MONTH=2,DAY_OF_MONTH=8,DAY_OF_YEAR=189,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=163.1, priceId=0, lastClosePrice=164.45, lowPrice=163.1, highPrice=167.0}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=169920, closePrice=168.05, timeStamp=java.util.GregorianCalendar[time=1310376477058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=6,WEEK_OF_YEAR=29,WEEK_OF_MONTH=3,DAY_OF_MONTH=11,DAY_OF_YEAR=192,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=164.5, priceId=0, lastClosePrice=165.65, lowPrice=164.5, highPrice=169.0}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=231782, closePrice=161.9, timeStamp=java.util.GregorianCalendar[time=1310462877058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=6,WEEK_OF_YEAR=29,WEEK_OF_MONTH=3,DAY_OF_MONTH=12,DAY_OF_YEAR=193,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=170.0, priceId=0, lastClosePrice=168.05, lowPrice=160.5, highPrice=170.0}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=241024, closePrice=162.2, timeStamp=java.util.GregorianCalendar[time=1310549277058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=6,WEEK_OF_YEAR=29,WEEK_OF_MONTH=3,DAY_OF_MONTH=13,DAY_OF_YEAR=194,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=164.7, priceId=0, lastClosePrice=161.9, lowPrice=161.1, highPrice=164.7}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=251653, closePrice=161.4, timeStamp=java.util.GregorianCalendar[time=1310635677058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=6,WEEK_OF_YEAR=29,WEEK_OF_MONTH=3,DAY_OF_MONTH=14,DAY_OF_YEAR=195,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=162.45, priceId=0, lastClosePrice=162.2, lowPrice=160.1, highPrice=165.4}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=355796, closePrice=158.65, timeStamp=java.util.GregorianCalendar[time=1310722077058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=6,WEEK_OF_YEAR=29,WEEK_OF_MONTH=3,DAY_OF_MONTH=15,DAY_OF_YEAR=196,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=161.7, priceId=0, lastClosePrice=161.4, lowPrice=157.0, highPrice=162.65}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=161633, closePrice=154.1, timeStamp=java.util.GregorianCalendar[time=1310981277058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=6,WEEK_OF_YEAR=30,WEEK_OF_MONTH=4,DAY_OF_MONTH=18,DAY_OF_YEAR=199,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=160.0, priceId=0, lastClosePrice=158.65, lowPrice=153.1, highPrice=160.0}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=85594, closePrice=155.3, timeStamp=java.util.GregorianCalendar[time=1311067677058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=6,WEEK_OF_YEAR=30,WEEK_OF_MONTH=4,DAY_OF_MONTH=19,DAY_OF_YEAR=200,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=155.85, priceId=0, lastClosePrice=154.1, lowPrice=152.6, highPrice=155.9}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=399650, closePrice=147.45, timeStamp=java.util.GregorianCalendar[time=1311154077058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=6,WEEK_OF_YEAR=30,WEEK_OF_MONTH=4,DAY_OF_MONTH=20,DAY_OF_YEAR=201,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=156.75, priceId=0, lastClosePrice=155.3, lowPrice=143.2, highPrice=156.75}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=1919582, closePrice=154.7, timeStamp=java.util.GregorianCalendar[time=1311240477058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=6,WEEK_OF_YEAR=30,WEEK_OF_MONTH=4,DAY_OF_MONTH=21,DAY_OF_YEAR=202,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=151.9, priceId=0, lastClosePrice=147.45, lowPrice=147.45, highPrice=158.7}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=1891963, closePrice=157.05, timeStamp=java.util.GregorianCalendar[time=1311326877058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=6,WEEK_OF_YEAR=30,WEEK_OF_MONTH=4,DAY_OF_MONTH=22,DAY_OF_YEAR=203,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=157.0, priceId=0, lastClosePrice=154.7, lowPrice=154.25, highPrice=161.3}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=215583, closePrice=159.4, timeStamp=java.util.GregorianCalendar[time=1311586077058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=6,WEEK_OF_YEAR=31,WEEK_OF_MONTH=5,DAY_OF_MONTH=25,DAY_OF_YEAR=206,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=157.0, priceId=0, lastClosePrice=157.05, lowPrice=156.5, highPrice=162.85}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=538519, closePrice=158.1, timeStamp=java.util.GregorianCalendar[time=1311672477058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=6,WEEK_OF_YEAR=31,WEEK_OF_MONTH=5,DAY_OF_MONTH=26,DAY_OF_YEAR=207,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=160.0, priceId=0, lastClosePrice=159.4, lowPrice=154.9, highPrice=161.25}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=884587, closePrice=160.6, timeStamp=java.util.GregorianCalendar[time=1311758877058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=6,WEEK_OF_YEAR=31,WEEK_OF_MONTH=5,DAY_OF_MONTH=27,DAY_OF_YEAR=208,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=159.7, priceId=0, lastClosePrice=158.1, lowPrice=158.0, highPrice=161.5}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=302386, closePrice=158.75, timeStamp=java.util.GregorianCalendar[time=1311845277058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=6,WEEK_OF_YEAR=31,WEEK_OF_MONTH=5,DAY_OF_MONTH=28,DAY_OF_YEAR=209,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=160.0, priceId=0, lastClosePrice=160.6, lowPrice=155.3, highPrice=160.95}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=554203, closePrice=159.4, timeStamp=java.util.GregorianCalendar[time=1311931677058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=6,WEEK_OF_YEAR=31,WEEK_OF_MONTH=5,DAY_OF_MONTH=29,DAY_OF_YEAR=210,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=158.85, priceId=0, lastClosePrice=158.75, lowPrice=155.8, highPrice=161.85}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=573302, closePrice=159.8, timeStamp=java.util.GregorianCalendar[time=1312190877058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=7,WEEK_OF_YEAR=32,WEEK_OF_MONTH=1,DAY_OF_MONTH=1,DAY_OF_YEAR=213,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=159.0, priceId=0, lastClosePrice=159.4, lowPrice=156.65, highPrice=161.3}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=317311, closePrice=159.95, timeStamp=java.util.GregorianCalendar[time=1312277277058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=7,WEEK_OF_YEAR=32,WEEK_OF_MONTH=1,DAY_OF_MONTH=2,DAY_OF_YEAR=214,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=158.6, priceId=0, lastClosePrice=159.8, lowPrice=158.55, highPrice=163.5}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=362443, closePrice=160.1, timeStamp=java.util.GregorianCalendar[time=1312363677058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=7,WEEK_OF_YEAR=32,WEEK_OF_MONTH=1,DAY_OF_MONTH=3,DAY_OF_YEAR=215,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=158.95, priceId=0, lastClosePrice=159.95, lowPrice=158.45, highPrice=160.5}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=878423, closePrice=158.95, timeStamp=java.util.GregorianCalendar[time=1312450077058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=7,WEEK_OF_YEAR=32,WEEK_OF_MONTH=1,DAY_OF_MONTH=4,DAY_OF_YEAR=216,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=160.2, priceId=0, lastClosePrice=160.1, lowPrice=157.55, highPrice=160.9}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=453424, closePrice=155.15, timeStamp=java.util.GregorianCalendar[time=1312536477058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=7,WEEK_OF_YEAR=32,WEEK_OF_MONTH=1,DAY_OF_MONTH=5,DAY_OF_YEAR=217,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=152.1, priceId=0, lastClosePrice=158.95, lowPrice=148.1, highPrice=157.85}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=110040, closePrice=151.5, timeStamp=java.util.GregorianCalendar[time=1312795677058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=7,WEEK_OF_YEAR=33,WEEK_OF_MONTH=2,DAY_OF_MONTH=8,DAY_OF_YEAR=220,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=151.2, priceId=0, lastClosePrice=155.15, lowPrice=149.1, highPrice=156.0}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=244364, closePrice=151.0, timeStamp=java.util.GregorianCalendar[time=1312882077058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=7,WEEK_OF_YEAR=33,WEEK_OF_MONTH=2,DAY_OF_MONTH=9,DAY_OF_YEAR=221,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=145.95, priceId=0, lastClosePrice=151.5, lowPrice=145.0, highPrice=152.45}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=600779, closePrice=151.05, timeStamp=java.util.GregorianCalendar[time=1312968477058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=7,WEEK_OF_YEAR=33,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=222,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=152.0, priceId=0, lastClosePrice=151.0, lowPrice=149.15, highPrice=154.0}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=568259, closePrice=154.2, timeStamp=java.util.GregorianCalendar[time=1313054877058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=7,WEEK_OF_YEAR=33,WEEK_OF_MONTH=2,DAY_OF_MONTH=11,DAY_OF_YEAR=223,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=151.1, priceId=0, lastClosePrice=151.05, lowPrice=150.45, highPrice=155.4}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=1520786, closePrice=150.7, timeStamp=java.util.GregorianCalendar[time=1313141277058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=7,WEEK_OF_YEAR=33,WEEK_OF_MONTH=2,DAY_OF_MONTH=12,DAY_OF_YEAR=224,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=156.0, priceId=0, lastClosePrice=154.2, lowPrice=148.3, highPrice=157.6}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=1520786, closePrice=150.7, timeStamp=java.util.GregorianCalendar[time=1313400477058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=7,WEEK_OF_YEAR=34,WEEK_OF_MONTH=3,DAY_OF_MONTH=15,DAY_OF_YEAR=227,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=156.0, priceId=0, lastClosePrice=154.2, lowPrice=148.3, highPrice=157.6}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=213801, closePrice=149.85, timeStamp=java.util.GregorianCalendar[time=1313486877058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=7,WEEK_OF_YEAR=34,WEEK_OF_MONTH=3,DAY_OF_MONTH=16,DAY_OF_YEAR=228,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=151.25, priceId=0, lastClosePrice=150.7, lowPrice=148.5, highPrice=151.95}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=697067, closePrice=148.8, timeStamp=java.util.GregorianCalendar[time=1313573277058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=7,WEEK_OF_YEAR=34,WEEK_OF_MONTH=3,DAY_OF_MONTH=17,DAY_OF_YEAR=229,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=149.1, priceId=0, lastClosePrice=149.85, lowPrice=145.1, highPrice=151.55}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=622650, closePrice=140.4, timeStamp=java.util.GregorianCalendar[time=1313659677058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=7,WEEK_OF_YEAR=34,WEEK_OF_MONTH=3,DAY_OF_MONTH=18,DAY_OF_YEAR=230,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=150.4, priceId=0, lastClosePrice=148.8, lowPrice=138.5, highPrice=150.4}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=1010029, closePrice=140.1, timeStamp=java.util.GregorianCalendar[time=1313746077058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=7,WEEK_OF_YEAR=34,WEEK_OF_MONTH=3,DAY_OF_MONTH=19,DAY_OF_YEAR=231,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=134.1, priceId=0, lastClosePrice=140.4, lowPrice=134.1, highPrice=144.4}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=944435, closePrice=139.8, timeStamp=java.util.GregorianCalendar[time=1314005277058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=7,WEEK_OF_YEAR=35,WEEK_OF_MONTH=4,DAY_OF_MONTH=22,DAY_OF_YEAR=234,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=139.3, priceId=0, lastClosePrice=140.1, lowPrice=127.0, highPrice=145.0}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=687474, closePrice=138.7, timeStamp=java.util.GregorianCalendar[time=1314091677058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=7,WEEK_OF_YEAR=35,WEEK_OF_MONTH=4,DAY_OF_MONTH=23,DAY_OF_YEAR=235,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=142.9, priceId=0, lastClosePrice=139.8, lowPrice=135.2, highPrice=142.9}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=477461, closePrice=137.85, timeStamp=java.util.GregorianCalendar[time=1314178077058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=7,WEEK_OF_YEAR=35,WEEK_OF_MONTH=4,DAY_OF_MONTH=24,DAY_OF_YEAR=236,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=139.95, priceId=0, lastClosePrice=138.7, lowPrice=136.05, highPrice=140.0}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=487156, closePrice=137.85, timeStamp=java.util.GregorianCalendar[time=1314264477058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=7,WEEK_OF_YEAR=35,WEEK_OF_MONTH=4,DAY_OF_MONTH=25,DAY_OF_YEAR=237,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=140.9, priceId=0, lastClosePrice=137.85, lowPrice=135.3, highPrice=144.9}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=979999, closePrice=133.3, timeStamp=java.util.GregorianCalendar[time=1314350877058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=7,WEEK_OF_YEAR=35,WEEK_OF_MONTH=4,DAY_OF_MONTH=26,DAY_OF_YEAR=238,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=145.0, priceId=0, lastClosePrice=137.85, lowPrice=131.05, highPrice=159.0}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=851295, closePrice=132.9, timeStamp=java.util.GregorianCalendar[time=1314610077058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=7,WEEK_OF_YEAR=36,WEEK_OF_MONTH=5,DAY_OF_MONTH=29,DAY_OF_YEAR=241,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=133.9, priceId=0, lastClosePrice=133.3, lowPrice=131.6, highPrice=137.6}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=356771, closePrice=133.7, timeStamp=java.util.GregorianCalendar[time=1314696477058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=7,WEEK_OF_YEAR=36,WEEK_OF_MONTH=5,DAY_OF_MONTH=30,DAY_OF_YEAR=242,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=133.85, priceId=0, lastClosePrice=132.9, lowPrice=131.2, highPrice=134.9}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=356771, closePrice=133.7, timeStamp=java.util.GregorianCalendar[time=1314782877058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=7,WEEK_OF_YEAR=36,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=243,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=133.85, priceId=0, lastClosePrice=132.9, lowPrice=131.2, highPrice=134.9}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=356771, closePrice=133.7, timeStamp=java.util.GregorianCalendar[time=1314869277058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=8,WEEK_OF_YEAR=36,WEEK_OF_MONTH=1,DAY_OF_MONTH=1,DAY_OF_YEAR=244,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=133.85, priceId=0, lastClosePrice=132.9, lowPrice=131.2, highPrice=134.9}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=510964, closePrice=128.85, timeStamp=java.util.GregorianCalendar[time=1314955677058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=8,WEEK_OF_YEAR=36,WEEK_OF_MONTH=1,DAY_OF_MONTH=2,DAY_OF_YEAR=245,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=135.75, priceId=0, lastClosePrice=133.7, lowPrice=127.0, highPrice=135.8}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=2194523, closePrice=137.8, timeStamp=java.util.GregorianCalendar[time=1315214877058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=8,WEEK_OF_YEAR=37,WEEK_OF_MONTH=2,DAY_OF_MONTH=5,DAY_OF_YEAR=248,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=128.45, priceId=0, lastClosePrice=128.85, lowPrice=125.55, highPrice=139.7}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=1261526, closePrice=147.15, timeStamp=java.util.GregorianCalendar[time=1315301277058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=8,WEEK_OF_YEAR=37,WEEK_OF_MONTH=2,DAY_OF_MONTH=6,DAY_OF_YEAR=249,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=140.5, priceId=0, lastClosePrice=137.8, lowPrice=138.0, highPrice=149.8}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=3604101, closePrice=147.85, timeStamp=java.util.GregorianCalendar[time=1315387677058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=8,WEEK_OF_YEAR=37,WEEK_OF_MONTH=2,DAY_OF_MONTH=7,DAY_OF_YEAR=250,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=150.85, priceId=0, lastClosePrice=147.15, lowPrice=145.1, highPrice=151.5}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=382687, closePrice=147.7, timeStamp=java.util.GregorianCalendar[time=1315474077058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=8,WEEK_OF_YEAR=37,WEEK_OF_MONTH=2,DAY_OF_MONTH=8,DAY_OF_YEAR=251,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=147.35, priceId=0, lastClosePrice=147.85, lowPrice=145.1, highPrice=150.75}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=705607, closePrice=146.3, timeStamp=java.util.GregorianCalendar[time=1315560477058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=8,WEEK_OF_YEAR=37,WEEK_OF_MONTH=2,DAY_OF_MONTH=9,DAY_OF_YEAR=252,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=145.15, priceId=0, lastClosePrice=147.7, lowPrice=142.4, highPrice=148.9}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=716741, closePrice=142.9, timeStamp=java.util.GregorianCalendar[time=1315819677058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=8,WEEK_OF_YEAR=38,WEEK_OF_MONTH=3,DAY_OF_MONTH=12,DAY_OF_YEAR=255,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=143.1, priceId=0, lastClosePrice=146.3, lowPrice=138.25, highPrice=144.9}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=635949, closePrice=143.7, timeStamp=java.util.GregorianCalendar[time=1315906077058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=8,WEEK_OF_YEAR=38,WEEK_OF_MONTH=3,DAY_OF_MONTH=13,DAY_OF_YEAR=256,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=143.9, priceId=0, lastClosePrice=142.9, lowPrice=142.25, highPrice=146.75}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=638334, closePrice=144.2, timeStamp=java.util.GregorianCalendar[time=1315992477058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=8,WEEK_OF_YEAR=38,WEEK_OF_MONTH=3,DAY_OF_MONTH=14,DAY_OF_YEAR=257,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=143.1, priceId=0, lastClosePrice=143.7, lowPrice=142.75, highPrice=145.55}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=856457, closePrice=140.45, timeStamp=java.util.GregorianCalendar[time=1316078877058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=8,WEEK_OF_YEAR=38,WEEK_OF_MONTH=3,DAY_OF_MONTH=15,DAY_OF_YEAR=258,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=142.5, priceId=0, lastClosePrice=144.2, lowPrice=138.65, highPrice=145.5}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=531031, closePrice=137.3, timeStamp=java.util.GregorianCalendar[time=1316165277058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=8,WEEK_OF_YEAR=38,WEEK_OF_MONTH=3,DAY_OF_MONTH=16,DAY_OF_YEAR=259,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=140.55, priceId=0, lastClosePrice=140.45, lowPrice=136.4, highPrice=141.8}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=1279938, closePrice=133.45, timeStamp=java.util.GregorianCalendar[time=1316424477058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=8,WEEK_OF_YEAR=39,WEEK_OF_MONTH=4,DAY_OF_MONTH=19,DAY_OF_YEAR=262,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=136.1, priceId=0, lastClosePrice=137.3, lowPrice=129.1, highPrice=139.9}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=753570, closePrice=132.65, timeStamp=java.util.GregorianCalendar[time=1316510877058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=8,WEEK_OF_YEAR=39,WEEK_OF_MONTH=4,DAY_OF_MONTH=20,DAY_OF_YEAR=263,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=132.1, priceId=0, lastClosePrice=133.45, lowPrice=132.1, highPrice=135.85}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=245050, closePrice=138.8, timeStamp=java.util.GregorianCalendar[time=1316597277058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=8,WEEK_OF_YEAR=39,WEEK_OF_MONTH=4,DAY_OF_MONTH=21,DAY_OF_YEAR=264,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=135.0, priceId=0, lastClosePrice=132.65, lowPrice=132.3, highPrice=139.5}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=1049506, closePrice=133.85, timeStamp=java.util.GregorianCalendar[time=1316683677058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=8,WEEK_OF_YEAR=39,WEEK_OF_MONTH=4,DAY_OF_MONTH=22,DAY_OF_YEAR=265,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=137.75, priceId=0, lastClosePrice=138.8, lowPrice=132.0, highPrice=140.1}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=323576, closePrice=130.65, timeStamp=java.util.GregorianCalendar[time=1316770077058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=8,WEEK_OF_YEAR=39,WEEK_OF_MONTH=4,DAY_OF_MONTH=23,DAY_OF_YEAR=266,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=130.1, priceId=0, lastClosePrice=133.85, lowPrice=128.3, highPrice=132.95}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=1177449, closePrice=129.7, timeStamp=java.util.GregorianCalendar[time=1317029277058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=8,WEEK_OF_YEAR=40,WEEK_OF_MONTH=5,DAY_OF_MONTH=26,DAY_OF_YEAR=269,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=132.0, priceId=0, lastClosePrice=130.65, lowPrice=127.2, highPrice=133.45}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=657092, closePrice=129.7, timeStamp=java.util.GregorianCalendar[time=1317115677058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=8,WEEK_OF_YEAR=40,WEEK_OF_MONTH=5,DAY_OF_MONTH=27,DAY_OF_YEAR=270,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=130.05, priceId=0, lastClosePrice=129.7, lowPrice=127.75, highPrice=130.8}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=872476, closePrice=128.0, timeStamp=java.util.GregorianCalendar[time=1317202077058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=8,WEEK_OF_YEAR=40,WEEK_OF_MONTH=5,DAY_OF_MONTH=28,DAY_OF_YEAR=271,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=129.0, priceId=0, lastClosePrice=129.7, lowPrice=120.05, highPrice=131.0}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=1045577, closePrice=129.7, timeStamp=java.util.GregorianCalendar[time=1317288477058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=8,WEEK_OF_YEAR=40,WEEK_OF_MONTH=5,DAY_OF_MONTH=29,DAY_OF_YEAR=272,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=129.0, priceId=0, lastClosePrice=128.0, lowPrice=124.1, highPrice=133.5}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=1269141, closePrice=128.5, timeStamp=java.util.GregorianCalendar[time=1317374877058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=8,WEEK_OF_YEAR=40,WEEK_OF_MONTH=5,DAY_OF_MONTH=30,DAY_OF_YEAR=273,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=130.0, priceId=0, lastClosePrice=129.7, lowPrice=125.25, highPrice=133.0}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=1153291, closePrice=120.75, timeStamp=java.util.GregorianCalendar[time=1317634077058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=9,WEEK_OF_YEAR=41,WEEK_OF_MONTH=2,DAY_OF_MONTH=3,DAY_OF_YEAR=276,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=126.1, priceId=0, lastClosePrice=128.5, lowPrice=115.15, highPrice=127.0}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=1464736, closePrice=112.3, timeStamp=java.util.GregorianCalendar[time=1317720477058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=9,WEEK_OF_YEAR=41,WEEK_OF_MONTH=2,DAY_OF_MONTH=4,DAY_OF_YEAR=277,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=121.3, priceId=0, lastClosePrice=120.75, lowPrice=110.05, highPrice=123.35}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=1961293, closePrice=111.05, timeStamp=java.util.GregorianCalendar[time=1317806877058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=9,WEEK_OF_YEAR=41,WEEK_OF_MONTH=2,DAY_OF_MONTH=5,DAY_OF_YEAR=278,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=112.5, priceId=0, lastClosePrice=112.3, lowPrice=109.5, highPrice=116.9}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=1961293, closePrice=111.05, timeStamp=java.util.GregorianCalendar[time=1317893277058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=9,WEEK_OF_YEAR=41,WEEK_OF_MONTH=2,DAY_OF_MONTH=6,DAY_OF_YEAR=279,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=112.5, priceId=0, lastClosePrice=112.3, lowPrice=109.5, highPrice=116.9}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=805275, closePrice=116.85, timeStamp=java.util.GregorianCalendar[time=1317979677058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=9,WEEK_OF_YEAR=41,WEEK_OF_MONTH=2,DAY_OF_MONTH=7,DAY_OF_YEAR=280,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=111.45, priceId=0, lastClosePrice=111.05, lowPrice=111.45, highPrice=119.5}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=1013207, closePrice=131.25, timeStamp=java.util.GregorianCalendar[time=1318238877058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=9,WEEK_OF_YEAR=42,WEEK_OF_MONTH=3,DAY_OF_MONTH=10,DAY_OF_YEAR=283,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=116.85, priceId=0, lastClosePrice=116.85, lowPrice=116.85, highPrice=133.8}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=1072577, closePrice=138.8, timeStamp=java.util.GregorianCalendar[time=1318325277058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=9,WEEK_OF_YEAR=42,WEEK_OF_MONTH=3,DAY_OF_MONTH=11,DAY_OF_YEAR=284,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=133.0, priceId=0, lastClosePrice=131.25, lowPrice=132.4, highPrice=141.4}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=756883, closePrice=140.2, timeStamp=java.util.GregorianCalendar[time=1318411677058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=9,WEEK_OF_YEAR=42,WEEK_OF_MONTH=3,DAY_OF_MONTH=12,DAY_OF_YEAR=285,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=140.9, priceId=0, lastClosePrice=138.8, lowPrice=134.8, highPrice=144.0}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=599405, closePrice=136.0, timeStamp=java.util.GregorianCalendar[time=1318498077058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=9,WEEK_OF_YEAR=42,WEEK_OF_MONTH=3,DAY_OF_MONTH=13,DAY_OF_YEAR=286,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=139.8, priceId=0, lastClosePrice=140.2, lowPrice=135.15, highPrice=143.4}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=277702, closePrice=136.65, timeStamp=java.util.GregorianCalendar[time=1318584477058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=9,WEEK_OF_YEAR=42,WEEK_OF_MONTH=3,DAY_OF_MONTH=14,DAY_OF_YEAR=287,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=134.55, priceId=0, lastClosePrice=136.0, lowPrice=133.0, highPrice=137.9}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=309011, closePrice=141.3, timeStamp=java.util.GregorianCalendar[time=1318843677058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=9,WEEK_OF_YEAR=43,WEEK_OF_MONTH=4,DAY_OF_MONTH=17,DAY_OF_YEAR=290,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=137.05, priceId=0, lastClosePrice=136.65, lowPrice=133.85, highPrice=142.35}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=251558, closePrice=136.95, timeStamp=java.util.GregorianCalendar[time=1318930077058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=9,WEEK_OF_YEAR=43,WEEK_OF_MONTH=4,DAY_OF_MONTH=18,DAY_OF_YEAR=291,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=137.05, priceId=0, lastClosePrice=141.3, lowPrice=135.55, highPrice=140.0}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=974480, closePrice=135.25, timeStamp=java.util.GregorianCalendar[time=1319016477058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=9,WEEK_OF_YEAR=43,WEEK_OF_MONTH=4,DAY_OF_MONTH=19,DAY_OF_YEAR=292,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=139.9, priceId=0, lastClosePrice=136.95, lowPrice=133.6, highPrice=139.9}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=610732, closePrice=128.75, timeStamp=java.util.GregorianCalendar[time=1319102877058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=9,WEEK_OF_YEAR=43,WEEK_OF_MONTH=4,DAY_OF_MONTH=20,DAY_OF_YEAR=293,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=135.25, priceId=0, lastClosePrice=135.25, lowPrice=127.65, highPrice=135.25}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=234354, closePrice=126.65, timeStamp=java.util.GregorianCalendar[time=1319189277058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=9,WEEK_OF_YEAR=43,WEEK_OF_MONTH=4,DAY_OF_MONTH=21,DAY_OF_YEAR=294,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=128.7, priceId=0, lastClosePrice=128.75, lowPrice=125.05, highPrice=131.7}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=455279, closePrice=127.25, timeStamp=java.util.GregorianCalendar[time=1319448477058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=9,WEEK_OF_YEAR=44,WEEK_OF_MONTH=5,DAY_OF_MONTH=24,DAY_OF_YEAR=297,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=126.75, priceId=0, lastClosePrice=126.65, lowPrice=122.55, highPrice=130.9}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=321161, closePrice=124.0, timeStamp=java.util.GregorianCalendar[time=1319534877058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=9,WEEK_OF_YEAR=44,WEEK_OF_MONTH=5,DAY_OF_MONTH=25,DAY_OF_YEAR=298,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=125.3, priceId=0, lastClosePrice=127.25, lowPrice=122.65, highPrice=127.25}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=50821, closePrice=125.75, timeStamp=java.util.GregorianCalendar[time=1319621277058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=9,WEEK_OF_YEAR=44,WEEK_OF_MONTH=5,DAY_OF_MONTH=26,DAY_OF_YEAR=299,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=124.1, priceId=0, lastClosePrice=124.0, lowPrice=124.1, highPrice=127.0}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=50821, closePrice=125.75, timeStamp=java.util.GregorianCalendar[time=1319707677058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=9,WEEK_OF_YEAR=44,WEEK_OF_MONTH=5,DAY_OF_MONTH=27,DAY_OF_YEAR=300,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=124.1, priceId=0, lastClosePrice=124.0, lowPrice=124.1, highPrice=127.0}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=371295, closePrice=124.35, timeStamp=java.util.GregorianCalendar[time=1319794077058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=9,WEEK_OF_YEAR=44,WEEK_OF_MONTH=5,DAY_OF_MONTH=28,DAY_OF_YEAR=301,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=126.1, priceId=0, lastClosePrice=125.75, lowPrice=123.6, highPrice=128.9}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=702706, closePrice=127.6, timeStamp=java.util.GregorianCalendar[time=1320053277058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=9,WEEK_OF_YEAR=45,WEEK_OF_MONTH=6,DAY_OF_MONTH=31,DAY_OF_YEAR=304,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=124.45, priceId=0, lastClosePrice=124.35, lowPrice=124.4, highPrice=129.2}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=668277, closePrice=127.45, timeStamp=java.util.GregorianCalendar[time=1320139677058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=10,WEEK_OF_YEAR=45,WEEK_OF_MONTH=1,DAY_OF_MONTH=1,DAY_OF_YEAR=305,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=127.0, priceId=0, lastClosePrice=127.6, lowPrice=126.15, highPrice=129.7}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=480446, closePrice=127.45, timeStamp=java.util.GregorianCalendar[time=1320226077058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=10,WEEK_OF_YEAR=45,WEEK_OF_MONTH=1,DAY_OF_MONTH=2,DAY_OF_YEAR=306,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=126.2, priceId=0, lastClosePrice=127.45, lowPrice=125.4, highPrice=129.0}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=188659, closePrice=126.5, timeStamp=java.util.GregorianCalendar[time=1320312477058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=10,WEEK_OF_YEAR=45,WEEK_OF_MONTH=1,DAY_OF_MONTH=3,DAY_OF_YEAR=307,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=127.45, priceId=0, lastClosePrice=127.45, lowPrice=124.6, highPrice=127.5}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=439970, closePrice=126.2, timeStamp=java.util.GregorianCalendar[time=1320398877058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=10,WEEK_OF_YEAR=45,WEEK_OF_MONTH=1,DAY_OF_MONTH=4,DAY_OF_YEAR=308,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=128.0, priceId=0, lastClosePrice=126.5, lowPrice=125.55, highPrice=128.5}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=439970, closePrice=126.2, timeStamp=java.util.GregorianCalendar[time=1320658077058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=10,WEEK_OF_YEAR=46,WEEK_OF_MONTH=2,DAY_OF_MONTH=7,DAY_OF_YEAR=311,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=128.0, priceId=0, lastClosePrice=126.5, lowPrice=125.55, highPrice=128.5}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=563228, closePrice=122.8, timeStamp=java.util.GregorianCalendar[time=1320744477058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=10,WEEK_OF_YEAR=46,WEEK_OF_MONTH=2,DAY_OF_MONTH=8,DAY_OF_YEAR=312,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=128.0, priceId=0, lastClosePrice=126.2, lowPrice=122.0, highPrice=128.0}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=395483, closePrice=121.7, timeStamp=java.util.GregorianCalendar[time=1320830877058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=10,WEEK_OF_YEAR=46,WEEK_OF_MONTH=2,DAY_OF_MONTH=9,DAY_OF_YEAR=313,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=123.05, priceId=0, lastClosePrice=122.8, lowPrice=121.2, highPrice=125.65}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=395483, closePrice=121.7, timeStamp=java.util.GregorianCalendar[time=1320917277058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=10,WEEK_OF_YEAR=46,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=314,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=123.05, priceId=0, lastClosePrice=122.8, lowPrice=121.2, highPrice=125.65}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=484605, closePrice=120.95, timeStamp=java.util.GregorianCalendar[time=1321003677058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=10,WEEK_OF_YEAR=46,WEEK_OF_MONTH=2,DAY_OF_MONTH=11,DAY_OF_YEAR=315,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=121.5, priceId=0, lastClosePrice=121.7, lowPrice=119.8, highPrice=123.5}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=118670, closePrice=117.95, timeStamp=java.util.GregorianCalendar[time=1321262877058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=10,WEEK_OF_YEAR=47,WEEK_OF_MONTH=3,DAY_OF_MONTH=14,DAY_OF_YEAR=318,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=121.0, priceId=0, lastClosePrice=120.95, lowPrice=117.1, highPrice=123.05}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=531402, closePrice=113.55, timeStamp=java.util.GregorianCalendar[time=1321349277058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=10,WEEK_OF_YEAR=47,WEEK_OF_MONTH=3,DAY_OF_MONTH=15,DAY_OF_YEAR=319,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=117.0, priceId=0, lastClosePrice=117.95, lowPrice=110.8, highPrice=118.6}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=293794, closePrice=113.2, timeStamp=java.util.GregorianCalendar[time=1321435677058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=10,WEEK_OF_YEAR=47,WEEK_OF_MONTH=3,DAY_OF_MONTH=16,DAY_OF_YEAR=320,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=113.0, priceId=0, lastClosePrice=113.55, lowPrice=110.6, highPrice=114.9}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=271847, closePrice=110.85, timeStamp=java.util.GregorianCalendar[time=1321522077058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=10,WEEK_OF_YEAR=47,WEEK_OF_MONTH=3,DAY_OF_MONTH=17,DAY_OF_YEAR=321,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=113.95, priceId=0, lastClosePrice=113.2, lowPrice=109.0, highPrice=114.45}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=4010113, closePrice=94.8, timeStamp=java.util.GregorianCalendar[time=1321608477058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=10,WEEK_OF_YEAR=47,WEEK_OF_MONTH=3,DAY_OF_MONTH=18,DAY_OF_YEAR=322,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=109.95, priceId=0, lastClosePrice=110.85, lowPrice=88.7, highPrice=112.9}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=2491543, closePrice=100.8, timeStamp=java.util.GregorianCalendar[time=1321867677058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=10,WEEK_OF_YEAR=48,WEEK_OF_MONTH=4,DAY_OF_MONTH=21,DAY_OF_YEAR=325,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=91.0, priceId=0, lastClosePrice=94.8, lowPrice=90.1, highPrice=104.7}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=3429220, closePrice=120.75, timeStamp=java.util.GregorianCalendar[time=1321954077058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=10,WEEK_OF_YEAR=48,WEEK_OF_MONTH=4,DAY_OF_MONTH=22,DAY_OF_YEAR=326,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=104.7, priceId=0, lastClosePrice=100.8, lowPrice=104.5, highPrice=121.0}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=3468766, closePrice=122.05, timeStamp=java.util.GregorianCalendar[time=1322040477058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=10,WEEK_OF_YEAR=48,WEEK_OF_MONTH=4,DAY_OF_MONTH=23,DAY_OF_YEAR=327,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=124.9, priceId=0, lastClosePrice=120.75, lowPrice=118.35, highPrice=131.65}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=2369824, closePrice=126.55, timeStamp=java.util.GregorianCalendar[time=1322126877058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=10,WEEK_OF_YEAR=48,WEEK_OF_MONTH=4,DAY_OF_MONTH=24,DAY_OF_YEAR=328,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=122.1, priceId=0, lastClosePrice=122.05, lowPrice=113.25, highPrice=130.9}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=773032, closePrice=121.75, timeStamp=java.util.GregorianCalendar[time=1322213277058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=10,WEEK_OF_YEAR=48,WEEK_OF_MONTH=4,DAY_OF_MONTH=25,DAY_OF_YEAR=329,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=123.2, priceId=0, lastClosePrice=126.55, lowPrice=119.3, highPrice=128.8}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=347933, closePrice=122.4, timeStamp=java.util.GregorianCalendar[time=1322472477058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=10,WEEK_OF_YEAR=49,WEEK_OF_MONTH=5,DAY_OF_MONTH=28,DAY_OF_YEAR=332,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=123.0, priceId=0, lastClosePrice=121.75, lowPrice=121.5, highPrice=126.5}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=304987, closePrice=120.55, timeStamp=java.util.GregorianCalendar[time=1322558877058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=10,WEEK_OF_YEAR=49,WEEK_OF_MONTH=5,DAY_OF_MONTH=29,DAY_OF_YEAR=333,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=123.2, priceId=0, lastClosePrice=122.4, lowPrice=119.5, highPrice=124.7}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=354699, closePrice=118.15, timeStamp=java.util.GregorianCalendar[time=1322645277058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=10,WEEK_OF_YEAR=49,WEEK_OF_MONTH=5,DAY_OF_MONTH=30,DAY_OF_YEAR=334,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=124.4, priceId=0, lastClosePrice=120.55, lowPrice=115.6, highPrice=130.05}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=225965, closePrice=116.9, timeStamp=java.util.GregorianCalendar[time=1322731677058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=11,WEEK_OF_YEAR=49,WEEK_OF_MONTH=1,DAY_OF_MONTH=1,DAY_OF_YEAR=335,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=121.05, priceId=0, lastClosePrice=118.15, lowPrice=116.0, highPrice=124.0}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=158809, closePrice=116.1, timeStamp=java.util.GregorianCalendar[time=1322818077058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=11,WEEK_OF_YEAR=49,WEEK_OF_MONTH=1,DAY_OF_MONTH=2,DAY_OF_YEAR=336,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=117.75, priceId=0, lastClosePrice=116.9, lowPrice=115.25, highPrice=118.3}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=138277, closePrice=118.1, timeStamp=java.util.GregorianCalendar[time=1323077277058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=11,WEEK_OF_YEAR=50,WEEK_OF_MONTH=2,DAY_OF_MONTH=5,DAY_OF_YEAR=339,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=117.4, priceId=0, lastClosePrice=116.1, lowPrice=116.25, highPrice=119.4}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=138277, closePrice=118.1, timeStamp=java.util.GregorianCalendar[time=1323163677058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=11,WEEK_OF_YEAR=50,WEEK_OF_MONTH=2,DAY_OF_MONTH=6,DAY_OF_YEAR=340,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=117.4, priceId=0, lastClosePrice=116.1, lowPrice=116.25, highPrice=119.4}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=114862, closePrice=118.2, timeStamp=java.util.GregorianCalendar[time=1323250077058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=11,WEEK_OF_YEAR=50,WEEK_OF_MONTH=2,DAY_OF_MONTH=7,DAY_OF_YEAR=341,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=119.0, priceId=0, lastClosePrice=118.1, lowPrice=117.1, highPrice=121.5}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=111004, closePrice=115.65, timeStamp=java.util.GregorianCalendar[time=1323336477058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=11,WEEK_OF_YEAR=50,WEEK_OF_MONTH=2,DAY_OF_MONTH=8,DAY_OF_YEAR=342,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=121.45, priceId=0, lastClosePrice=118.2, lowPrice=114.6, highPrice=121.45}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=55280, closePrice=113.6, timeStamp=java.util.GregorianCalendar[time=1323422877058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=11,WEEK_OF_YEAR=50,WEEK_OF_MONTH=2,DAY_OF_MONTH=9,DAY_OF_YEAR=343,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=114.95, priceId=0, lastClosePrice=115.65, lowPrice=112.1, highPrice=114.95}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=105280, closePrice=108.85, timeStamp=java.util.GregorianCalendar[time=1323682077058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=11,WEEK_OF_YEAR=51,WEEK_OF_MONTH=3,DAY_OF_MONTH=12,DAY_OF_YEAR=346,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=115.0, priceId=0, lastClosePrice=113.6, lowPrice=108.0, highPrice=116.0}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=409326, closePrice=102.05, timeStamp=java.util.GregorianCalendar[time=1323768477058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=11,WEEK_OF_YEAR=51,WEEK_OF_MONTH=3,DAY_OF_MONTH=13,DAY_OF_YEAR=347,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=110.95, priceId=0, lastClosePrice=108.85, lowPrice=100.4, highPrice=110.95}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=134757, closePrice=100.0, timeStamp=java.util.GregorianCalendar[time=1323854877058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=11,WEEK_OF_YEAR=51,WEEK_OF_MONTH=3,DAY_OF_MONTH=14,DAY_OF_YEAR=348,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=100.3, priceId=0, lastClosePrice=102.05, lowPrice=98.5, highPrice=104.35}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=958488, closePrice=95.6, timeStamp=java.util.GregorianCalendar[time=1323941277058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=11,WEEK_OF_YEAR=51,WEEK_OF_MONTH=3,DAY_OF_MONTH=15,DAY_OF_YEAR=349,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=98.0, priceId=0, lastClosePrice=100.0, lowPrice=91.1, highPrice=98.0}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=407863, closePrice=93.4, timeStamp=java.util.GregorianCalendar[time=1324027677058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=11,WEEK_OF_YEAR=51,WEEK_OF_MONTH=3,DAY_OF_MONTH=16,DAY_OF_YEAR=350,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=98.0, priceId=0, lastClosePrice=95.6, lowPrice=91.7, highPrice=99.7}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=149947, closePrice=93.7, timeStamp=java.util.GregorianCalendar[time=1324286877058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=11,WEEK_OF_YEAR=52,WEEK_OF_MONTH=4,DAY_OF_MONTH=19,DAY_OF_YEAR=353,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=90.0, priceId=0, lastClosePrice=93.4, lowPrice=86.1, highPrice=97.7}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=137612, closePrice=93.9, timeStamp=java.util.GregorianCalendar[time=1324373277058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=11,WEEK_OF_YEAR=52,WEEK_OF_MONTH=4,DAY_OF_MONTH=20,DAY_OF_YEAR=354,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=99.45, priceId=0, lastClosePrice=93.7, lowPrice=92.5, highPrice=99.45}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=81433, closePrice=93.0, timeStamp=java.util.GregorianCalendar[time=1324459677058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=11,WEEK_OF_YEAR=52,WEEK_OF_MONTH=4,DAY_OF_MONTH=21,DAY_OF_YEAR=355,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=94.5, priceId=0, lastClosePrice=93.9, lowPrice=91.3, highPrice=97.7}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=93391, closePrice=93.65, timeStamp=java.util.GregorianCalendar[time=1324546077058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=11,WEEK_OF_YEAR=52,WEEK_OF_MONTH=4,DAY_OF_MONTH=22,DAY_OF_YEAR=356,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=93.2, priceId=0, lastClosePrice=93.0, lowPrice=92.35, highPrice=94.9}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=36984, closePrice=93.25, timeStamp=java.util.GregorianCalendar[time=1324632477058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=11,WEEK_OF_YEAR=52,WEEK_OF_MONTH=4,DAY_OF_MONTH=23,DAY_OF_YEAR=357,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=94.75, priceId=0, lastClosePrice=93.65, lowPrice=92.7, highPrice=95.0}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=119109, closePrice=95.75, timeStamp=java.util.GregorianCalendar[time=1324891677058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=11,WEEK_OF_YEAR=53,WEEK_OF_MONTH=5,DAY_OF_MONTH=26,DAY_OF_YEAR=360,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=92.25, priceId=0, lastClosePrice=93.25, lowPrice=92.25, highPrice=96.5}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=543004, closePrice=98.0, timeStamp=java.util.GregorianCalendar[time=1324978077058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=11,WEEK_OF_YEAR=53,WEEK_OF_MONTH=5,DAY_OF_MONTH=27,DAY_OF_YEAR=361,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=96.5, priceId=0, lastClosePrice=95.75, lowPrice=96.05, highPrice=102.3}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=70448, closePrice=97.05, timeStamp=java.util.GregorianCalendar[time=1325064477058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=11,WEEK_OF_YEAR=53,WEEK_OF_MONTH=5,DAY_OF_MONTH=28,DAY_OF_YEAR=362,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=98.25, priceId=0, lastClosePrice=98.0, lowPrice=96.15, highPrice=98.25}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=88844, closePrice=96.15, timeStamp=java.util.GregorianCalendar[time=1325150877058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=11,WEEK_OF_YEAR=53,WEEK_OF_MONTH=5,DAY_OF_MONTH=29,DAY_OF_YEAR=363,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=96.15, priceId=0, lastClosePrice=97.05, lowPrice=95.0, highPrice=96.8}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=84090, closePrice=94.8, timeStamp=java.util.GregorianCalendar[time=1325237277058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2011,MONTH=11,WEEK_OF_YEAR=53,WEEK_OF_MONTH=5,DAY_OF_MONTH=30,DAY_OF_YEAR=364,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=96.5, priceId=0, lastClosePrice=96.15, lowPrice=94.1, highPrice=99.75}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=90250, closePrice=94.4, timeStamp=java.util.GregorianCalendar[time=1325496477058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=0,WEEK_OF_YEAR=1,WEEK_OF_MONTH=1,DAY_OF_MONTH=2,DAY_OF_YEAR=2,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=96.15, priceId=0, lastClosePrice=94.8, lowPrice=93.6, highPrice=96.55}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=65422, closePrice=96.25, timeStamp=java.util.GregorianCalendar[time=1325582877058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=0,WEEK_OF_YEAR=1,WEEK_OF_MONTH=1,DAY_OF_MONTH=3,DAY_OF_YEAR=3,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=94.75, priceId=0, lastClosePrice=94.4, lowPrice=94.1, highPrice=97.0}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=45672, closePrice=96.65, timeStamp=java.util.GregorianCalendar[time=1325669277058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=0,WEEK_OF_YEAR=1,WEEK_OF_MONTH=1,DAY_OF_MONTH=4,DAY_OF_YEAR=4,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=97.25, priceId=0, lastClosePrice=96.25, lowPrice=96.0, highPrice=99.0}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=69701, closePrice=96.95, timeStamp=java.util.GregorianCalendar[time=1325755677058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=0,WEEK_OF_YEAR=1,WEEK_OF_MONTH=1,DAY_OF_MONTH=5,DAY_OF_YEAR=5,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=97.0, priceId=0, lastClosePrice=96.65, lowPrice=96.1, highPrice=97.5}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=46663, closePrice=96.1, timeStamp=java.util.GregorianCalendar[time=1325842077058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=0,WEEK_OF_YEAR=1,WEEK_OF_MONTH=1,DAY_OF_MONTH=6,DAY_OF_YEAR=6,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=97.0, priceId=0, lastClosePrice=96.95, lowPrice=95.15, highPrice=97.0}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=143667, closePrice=97.5, timeStamp=java.util.GregorianCalendar[time=1326101277058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=0,WEEK_OF_YEAR=2,WEEK_OF_MONTH=2,DAY_OF_MONTH=9,DAY_OF_YEAR=9,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=97.4, priceId=0, lastClosePrice=96.15, lowPrice=96.2, highPrice=99.5}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=686266, closePrice=104.8, timeStamp=java.util.GregorianCalendar[time=1326187677058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=0,WEEK_OF_YEAR=2,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=10,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=98.9, priceId=0, lastClosePrice=97.5, lowPrice=98.25, highPrice=107.15}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=439650, closePrice=105.65, timeStamp=java.util.GregorianCalendar[time=1326274077058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=0,WEEK_OF_YEAR=2,WEEK_OF_MONTH=2,DAY_OF_MONTH=11,DAY_OF_YEAR=11,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=105.95, priceId=0, lastClosePrice=104.8, lowPrice=105.0, highPrice=109.0}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=338184, closePrice=108.3, timeStamp=java.util.GregorianCalendar[time=1326360477058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=0,WEEK_OF_YEAR=2,WEEK_OF_MONTH=2,DAY_OF_MONTH=12,DAY_OF_YEAR=12,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=105.9, priceId=0, lastClosePrice=105.65, lowPrice=104.05, highPrice=110.4}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=85901, closePrice=104.8, timeStamp=java.util.GregorianCalendar[time=1326446877058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=0,WEEK_OF_YEAR=2,WEEK_OF_MONTH=2,DAY_OF_MONTH=13,DAY_OF_YEAR=13,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=109.2, priceId=0, lastClosePrice=108.3, lowPrice=104.35, highPrice=109.8}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=193726, closePrice=106.1, timeStamp=java.util.GregorianCalendar[time=1326706077058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=0,WEEK_OF_YEAR=3,WEEK_OF_MONTH=3,DAY_OF_MONTH=16,DAY_OF_YEAR=16,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=104.0, priceId=0, lastClosePrice=104.8, lowPrice=104.0, highPrice=107.9}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=474468, closePrice=106.1, timeStamp=java.util.GregorianCalendar[time=1326792477058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=0,WEEK_OF_YEAR=3,WEEK_OF_MONTH=3,DAY_OF_MONTH=17,DAY_OF_YEAR=17,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=105.0, priceId=0, lastClosePrice=106.1, lowPrice=103.1, highPrice=107.3}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=562846, closePrice=104.45, timeStamp=java.util.GregorianCalendar[time=1326878877058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=0,WEEK_OF_YEAR=3,WEEK_OF_MONTH=3,DAY_OF_MONTH=18,DAY_OF_YEAR=18,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=104.5, priceId=0, lastClosePrice=106.1, lowPrice=104.1, highPrice=107.25}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=78610, closePrice=104.75, timeStamp=java.util.GregorianCalendar[time=1326965277058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=0,WEEK_OF_YEAR=3,WEEK_OF_MONTH=3,DAY_OF_MONTH=19,DAY_OF_YEAR=19,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=105.65, priceId=0, lastClosePrice=104.45, lowPrice=104.35, highPrice=107.05}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=445511, closePrice=109.0, timeStamp=java.util.GregorianCalendar[time=1327051677058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=0,WEEK_OF_YEAR=3,WEEK_OF_MONTH=3,DAY_OF_MONTH=20,DAY_OF_YEAR=20,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=104.1, priceId=0, lastClosePrice=104.75, lowPrice=104.1, highPrice=114.95}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=238009, closePrice=111.85, timeStamp=java.util.GregorianCalendar[time=1327310877058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=0,WEEK_OF_YEAR=4,WEEK_OF_MONTH=4,DAY_OF_MONTH=23,DAY_OF_YEAR=23,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=110.5, priceId=0, lastClosePrice=109.0, lowPrice=107.3, highPrice=114.0}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=147994, closePrice=111.6, timeStamp=java.util.GregorianCalendar[time=1327397277058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=0,WEEK_OF_YEAR=4,WEEK_OF_MONTH=4,DAY_OF_MONTH=24,DAY_OF_YEAR=24,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=112.75, priceId=0, lastClosePrice=111.85, lowPrice=111.15, highPrice=113.9}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=100979, closePrice=110.6, timeStamp=java.util.GregorianCalendar[time=1327483677058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=0,WEEK_OF_YEAR=4,WEEK_OF_MONTH=4,DAY_OF_MONTH=25,DAY_OF_YEAR=25,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=111.6, priceId=0, lastClosePrice=111.6, lowPrice=109.25, highPrice=113.9}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=100979, closePrice=110.6, timeStamp=java.util.GregorianCalendar[time=1327570077058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=0,WEEK_OF_YEAR=4,WEEK_OF_MONTH=4,DAY_OF_MONTH=26,DAY_OF_YEAR=26,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=111.6, priceId=0, lastClosePrice=111.6, lowPrice=109.25, highPrice=113.9}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=103140, closePrice=108.85, timeStamp=java.util.GregorianCalendar[time=1327656477058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=0,WEEK_OF_YEAR=4,WEEK_OF_MONTH=4,DAY_OF_MONTH=27,DAY_OF_YEAR=27,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=111.0, priceId=0, lastClosePrice=110.6, lowPrice=108.2, highPrice=112.9}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=89200, closePrice=108.85, timeStamp=java.util.GregorianCalendar[time=1327915677058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=0,WEEK_OF_YEAR=5,WEEK_OF_MONTH=5,DAY_OF_MONTH=30,DAY_OF_YEAR=30,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=112.8, priceId=0, lastClosePrice=108.85, lowPrice=108.25, highPrice=112.8}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=107875, closePrice=108.55, timeStamp=java.util.GregorianCalendar[time=1328002077058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=0,WEEK_OF_YEAR=5,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=31,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=108.1, priceId=0, lastClosePrice=108.85, lowPrice=108.1, highPrice=110.5}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=378138, closePrice=111.7, timeStamp=java.util.GregorianCalendar[time=1328088477058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=1,WEEK_OF_YEAR=5,WEEK_OF_MONTH=1,DAY_OF_MONTH=1,DAY_OF_YEAR=32,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=109.05, priceId=0, lastClosePrice=108.55, lowPrice=108.1, highPrice=112.55}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=259449, closePrice=112.75, timeStamp=java.util.GregorianCalendar[time=1328174877058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=1,WEEK_OF_YEAR=5,WEEK_OF_MONTH=1,DAY_OF_MONTH=2,DAY_OF_YEAR=33,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=116.0, priceId=0, lastClosePrice=111.7, lowPrice=111.05, highPrice=116.0}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=466192, closePrice=116.2, timeStamp=java.util.GregorianCalendar[time=1328261277058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=1,WEEK_OF_YEAR=5,WEEK_OF_MONTH=1,DAY_OF_MONTH=3,DAY_OF_YEAR=34,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=114.5, priceId=0, lastClosePrice=112.75, lowPrice=112.5, highPrice=117.7}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=414947, closePrice=117.6, timeStamp=java.util.GregorianCalendar[time=1328520477058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=1,WEEK_OF_YEAR=6,WEEK_OF_MONTH=2,DAY_OF_MONTH=6,DAY_OF_YEAR=37,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=130.0, priceId=0, lastClosePrice=116.2, lowPrice=116.2, highPrice=130.0}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=159364, closePrice=118.45, timeStamp=java.util.GregorianCalendar[time=1328606877058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=1,WEEK_OF_YEAR=6,WEEK_OF_MONTH=2,DAY_OF_MONTH=7,DAY_OF_YEAR=38,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=116.85, priceId=0, lastClosePrice=117.6, lowPrice=116.85, highPrice=119.35}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=346830, closePrice=126.25, timeStamp=java.util.GregorianCalendar[time=1328693277058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=1,WEEK_OF_YEAR=6,WEEK_OF_MONTH=2,DAY_OF_MONTH=8,DAY_OF_YEAR=39,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=119.5, priceId=0, lastClosePrice=118.45, lowPrice=118.1, highPrice=127.65}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=206564, closePrice=126.25, timeStamp=java.util.GregorianCalendar[time=1328779677058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=1,WEEK_OF_YEAR=6,WEEK_OF_MONTH=2,DAY_OF_MONTH=9,DAY_OF_YEAR=40,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=118.3, priceId=0, lastClosePrice=126.25, lowPrice=118.3, highPrice=127.5}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=245870, closePrice=126.15, timeStamp=java.util.GregorianCalendar[time=1328866077058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=1,WEEK_OF_YEAR=6,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=41,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=126.7, priceId=0, lastClosePrice=126.25, lowPrice=125.1, highPrice=128.8}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=121266, closePrice=127.15, timeStamp=java.util.GregorianCalendar[time=1329125277058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=1,WEEK_OF_YEAR=7,WEEK_OF_MONTH=3,DAY_OF_MONTH=13,DAY_OF_YEAR=44,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=127.45, priceId=0, lastClosePrice=126.15, lowPrice=125.1, highPrice=127.95}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=481570, closePrice=128.3, timeStamp=java.util.GregorianCalendar[time=1329211677058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=1,WEEK_OF_YEAR=7,WEEK_OF_MONTH=3,DAY_OF_MONTH=14,DAY_OF_YEAR=45,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=127.45, priceId=0, lastClosePrice=127.15, lowPrice=124.15, highPrice=130.45}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=368087, closePrice=128.2, timeStamp=java.util.GregorianCalendar[time=1329298077058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=1,WEEK_OF_YEAR=7,WEEK_OF_MONTH=3,DAY_OF_MONTH=15,DAY_OF_YEAR=46,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=126.75, priceId=0, lastClosePrice=128.3, lowPrice=126.75, highPrice=131.0}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=544435, closePrice=131.45, timeStamp=java.util.GregorianCalendar[time=1329384477058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=1,WEEK_OF_YEAR=7,WEEK_OF_MONTH=3,DAY_OF_MONTH=16,DAY_OF_YEAR=47,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=129.75, priceId=0, lastClosePrice=128.2, lowPrice=128.1, highPrice=133.3}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=276742, closePrice=134.3, timeStamp=java.util.GregorianCalendar[time=1329470877058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=1,WEEK_OF_YEAR=7,WEEK_OF_MONTH=3,DAY_OF_MONTH=17,DAY_OF_YEAR=48,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=132.7, priceId=0, lastClosePrice=131.45, lowPrice=131.1, highPrice=134.5}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=276742, closePrice=134.3, timeStamp=java.util.GregorianCalendar[time=1329730077058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=1,WEEK_OF_YEAR=8,WEEK_OF_MONTH=4,DAY_OF_MONTH=20,DAY_OF_YEAR=51,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=132.7, priceId=0, lastClosePrice=131.45, lowPrice=131.1, highPrice=134.5}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=125032, closePrice=131.9, timeStamp=java.util.GregorianCalendar[time=1329816477058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=1,WEEK_OF_YEAR=8,WEEK_OF_MONTH=4,DAY_OF_MONTH=21,DAY_OF_YEAR=52,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=134.45, priceId=0, lastClosePrice=134.3, lowPrice=130.1, highPrice=135.65}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=2832834, closePrice=133.95, timeStamp=java.util.GregorianCalendar[time=1329902877058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=1,WEEK_OF_YEAR=8,WEEK_OF_MONTH=4,DAY_OF_MONTH=22,DAY_OF_YEAR=53,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=131.1, priceId=0, lastClosePrice=131.9, lowPrice=131.1, highPrice=134.8}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=1275853, closePrice=140.65, timeStamp=java.util.GregorianCalendar[time=1329989277058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=1,WEEK_OF_YEAR=8,WEEK_OF_MONTH=4,DAY_OF_MONTH=23,DAY_OF_YEAR=54,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=135.0, priceId=0, lastClosePrice=133.95, lowPrice=133.65, highPrice=141.0}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=1058994, closePrice=142.5, timeStamp=java.util.GregorianCalendar[time=1330075677058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=1,WEEK_OF_YEAR=8,WEEK_OF_MONTH=4,DAY_OF_MONTH=24,DAY_OF_YEAR=55,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=141.7, priceId=0, lastClosePrice=140.65, lowPrice=138.55, highPrice=144.0}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=226229, closePrice=139.9, timeStamp=java.util.GregorianCalendar[time=1330334877058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=1,WEEK_OF_YEAR=9,WEEK_OF_MONTH=5,DAY_OF_MONTH=27,DAY_OF_YEAR=58,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=140.1, priceId=0, lastClosePrice=142.5, lowPrice=137.0, highPrice=143.3}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=160621, closePrice=140.7, timeStamp=java.util.GregorianCalendar[time=1330421277058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=1,WEEK_OF_YEAR=9,WEEK_OF_MONTH=5,DAY_OF_MONTH=28,DAY_OF_YEAR=59,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=139.85, priceId=0, lastClosePrice=139.9, lowPrice=138.5, highPrice=141.0}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=546346, closePrice=142.25, timeStamp=java.util.GregorianCalendar[time=1330507677058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=1,WEEK_OF_YEAR=9,WEEK_OF_MONTH=5,DAY_OF_MONTH=29,DAY_OF_YEAR=60,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=140.2, priceId=0, lastClosePrice=140.7, lowPrice=140.2, highPrice=146.7}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=239479, closePrice=143.9, timeStamp=java.util.GregorianCalendar[time=1330594077058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=2,WEEK_OF_YEAR=9,WEEK_OF_MONTH=1,DAY_OF_MONTH=1,DAY_OF_YEAR=61,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=141.55, priceId=0, lastClosePrice=142.25, lowPrice=140.2, highPrice=144.8}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=130733, closePrice=143.55, timeStamp=java.util.GregorianCalendar[time=1330680477058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=2,WEEK_OF_YEAR=9,WEEK_OF_MONTH=1,DAY_OF_MONTH=2,DAY_OF_YEAR=62,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=145.8, priceId=0, lastClosePrice=143.9, lowPrice=142.5, highPrice=146.45}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=148266, closePrice=138.85, timeStamp=java.util.GregorianCalendar[time=1330939677058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=2,WEEK_OF_YEAR=10,WEEK_OF_MONTH=2,DAY_OF_MONTH=5,DAY_OF_YEAR=65,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=143.0, priceId=0, lastClosePrice=142.25, lowPrice=137.45, highPrice=143.9}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=151132, closePrice=139.1, timeStamp=java.util.GregorianCalendar[time=1331026077058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=2,WEEK_OF_YEAR=10,WEEK_OF_MONTH=2,DAY_OF_MONTH=6,DAY_OF_YEAR=66,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=137.9, priceId=0, lastClosePrice=138.85, lowPrice=136.5, highPrice=140.8}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=193599, closePrice=134.55, timeStamp=java.util.GregorianCalendar[time=1331112477058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=2,WEEK_OF_YEAR=10,WEEK_OF_MONTH=2,DAY_OF_MONTH=7,DAY_OF_YEAR=67,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=138.1, priceId=0, lastClosePrice=139.1, lowPrice=132.9, highPrice=139.65}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=193599, closePrice=134.55, timeStamp=java.util.GregorianCalendar[time=1331198877058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=2,WEEK_OF_YEAR=10,WEEK_OF_MONTH=2,DAY_OF_MONTH=8,DAY_OF_YEAR=68,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=138.1, priceId=0, lastClosePrice=139.1, lowPrice=132.9, highPrice=139.65}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=514531, closePrice=140.95, timeStamp=java.util.GregorianCalendar[time=1331285277058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=2,WEEK_OF_YEAR=10,WEEK_OF_MONTH=2,DAY_OF_MONTH=9,DAY_OF_YEAR=69,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=136.55, priceId=0, lastClosePrice=134.55, lowPrice=135.85, highPrice=142.3}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=26891, closePrice=139.95, timeStamp=java.util.GregorianCalendar[time=1331544477058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=2,WEEK_OF_YEAR=11,WEEK_OF_MONTH=3,DAY_OF_MONTH=12,DAY_OF_YEAR=72,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=144.35, priceId=0, lastClosePrice=140.95, lowPrice=138.5, highPrice=144.4}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=940435, closePrice=139.9, timeStamp=java.util.GregorianCalendar[time=1331630877058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=2,WEEK_OF_YEAR=11,WEEK_OF_MONTH=3,DAY_OF_MONTH=13,DAY_OF_YEAR=73,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=141.9, priceId=0, lastClosePrice=139.95, lowPrice=138.4, highPrice=143.65}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=547214, closePrice=139.05, timeStamp=java.util.GregorianCalendar[time=1331717277058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=2,WEEK_OF_YEAR=11,WEEK_OF_MONTH=3,DAY_OF_MONTH=14,DAY_OF_YEAR=74,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=140.9, priceId=0, lastClosePrice=139.9, lowPrice=138.15, highPrice=140.95}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=65226, closePrice=136.45, timeStamp=java.util.GregorianCalendar[time=1331803677058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=2,WEEK_OF_YEAR=11,WEEK_OF_MONTH=3,DAY_OF_MONTH=15,DAY_OF_YEAR=75,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=140.25, priceId=0, lastClosePrice=139.05, lowPrice=135.15, highPrice=140.25}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=385821, closePrice=141.65, timeStamp=java.util.GregorianCalendar[time=1331890077058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=2,WEEK_OF_YEAR=11,WEEK_OF_MONTH=3,DAY_OF_MONTH=16,DAY_OF_YEAR=76,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=131.4, priceId=0, lastClosePrice=136.45, lowPrice=131.4, highPrice=144.2}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=197224, closePrice=136.55, timeStamp=java.util.GregorianCalendar[time=1332149277058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=2,WEEK_OF_YEAR=12,WEEK_OF_MONTH=4,DAY_OF_MONTH=19,DAY_OF_YEAR=79,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=142.05, priceId=0, lastClosePrice=141.65, lowPrice=136.0, highPrice=143.1}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=266728, closePrice=137.0, timeStamp=java.util.GregorianCalendar[time=1332235677058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=2,WEEK_OF_YEAR=12,WEEK_OF_MONTH=4,DAY_OF_MONTH=20,DAY_OF_YEAR=80,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=135.05, priceId=0, lastClosePrice=136.55, lowPrice=135.0, highPrice=139.95}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=142711, closePrice=137.4, timeStamp=java.util.GregorianCalendar[time=1332322077058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=2,WEEK_OF_YEAR=12,WEEK_OF_MONTH=4,DAY_OF_MONTH=21,DAY_OF_YEAR=81,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=138.2, priceId=0, lastClosePrice=137.0, lowPrice=135.25, highPrice=140.75}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=421633, closePrice=137.3, timeStamp=java.util.GregorianCalendar[time=1332408477058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=2,WEEK_OF_YEAR=12,WEEK_OF_MONTH=4,DAY_OF_MONTH=22,DAY_OF_YEAR=82,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=138.75, priceId=0, lastClosePrice=137.4, lowPrice=136.2, highPrice=140.0}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=1239958, closePrice=139.5, timeStamp=java.util.GregorianCalendar[time=1332494877058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=2,WEEK_OF_YEAR=12,WEEK_OF_MONTH=4,DAY_OF_MONTH=23,DAY_OF_YEAR=83,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=138.5, priceId=0, lastClosePrice=137.3, lowPrice=132.55, highPrice=142.0}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=85099, closePrice=135.9, timeStamp=java.util.GregorianCalendar[time=1332754077058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=2,WEEK_OF_YEAR=13,WEEK_OF_MONTH=5,DAY_OF_MONTH=26,DAY_OF_YEAR=86,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=139.0, priceId=0, lastClosePrice=139.5, lowPrice=135.1, highPrice=139.0}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=415395, closePrice=132.35, timeStamp=java.util.GregorianCalendar[time=1332840477058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=2,WEEK_OF_YEAR=13,WEEK_OF_MONTH=5,DAY_OF_MONTH=27,DAY_OF_YEAR=87,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=136.1, priceId=0, lastClosePrice=135.9, lowPrice=131.2, highPrice=137.0}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=529451, closePrice=134.4, timeStamp=java.util.GregorianCalendar[time=1332926877058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=2,WEEK_OF_YEAR=13,WEEK_OF_MONTH=5,DAY_OF_MONTH=28,DAY_OF_YEAR=88,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=136.95, priceId=0, lastClosePrice=132.35, lowPrice=131.1, highPrice=136.95}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=741074, closePrice=133.75, timeStamp=java.util.GregorianCalendar[time=1333013277058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=2,WEEK_OF_YEAR=13,WEEK_OF_MONTH=5,DAY_OF_MONTH=29,DAY_OF_YEAR=89,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=133.2, priceId=0, lastClosePrice=134.4, lowPrice=132.55, highPrice=135.75}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=316701, closePrice=132.95, timeStamp=java.util.GregorianCalendar[time=1333099677058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=2,WEEK_OF_YEAR=13,WEEK_OF_MONTH=5,DAY_OF_MONTH=30,DAY_OF_YEAR=90,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=135.5, priceId=0, lastClosePrice=133.75, lowPrice=132.05, highPrice=136.45}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=193249, closePrice=134.1, timeStamp=java.util.GregorianCalendar[time=1333358877058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=3,WEEK_OF_YEAR=14,WEEK_OF_MONTH=1,DAY_OF_MONTH=2,DAY_OF_YEAR=93,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=132.9, priceId=0, lastClosePrice=132.95, lowPrice=132.2, highPrice=134.9}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=19815, closePrice=134.7, timeStamp=java.util.GregorianCalendar[time=1333445277058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=3,WEEK_OF_YEAR=14,WEEK_OF_MONTH=1,DAY_OF_MONTH=3,DAY_OF_YEAR=94,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=134.5, priceId=0, lastClosePrice=134.1, lowPrice=134.0, highPrice=136.45}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=1236500, closePrice=134.25, timeStamp=java.util.GregorianCalendar[time=1333531677058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=3,WEEK_OF_YEAR=14,WEEK_OF_MONTH=1,DAY_OF_MONTH=4,DAY_OF_YEAR=95,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=134.8, priceId=0, lastClosePrice=134.7, lowPrice=133.35, highPrice=137.0}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=1236500, closePrice=134.25, timeStamp=java.util.GregorianCalendar[time=1333618077058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=3,WEEK_OF_YEAR=14,WEEK_OF_MONTH=1,DAY_OF_MONTH=5,DAY_OF_YEAR=96,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=134.8, priceId=0, lastClosePrice=134.7, lowPrice=133.35, highPrice=137.0}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=1236500, closePrice=134.25, timeStamp=java.util.GregorianCalendar[time=1333704477058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=3,WEEK_OF_YEAR=14,WEEK_OF_MONTH=1,DAY_OF_MONTH=6,DAY_OF_YEAR=97,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=134.8, priceId=0, lastClosePrice=134.7, lowPrice=133.35, highPrice=137.0}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=564464, closePrice=131.9, timeStamp=java.util.GregorianCalendar[time=1333963677058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=9,DAY_OF_YEAR=100,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=133.15, priceId=0, lastClosePrice=134.25, lowPrice=130.1, highPrice=135.95}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=31918, closePrice=131.3, timeStamp=java.util.GregorianCalendar[time=1334050077058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=101,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=131.2, priceId=0, lastClosePrice=131.9, lowPrice=129.1, highPrice=133.35}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=102411, closePrice=131.2, timeStamp=java.util.GregorianCalendar[time=1334136477058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=11,DAY_OF_YEAR=102,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=130.65, priceId=0, lastClosePrice=131.3, lowPrice=129.05, highPrice=132.7}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=38440, closePrice=130.1, timeStamp=java.util.GregorianCalendar[time=1334222877058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=12,DAY_OF_YEAR=103,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=129.0, priceId=0, lastClosePrice=131.2, lowPrice=129.0, highPrice=131.85}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=44834, closePrice=130.9, timeStamp=java.util.GregorianCalendar[time=1334309277058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=3,WEEK_OF_YEAR=15,WEEK_OF_MONTH=2,DAY_OF_MONTH=13,DAY_OF_YEAR=104,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=131.05, priceId=0, lastClosePrice=130.1, lowPrice=130.0, highPrice=132.0}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=21782, closePrice=131.55, timeStamp=java.util.GregorianCalendar[time=1334568477058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=3,WEEK_OF_YEAR=16,WEEK_OF_MONTH=3,DAY_OF_MONTH=16,DAY_OF_YEAR=107,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=130.1, priceId=0, lastClosePrice=130.9, lowPrice=129.35, highPrice=133.7}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=57078, closePrice=130.4, timeStamp=java.util.GregorianCalendar[time=1334654877058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=3,WEEK_OF_YEAR=16,WEEK_OF_MONTH=3,DAY_OF_MONTH=17,DAY_OF_YEAR=108,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=130.15, priceId=0, lastClosePrice=131.55, lowPrice=130.0, highPrice=133.45}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=737545, closePrice=130.4, timeStamp=java.util.GregorianCalendar[time=1334741277058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=3,WEEK_OF_YEAR=16,WEEK_OF_MONTH=3,DAY_OF_MONTH=18,DAY_OF_YEAR=109,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=131.0, priceId=0, lastClosePrice=130.4, lowPrice=130.0, highPrice=132.95}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=66394, closePrice=130.45, timeStamp=java.util.GregorianCalendar[time=1334827677058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=3,WEEK_OF_YEAR=16,WEEK_OF_MONTH=3,DAY_OF_MONTH=19,DAY_OF_YEAR=110,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=130.2, priceId=0, lastClosePrice=130.4, lowPrice=129.55, highPrice=131.4}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=71302, closePrice=128.6, timeStamp=java.util.GregorianCalendar[time=1334914077058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=3,WEEK_OF_YEAR=16,WEEK_OF_MONTH=3,DAY_OF_MONTH=20,DAY_OF_YEAR=111,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=131.0, priceId=0, lastClosePrice=130.45, lowPrice=128.1, highPrice=131.0}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=23292, closePrice=128.2, timeStamp=java.util.GregorianCalendar[time=1335173277058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=3,WEEK_OF_YEAR=17,WEEK_OF_MONTH=4,DAY_OF_MONTH=23,DAY_OF_YEAR=114,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=129.9, priceId=0, lastClosePrice=128.6, lowPrice=127.2, highPrice=129.9}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=14389, closePrice=127.25, timeStamp=java.util.GregorianCalendar[time=1335259677058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=3,WEEK_OF_YEAR=17,WEEK_OF_MONTH=4,DAY_OF_MONTH=24,DAY_OF_YEAR=115,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=128.75, priceId=0, lastClosePrice=128.2, lowPrice=125.25, highPrice=128.75}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=28925, closePrice=127.9, timeStamp=java.util.GregorianCalendar[time=1335346077058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=3,WEEK_OF_YEAR=17,WEEK_OF_MONTH=4,DAY_OF_MONTH=25,DAY_OF_YEAR=116,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=127.05, priceId=0, lastClosePrice=127.25, lowPrice=127.0, highPrice=130.5}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=21456, closePrice=131.25, timeStamp=java.util.GregorianCalendar[time=1335432477058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=3,WEEK_OF_YEAR=17,WEEK_OF_MONTH=4,DAY_OF_MONTH=26,DAY_OF_YEAR=117,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=128.1, priceId=0, lastClosePrice=127.9, lowPrice=127.0, highPrice=132.0}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=94770, closePrice=126.0, timeStamp=java.util.GregorianCalendar[time=1335518877058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=3,WEEK_OF_YEAR=17,WEEK_OF_MONTH=4,DAY_OF_MONTH=27,DAY_OF_YEAR=118,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=132.5, priceId=0, lastClosePrice=131.25, lowPrice=124.6, highPrice=135.9}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=61432, closePrice=127.35, timeStamp=java.util.GregorianCalendar[time=1335778077058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=3,WEEK_OF_YEAR=18,WEEK_OF_MONTH=5,DAY_OF_MONTH=30,DAY_OF_YEAR=121,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=126.95, priceId=0, lastClosePrice=126.65, lowPrice=125.0, highPrice=128.9}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=61432, closePrice=127.35, timeStamp=java.util.GregorianCalendar[time=1335864477058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=4,WEEK_OF_YEAR=18,WEEK_OF_MONTH=1,DAY_OF_MONTH=1,DAY_OF_YEAR=122,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=126.95, priceId=0, lastClosePrice=126.65, lowPrice=125.0, highPrice=128.9}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=22799, closePrice=125.25, timeStamp=java.util.GregorianCalendar[time=1335950877058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=4,WEEK_OF_YEAR=18,WEEK_OF_MONTH=1,DAY_OF_MONTH=2,DAY_OF_YEAR=123,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=128.85, priceId=0, lastClosePrice=127.35, lowPrice=125.1, highPrice=128.85}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=39511, closePrice=124.9, timeStamp=java.util.GregorianCalendar[time=1336037277058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=4,WEEK_OF_YEAR=18,WEEK_OF_MONTH=1,DAY_OF_MONTH=3,DAY_OF_YEAR=124,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=125.5, priceId=0, lastClosePrice=125.25, lowPrice=124.1, highPrice=126.4}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=62659, closePrice=120.05, timeStamp=java.util.GregorianCalendar[time=1336123677058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=4,WEEK_OF_YEAR=18,WEEK_OF_MONTH=1,DAY_OF_MONTH=4,DAY_OF_YEAR=125,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=124.15, priceId=0, lastClosePrice=124.9, lowPrice=115.1, highPrice=125.35}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=31483, closePrice=119.15, timeStamp=java.util.GregorianCalendar[time=1336382877058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=4,WEEK_OF_YEAR=19,WEEK_OF_MONTH=2,DAY_OF_MONTH=7,DAY_OF_YEAR=128,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=119.1, priceId=0, lastClosePrice=120.05, lowPrice=115.0, highPrice=120.95}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=29050, closePrice=116.95, timeStamp=java.util.GregorianCalendar[time=1336469277058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=4,WEEK_OF_YEAR=19,WEEK_OF_MONTH=2,DAY_OF_MONTH=8,DAY_OF_YEAR=129,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=118.1, priceId=0, lastClosePrice=119.15, lowPrice=116.05, highPrice=120.0}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=17554, closePrice=116.1, timeStamp=java.util.GregorianCalendar[time=1336555677058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=4,WEEK_OF_YEAR=19,WEEK_OF_MONTH=2,DAY_OF_MONTH=9,DAY_OF_YEAR=130,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=117.0, priceId=0, lastClosePrice=116.95, lowPrice=115.0, highPrice=117.5}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=50669, closePrice=117.35, timeStamp=java.util.GregorianCalendar[time=1336642077058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=4,WEEK_OF_YEAR=19,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=131,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=115.05, priceId=0, lastClosePrice=116.1, lowPrice=115.0, highPrice=118.0}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=11737, closePrice=115.75, timeStamp=java.util.GregorianCalendar[time=1336728477058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=4,WEEK_OF_YEAR=19,WEEK_OF_MONTH=2,DAY_OF_MONTH=11,DAY_OF_YEAR=132,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=117.25, priceId=0, lastClosePrice=117.35, lowPrice=115.0, highPrice=117.3}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=85810, closePrice=120.15, timeStamp=java.util.GregorianCalendar[time=1336987677058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=4,WEEK_OF_YEAR=20,WEEK_OF_MONTH=3,DAY_OF_MONTH=14,DAY_OF_YEAR=135,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=115.85, priceId=0, lastClosePrice=115.75, lowPrice=115.65, highPrice=122.45}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=60222, closePrice=122.9, timeStamp=java.util.GregorianCalendar[time=1337074077058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=4,WEEK_OF_YEAR=20,WEEK_OF_MONTH=3,DAY_OF_MONTH=15,DAY_OF_YEAR=136,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=119.6, priceId=0, lastClosePrice=120.15, lowPrice=119.6, highPrice=125.0}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=186348, closePrice=118.4, timeStamp=java.util.GregorianCalendar[time=1337160477058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=4,WEEK_OF_YEAR=20,WEEK_OF_MONTH=3,DAY_OF_MONTH=16,DAY_OF_YEAR=137,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=122.1, priceId=0, lastClosePrice=122.9, lowPrice=116.3, highPrice=122.5}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=283146, closePrice=117.75, timeStamp=java.util.GregorianCalendar[time=1337246877058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=4,WEEK_OF_YEAR=20,WEEK_OF_MONTH=3,DAY_OF_MONTH=17,DAY_OF_YEAR=138,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=117.25, priceId=0, lastClosePrice=118.4, lowPrice=116.55, highPrice=120.9}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=260745, closePrice=114.1, timeStamp=java.util.GregorianCalendar[time=1337333277058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=4,WEEK_OF_YEAR=20,WEEK_OF_MONTH=3,DAY_OF_MONTH=18,DAY_OF_YEAR=139,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=117.0, priceId=0, lastClosePrice=117.75, lowPrice=112.9, highPrice=119.9}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=158747, closePrice=113.2, timeStamp=java.util.GregorianCalendar[time=1337592477058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=4,WEEK_OF_YEAR=21,WEEK_OF_MONTH=4,DAY_OF_MONTH=21,DAY_OF_YEAR=142,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=113.2, priceId=0, lastClosePrice=114.1, lowPrice=110.5, highPrice=115.9}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=55469, closePrice=110.35, timeStamp=java.util.GregorianCalendar[time=1337678877058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=4,WEEK_OF_YEAR=21,WEEK_OF_MONTH=4,DAY_OF_MONTH=22,DAY_OF_YEAR=143,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=113.45, priceId=0, lastClosePrice=113.2, lowPrice=109.7, highPrice=113.9}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=59233, closePrice=105.8, timeStamp=java.util.GregorianCalendar[time=1337765277058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=4,WEEK_OF_YEAR=21,WEEK_OF_MONTH=4,DAY_OF_MONTH=23,DAY_OF_YEAR=144,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=110.05, priceId=0, lastClosePrice=110.35, lowPrice=104.2, highPrice=110.8}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=75300, closePrice=105.05, timeStamp=java.util.GregorianCalendar[time=1337851677058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=4,WEEK_OF_YEAR=21,WEEK_OF_MONTH=4,DAY_OF_MONTH=24,DAY_OF_YEAR=145,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=106.0, priceId=0, lastClosePrice=105.8, lowPrice=103.25, highPrice=106.5}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=93429, closePrice=104.3, timeStamp=java.util.GregorianCalendar[time=1337938077058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=4,WEEK_OF_YEAR=21,WEEK_OF_MONTH=4,DAY_OF_MONTH=25,DAY_OF_YEAR=146,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=105.05, priceId=0, lastClosePrice=105.05, lowPrice=100.1, highPrice=106.6}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=39742, closePrice=104.85, timeStamp=java.util.GregorianCalendar[time=1338197277058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=4,WEEK_OF_YEAR=22,WEEK_OF_MONTH=5,DAY_OF_MONTH=28,DAY_OF_YEAR=149,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=104.3, priceId=0, lastClosePrice=104.3, lowPrice=103.35, highPrice=106.5}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=81488, closePrice=106.0, timeStamp=java.util.GregorianCalendar[time=1338283677058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=4,WEEK_OF_YEAR=22,WEEK_OF_MONTH=5,DAY_OF_MONTH=29,DAY_OF_YEAR=150,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=105.0, priceId=0, lastClosePrice=104.85, lowPrice=105.0, highPrice=107.8}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=55192, closePrice=104.3, timeStamp=java.util.GregorianCalendar[time=1338370077058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=4,WEEK_OF_YEAR=22,WEEK_OF_MONTH=5,DAY_OF_MONTH=30,DAY_OF_YEAR=151,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=103.3, priceId=0, lastClosePrice=106.0, lowPrice=103.3, highPrice=106.75}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=90030, closePrice=99.55, timeStamp=java.util.GregorianCalendar[time=1338456477058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=4,WEEK_OF_YEAR=22,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=152,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=103.5, priceId=0, lastClosePrice=104.3, lowPrice=99.0, highPrice=105.8}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=541942, closePrice=106.3, timeStamp=java.util.GregorianCalendar[time=1338542877058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=5,WEEK_OF_YEAR=22,WEEK_OF_MONTH=1,DAY_OF_MONTH=1,DAY_OF_YEAR=153,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=98.6, priceId=0, lastClosePrice=99.55, lowPrice=98.6, highPrice=117.7}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=159462, closePrice=103.4, timeStamp=java.util.GregorianCalendar[time=1338802077058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=5,WEEK_OF_YEAR=23,WEEK_OF_MONTH=2,DAY_OF_MONTH=4,DAY_OF_YEAR=156,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=105.0, priceId=0, lastClosePrice=106.3, lowPrice=102.0, highPrice=112.4}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=70134, closePrice=102.3, timeStamp=java.util.GregorianCalendar[time=1338888477058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=5,WEEK_OF_YEAR=23,WEEK_OF_MONTH=2,DAY_OF_MONTH=5,DAY_OF_YEAR=157,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=104.9, priceId=0, lastClosePrice=103.4, lowPrice=101.2, highPrice=107.5}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=164350, closePrice=101.75, timeStamp=java.util.GregorianCalendar[time=1338974877058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=5,WEEK_OF_YEAR=23,WEEK_OF_MONTH=2,DAY_OF_MONTH=6,DAY_OF_YEAR=158,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=103.05, priceId=0, lastClosePrice=102.3, lowPrice=100.5, highPrice=104.25}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=62765, closePrice=102.45, timeStamp=java.util.GregorianCalendar[time=1339061277058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=5,WEEK_OF_YEAR=23,WEEK_OF_MONTH=2,DAY_OF_MONTH=7,DAY_OF_YEAR=159,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=103.8, priceId=0, lastClosePrice=101.75, lowPrice=101.75, highPrice=103.8}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=61551, closePrice=102.45, timeStamp=java.util.GregorianCalendar[time=1339147677058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=5,WEEK_OF_YEAR=23,WEEK_OF_MONTH=2,DAY_OF_MONTH=8,DAY_OF_YEAR=160,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=102.1, priceId=0, lastClosePrice=102.45, lowPrice=101.3, highPrice=103.4}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=77224, closePrice=102.25, timeStamp=java.util.GregorianCalendar[time=1339406877058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=5,WEEK_OF_YEAR=24,WEEK_OF_MONTH=3,DAY_OF_MONTH=11,DAY_OF_YEAR=163,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=102.25, priceId=0, lastClosePrice=102.45, lowPrice=101.7, highPrice=105.5}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=43637, closePrice=103.65, timeStamp=java.util.GregorianCalendar[time=1339493277058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=5,WEEK_OF_YEAR=24,WEEK_OF_MONTH=3,DAY_OF_MONTH=12,DAY_OF_YEAR=164,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=102.7, priceId=0, lastClosePrice=102.25, lowPrice=102.1, highPrice=104.45}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=84046, closePrice=103.35, timeStamp=java.util.GregorianCalendar[time=1339579677058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=5,WEEK_OF_YEAR=24,WEEK_OF_MONTH=3,DAY_OF_MONTH=13,DAY_OF_YEAR=165,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=104.05, priceId=0, lastClosePrice=103.65, lowPrice=102.0, highPrice=105.05}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=42967, closePrice=102.0, timeStamp=java.util.GregorianCalendar[time=1339666077058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=5,WEEK_OF_YEAR=24,WEEK_OF_MONTH=3,DAY_OF_MONTH=14,DAY_OF_YEAR=166,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=104.9, priceId=0, lastClosePrice=103.35, lowPrice=101.1, highPrice=104.9}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=92489, closePrice=105.3, timeStamp=java.util.GregorianCalendar[time=1339752477058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=5,WEEK_OF_YEAR=24,WEEK_OF_MONTH=3,DAY_OF_MONTH=15,DAY_OF_YEAR=167,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=103.25, priceId=0, lastClosePrice=102.0, lowPrice=101.5, highPrice=106.75}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=40577, closePrice=101.5, timeStamp=java.util.GregorianCalendar[time=1340011677058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=5,WEEK_OF_YEAR=25,WEEK_OF_MONTH=4,DAY_OF_MONTH=18,DAY_OF_YEAR=170,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=104.15, priceId=0, lastClosePrice=105.3, lowPrice=100.55, highPrice=107.0}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=45372, closePrice=101.0, timeStamp=java.util.GregorianCalendar[time=1340098077058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=5,WEEK_OF_YEAR=25,WEEK_OF_MONTH=4,DAY_OF_MONTH=19,DAY_OF_YEAR=171,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=103.45, priceId=0, lastClosePrice=101.5, lowPrice=100.5, highPrice=103.45}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=1050656, closePrice=102.2, timeStamp=java.util.GregorianCalendar[time=1340184477058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=5,WEEK_OF_YEAR=25,WEEK_OF_MONTH=4,DAY_OF_MONTH=20,DAY_OF_YEAR=172,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=102.9, priceId=0, lastClosePrice=101.0, lowPrice=101.2, highPrice=103.45}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=39556, closePrice=103.45, timeStamp=java.util.GregorianCalendar[time=1340270877058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=5,WEEK_OF_YEAR=25,WEEK_OF_MONTH=4,DAY_OF_MONTH=21,DAY_OF_YEAR=173,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=102.5, priceId=0, lastClosePrice=102.2, lowPrice=101.6, highPrice=103.95}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=52002, closePrice=102.2, timeStamp=java.util.GregorianCalendar[time=1340357277058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=5,WEEK_OF_YEAR=25,WEEK_OF_MONTH=4,DAY_OF_MONTH=22,DAY_OF_YEAR=174,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=102.15, priceId=0, lastClosePrice=103.45, lowPrice=100.6, highPrice=102.7}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=45579, closePrice=102.3, timeStamp=java.util.GregorianCalendar[time=1340616477058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=5,WEEK_OF_YEAR=26,WEEK_OF_MONTH=5,DAY_OF_MONTH=25,DAY_OF_YEAR=177,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=103.6, priceId=0, lastClosePrice=102.2, lowPrice=101.5, highPrice=104.85}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=420200, closePrice=101.9, timeStamp=java.util.GregorianCalendar[time=1340702877058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=5,WEEK_OF_YEAR=26,WEEK_OF_MONTH=5,DAY_OF_MONTH=26,DAY_OF_YEAR=178,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=101.8, priceId=0, lastClosePrice=102.3, lowPrice=101.6, highPrice=104.8}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=972965, closePrice=104.3, timeStamp=java.util.GregorianCalendar[time=1340789277058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=5,WEEK_OF_YEAR=26,WEEK_OF_MONTH=5,DAY_OF_MONTH=27,DAY_OF_YEAR=179,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=102.9, priceId=0, lastClosePrice=101.9, lowPrice=102.1, highPrice=106.2}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=381936, closePrice=105.35, timeStamp=java.util.GregorianCalendar[time=1340875677058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=5,WEEK_OF_YEAR=26,WEEK_OF_MONTH=5,DAY_OF_MONTH=28,DAY_OF_YEAR=180,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=104.6, priceId=0, lastClosePrice=104.3, lowPrice=103.25, highPrice=109.0}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=75392, closePrice=106.3, timeStamp=java.util.GregorianCalendar[time=1340962077058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=5,WEEK_OF_YEAR=26,WEEK_OF_MONTH=5,DAY_OF_MONTH=29,DAY_OF_YEAR=181,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=106.6, priceId=0, lastClosePrice=105.35, lowPrice=105.55, highPrice=107.9}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=36723, closePrice=108.05, timeStamp=java.util.GregorianCalendar[time=1341221277058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=6,WEEK_OF_YEAR=27,WEEK_OF_MONTH=1,DAY_OF_MONTH=2,DAY_OF_YEAR=184,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=107.45, priceId=0, lastClosePrice=106.3, lowPrice=106.6, highPrice=108.35}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=71853, closePrice=106.15, timeStamp=java.util.GregorianCalendar[time=1341307677058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=6,WEEK_OF_YEAR=27,WEEK_OF_MONTH=1,DAY_OF_MONTH=3,DAY_OF_YEAR=185,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=107.1, priceId=0, lastClosePrice=108.05, lowPrice=105.6, highPrice=109.5}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=147293, closePrice=111.95, timeStamp=java.util.GregorianCalendar[time=1341394077058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=6,WEEK_OF_YEAR=27,WEEK_OF_MONTH=1,DAY_OF_MONTH=4,DAY_OF_YEAR=186,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=107.0, priceId=0, lastClosePrice=106.15, lowPrice=106.0, highPrice=114.9}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=96315, closePrice=114.6, timeStamp=java.util.GregorianCalendar[time=1341480477058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=6,WEEK_OF_YEAR=27,WEEK_OF_MONTH=1,DAY_OF_MONTH=5,DAY_OF_YEAR=187,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=113.85, priceId=0, lastClosePrice=111.95, lowPrice=113.2, highPrice=116.1}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=49311, closePrice=113.0, timeStamp=java.util.GregorianCalendar[time=1341566877058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=6,WEEK_OF_YEAR=27,WEEK_OF_MONTH=1,DAY_OF_MONTH=6,DAY_OF_YEAR=188,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=115.8, priceId=0, lastClosePrice=114.6, lowPrice=112.25, highPrice=115.85}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=40233, closePrice=110.3, timeStamp=java.util.GregorianCalendar[time=1341826077058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=6,WEEK_OF_YEAR=28,WEEK_OF_MONTH=2,DAY_OF_MONTH=9,DAY_OF_YEAR=191,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=112.65, priceId=0, lastClosePrice=113.0, lowPrice=109.5, highPrice=114.3}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=33805, closePrice=112.2, timeStamp=java.util.GregorianCalendar[time=1341912477058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=6,WEEK_OF_YEAR=28,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=192,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=109.4, priceId=0, lastClosePrice=110.3, lowPrice=108.65, highPrice=113.0}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=22373, closePrice=110.2, timeStamp=java.util.GregorianCalendar[time=1341998877058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=6,WEEK_OF_YEAR=28,WEEK_OF_MONTH=2,DAY_OF_MONTH=11,DAY_OF_YEAR=193,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=110.05, priceId=0, lastClosePrice=112.2, lowPrice=109.8, highPrice=113.0}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=36741, closePrice=108.15, timeStamp=java.util.GregorianCalendar[time=1342085277058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=6,WEEK_OF_YEAR=28,WEEK_OF_MONTH=2,DAY_OF_MONTH=12,DAY_OF_YEAR=194,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=108.0, priceId=0, lastClosePrice=110.2, lowPrice=107.25, highPrice=109.8}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=106728, closePrice=108.45, timeStamp=java.util.GregorianCalendar[time=1342171677058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=6,WEEK_OF_YEAR=28,WEEK_OF_MONTH=2,DAY_OF_MONTH=13,DAY_OF_YEAR=195,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=107.2, priceId=0, lastClosePrice=108.15, lowPrice=106.25, highPrice=111.65}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=35188, closePrice=106.2, timeStamp=java.util.GregorianCalendar[time=1342430877058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=6,WEEK_OF_YEAR=29,WEEK_OF_MONTH=3,DAY_OF_MONTH=16,DAY_OF_YEAR=198,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=108.0, priceId=0, lastClosePrice=108.45, lowPrice=105.6, highPrice=109.9}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=28509, closePrice=105.45, timeStamp=java.util.GregorianCalendar[time=1342517277058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=6,WEEK_OF_YEAR=29,WEEK_OF_MONTH=3,DAY_OF_MONTH=17,DAY_OF_YEAR=199,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=106.9, priceId=0, lastClosePrice=106.2, lowPrice=105.1, highPrice=107.0}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=87247, closePrice=102.15, timeStamp=java.util.GregorianCalendar[time=1342603677058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=6,WEEK_OF_YEAR=29,WEEK_OF_MONTH=3,DAY_OF_MONTH=18,DAY_OF_YEAR=200,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=105.9, priceId=0, lastClosePrice=105.45, lowPrice=101.7, highPrice=105.9}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=161148, closePrice=105.5, timeStamp=java.util.GregorianCalendar[time=1342690077058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=6,WEEK_OF_YEAR=29,WEEK_OF_MONTH=3,DAY_OF_MONTH=19,DAY_OF_YEAR=201,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=102.9, priceId=0, lastClosePrice=102.15, lowPrice=100.35, highPrice=110.9}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=212899, closePrice=107.2, timeStamp=java.util.GregorianCalendar[time=1342776477058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=6,WEEK_OF_YEAR=29,WEEK_OF_MONTH=3,DAY_OF_MONTH=20,DAY_OF_YEAR=202,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=105.0, priceId=0, lastClosePrice=105.5, lowPrice=105.0, highPrice=111.0}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=74344, closePrice=105.45, timeStamp=java.util.GregorianCalendar[time=1343035677058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=6,WEEK_OF_YEAR=30,WEEK_OF_MONTH=4,DAY_OF_MONTH=23,DAY_OF_YEAR=205,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=106.0, priceId=0, lastClosePrice=107.2, lowPrice=103.25, highPrice=106.65}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=48126, closePrice=104.75, timeStamp=java.util.GregorianCalendar[time=1343122077058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=6,WEEK_OF_YEAR=30,WEEK_OF_MONTH=4,DAY_OF_MONTH=24,DAY_OF_YEAR=206,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=106.55, priceId=0, lastClosePrice=105.45, lowPrice=104.05, highPrice=106.65}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=43437, closePrice=105.2, timeStamp=java.util.GregorianCalendar[time=1343208477058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=6,WEEK_OF_YEAR=30,WEEK_OF_MONTH=4,DAY_OF_MONTH=25,DAY_OF_YEAR=207,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=105.15, priceId=0, lastClosePrice=104.75, lowPrice=104.1, highPrice=106.5}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=50914, closePrice=101.65, timeStamp=java.util.GregorianCalendar[time=1343294877058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=6,WEEK_OF_YEAR=30,WEEK_OF_MONTH=4,DAY_OF_MONTH=26,DAY_OF_YEAR=208,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=105.0, priceId=0, lastClosePrice=105.2, lowPrice=100.45, highPrice=105.5}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=109338, closePrice=100.15, timeStamp=java.util.GregorianCalendar[time=1343381277058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=6,WEEK_OF_YEAR=30,WEEK_OF_MONTH=4,DAY_OF_MONTH=27,DAY_OF_YEAR=209,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=102.05, priceId=0, lastClosePrice=101.65, lowPrice=99.9, highPrice=104.9}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=87208, closePrice=101.0, timeStamp=java.util.GregorianCalendar[time=1343640477058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=6,WEEK_OF_YEAR=31,WEEK_OF_MONTH=5,DAY_OF_MONTH=30,DAY_OF_YEAR=212,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=101.75, priceId=0, lastClosePrice=100.15, lowPrice=98.5, highPrice=101.9}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=68928, closePrice=102.7, timeStamp=java.util.GregorianCalendar[time=1343726877058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=6,WEEK_OF_YEAR=31,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=213,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=101.9, priceId=0, lastClosePrice=101.0, lowPrice=100.35, highPrice=103.35}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=61443, closePrice=102.6, timeStamp=java.util.GregorianCalendar[time=1343813277058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=7,WEEK_OF_YEAR=31,WEEK_OF_MONTH=1,DAY_OF_MONTH=1,DAY_OF_YEAR=214,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=102.95, priceId=0, lastClosePrice=102.7, lowPrice=102.05, highPrice=104.2}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=67267, closePrice=101.95, timeStamp=java.util.GregorianCalendar[time=1343899677058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=7,WEEK_OF_YEAR=31,WEEK_OF_MONTH=1,DAY_OF_MONTH=2,DAY_OF_YEAR=215,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=102.25, priceId=0, lastClosePrice=102.6, lowPrice=101.3, highPrice=103.3}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=50521, closePrice=100.5, timeStamp=java.util.GregorianCalendar[time=1343986077058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=7,WEEK_OF_YEAR=31,WEEK_OF_MONTH=1,DAY_OF_MONTH=3,DAY_OF_YEAR=216,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=101.95, priceId=0, lastClosePrice=101.95, lowPrice=100.25, highPrice=102.55}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=164274, closePrice=99.65, timeStamp=java.util.GregorianCalendar[time=1344245277058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=7,WEEK_OF_YEAR=32,WEEK_OF_MONTH=2,DAY_OF_MONTH=6,DAY_OF_YEAR=219,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=101.15, priceId=0, lastClosePrice=100.5, lowPrice=96.45, highPrice=101.95}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=74672, closePrice=98.35, timeStamp=java.util.GregorianCalendar[time=1344331677058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=7,WEEK_OF_YEAR=32,WEEK_OF_MONTH=2,DAY_OF_MONTH=7,DAY_OF_YEAR=220,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=100.7, priceId=0, lastClosePrice=99.65, lowPrice=97.8, highPrice=100.95}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=199477, closePrice=93.85, timeStamp=java.util.GregorianCalendar[time=1344418077058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=7,WEEK_OF_YEAR=32,WEEK_OF_MONTH=2,DAY_OF_MONTH=8,DAY_OF_YEAR=221,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=99.4, priceId=0, lastClosePrice=98.35, lowPrice=92.95, highPrice=99.4}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=848173, closePrice=86.4, timeStamp=java.util.GregorianCalendar[time=1344504477058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=7,WEEK_OF_YEAR=32,WEEK_OF_MONTH=2,DAY_OF_MONTH=9,DAY_OF_YEAR=222,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=93.9, priceId=0, lastClosePrice=93.85, lowPrice=85.1, highPrice=94.55}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=1101247, closePrice=95.7, timeStamp=java.util.GregorianCalendar[time=1344590877058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=7,WEEK_OF_YEAR=32,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=223,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=86.45, priceId=0, lastClosePrice=86.4, lowPrice=83.9, highPrice=98.0}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=326808, closePrice=96.1, timeStamp=java.util.GregorianCalendar[time=1344850077058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=7,WEEK_OF_YEAR=33,WEEK_OF_MONTH=3,DAY_OF_MONTH=13,DAY_OF_YEAR=226,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=96.85, priceId=0, lastClosePrice=95.7, lowPrice=94.25, highPrice=98.3}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=92537, closePrice=95.2, timeStamp=java.util.GregorianCalendar[time=1344936477058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=7,WEEK_OF_YEAR=33,WEEK_OF_MONTH=3,DAY_OF_MONTH=14,DAY_OF_YEAR=227,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=95.95, priceId=0, lastClosePrice=96.1, lowPrice=95.0, highPrice=96.85}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=92537, closePrice=95.2, timeStamp=java.util.GregorianCalendar[time=1345022877058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=7,WEEK_OF_YEAR=33,WEEK_OF_MONTH=3,DAY_OF_MONTH=15,DAY_OF_YEAR=228,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=95.95, priceId=0, lastClosePrice=96.1, lowPrice=95.0, highPrice=96.85}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=509259, closePrice=98.35, timeStamp=java.util.GregorianCalendar[time=1345109277058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=7,WEEK_OF_YEAR=33,WEEK_OF_MONTH=3,DAY_OF_MONTH=16,DAY_OF_YEAR=229,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=97.25, priceId=0, lastClosePrice=95.2, lowPrice=95.0, highPrice=101.5}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=151741, closePrice=96.75, timeStamp=java.util.GregorianCalendar[time=1345195677058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=7,WEEK_OF_YEAR=33,WEEK_OF_MONTH=3,DAY_OF_MONTH=17,DAY_OF_YEAR=230,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=98.8, priceId=0, lastClosePrice=98.35, lowPrice=96.3, highPrice=99.4}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=151741, closePrice=96.75, timeStamp=java.util.GregorianCalendar[time=1345454877058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=7,WEEK_OF_YEAR=34,WEEK_OF_MONTH=4,DAY_OF_MONTH=20,DAY_OF_YEAR=233,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=98.8, priceId=0, lastClosePrice=98.35, lowPrice=96.3, highPrice=99.4}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=133454, closePrice=96.75, timeStamp=java.util.GregorianCalendar[time=1345541277058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=7,WEEK_OF_YEAR=34,WEEK_OF_MONTH=4,DAY_OF_MONTH=21,DAY_OF_YEAR=234,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=97.85, priceId=0, lastClosePrice=96.75, lowPrice=96.45, highPrice=98.25}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=100905, closePrice=97.2, timeStamp=java.util.GregorianCalendar[time=1345627677058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=7,WEEK_OF_YEAR=34,WEEK_OF_MONTH=4,DAY_OF_MONTH=22,DAY_OF_YEAR=235,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=96.5, priceId=0, lastClosePrice=96.75, lowPrice=95.15, highPrice=98.2}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=88646, closePrice=95.5, timeStamp=java.util.GregorianCalendar[time=1345714077058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=7,WEEK_OF_YEAR=34,WEEK_OF_MONTH=4,DAY_OF_MONTH=23,DAY_OF_YEAR=236,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=97.3, priceId=0, lastClosePrice=97.2, lowPrice=95.15, highPrice=97.4}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=100836, closePrice=92.3, timeStamp=java.util.GregorianCalendar[time=1345800477058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=7,WEEK_OF_YEAR=34,WEEK_OF_MONTH=4,DAY_OF_MONTH=24,DAY_OF_YEAR=237,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=96.0, priceId=0, lastClosePrice=95.5, lowPrice=92.0, highPrice=96.0}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=60751, closePrice=91.6, timeStamp=java.util.GregorianCalendar[time=1346059677058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=7,WEEK_OF_YEAR=35,WEEK_OF_MONTH=5,DAY_OF_MONTH=27,DAY_OF_YEAR=240,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=92.85, priceId=0, lastClosePrice=92.3, lowPrice=91.1, highPrice=94.0}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=181667, closePrice=86.8, timeStamp=java.util.GregorianCalendar[time=1346146077058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=7,WEEK_OF_YEAR=35,WEEK_OF_MONTH=5,DAY_OF_MONTH=28,DAY_OF_YEAR=241,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=92.0, priceId=0, lastClosePrice=91.6, lowPrice=85.2, highPrice=92.25}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=285752, closePrice=90.15, timeStamp=java.util.GregorianCalendar[time=1346232477058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=7,WEEK_OF_YEAR=35,WEEK_OF_MONTH=5,DAY_OF_MONTH=29,DAY_OF_YEAR=242,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=86.8, priceId=0, lastClosePrice=86.8, lowPrice=84.7, highPrice=91.0}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=161776, closePrice=88.45, timeStamp=java.util.GregorianCalendar[time=1346318877058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=7,WEEK_OF_YEAR=35,WEEK_OF_MONTH=5,DAY_OF_MONTH=30,DAY_OF_YEAR=243,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=91.45, priceId=0, lastClosePrice=90.15, lowPrice=86.45, highPrice=92.0}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=61568, closePrice=88.35, timeStamp=java.util.GregorianCalendar[time=1346405277058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=7,WEEK_OF_YEAR=35,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=244,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=88.45, priceId=0, lastClosePrice=88.45, lowPrice=87.25, highPrice=89.9}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=343539, closePrice=91.65, timeStamp=java.util.GregorianCalendar[time=1346664477058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=8,WEEK_OF_YEAR=36,WEEK_OF_MONTH=2,DAY_OF_MONTH=3,DAY_OF_YEAR=247,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=89.4, priceId=0, lastClosePrice=88.35, lowPrice=88.9, highPrice=94.65}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=71016, closePrice=89.65, timeStamp=java.util.GregorianCalendar[time=1346750877058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=8,WEEK_OF_YEAR=36,WEEK_OF_MONTH=2,DAY_OF_MONTH=4,DAY_OF_YEAR=248,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=91.75, priceId=0, lastClosePrice=91.65, lowPrice=89.1, highPrice=91.95}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=57212, closePrice=87.85, timeStamp=java.util.GregorianCalendar[time=1346837277058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=8,WEEK_OF_YEAR=36,WEEK_OF_MONTH=2,DAY_OF_MONTH=5,DAY_OF_YEAR=249,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=89.6, priceId=0, lastClosePrice=89.65, lowPrice=87.05, highPrice=90.8}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=56401, closePrice=88.85, timeStamp=java.util.GregorianCalendar[time=1346923677058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=8,WEEK_OF_YEAR=36,WEEK_OF_MONTH=2,DAY_OF_MONTH=6,DAY_OF_YEAR=250,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=88.8, priceId=0, lastClosePrice=87.85, lowPrice=87.5, highPrice=89.9}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=137467, closePrice=87.3, timeStamp=java.util.GregorianCalendar[time=1347010077058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=8,WEEK_OF_YEAR=36,WEEK_OF_MONTH=2,DAY_OF_MONTH=7,DAY_OF_YEAR=251,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=89.75, priceId=0, lastClosePrice=88.85, lowPrice=86.3, highPrice=91.0}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=65805, closePrice=87.4, timeStamp=java.util.GregorianCalendar[time=1347269277058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=8,WEEK_OF_YEAR=37,WEEK_OF_MONTH=3,DAY_OF_MONTH=10,DAY_OF_YEAR=254,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=87.5, priceId=0, lastClosePrice=88.55, lowPrice=86.1, highPrice=89.45}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=302901, closePrice=89.05, timeStamp=java.util.GregorianCalendar[time=1347355677058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=8,WEEK_OF_YEAR=37,WEEK_OF_MONTH=3,DAY_OF_MONTH=11,DAY_OF_YEAR=255,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=87.9, priceId=0, lastClosePrice=87.4, lowPrice=86.9, highPrice=91.9}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=101142, closePrice=88.35, timeStamp=java.util.GregorianCalendar[time=1347442077058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=8,WEEK_OF_YEAR=37,WEEK_OF_MONTH=3,DAY_OF_MONTH=12,DAY_OF_YEAR=256,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=89.0, priceId=0, lastClosePrice=89.05, lowPrice=88.2, highPrice=90.5}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=89570, closePrice=87.4, timeStamp=java.util.GregorianCalendar[time=1347528477058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=8,WEEK_OF_YEAR=37,WEEK_OF_MONTH=3,DAY_OF_MONTH=13,DAY_OF_YEAR=257,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=88.35, priceId=0, lastClosePrice=88.35, lowPrice=87.0, highPrice=89.5}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=128151, closePrice=87.45, timeStamp=java.util.GregorianCalendar[time=1347614877058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=8,WEEK_OF_YEAR=37,WEEK_OF_MONTH=3,DAY_OF_MONTH=14,DAY_OF_YEAR=258,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=88.7, priceId=0, lastClosePrice=87.4, lowPrice=87.05, highPrice=89.05}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=94249, closePrice=88.05, timeStamp=java.util.GregorianCalendar[time=1347874077058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=8,WEEK_OF_YEAR=38,WEEK_OF_MONTH=4,DAY_OF_MONTH=17,DAY_OF_YEAR=261,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=88.9, priceId=0, lastClosePrice=87.45, lowPrice=87.6, highPrice=89.0}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=282077, closePrice=89.65, timeStamp=java.util.GregorianCalendar[time=1347960477058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=8,WEEK_OF_YEAR=38,WEEK_OF_MONTH=4,DAY_OF_MONTH=18,DAY_OF_YEAR=262,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=88.7, priceId=0, lastClosePrice=88.05, lowPrice=88.1, highPrice=91.8}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=282077, closePrice=89.65, timeStamp=java.util.GregorianCalendar[time=1348046877058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=8,WEEK_OF_YEAR=38,WEEK_OF_MONTH=4,DAY_OF_MONTH=19,DAY_OF_YEAR=263,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=88.7, priceId=0, lastClosePrice=88.05, lowPrice=88.1, highPrice=91.8}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=124521, closePrice=89.25, timeStamp=java.util.GregorianCalendar[time=1348133277058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=8,WEEK_OF_YEAR=38,WEEK_OF_MONTH=4,DAY_OF_MONTH=20,DAY_OF_YEAR=264,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=89.1, priceId=0, lastClosePrice=89.65, lowPrice=88.95, highPrice=90.3}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=516717, closePrice=87.05, timeStamp=java.util.GregorianCalendar[time=1348219677058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=8,WEEK_OF_YEAR=38,WEEK_OF_MONTH=4,DAY_OF_MONTH=21,DAY_OF_YEAR=265,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=88.2, priceId=0, lastClosePrice=89.25, lowPrice=86.5, highPrice=91.6}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=511790, closePrice=86.9, timeStamp=java.util.GregorianCalendar[time=1348478877058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=8,WEEK_OF_YEAR=39,WEEK_OF_MONTH=5,DAY_OF_MONTH=24,DAY_OF_YEAR=268,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=87.05, priceId=0, lastClosePrice=87.05, lowPrice=86.3, highPrice=90.65}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=128122, closePrice=87.5, timeStamp=java.util.GregorianCalendar[time=1348565277058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=8,WEEK_OF_YEAR=39,WEEK_OF_MONTH=5,DAY_OF_MONTH=25,DAY_OF_YEAR=269,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=86.55, priceId=0, lastClosePrice=86.9, lowPrice=86.55, highPrice=88.45}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=740812, closePrice=89.6, timeStamp=java.util.GregorianCalendar[time=1348651677058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=8,WEEK_OF_YEAR=39,WEEK_OF_MONTH=5,DAY_OF_MONTH=26,DAY_OF_YEAR=270,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=87.2, priceId=0, lastClosePrice=87.5, lowPrice=87.0, highPrice=90.75}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=2590291, closePrice=89.35, timeStamp=java.util.GregorianCalendar[time=1348738077058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=8,WEEK_OF_YEAR=39,WEEK_OF_MONTH=5,DAY_OF_MONTH=27,DAY_OF_YEAR=271,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=94.1, priceId=0, lastClosePrice=89.6, lowPrice=88.25, highPrice=94.9}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=682399, closePrice=88.55, timeStamp=java.util.GregorianCalendar[time=1348824477058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=8,WEEK_OF_YEAR=39,WEEK_OF_MONTH=5,DAY_OF_MONTH=28,DAY_OF_YEAR=272,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=90.6, priceId=0, lastClosePrice=89.35, lowPrice=87.5, highPrice=91.95}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=288049, closePrice=89.45, timeStamp=java.util.GregorianCalendar[time=1349083677058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=9,WEEK_OF_YEAR=40,WEEK_OF_MONTH=1,DAY_OF_MONTH=1,DAY_OF_YEAR=275,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=89.2, priceId=0, lastClosePrice=88.55, lowPrice=88.4, highPrice=90.3}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=288049, closePrice=89.45, timeStamp=java.util.GregorianCalendar[time=1349170077058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=9,WEEK_OF_YEAR=40,WEEK_OF_MONTH=1,DAY_OF_MONTH=2,DAY_OF_YEAR=276,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=89.2, priceId=0, lastClosePrice=88.55, lowPrice=88.4, highPrice=90.3}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=218661, closePrice=89.75, timeStamp=java.util.GregorianCalendar[time=1349256477058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=9,WEEK_OF_YEAR=40,WEEK_OF_MONTH=1,DAY_OF_MONTH=3,DAY_OF_YEAR=277,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=89.75, priceId=0, lastClosePrice=89.45, lowPrice=89.2, highPrice=90.45}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=758786, closePrice=91.7, timeStamp=java.util.GregorianCalendar[time=1349342877058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=9,WEEK_OF_YEAR=40,WEEK_OF_MONTH=1,DAY_OF_MONTH=4,DAY_OF_YEAR=278,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=90.7, priceId=0, lastClosePrice=89.75, lowPrice=89.7, highPrice=92.9}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=409593, closePrice=88.4, timeStamp=java.util.GregorianCalendar[time=1349429277058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=9,WEEK_OF_YEAR=40,WEEK_OF_MONTH=1,DAY_OF_MONTH=5,DAY_OF_YEAR=279,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=92.5, priceId=0, lastClosePrice=91.7, lowPrice=87.8, highPrice=92.6}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=334014, closePrice=87.3, timeStamp=java.util.GregorianCalendar[time=1349688477058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=9,WEEK_OF_YEAR=41,WEEK_OF_MONTH=2,DAY_OF_MONTH=8,DAY_OF_YEAR=282,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=88.9, priceId=0, lastClosePrice=88.4, lowPrice=87.0, highPrice=89.8}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=416085, closePrice=86.2, timeStamp=java.util.GregorianCalendar[time=1349774877058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=9,WEEK_OF_YEAR=41,WEEK_OF_MONTH=2,DAY_OF_MONTH=9,DAY_OF_YEAR=283,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=88.3, priceId=0, lastClosePrice=87.3, lowPrice=86.05, highPrice=88.3}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=480739, closePrice=83.4, timeStamp=java.util.GregorianCalendar[time=1349861277058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=9,WEEK_OF_YEAR=41,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=284,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=86.45, priceId=0, lastClosePrice=86.2, lowPrice=83.05, highPrice=86.45}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=1111061, closePrice=80.0, timeStamp=java.util.GregorianCalendar[time=1349947677058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=9,WEEK_OF_YEAR=41,WEEK_OF_MONTH=2,DAY_OF_MONTH=11,DAY_OF_YEAR=285,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=83.95, priceId=0, lastClosePrice=83.4, lowPrice=79.3, highPrice=84.0}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=532029, closePrice=78.7, timeStamp=java.util.GregorianCalendar[time=1350034077058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=9,WEEK_OF_YEAR=41,WEEK_OF_MONTH=2,DAY_OF_MONTH=12,DAY_OF_YEAR=286,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=80.85, priceId=0, lastClosePrice=80.0, lowPrice=78.5, highPrice=81.25}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=341555, closePrice=80.35, timeStamp=java.util.GregorianCalendar[time=1350293277058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=9,WEEK_OF_YEAR=42,WEEK_OF_MONTH=3,DAY_OF_MONTH=15,DAY_OF_YEAR=289,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=79.3, priceId=0, lastClosePrice=78.7, lowPrice=78.35, highPrice=80.75}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=346441, closePrice=77.8, timeStamp=java.util.GregorianCalendar[time=1350379677058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=9,WEEK_OF_YEAR=42,WEEK_OF_MONTH=3,DAY_OF_MONTH=16,DAY_OF_YEAR=290,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=79.6, priceId=0, lastClosePrice=80.35, lowPrice=77.3, highPrice=81.3}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=358591, closePrice=77.45, timeStamp=java.util.GregorianCalendar[time=1350466077058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=9,WEEK_OF_YEAR=42,WEEK_OF_MONTH=3,DAY_OF_MONTH=17,DAY_OF_YEAR=291,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=88.15, priceId=0, lastClosePrice=77.8, lowPrice=77.0, highPrice=88.15}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=403213, closePrice=76.35, timeStamp=java.util.GregorianCalendar[time=1350552477058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=9,WEEK_OF_YEAR=42,WEEK_OF_MONTH=3,DAY_OF_MONTH=18,DAY_OF_YEAR=292,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=78.65, priceId=0, lastClosePrice=77.45, lowPrice=76.0, highPrice=78.7}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=409066, closePrice=76.75, timeStamp=java.util.GregorianCalendar[time=1350638877058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=9,WEEK_OF_YEAR=42,WEEK_OF_MONTH=3,DAY_OF_MONTH=19,DAY_OF_YEAR=293,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=77.1, priceId=0, lastClosePrice=76.35, lowPrice=76.0, highPrice=78.5}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=411655, closePrice=74.05, timeStamp=java.util.GregorianCalendar[time=1350898077058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=9,WEEK_OF_YEAR=43,WEEK_OF_MONTH=4,DAY_OF_MONTH=22,DAY_OF_YEAR=296,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=77.05, priceId=0, lastClosePrice=76.75, lowPrice=73.65, highPrice=77.05}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=654535, closePrice=75.05, timeStamp=java.util.GregorianCalendar[time=1350984477058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=9,WEEK_OF_YEAR=43,WEEK_OF_MONTH=4,DAY_OF_MONTH=23,DAY_OF_YEAR=297,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=74.05, priceId=0, lastClosePrice=74.05, lowPrice=72.2, highPrice=76.1}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=654535, closePrice=75.05, timeStamp=java.util.GregorianCalendar[time=1351070877058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=9,WEEK_OF_YEAR=43,WEEK_OF_MONTH=4,DAY_OF_MONTH=24,DAY_OF_YEAR=298,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=74.05, priceId=0, lastClosePrice=74.05, lowPrice=72.2, highPrice=76.1}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=460313, closePrice=77.15, timeStamp=java.util.GregorianCalendar[time=1351157277058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=9,WEEK_OF_YEAR=43,WEEK_OF_MONTH=4,DAY_OF_MONTH=25,DAY_OF_YEAR=299,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=75.55, priceId=0, lastClosePrice=75.05, lowPrice=75.05, highPrice=77.8}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=222211, closePrice=76.0, timeStamp=java.util.GregorianCalendar[time=1351243677058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=9,WEEK_OF_YEAR=43,WEEK_OF_MONTH=4,DAY_OF_MONTH=26,DAY_OF_YEAR=300,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=77.55, priceId=0, lastClosePrice=77.15, lowPrice=75.4, highPrice=78.95}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=240655, closePrice=73.9, timeStamp=java.util.GregorianCalendar[time=1351502877058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=9,WEEK_OF_YEAR=44,WEEK_OF_MONTH=5,DAY_OF_MONTH=29,DAY_OF_YEAR=303,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=75.6, priceId=0, lastClosePrice=76.0, lowPrice=73.5, highPrice=76.9}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=268442, closePrice=71.55, timeStamp=java.util.GregorianCalendar[time=1351589277058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=9,WEEK_OF_YEAR=44,WEEK_OF_MONTH=5,DAY_OF_MONTH=30,DAY_OF_YEAR=304,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=74.4, priceId=0, lastClosePrice=73.9, lowPrice=71.1, highPrice=74.4}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=512253, closePrice=71.45, timeStamp=java.util.GregorianCalendar[time=1351675677058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=9,WEEK_OF_YEAR=44,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=305,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=71.9, priceId=0, lastClosePrice=71.55, lowPrice=70.5, highPrice=73.75}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=120870, closePrice=72.0, timeStamp=java.util.GregorianCalendar[time=1351762077058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=10,WEEK_OF_YEAR=44,WEEK_OF_MONTH=1,DAY_OF_MONTH=1,DAY_OF_YEAR=306,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=71.85, priceId=0, lastClosePrice=71.45, lowPrice=71.1, highPrice=72.55}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=269709, closePrice=71.9, timeStamp=java.util.GregorianCalendar[time=1351848477058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=10,WEEK_OF_YEAR=44,WEEK_OF_MONTH=1,DAY_OF_MONTH=2,DAY_OF_YEAR=307,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=72.65, priceId=0, lastClosePrice=72.0, lowPrice=71.6, highPrice=72.9}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=246176, closePrice=72.15, timeStamp=java.util.GregorianCalendar[time=1352107677058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=10,WEEK_OF_YEAR=45,WEEK_OF_MONTH=2,DAY_OF_MONTH=5,DAY_OF_YEAR=310,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=71.9, priceId=0, lastClosePrice=71.9, lowPrice=71.65, highPrice=72.9}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=511615, closePrice=72.1, timeStamp=java.util.GregorianCalendar[time=1352194077058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=10,WEEK_OF_YEAR=45,WEEK_OF_MONTH=2,DAY_OF_MONTH=6,DAY_OF_YEAR=311,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=72.35, priceId=0, lastClosePrice=72.15, lowPrice=71.5, highPrice=73.4}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=414599, closePrice=72.7, timeStamp=java.util.GregorianCalendar[time=1352280477058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=10,WEEK_OF_YEAR=45,WEEK_OF_MONTH=2,DAY_OF_MONTH=7,DAY_OF_YEAR=312,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=72.85, priceId=0, lastClosePrice=72.1, lowPrice=72.45, highPrice=73.7}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=151574, closePrice=72.35, timeStamp=java.util.GregorianCalendar[time=1352366877058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=10,WEEK_OF_YEAR=45,WEEK_OF_MONTH=2,DAY_OF_MONTH=8,DAY_OF_YEAR=313,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=72.5, priceId=0, lastClosePrice=72.7, lowPrice=71.5, highPrice=72.5}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=169872, closePrice=71.3, timeStamp=java.util.GregorianCalendar[time=1352453277058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=10,WEEK_OF_YEAR=45,WEEK_OF_MONTH=2,DAY_OF_MONTH=9,DAY_OF_YEAR=314,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=72.75, priceId=0, lastClosePrice=72.35, lowPrice=71.1, highPrice=73.7}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=149735, closePrice=71.1, timeStamp=java.util.GregorianCalendar[time=1352712477058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=10,WEEK_OF_YEAR=46,WEEK_OF_MONTH=3,DAY_OF_MONTH=12,DAY_OF_YEAR=317,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=71.8, priceId=0, lastClosePrice=71.3, lowPrice=70.7, highPrice=72.5}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=44004, closePrice=71.95, timeStamp=java.util.GregorianCalendar[time=1352798877058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=10,WEEK_OF_YEAR=46,WEEK_OF_MONTH=3,DAY_OF_MONTH=13,DAY_OF_YEAR=318,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=71.15, priceId=0, lastClosePrice=71.1, lowPrice=71.15, highPrice=72.25}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=44004, closePrice=71.95, timeStamp=java.util.GregorianCalendar[time=1352885277058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=10,WEEK_OF_YEAR=46,WEEK_OF_MONTH=3,DAY_OF_MONTH=14,DAY_OF_YEAR=319,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=71.15, priceId=0, lastClosePrice=71.1, lowPrice=71.15, highPrice=72.25}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=1413600, closePrice=77.0, timeStamp=java.util.GregorianCalendar[time=1352971677058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=10,WEEK_OF_YEAR=46,WEEK_OF_MONTH=3,DAY_OF_MONTH=15,DAY_OF_YEAR=320,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=71.95, priceId=0, lastClosePrice=71.95, lowPrice=71.3, highPrice=77.35}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=944464, closePrice=73.3, timeStamp=java.util.GregorianCalendar[time=1353058077058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=10,WEEK_OF_YEAR=46,WEEK_OF_MONTH=3,DAY_OF_MONTH=16,DAY_OF_YEAR=321,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=77.0, priceId=0, lastClosePrice=77.0, lowPrice=72.3, highPrice=79.3}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=272872, closePrice=71.25, timeStamp=java.util.GregorianCalendar[time=1353317277058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=10,WEEK_OF_YEAR=47,WEEK_OF_MONTH=4,DAY_OF_MONTH=19,DAY_OF_YEAR=324,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=73.55, priceId=0, lastClosePrice=73.3, lowPrice=70.8, highPrice=74.0}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=201492, closePrice=71.45, timeStamp=java.util.GregorianCalendar[time=1353403677058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=10,WEEK_OF_YEAR=47,WEEK_OF_MONTH=4,DAY_OF_MONTH=20,DAY_OF_YEAR=325,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=71.45, priceId=0, lastClosePrice=71.25, lowPrice=71.1, highPrice=72.55}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=106882, closePrice=71.7, timeStamp=java.util.GregorianCalendar[time=1353490077058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=10,WEEK_OF_YEAR=47,WEEK_OF_MONTH=4,DAY_OF_MONTH=21,DAY_OF_YEAR=326,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=71.55, priceId=0, lastClosePrice=71.45, lowPrice=71.1, highPrice=72.3}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=161670, closePrice=71.4, timeStamp=java.util.GregorianCalendar[time=1353576477058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=10,WEEK_OF_YEAR=47,WEEK_OF_MONTH=4,DAY_OF_MONTH=22,DAY_OF_YEAR=327,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=71.7, priceId=0, lastClosePrice=71.7, lowPrice=70.9, highPrice=72.9}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=166071, closePrice=71.15, timeStamp=java.util.GregorianCalendar[time=1353662877058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=10,WEEK_OF_YEAR=47,WEEK_OF_MONTH=4,DAY_OF_MONTH=23,DAY_OF_YEAR=328,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=71.2, priceId=0, lastClosePrice=71.4, lowPrice=71.0, highPrice=72.2}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=151741, closePrice=70.55, timeStamp=java.util.GregorianCalendar[time=1353922077058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=10,WEEK_OF_YEAR=48,WEEK_OF_MONTH=5,DAY_OF_MONTH=26,DAY_OF_YEAR=331,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=71.6, priceId=0, lastClosePrice=71.15, lowPrice=70.3, highPrice=71.9}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=246648, closePrice=71.05, timeStamp=java.util.GregorianCalendar[time=1354008477058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=10,WEEK_OF_YEAR=48,WEEK_OF_MONTH=5,DAY_OF_MONTH=27,DAY_OF_YEAR=332,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=71.25, priceId=0, lastClosePrice=70.55, lowPrice=70.3, highPrice=71.85}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=246648, closePrice=71.05, timeStamp=java.util.GregorianCalendar[time=1354094877058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=10,WEEK_OF_YEAR=48,WEEK_OF_MONTH=5,DAY_OF_MONTH=28,DAY_OF_YEAR=333,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=71.25, priceId=0, lastClosePrice=70.55, lowPrice=70.3, highPrice=71.85}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=232692, closePrice=70.95, timeStamp=java.util.GregorianCalendar[time=1354181277058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=10,WEEK_OF_YEAR=48,WEEK_OF_MONTH=5,DAY_OF_MONTH=29,DAY_OF_YEAR=334,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=72.8, priceId=0, lastClosePrice=71.05, lowPrice=70.55, highPrice=72.8}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=233900, closePrice=71.2, timeStamp=java.util.GregorianCalendar[time=1354267677058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=10,WEEK_OF_YEAR=48,WEEK_OF_MONTH=5,DAY_OF_MONTH=30,DAY_OF_YEAR=335,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=72.75, priceId=0, lastClosePrice=70.95, lowPrice=71.05, highPrice=72.75}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=409364, closePrice=72.65, timeStamp=java.util.GregorianCalendar[time=1354526877058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=11,WEEK_OF_YEAR=49,WEEK_OF_MONTH=2,DAY_OF_MONTH=3,DAY_OF_YEAR=338,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=71.5, priceId=0, lastClosePrice=71.2, lowPrice=71.2, highPrice=73.95}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=187285, closePrice=72.9, timeStamp=java.util.GregorianCalendar[time=1354613277058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=11,WEEK_OF_YEAR=49,WEEK_OF_MONTH=2,DAY_OF_MONTH=4,DAY_OF_YEAR=339,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=72.6, priceId=0, lastClosePrice=72.65, lowPrice=72.2, highPrice=73.8}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=184500, closePrice=73.05, timeStamp=java.util.GregorianCalendar[time=1354699677058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=11,WEEK_OF_YEAR=49,WEEK_OF_MONTH=2,DAY_OF_MONTH=5,DAY_OF_YEAR=340,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=73.3, priceId=0, lastClosePrice=72.9, lowPrice=72.85, highPrice=74.5}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=138160, closePrice=72.75, timeStamp=java.util.GregorianCalendar[time=1354786077058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=11,WEEK_OF_YEAR=49,WEEK_OF_MONTH=2,DAY_OF_MONTH=6,DAY_OF_YEAR=341,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=72.1, priceId=0, lastClosePrice=73.05, lowPrice=72.1, highPrice=74.1}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=168718, closePrice=73.25, timeStamp=java.util.GregorianCalendar[time=1354872477058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=11,WEEK_OF_YEAR=49,WEEK_OF_MONTH=2,DAY_OF_MONTH=7,DAY_OF_YEAR=342,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=72.8, priceId=0, lastClosePrice=72.75, lowPrice=72.75, highPrice=73.9}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=156261, closePrice=73.25, timeStamp=java.util.GregorianCalendar[time=1355131677058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=11,WEEK_OF_YEAR=50,WEEK_OF_MONTH=3,DAY_OF_MONTH=10,DAY_OF_YEAR=345,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=73.5, priceId=0, lastClosePrice=73.25, lowPrice=73.0, highPrice=74.3}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=233463, closePrice=72.5, timeStamp=java.util.GregorianCalendar[time=1355218077058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=11,WEEK_OF_YEAR=50,WEEK_OF_MONTH=3,DAY_OF_MONTH=11,DAY_OF_YEAR=346,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=73.6, priceId=0, lastClosePrice=73.25, lowPrice=72.2, highPrice=74.25}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=90812, closePrice=71.75, timeStamp=java.util.GregorianCalendar[time=1355304477058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=11,WEEK_OF_YEAR=50,WEEK_OF_MONTH=3,DAY_OF_MONTH=12,DAY_OF_YEAR=347,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=73.25, priceId=0, lastClosePrice=72.5, lowPrice=71.5, highPrice=73.35}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=141129, closePrice=70.6, timeStamp=java.util.GregorianCalendar[time=1355390877058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=11,WEEK_OF_YEAR=50,WEEK_OF_MONTH=3,DAY_OF_MONTH=13,DAY_OF_YEAR=348,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=72.1, priceId=0, lastClosePrice=71.75, lowPrice=70.4, highPrice=72.2}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=153931, closePrice=70.45, timeStamp=java.util.GregorianCalendar[time=1355477277058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=11,WEEK_OF_YEAR=50,WEEK_OF_MONTH=3,DAY_OF_MONTH=14,DAY_OF_YEAR=349,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=71.2, priceId=0, lastClosePrice=70.6, lowPrice=70.15, highPrice=71.5}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=338052, closePrice=69.35, timeStamp=java.util.GregorianCalendar[time=1355736477058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=11,WEEK_OF_YEAR=51,WEEK_OF_MONTH=4,DAY_OF_MONTH=17,DAY_OF_YEAR=352,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=70.3, priceId=0, lastClosePrice=70.45, lowPrice=69.05, highPrice=70.85}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=460651, closePrice=70.15, timeStamp=java.util.GregorianCalendar[time=1355822877058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=11,WEEK_OF_YEAR=51,WEEK_OF_MONTH=4,DAY_OF_MONTH=18,DAY_OF_YEAR=353,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=70.0, priceId=0, lastClosePrice=69.35, lowPrice=69.5, highPrice=71.9}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=1294826, closePrice=71.1, timeStamp=java.util.GregorianCalendar[time=1355909277058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=11,WEEK_OF_YEAR=51,WEEK_OF_MONTH=4,DAY_OF_MONTH=19,DAY_OF_YEAR=354,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=70.75, priceId=0, lastClosePrice=70.15, lowPrice=70.3, highPrice=71.95}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=1854847, closePrice=76.8, timeStamp=java.util.GregorianCalendar[time=1355995677058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=11,WEEK_OF_YEAR=51,WEEK_OF_MONTH=4,DAY_OF_MONTH=20,DAY_OF_YEAR=355,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=71.45, priceId=0, lastClosePrice=71.1, lowPrice=71.1, highPrice=77.7}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=5834346, closePrice=84.1, timeStamp=java.util.GregorianCalendar[time=1356082077058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=11,WEEK_OF_YEAR=51,WEEK_OF_MONTH=4,DAY_OF_MONTH=21,DAY_OF_YEAR=356,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=77.0, priceId=0, lastClosePrice=76.8, lowPrice=76.0, highPrice=84.85}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=3304109, closePrice=88.75, timeStamp=java.util.GregorianCalendar[time=1356341277058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=11,WEEK_OF_YEAR=52,WEEK_OF_MONTH=5,DAY_OF_MONTH=24,DAY_OF_YEAR=359,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=85.25, priceId=0, lastClosePrice=84.1, lowPrice=84.4, highPrice=89.75}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=3304109, closePrice=88.75, timeStamp=java.util.GregorianCalendar[time=1356427677058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=11,WEEK_OF_YEAR=52,WEEK_OF_MONTH=5,DAY_OF_MONTH=25,DAY_OF_YEAR=360,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=85.25, priceId=0, lastClosePrice=84.1, lowPrice=84.4, highPrice=89.75}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=5002416, closePrice=91.1, timeStamp=java.util.GregorianCalendar[time=1356514077058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=11,WEEK_OF_YEAR=52,WEEK_OF_MONTH=5,DAY_OF_MONTH=26,DAY_OF_YEAR=361,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=89.65, priceId=0, lastClosePrice=88.75, lowPrice=87.3, highPrice=94.8}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=1816825, closePrice=87.5, timeStamp=java.util.GregorianCalendar[time=1356600477058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=11,WEEK_OF_YEAR=52,WEEK_OF_MONTH=5,DAY_OF_MONTH=27,DAY_OF_YEAR=362,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=91.85, priceId=0, lastClosePrice=91.1, lowPrice=86.1, highPrice=91.9}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=648839, closePrice=87.85, timeStamp=java.util.GregorianCalendar[time=1356686877058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=11,WEEK_OF_YEAR=52,WEEK_OF_MONTH=5,DAY_OF_MONTH=28,DAY_OF_YEAR=363,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=87.75, priceId=0, lastClosePrice=87.5, lowPrice=85.35, highPrice=89.35}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=577467, closePrice=88.3, timeStamp=java.util.GregorianCalendar[time=1356946077058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2012,MONTH=11,WEEK_OF_YEAR=1,WEEK_OF_MONTH=6,DAY_OF_MONTH=31,DAY_OF_YEAR=366,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=88.7, priceId=0, lastClosePrice=87.85, lowPrice=87.75, highPrice=90.2}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=1534056, closePrice=91.6, timeStamp=java.util.GregorianCalendar[time=1357032477058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2013,MONTH=0,WEEK_OF_YEAR=1,WEEK_OF_MONTH=1,DAY_OF_MONTH=1,DAY_OF_YEAR=1,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=88.65, priceId=0, lastClosePrice=88.3, lowPrice=88.2, highPrice=92.8}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=691132, closePrice=89.75, timeStamp=java.util.GregorianCalendar[time=1357118877058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2013,MONTH=0,WEEK_OF_YEAR=1,WEEK_OF_MONTH=1,DAY_OF_MONTH=2,DAY_OF_YEAR=2,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=92.35, priceId=0, lastClosePrice=91.6, lowPrice=88.65, highPrice=92.7}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=994780, closePrice=91.9, timeStamp=java.util.GregorianCalendar[time=1357205277058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2013,MONTH=0,WEEK_OF_YEAR=1,WEEK_OF_MONTH=1,DAY_OF_MONTH=3,DAY_OF_YEAR=3,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=90.1, priceId=0, lastClosePrice=89.75, lowPrice=89.9, highPrice=93.0}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=744937, closePrice=91.2, timeStamp=java.util.GregorianCalendar[time=1357291677058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2013,MONTH=0,WEEK_OF_YEAR=1,WEEK_OF_MONTH=1,DAY_OF_MONTH=4,DAY_OF_YEAR=4,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=91.5, priceId=0, lastClosePrice=91.9, lowPrice=90.35, highPrice=92.4}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=321775, closePrice=90.35, timeStamp=java.util.GregorianCalendar[time=1357550877058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2013,MONTH=0,WEEK_OF_YEAR=2,WEEK_OF_MONTH=2,DAY_OF_MONTH=7,DAY_OF_YEAR=7,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=91.6, priceId=0, lastClosePrice=91.2, lowPrice=89.6, highPrice=92.4}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=1352733, closePrice=91.35, timeStamp=java.util.GregorianCalendar[time=1357637277058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2013,MONTH=0,WEEK_OF_YEAR=2,WEEK_OF_MONTH=2,DAY_OF_MONTH=8,DAY_OF_YEAR=8,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=90.85, priceId=0, lastClosePrice=90.35, lowPrice=90.2, highPrice=94.0}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=259002, closePrice=89.45, timeStamp=java.util.GregorianCalendar[time=1357723677058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2013,MONTH=0,WEEK_OF_YEAR=2,WEEK_OF_MONTH=2,DAY_OF_MONTH=9,DAY_OF_YEAR=9,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=92.2, priceId=0, lastClosePrice=91.35, lowPrice=88.8, highPrice=92.2}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=582971, closePrice=86.2, timeStamp=java.util.GregorianCalendar[time=1357810077058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2013,MONTH=0,WEEK_OF_YEAR=2,WEEK_OF_MONTH=2,DAY_OF_MONTH=10,DAY_OF_YEAR=10,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=89.6, priceId=0, lastClosePrice=89.45, lowPrice=83.6, highPrice=91.5}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=446357, closePrice=82.7, timeStamp=java.util.GregorianCalendar[time=1357896477058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2013,MONTH=0,WEEK_OF_YEAR=2,WEEK_OF_MONTH=2,DAY_OF_MONTH=11,DAY_OF_YEAR=11,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=80.2, priceId=0, lastClosePrice=86.2, lowPrice=80.2, highPrice=85.8}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=280940, closePrice=81.1, timeStamp=java.util.GregorianCalendar[time=1358155677058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2013,MONTH=0,WEEK_OF_YEAR=3,WEEK_OF_MONTH=3,DAY_OF_MONTH=14,DAY_OF_YEAR=14,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=83.4, priceId=0, lastClosePrice=82.7, lowPrice=80.3, highPrice=83.5}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=471457, closePrice=85.15, timeStamp=java.util.GregorianCalendar[time=1358242077058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2013,MONTH=0,WEEK_OF_YEAR=3,WEEK_OF_MONTH=3,DAY_OF_MONTH=15,DAY_OF_YEAR=15,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=81.45, priceId=0, lastClosePrice=81.1, lowPrice=81.4, highPrice=86.2}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=337873, closePrice=83.35, timeStamp=java.util.GregorianCalendar[time=1358328477058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2013,MONTH=0,WEEK_OF_YEAR=3,WEEK_OF_MONTH=3,DAY_OF_MONTH=16,DAY_OF_YEAR=16,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=85.5, priceId=0, lastClosePrice=85.15, lowPrice=83.05, highPrice=86.2}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=182854, closePrice=82.85, timeStamp=java.util.GregorianCalendar[time=1358414877058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2013,MONTH=0,WEEK_OF_YEAR=3,WEEK_OF_MONTH=3,DAY_OF_MONTH=17,DAY_OF_YEAR=17,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=83.8, priceId=0, lastClosePrice=83.35, lowPrice=81.9, highPrice=83.8}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=238787, closePrice=83.75, timeStamp=java.util.GregorianCalendar[time=1358501277058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2013,MONTH=0,WEEK_OF_YEAR=3,WEEK_OF_MONTH=3,DAY_OF_MONTH=18,DAY_OF_YEAR=18,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=82.55, priceId=0, lastClosePrice=82.85, lowPrice=82.55, highPrice=85.2}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=124729, closePrice=82.9, timeStamp=java.util.GregorianCalendar[time=1358760477058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2013,MONTH=0,WEEK_OF_YEAR=4,WEEK_OF_MONTH=4,DAY_OF_MONTH=21,DAY_OF_YEAR=21,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=84.6, priceId=0, lastClosePrice=83.75, lowPrice=82.6, highPrice=84.6}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=114420, closePrice=81.65, timeStamp=java.util.GregorianCalendar[time=1358846877058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2013,MONTH=0,WEEK_OF_YEAR=4,WEEK_OF_MONTH=4,DAY_OF_MONTH=22,DAY_OF_YEAR=22,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=83.0, priceId=0, lastClosePrice=82.9, lowPrice=81.05, highPrice=83.7}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=294040, closePrice=79.35, timeStamp=java.util.GregorianCalendar[time=1358933277058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2013,MONTH=0,WEEK_OF_YEAR=4,WEEK_OF_MONTH=4,DAY_OF_MONTH=23,DAY_OF_YEAR=23,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=86.0, priceId=0, lastClosePrice=81.65, lowPrice=79.0, highPrice=86.0}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=334521, closePrice=75.35, timeStamp=java.util.GregorianCalendar[time=1359019677058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2013,MONTH=0,WEEK_OF_YEAR=4,WEEK_OF_MONTH=4,DAY_OF_MONTH=24,DAY_OF_YEAR=24,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=79.85, priceId=0, lastClosePrice=79.35, lowPrice=74.6, highPrice=79.85}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=236371, closePrice=78.05, timeStamp=java.util.GregorianCalendar[time=1359106077058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2013,MONTH=0,WEEK_OF_YEAR=4,WEEK_OF_MONTH=4,DAY_OF_MONTH=25,DAY_OF_YEAR=25,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=75.5, priceId=0, lastClosePrice=75.35, lowPrice=74.65, highPrice=79.45}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=121731, closePrice=76.8, timeStamp=java.util.GregorianCalendar[time=1359365277058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2013,MONTH=0,WEEK_OF_YEAR=5,WEEK_OF_MONTH=5,DAY_OF_MONTH=28,DAY_OF_YEAR=28,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=4,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=78.65, priceId=0, lastClosePrice=78.05, lowPrice=76.1, highPrice=79.65}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=156175, closePrice=77.7, timeStamp=java.util.GregorianCalendar[time=1359451677058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2013,MONTH=0,WEEK_OF_YEAR=5,WEEK_OF_MONTH=5,DAY_OF_MONTH=29,DAY_OF_YEAR=29,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=76.9, priceId=0, lastClosePrice=76.8, lowPrice=74.55, highPrice=78.8}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=107237, closePrice=76.25, timeStamp=java.util.GregorianCalendar[time=1359538077058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2013,MONTH=0,WEEK_OF_YEAR=5,WEEK_OF_MONTH=5,DAY_OF_MONTH=30,DAY_OF_YEAR=30,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=78.05, priceId=0, lastClosePrice=77.7, lowPrice=76.0, highPrice=79.0}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=190331, closePrice=77.0, timeStamp=java.util.GregorianCalendar[time=1359624477058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2013,MONTH=0,WEEK_OF_YEAR=5,WEEK_OF_MONTH=5,DAY_OF_MONTH=31,DAY_OF_YEAR=31,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=5,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=77.0, priceId=0, lastClosePrice=76.25, lowPrice=74.8, highPrice=77.9}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=108033, closePrice=76.1, timeStamp=java.util.GregorianCalendar[time=1359710877058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2013,MONTH=1,WEEK_OF_YEAR=5,WEEK_OF_MONTH=1,DAY_OF_MONTH=1,DAY_OF_YEAR=32,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=76.9, priceId=0, lastClosePrice=77.0, lowPrice=75.2, highPrice=77.6}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=68748, closePrice=74.7, timeStamp=java.util.GregorianCalendar[time=1359970077058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2013,MONTH=1,WEEK_OF_YEAR=6,WEEK_OF_MONTH=2,DAY_OF_MONTH=4,DAY_OF_YEAR=35,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=77.6, priceId=0, lastClosePrice=76.1, lowPrice=74.0, highPrice=77.6}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=93513, closePrice=73.85, timeStamp=java.util.GregorianCalendar[time=1360056477058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2013,MONTH=1,WEEK_OF_YEAR=6,WEEK_OF_MONTH=2,DAY_OF_MONTH=5,DAY_OF_YEAR=36,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=74.15, priceId=0, lastClosePrice=74.7, lowPrice=72.5, highPrice=75.0}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=96322, closePrice=74.55, timeStamp=java.util.GregorianCalendar[time=1360142877058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2013,MONTH=1,WEEK_OF_YEAR=6,WEEK_OF_MONTH=2,DAY_OF_MONTH=6,DAY_OF_YEAR=37,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=74.4, priceId=0, lastClosePrice=73.85, lowPrice=73.85, highPrice=75.9}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=96298, closePrice=73.5, timeStamp=java.util.GregorianCalendar[time=1360229277058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2013,MONTH=1,WEEK_OF_YEAR=6,WEEK_OF_MONTH=2,DAY_OF_MONTH=7,DAY_OF_YEAR=38,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=1,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=74.6, priceId=0, lastClosePrice=74.55, lowPrice=73.1, highPrice=75.25}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=96964, closePrice=72.85, timeStamp=java.util.GregorianCalendar[time=1360315677058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2013,MONTH=1,WEEK_OF_YEAR=6,WEEK_OF_MONTH=2,DAY_OF_MONTH=8,DAY_OF_YEAR=39,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=74.8, priceId=0, lastClosePrice=73.5, lowPrice=71.85, highPrice=74.8}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=127271, closePrice=73.7, timeStamp=java.util.GregorianCalendar[time=1360574877058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2013,MONTH=1,WEEK_OF_YEAR=7,WEEK_OF_MONTH=3,DAY_OF_MONTH=11,DAY_OF_YEAR=42,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=72.8, priceId=0, lastClosePrice=72.85, lowPrice=72.0, highPrice=74.3}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=66512, closePrice=73.85, timeStamp=java.util.GregorianCalendar[time=1360661277058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2013,MONTH=1,WEEK_OF_YEAR=7,WEEK_OF_MONTH=3,DAY_OF_MONTH=12,DAY_OF_YEAR=43,DAY_OF_WEEK=3,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=74.1, priceId=0, lastClosePrice=73.7, lowPrice=73.05, highPrice=74.75}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=90153, closePrice=73.6, timeStamp=java.util.GregorianCalendar[time=1360747677058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2013,MONTH=1,WEEK_OF_YEAR=7,WEEK_OF_MONTH=3,DAY_OF_MONTH=13,DAY_OF_YEAR=44,DAY_OF_WEEK=4,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=74.0, priceId=0, lastClosePrice=73.85, lowPrice=73.35, highPrice=75.7}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=67478, closePrice=71.45, timeStamp=java.util.GregorianCalendar[time=1360834077058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2013,MONTH=1,WEEK_OF_YEAR=7,WEEK_OF_MONTH=3,DAY_OF_MONTH=14,DAY_OF_YEAR=45,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=73.8, priceId=0, lastClosePrice=73.6, lowPrice=70.85, highPrice=73.8}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=277602, closePrice=70.55, timeStamp=java.util.GregorianCalendar[time=1360920477058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2013,MONTH=1,WEEK_OF_YEAR=7,WEEK_OF_MONTH=3,DAY_OF_MONTH=15,DAY_OF_YEAR=46,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=71.4, priceId=0, lastClosePrice=71.45, lowPrice=69.8, highPrice=71.95}, component[closePrice,highPrice,lastClosePrice,lowPrice,openPrice,priceId,timeStamp,totalTradedQuantity]{totalTradedQuantity=320950, closePrice=72.8, timeStamp=java.util.GregorianCalendar[time=1361179677058,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Asia/Calcutta",offset=19800000,dstSavings=0,useDaylight=false,transitions=6,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2013,MONTH=1,WEEK_OF_YEAR=8,WEEK_OF_MONTH=4,DAY_OF_MONTH=18,DAY_OF_YEAR=49,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=3,AM_PM=1,HOUR=2,HOUR_OF_DAY=14,MINUTE=57,SECOND=57,MILLISECOND=58,ZONE_OFFSET=19800000,DST_OFFSET=0], openPrice=71.0, priceId=0, lastClosePrice=70.55, lowPrice=70.5, highPrice=75.9}], symbolName=AMTEKAUTO}
insert into TRADER_DB.INSTRUMENT (SYMBOL_NAME) values (?)
Inserting collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
Done inserting collection: 480 rows inserted
committed JDBC Connection
re-enabling autocommit
Written [SUCCESS] as "text/html" using [org.springframework.http.converter.StringHttpMessageConverter@2792412e]
Null ModelAndView returned to DispatcherServlet with name 'appServlet': assuming HandlerAdapter completed request handling
Successfully completed request
DispatcherServlet with name 'appServlet' processing GET request for [/instrument/load/AMTEKAUTO]
Matching patterns for request [/instrument/load/AMTEKAUTO] are [/instrument/load/{symbol}]
URI Template variables for request [/instrument/load/AMTEKAUTO] are {symbol=AMTEKAUTO}
Mapping [/instrument/load/AMTEKAUTO] to HandlerExecutionChain with handler [com.inteltrader.rest.InstrumentServiceRest@71c219ef] and 2 interceptors
Last-Modified value for [/instrument/load/AMTEKAUTO] is: -1
Invoking request handler method: public org.springframework.http.ResponseEntity com.inteltrader.rest.InstrumentServiceRest.loadInstrument(java.lang.String,javax.servlet.http.HttpServletRequest)
Loading entity: [com.inteltrader.entity.Instrument#AMTEKAUTO]
Obtaining JDBC connection
Opening new JDBC connection
Created connection to: jdbc:mysql://localhost:3306/TRADER_DB, Isolation Level: 4
Obtained JDBC connection
select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Result set row: 0
Result row: EntityKey[com.inteltrader.entity.Instrument#AMTEKAUTO]
Resolving associations for [com.inteltrader.entity.Instrument#AMTEKAUTO]
Done materializing entity [com.inteltrader.entity.Instrument#AMTEKAUTO]
Done entity load
Loading collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
select pricelist0_.SYMBOL_NAME as SYMBOL1_0_0_, pricelist0_.closePrice as closePrice1_0_, pricelist0_.highPrice as highPrice1_0_, pricelist0_.lastClosePrice as lastClos4_1_0_, pricelist0_.lowPrice as lowPrice1_0_, pricelist0_.openPrice as openPrice1_0_, pricelist0_.priceId as priceId1_0_, pricelist0_.timeStamp as timeStamp1_0_, pricelist0_.totalTradedQuantity as totalTra9_1_0_ from TRADER_DB.INSTRUMENT_PRICE pricelist0_ where pricelist0_.SYMBOL_NAME=?
Result set contains (possibly empty) collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 0
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 1
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 2
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 3
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 4
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 5
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 6
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 7
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 8
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 9
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 10
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 11
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 12
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 13
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 14
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 15
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 16
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 17
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 18
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 19
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 20
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 21
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 22
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 23
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 24
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 25
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 26
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 27
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 28
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 29
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 30
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 31
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 32
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 33
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 34
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 35
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 36
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 37
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 38
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 39
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 40
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 41
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 42
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 43
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 44
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 45
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 46
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 47
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 48
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 49
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 50
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 51
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 52
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 53
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 54
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 55
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 56
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 57
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 58
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 59
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 60
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 61
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 62
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 63
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 64
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 65
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 66
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 67
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 68
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 69
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 70
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 71
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 72
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 73
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 74
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 75
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 76
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 77
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 78
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 79
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 80
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 81
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 82
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 83
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 84
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 85
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 86
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 87
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 88
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 89
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 90
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 91
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 92
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 93
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 94
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 95
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 96
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 97
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 98
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 99
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 100
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 101
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 102
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 103
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 104
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 105
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 106
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 107
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 108
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 109
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 110
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 111
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 112
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 113
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 114
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 115
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 116
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 117
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 118
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 119
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 120
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 121
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 122
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 123
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 124
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 125
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 126
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 127
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 128
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 129
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 130
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 131
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 132
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 133
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 134
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 135
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 136
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 137
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 138
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 139
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 140
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 141
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 142
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 143
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 144
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 145
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 146
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 147
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 148
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 149
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 150
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 151
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 152
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 153
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 154
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 155
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 156
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 157
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 158
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 159
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 160
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 161
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 162
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 163
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 164
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 165
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 166
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 167
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 168
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 169
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 170
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 171
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 172
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 173
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 174
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 175
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 176
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 177
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 178
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 179
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 180
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 181
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 182
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 183
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 184
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 185
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 186
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 187
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 188
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 189
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 190
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 191
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 192
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 193
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 194
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 195
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 196
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 197
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 198
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 199
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 200
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 201
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 202
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 203
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 204
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 205
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 206
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 207
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 208
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 209
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 210
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 211
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 212
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 213
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 214
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 215
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 216
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 217
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 218
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 219
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 220
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 221
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 222
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 223
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 224
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 225
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 226
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 227
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 228
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 229
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 230
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 231
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 232
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 233
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 234
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 235
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 236
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 237
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 238
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 239
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 240
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 241
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 242
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 243
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 244
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 245
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 246
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 247
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 248
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 249
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 250
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 251
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 252
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 253
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 254
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 255
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 256
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 257
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 258
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 259
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 260
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 261
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 262
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 263
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 264
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 265
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 266
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 267
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 268
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 269
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 270
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 271
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 272
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 273
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 274
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 275
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 276
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 277
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 278
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 279
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 280
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 281
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 282
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 283
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 284
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 285
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 286
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 287
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 288
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 289
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 290
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 291
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 292
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 293
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 294
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 295
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 296
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 297
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 298
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 299
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 300
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 301
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 302
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 303
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 304
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 305
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 306
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 307
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 308
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 309
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 310
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 311
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 312
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 313
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 314
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 315
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 316
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 317
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 318
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 319
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 320
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 321
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 322
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 323
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 324
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 325
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 326
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 327
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 328
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 329
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 330
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 331
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 332
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 333
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 334
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 335
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 336
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 337
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 338
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 339
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 340
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 341
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 342
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 343
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 344
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 345
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 346
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 347
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 348
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 349
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 350
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 351
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 352
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 353
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 354
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 355
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 356
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 357
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 358
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 359
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 360
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 361
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 362
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 363
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 364
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 365
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 366
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 367
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 368
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 369
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 370
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 371
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 372
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 373
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 374
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 375
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 376
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 377
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 378
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 379
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 380
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 381
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 382
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 383
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 384
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 385
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 386
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 387
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 388
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 389
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 390
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 391
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 392
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 393
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 394
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 395
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 396
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 397
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 398
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 399
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 400
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 401
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 402
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 403
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 404
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 405
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 406
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 407
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 408
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 409
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 410
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 411
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 412
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 413
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 414
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 415
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 416
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 417
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 418
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 419
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 420
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 421
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 422
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 423
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 424
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 425
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 426
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 427
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 428
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 429
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 430
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 431
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 432
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 433
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 434
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 435
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 436
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 437
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 438
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 439
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 440
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 441
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 442
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 443
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 444
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 445
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 446
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 447
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 448
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 449
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 450
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 451
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 452
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 453
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 454
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 455
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 456
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 457
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 458
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 459
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 460
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 461
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 462
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 463
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 464
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 465
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 466
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 467
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 468
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 469
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 470
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 471
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 472
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 473
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 474
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 475
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 476
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 477
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 478
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
Result set row: 479
Result row: 
Found row of collection: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
1 collections were found in result set for role: com.inteltrader.entity.Instrument.priceList
Collection fully initialized: [com.inteltrader.entity.Instrument.priceList#AMTEKAUTO]
1 collections initialized for role: com.inteltrader.entity.Instrument.priceList
Done loading collection
Written [{"symbolName":"AMTEKAUTO","priceList":[{"priceId":0,"timeStamp":{"year":2011,"month":3,"dayOfMonth":19,"hourOfDay":14,"minute":57,"second":57},"closePrice":164.5,"openPrice":162.1,"lowPrice":162.1,"highPrice":165.5,"lastClosePrice":164.2,"totalTradedQuantity":246834},{"priceId":0,"timeStamp":{"year":2011,"month":3,"dayOfMonth":20,"hourOfDay":14,"minute":57,"second":57},"closePrice":169.0,"openPrice":164.8,"lowPrice":164.8,"highPrice":170.0,"lastClosePrice":164.5,"totalTradedQuantity":476676},{"priceId":0,"timeStamp":{"year":2011,"month":3,"dayOfMonth":21,"hourOfDay":14,"minute":57,"second":57},"closePrice":170.05,"openPrice":168.45,"lowPrice":167.7,"highPrice":171.2,"lastClosePrice":169.0,"totalTradedQuantity":301969},{"priceId":0,"timeStamp":{"year":2011,"month":3,"dayOfMonth":22,"hourOfDay":14,"minute":57,"second":57},"closePrice":170.05,"openPrice":168.45,"lowPrice":167.7,"highPrice":171.2,"lastClosePrice":169.0,"totalTradedQuantity":301969},{"priceId":0,"timeStamp":{"year":2011,"month":3,"dayOfMonth":25,"hourOfDay":14,"minute":57,"second":57},"closePrice":170.05,"openPrice":169.0,"lowPrice":166.5,"highPrice":171.9,"lastClosePrice":170.05,"totalTradedQuantity":281163},{"priceId":0,"timeStamp":{"year":2011,"month":3,"dayOfMonth":26,"hourOfDay":14,"minute":57,"second":57},"closePrice":171.25,"openPrice":168.15,"lowPrice":168.15,"highPrice":172.3,"lastClosePrice":170.05,"totalTradedQuantity":182989},{"priceId":0,"timeStamp":{"year":2011,"month":3,"dayOfMonth":27,"hourOfDay":14,"minute":57,"second":57},"closePrice":171.2,"openPrice":171.35,"lowPrice":169.0,"highPrice":172.45,"lastClosePrice":171.25,"totalTradedQuantity":397102},{"priceId":0,"timeStamp":{"year":2011,"month":3,"dayOfMonth":28,"hourOfDay":14,"minute":57,"second":57},"closePrice":168.5,"openPrice":170.0,"lowPrice":167.2,"highPrice":172.05,"lastClosePrice":171.2,"totalTradedQuantity":530228},{"priceId":0,"timeStamp":{"year":2011,"month":3,"dayOfMonth":29,"hourOfDay":14,"minute":57,"second":57},"closePrice":163.4,"openPrice":169.5,"lowPrice":158.55,"highPrice":169.95,"lastClosePrice":168.5,"totalTradedQuantity":182424},{"priceId":0,"timeStamp":{"year":2011,"month":4,"dayOfMonth":2,"hourOfDay":14,"minute":57,"second":57},"closePrice":164.1,"openPrice":165.0,"lowPrice":160.1,"highPrice":165.75,"lastClosePrice":163.4,"totalTradedQuantity":254689},{"priceId":0,"timeStamp":{"year":2011,"month":4,"dayOfMonth":3,"hourOfDay":14,"minute":57,"second":57},"closePrice":157.25,"openPrice":161.55,"lowPrice":155.1,"highPrice":164.95,"lastClosePrice":164.1,"totalTradedQuantity":151395},{"priceId":0,"timeStamp":{"year":2011,"month":4,"dayOfMonth":4,"hourOfDay":14,"minute":57,"second":57},"closePrice":154.25,"openPrice":157.9,"lowPrice":151.8,"highPrice":158.05,"lastClosePrice":157.25,"totalTradedQuantity":409255},{"priceId":0,"timeStamp":{"year":2011,"month":4,"dayOfMonth":5,"hourOfDay":14,"minute":57,"second":57},"closePrice":152.85,"openPrice":152.0,"lowPrice":149.1,"highPrice":154.9,"lastClosePrice":154.25,"totalTradedQuantity":297578},{"priceId":0,"timeStamp":{"year":2011,"month":4,"dayOfMonth":6,"hourOfDay":14,"minute":57,"second":57},"closePrice":150.4,"openPrice":151.9,"lowPrice":147.1,"highPrice":152.0,"lastClosePrice":152.85,"totalTradedQuantity":488116},{"priceId":0,"timeStamp":{"year":2011,"month":4,"dayOfMonth":9,"hourOfDay":14,"minute":57,"second":57},"closePrice":144.7,"openPrice":150.05,"lowPrice":140.8,"highPrice":151.8,"lastClosePrice":150.4,"totalTradedQuantity":429181},{"priceId":0,"timeStamp":{"year":2011,"month":4,"dayOfMonth":10,"hourOfDay":14,"minute":57,"second":57},"closePrice":147.75,"openPrice":146.05,"lowPrice":144.5,"highPrice":149.85,"lastClosePrice":144.7,"totalTradedQuantity":1389208},{"priceId":0,"timeStamp":{"year":2011,"month":4,"dayOfMonth":11,"hourOfDay":14,"minute":57,"second":57},"closePrice":152.25,"openPrice":148.3,"lowPrice":147.5,"highPrice":152.95,"lastClosePrice":147.75,"totalTradedQuantity":84527},{"priceId":0,"timeStamp":{"year":2011,"month":4,"dayOfMonth":12,"hourOfDay":14,"minute":57,"second":57},"closePrice":155.95,"openPrice":152.3,"lowPrice":152.0,"highPrice":157.85,"lastClosePrice":152.25,"totalTradedQuantity":552691},{"priceId":0,"timeStamp":{"year":2011,"month":4,"dayOfMonth":13,"hourOfDay":14,"minute":57,"second":57},"closePrice":160.7,"openPrice":156.0,"lowPrice":153.85,"highPrice":164.0,"lastClosePrice":155.95,"totalTradedQuantity":526822},{"priceId":0,"timeStamp":{"year":2011,"month":4,"dayOfMonth":16,"hourOfDay":14,"minute":57,"second":57},"closePrice":157.55,"openPrice":160.0,"lowPrice":155.45,"highPrice":161.95,"lastClosePrice":160.7,"totalTradedQuantity":200963},{"priceId":0,"timeStamp":{"year":2011,"month":4,"dayOfMonth":17,"hourOfDay":14,"minute":57,"second":57},"closePrice":159.75,"openPrice":158.0,"lowPrice":157.7,"highPrice":162.0,"lastClosePrice":157.55,"totalTradedQuantity":105304},{"priceId":0,"timeStamp":{"year":2011,"month":4,"dayOfMonth":18,"hourOfDay":14,"minute":57,"second":57},"closePrice":163.45,"openPrice":159.05,"lowPrice":159.05,"highPrice":164.25,"lastClosePrice":159.75,"totalTradedQuantity":152874},{"priceId":0,"timeStamp":{"year":2011,"month":4,"dayOfMonth":19,"hourOfDay":14,"minute":57,"second":57},"closePrice":165.5,"openPrice":163.5,"lowPrice":163.0,"highPrice":166.6,"lastClosePrice":163.45,"totalTradedQuantity":145327},{"priceId":0,"timeStamp":{"year":2011,"month":4,"dayOfMonth":20,"hourOfDay":14,"minute":57,"second":57},"closePrice":165.55,"openPrice":166.65,"lowPrice":163.2,"highPrice":168.0,"lastClosePrice":165.5,"totalTradedQuantity":193349},{"priceId":0,"timeStamp":{"year":2011,"month":4,"dayOfMonth":23,"hourOfDay":14,"minute":57,"second":57},"closePrice":164.3,"openPrice":160.0,"lowPrice":156.95,"highPrice":165.05,"lastClosePrice":165.55,"totalTradedQuantity":78862},{"priceId":0,"timeStamp":{"year":2011,"month":4,"dayOfMonth":24,"hourOfDay":14,"minute":57,"second":57},"closePrice":164.6,"openPrice":163.95,"lowPrice":161.3,"highPrice":165.1,"lastClosePrice":164.3,"totalTradedQuantity":203525},{"priceId":0,"timeStamp":{"year":2011,"month":4,"dayOfMonth":25,"hourOfDay":14,"minute":57,"second":57},"closePrice":163.95,"openPrice":163.75,"lowPrice":162.4,"highPrice":165.5,"lastClosePrice":164.6,"totalTradedQuantity":1140161},{"priceId":0,"timeStamp":{"year":2011,"month":4,"dayOfMonth":26,"hourOfDay":14,"minute":57,"second":57},"closePrice":164.85,"openPrice":165.9,"lowPrice":163.15,"highPrice":166.0,"lastClosePrice":163.95,"totalTradedQuantity":452488},{"priceId":0,"timeStamp":{"year":2011,"month":4,"dayOfMonth":27,"hourOfDay":14,"minute":57,"second":57},"closePrice":168.2,"openPrice":162.7,"lowPrice":162.7,"highPrice":169.85,"lastClosePrice":164.85,"totalTradedQuantity":212247},{"priceId":0,"timeStamp":{"year":2011,"month":4,"dayOfMonth":30,"hourOfDay":14,"minute":57,"second":57},"closePrice":170.0,"openPrice":169.8,"lowPrice":167.55,"highPrice":170.5,"lastClosePrice":168.2,"totalTradedQuantity":151252},{"priceId":0,"timeStamp":{"year":2011,"month":4,"dayOfMonth":31,"hourOfDay":14,"minute":57,"second":57},"closePrice":171.8,"openPrice":171.25,"lowPrice":169.15,"highPrice":172.5,"lastClosePrice":170.0,"totalTradedQuantity":282423},{"priceId":0,"timeStamp":{"year":2011,"month":5,"dayOfMonth":1,"hourOfDay":14,"minute":57,"second":57},"closePrice":170.95,"openPrice":171.0,"lowPrice":169.5,"highPrice":171.9,"lastClosePrice":171.8,"totalTradedQuantity":172752},{"priceId":0,"timeStamp":{"year":2011,"month":5,"dayOfMonth":2,"hourOfDay":14,"minute":57,"second":57},"closePrice":169.2,"openPrice":168.0,"lowPrice":167.15,"highPrice":170.0,"lastClosePrice":170.95,"totalTradedQuantity":226676},{"priceId":0,"timeStamp":{"year":2011,"month":5,"dayOfMonth":3,"hourOfDay":14,"minute":57,"second":57},"closePrice":170.3,"openPrice":171.0,"lowPrice":168.7,"highPrice":172.4,"lastClosePrice":169.2,"totalTradedQuantity":226224},{"priceId":0,"timeStamp":{"year":2011,"month":5,"dayOfMonth":6,"hourOfDay":14,"minute":57,"second":57},"closePrice":169.75,"openPrice":170.45,"lowPrice":168.1,"highPrice":170.45,"lastClosePrice":170.3,"totalTradedQuantity":166818},{"priceId":0,"timeStamp":{"year":2011,"month":5,"dayOfMonth":7,"hourOfDay":14,"minute":57,"second":57},"closePrice":172.2,"openPrice":167.25,"lowPrice":167.25,"highPrice":172.9,"lastClosePrice":169.75,"totalTradedQuantity":403552},{"priceId":0,"timeStamp":{"year":2011,"month":5,"dayOfMonth":8,"hourOfDay":14,"minute":57,"second":57},"closePrice":172.25,"openPrice":173.0,"lowPrice":170.75,"highPrice":174.4,"lastClosePrice":172.2,"totalTradedQuantity":210735},{"priceId":0,"timeStamp":{"year":2011,"month":5,"dayOfMonth":9,"hourOfDay":14,"minute":57,"second":57},"closePrice":171.1,"openPrice":173.45,"lowPrice":170.35,"highPrice":173.45,"lastClosePrice":172.25,"totalTradedQuantity":31495},{"priceId":0,"timeStamp":{"year":2011,"month":5,"dayOfMonth":10,"hourOfDay":14,"minute":57,"second":57},"closePrice":170.25,"openPrice":171.1,"lowPrice":169.0,"highPrice":171.9,"lastClosePrice":171.1,"totalTradedQuantity":98657},{"priceId":0,"timeStamp":{"year":2011,"month":5,"dayOfMonth":13,"hourOfDay":14,"minute":57,"second":57},"closePrice":169.85,"openPrice":165.35,"lowPrice":165.35,"highPrice":170.25,"lastClosePrice":170.25,"totalTradedQuantity":48549},{"priceId":0,"timeStamp":{"year":2011,"month":5,"dayOfMonth":14,"hourOfDay":14,"minute":57,"second":57},"closePrice":169.1,"openPrice":171.95,"lowPrice":168.2,"highPrice":171.95,"lastClosePrice":169.85,"totalTradedQuantity":78114},{"priceId":0,"timeStamp":{"year":2011,"month":5,"dayOfMonth":15,"hourOfDay":14,"minute":57,"second":57},"closePrice":168.8,"openPrice":170.95,"lowPrice":166.85,"highPrice":171.8,"lastClosePrice":169.1,"totalTradedQuantity":57993},{"priceId":0,"timeStamp":{"year":2011,"month":5,"dayOfMonth":16,"hourOfDay":14,"minute":57,"second":57},"closePrice":168.85,"openPrice":167.25,"lowPrice":160.0,"highPrice":169.5,"lastClosePrice":168.8,"totalTradedQuantity":151754},{"priceId":0,"timeStamp":{"year":2011,"month":5,"dayOfMonth":17,"hourOfDay":14,"minute":57,"second":57},"closePrice":168.5,"openPrice":170.7,"lowPrice":166.1,"highPrice":172.05,"lastClosePrice":168.85,"totalTradedQuantity":405033},{"priceId":0,"timeStamp":{"year":2011,"month":5,"dayOfMonth":20,"hourOfDay":14,"minute":57,"second":57},"closePrice":163.7,"openPrice":169.7,"lowPrice":159.55,"highPrice":169.7,"lastClosePrice":168.5,"totalTradedQuantity":196188},{"priceId":0,"timeStamp":{"year":2011,"month":5,"dayOfMonth":21,"hourOfDay":14,"minute":57,"second":57},"closePrice":161.65,"openPrice":162.0,"lowPrice":160.1,"highPrice":163.65,"lastClosePrice":163.7,"totalTradedQuantity":124382},{"priceId":0,"timeStamp":{"year":2011,"month":5,"dayOfMonth":22,"hourOfDay":14,"minute":57,"second":57},"closePrice":158.65,"openPrice":163.45,"lowPrice":157.8,"highPrice":163.45,"lastClosePrice":161.65,"totalTradedQuantity":247509},{"priceId":0,"timeStamp":{"year":2011,"month":5,"dayOfMonth":23,"hourOfDay":14,"minute":57,"second":57},"closePrice":159.65,"openPrice":157.2,"lowPrice":155.35,"highPrice":160.5,"lastClosePrice":158.65,"totalTradedQuantity":356133},{"priceId":0,"timeStamp":{"year":2011,"month":5,"dayOfMonth":24,"hourOfDay":14,"minute":57,"second":57},"closePrice":161.0,"openPrice":160.0,"lowPrice":158.55,"highPrice":162.4,"lastClosePrice":159.65,"totalTradedQuantity":255410},{"priceId":0,"timeStamp":{"year":2011,"month":5,"dayOfMonth":27,"hourOfDay":14,"minute":57,"second":57},"closePrice":160.35,"openPrice":161.4,"lowPrice":158.25,"highPrice":162.8,"lastClosePrice":161.0,"totalTradedQuantity":567573},{"priceId":0,"timeStamp":{"year":2011,"month":5,"dayOfMonth":28,"hourOfDay":14,"minute":57,"second":57},"closePrice":161.3,"openPrice":161.7,"lowPrice":157.7,"highPrice":166.0,"lastClosePrice":160.35,"totalTradedQuantity":480167},{"priceId":0,"timeStamp":{"year":2011,"month":5,"dayOfMonth":29,"hourOfDay":14,"minute":57,"second":57},"closePrice":161.45,"openPrice":164.0,"lowPrice":160.7,"highPrice":164.0,"lastClosePrice":161.3,"totalTradedQuantity":252901},{"priceId":0,"timeStamp":{"year":2011,"month":5,"dayOfMonth":30,"hourOfDay":14,"minute":57,"second":57},"closePrice":162.5,"openPrice":161.1,"lowPrice":159.7,"highPrice":163.0,"lastClosePrice":161.45,"totalTradedQuantity":224066},{"priceId":0,"timeStamp":{"year":2011,"month":6,"dayOfMonth":1,"hourOfDay":14,"minute":57,"second":57},"closePrice":162.1,"openPrice":163.9,"lowPrice":160.25,"highPrice":163.9,"lastClosePrice":162.5,"totalTradedQuantity":163336},{"priceId":0,"timeStamp":{"year":2011,"month":6,"dayOfMonth":4,"hourOfDay":14,"minute":57,"second":57},"closePrice":161.2,"openPrice":164.75,"lowPrice":160.3,"highPrice":164.75,"lastClosePrice":162.1,"totalTradedQuantity":151360},{"priceId":0,"timeStamp":{"year":2011,"month":6,"dayOfMonth":5,"hourOfDay":14,"minute":57,"second":57},"closePrice":161.45,"openPrice":162.8,"lowPrice":160.85,"highPrice":163.5,"lastClosePrice":161.2,"totalTradedQuantity":147972},{"priceId":0,"timeStamp":{"year":2011,"month":6,"dayOfMonth":6,"hourOfDay":14,"minute":57,"second":57},"closePrice":163.15,"openPrice":162.85,"lowPrice":161.7,"highPrice":163.95,"lastClosePrice":161.45,"totalTradedQuantity":136754},{"priceId":0,"timeStamp":{"year":2011,"month":6,"dayOfMonth":7,"hourOfDay":14,"minute":57,"second":57},"closePrice":164.45,"openPrice":164.85,"lowPrice":162.65,"highPrice":165.35,"lastClosePrice":163.15,"totalTradedQuantity":83654},{"priceId":0,"timeStamp":{"year":2011,"month":6,"dayOfMonth":8,"hourOfDay":14,"minute":57,"second":57},"closePrice":165.65,"openPrice":163.1,"lowPrice":163.1,"highPrice":167.0,"lastClosePrice":164.45,"totalTradedQuantity":249942},{"priceId":0,"timeStamp":{"year":2011,"month":6,"dayOfMonth":11,"hourOfDay":14,"minute":57,"second":57},"closePrice":168.05,"openPrice":164.5,"lowPrice":164.5,"highPrice":169.0,"lastClosePrice":165.65,"totalTradedQuantity":169920},{"priceId":0,"timeStamp":{"year":2011,"month":6,"dayOfMonth":12,"hourOfDay":14,"minute":57,"second":57},"closePrice":161.9,"openPrice":170.0,"lowPrice":160.5,"highPrice":170.0,"lastClosePrice":168.05,"totalTradedQuantity":231782},{"priceId":0,"timeStamp":{"year":2011,"month":6,"dayOfMonth":13,"hourOfDay":14,"minute":57,"second":57},"closePrice":162.2,"openPrice":164.7,"lowPrice":161.1,"highPrice":164.7,"lastClosePrice":161.9,"totalTradedQuantity":241024},{"priceId":0,"timeStamp":{"year":2011,"month":6,"dayOfMonth":14,"hourOfDay":14,"minute":57,"second":57},"closePrice":161.4,"openPrice":162.45,"lowPrice":160.1,"highPrice":165.4,"lastClosePrice":162.2,"totalTradedQuantity":251653},{"priceId":0,"timeStamp":{"year":2011,"month":6,"dayOfMonth":15,"hourOfDay":14,"minute":57,"second":57},"closePrice":158.65,"openPrice":161.7,"lowPrice":157.0,"highPrice":162.65,"lastClosePrice":161.4,"totalTradedQuantity":355796},{"priceId":0,"timeStamp":{"year":2011,"month":6,"dayOfMonth":18,"hourOfDay":14,"minute":57,"second":57},"closePrice":154.1,"openPrice":160.0,"lowPrice":153.1,"highPrice":160.0,"lastClosePrice":158.65,"totalTradedQuantity":161633},{"priceId":0,"timeStamp":{"year":2011,"month":6,"dayOfMonth":19,"hourOfDay":14,"minute":57,"second":57},"closePrice":155.3,"openPrice":155.85,"lowPrice":152.6,"highPrice":155.9,"lastClosePrice":154.1,"totalTradedQuantity":85594},{"priceId":0,"timeStamp":{"year":2011,"month":6,"dayOfMonth":20,"hourOfDay":14,"minute":57,"second":57},"closePrice":147.45,"openPrice":156.75,"lowPrice":143.2,"highPrice":156.75,"lastClosePrice":155.3,"totalTradedQuantity":399650},{"priceId":0,"timeStamp":{"year":2011,"month":6,"dayOfMonth":21,"hourOfDay":14,"minute":57,"second":57},"closePrice":154.7,"openPrice":151.9,"lowPrice":147.45,"highPrice":158.7,"lastClosePrice":147.45,"totalTradedQuantity":1919582},{"priceId":0,"timeStamp":{"year":2011,"month":6,"dayOfMonth":22,"hourOfDay":14,"minute":57,"second":57},"closePrice":157.05,"openPrice":157.0,"lowPrice":154.25,"highPrice":161.3,"lastClosePrice":154.7,"totalTradedQuantity":1891963},{"priceId":0,"timeStamp":{"year":2011,"month":6,"dayOfMonth":25,"hourOfDay":14,"minute":57,"second":57},"closePrice":159.4,"openPrice":157.0,"lowPrice":156.5,"highPrice":162.85,"lastClosePrice":157.05,"totalTradedQuantity":215583},{"priceId":0,"timeStamp":{"year":2011,"month":6,"dayOfMonth":26,"hourOfDay":14,"minute":57,"second":57},"closePrice":158.1,"openPrice":160.0,"lowPrice":154.9,"highPrice":161.25,"lastClosePrice":159.4,"totalTradedQuantity":538519},{"priceId":0,"timeStamp":{"year":2011,"month":6,"dayOfMonth":27,"hourOfDay":14,"minute":57,"second":57},"closePrice":160.6,"openPrice":159.7,"lowPrice":158.0,"highPrice":161.5,"lastClosePrice":158.1,"totalTradedQuantity":884587},{"priceId":0,"timeStamp":{"year":2011,"month":6,"dayOfMonth":28,"hourOfDay":14,"minute":57,"second":57},"closePrice":158.75,"openPrice":160.0,"lowPrice":155.3,"highPrice":160.95,"lastClosePrice":160.6,"totalTradedQuantity":302386},{"priceId":0,"timeStamp":{"year":2011,"month":6,"dayOfMonth":29,"hourOfDay":14,"minute":57,"second":57},"closePrice":159.4,"openPrice":158.85,"lowPrice":155.8,"highPrice":161.85,"lastClosePrice":158.75,"totalTradedQuantity":554203},{"priceId":0,"timeStamp":{"year":2011,"month":7,"dayOfMonth":1,"hourOfDay":14,"minute":57,"second":57},"closePrice":159.8,"openPrice":159.0,"lowPrice":156.65,"highPrice":161.3,"lastClosePrice":159.4,"totalTradedQuantity":573302},{"priceId":0,"timeStamp":{"year":2011,"month":7,"dayOfMonth":2,"hourOfDay":14,"minute":57,"second":57},"closePrice":159.95,"openPrice":158.6,"lowPrice":158.55,"highPrice":163.5,"lastClosePrice":159.8,"totalTradedQuantity":317311},{"priceId":0,"timeStamp":{"year":2011,"month":7,"dayOfMonth":3,"hourOfDay":14,"minute":57,"second":57},"closePrice":160.1,"openPrice":158.95,"lowPrice":158.45,"highPrice":160.5,"lastClosePrice":159.95,"totalTradedQuantity":362443},{"priceId":0,"timeStamp":{"year":2011,"month":7,"dayOfMonth":4,"hourOfDay":14,"minute":57,"second":57},"closePrice":158.95,"openPrice":160.2,"lowPrice":157.55,"highPrice":160.9,"lastClosePrice":160.1,"totalTradedQuantity":878423},{"priceId":0,"timeStamp":{"year":2011,"month":7,"dayOfMonth":5,"hourOfDay":14,"minute":57,"second":57},"closePrice":155.15,"openPrice":152.1,"lowPrice":148.1,"highPrice":157.85,"lastClosePrice":158.95,"totalTradedQuantity":453424},{"priceId":0,"timeStamp":{"year":2011,"month":7,"dayOfMonth":8,"hourOfDay":14,"minute":57,"second":57},"closePrice":151.5,"openPrice":151.2,"lowPrice":149.1,"highPrice":156.0,"lastClosePrice":155.15,"totalTradedQuantity":110040},{"priceId":0,"timeStamp":{"year":2011,"month":7,"dayOfMonth":9,"hourOfDay":14,"minute":57,"second":57},"closePrice":151.0,"openPrice":145.95,"lowPrice":145.0,"highPrice":152.45,"lastClosePrice":151.5,"totalTradedQuantity":244364},{"priceId":0,"timeStamp":{"year":2011,"month":7,"dayOfMonth":10,"hourOfDay":14,"minute":57,"second":57},"closePrice":151.05,"openPrice":152.0,"lowPrice":149.15,"highPrice":154.0,"lastClosePrice":151.0,"totalTradedQuantity":600779},{"priceId":0,"timeStamp":{"year":2011,"month":7,"dayOfMonth":11,"hourOfDay":14,"minute":57,"second":57},"closePrice":154.2,"openPrice":151.1,"lowPrice":150.45,"highPrice":155.4,"lastClosePrice":151.05,"totalTradedQuantity":568259},{"priceId":0,"timeStamp":{"year":2011,"month":7,"dayOfMonth":12,"hourOfDay":14,"minute":57,"second":57},"closePrice":150.7,"openPrice":156.0,"lowPrice":148.3,"highPrice":157.6,"lastClosePrice":154.2,"totalTradedQuantity":1520786},{"priceId":0,"timeStamp":{"year":2011,"month":7,"dayOfMonth":15,"hourOfDay":14,"minute":57,"second":57},"closePrice":150.7,"openPrice":156.0,"lowPrice":148.3,"highPrice":157.6,"lastClosePrice":154.2,"totalTradedQuantity":1520786},{"priceId":0,"timeStamp":{"year":2011,"month":7,"dayOfMonth":16,"hourOfDay":14,"minute":57,"second":57},"closePrice":149.85,"openPrice":151.25,"lowPrice":148.5,"highPrice":151.95,"lastClosePrice":150.7,"totalTradedQuantity":213801},{"priceId":0,"timeStamp":{"year":2011,"month":7,"dayOfMonth":17,"hourOfDay":14,"minute":57,"second":57},"closePrice":148.8,"openPrice":149.1,"lowPrice":145.1,"highPrice":151.55,"lastClosePrice":149.85,"totalTradedQuantity":697067},{"priceId":0,"timeStamp":{"year":2011,"month":7,"dayOfMonth":18,"hourOfDay":14,"minute":57,"second":57},"closePrice":140.4,"openPrice":150.4,"lowPrice":138.5,"highPrice":150.4,"lastClosePrice":148.8,"totalTradedQuantity":622650},{"priceId":0,"timeStamp":{"year":2011,"month":7,"dayOfMonth":19,"hourOfDay":14,"minute":57,"second":57},"closePrice":140.1,"openPrice":134.1,"lowPrice":134.1,"highPrice":144.4,"lastClosePrice":140.4,"totalTradedQuantity":1010029},{"priceId":0,"timeStamp":{"year":2011,"month":7,"dayOfMonth":22,"hourOfDay":14,"minute":57,"second":57},"closePrice":139.8,"openPrice":139.3,"lowPrice":127.0,"highPrice":145.0,"lastClosePrice":140.1,"totalTradedQuantity":944435},{"priceId":0,"timeStamp":{"year":2011,"month":7,"dayOfMonth":23,"hourOfDay":14,"minute":57,"second":57},"closePrice":138.7,"openPrice":142.9,"lowPrice":135.2,"highPrice":142.9,"lastClosePrice":139.8,"totalTradedQuantity":687474},{"priceId":0,"timeStamp":{"year":2011,"month":7,"dayOfMonth":24,"hourOfDay":14,"minute":57,"second":57},"closePrice":137.85,"openPrice":139.95,"lowPrice":136.05,"highPrice":140.0,"lastClosePrice":138.7,"totalTradedQuantity":477461},{"priceId":0,"timeStamp":{"year":2011,"month":7,"dayOfMonth":25,"hourOfDay":14,"minute":57,"second":57},"closePrice":137.85,"openPrice":140.9,"lowPrice":135.3,"highPrice":144.9,"lastClosePrice":137.85,"totalTradedQuantity":487156},{"priceId":0,"timeStamp":{"year":2011,"month":7,"dayOfMonth":26,"hourOfDay":14,"minute":57,"second":57},"closePrice":133.3,"openPrice":145.0,"lowPrice":131.05,"highPrice":159.0,"lastClosePrice":137.85,"totalTradedQuantity":979999},{"priceId":0,"timeStamp":{"year":2011,"month":7,"dayOfMonth":29,"hourOfDay":14,"minute":57,"second":57},"closePrice":132.9,"openPrice":133.9,"lowPrice":131.6,"highPrice":137.6,"lastClosePrice":133.3,"totalTradedQuantity":851295},{"priceId":0,"timeStamp":{"year":2011,"month":7,"dayOfMonth":30,"hourOfDay":14,"minute":57,"second":57},"closePrice":133.7,"openPrice":133.85,"lowPrice":131.2,"highPrice":134.9,"lastClosePrice":132.9,"totalTradedQuantity":356771},{"priceId":0,"timeStamp":{"year":2011,"month":7,"dayOfMonth":31,"hourOfDay":14,"minute":57,"second":57},"closePrice":133.7,"openPrice":133.85,"lowPrice":131.2,"highPrice":134.9,"lastClosePrice":132.9,"totalTradedQuantity":356771},{"priceId":0,"timeStamp":{"year":2011,"month":8,"dayOfMonth":1,"hourOfDay":14,"minute":57,"second":57},"closePrice":133.7,"openPrice":133.85,"lowPrice":131.2,"highPrice":134.9,"lastClosePrice":132.9,"totalTradedQuantity":356771},{"priceId":0,"timeStamp":{"year":2011,"month":8,"dayOfMonth":2,"hourOfDay":14,"minute":57,"second":57},"closePrice":128.85,"openPrice":135.75,"lowPrice":127.0,"highPrice":135.8,"lastClosePrice":133.7,"totalTradedQuantity":510964},{"priceId":0,"timeStamp":{"year":2011,"month":8,"dayOfMonth":5,"hourOfDay":14,"minute":57,"second":57},"closePrice":137.8,"openPrice":128.45,"lowPrice":125.55,"highPrice":139.7,"lastClosePrice":128.85,"totalTradedQuantity":2194523},{"priceId":0,"timeStamp":{"year":2011,"month":8,"dayOfMonth":6,"hourOfDay":14,"minute":57,"second":57},"closePrice":147.15,"openPrice":140.5,"lowPrice":138.0,"highPrice":149.8,"lastClosePrice":137.8,"totalTradedQuantity":1261526},{"priceId":0,"timeStamp":{"year":2011,"month":8,"dayOfMonth":7,"hourOfDay":14,"minute":57,"second":57},"closePrice":147.85,"openPrice":150.85,"lowPrice":145.1,"highPrice":151.5,"lastClosePrice":147.15,"totalTradedQuantity":3604101},{"priceId":0,"timeStamp":{"year":2011,"month":8,"dayOfMonth":8,"hourOfDay":14,"minute":57,"second":57},"closePrice":147.7,"openPrice":147.35,"lowPrice":145.1,"highPrice":150.75,"lastClosePrice":147.85,"totalTradedQuantity":382687},{"priceId":0,"timeStamp":{"year":2011,"month":8,"dayOfMonth":9,"hourOfDay":14,"minute":57,"second":57},"closePrice":146.3,"openPrice":145.15,"lowPrice":142.4,"highPrice":148.9,"lastClosePrice":147.7,"totalTradedQuantity":705607},{"priceId":0,"timeStamp":{"year":2011,"month":8,"dayOfMonth":12,"hourOfDay":14,"minute":57,"second":57},"closePrice":142.9,"openPrice":143.1,"lowPrice":138.25,"highPrice":144.9,"lastClosePrice":146.3,"totalTradedQuantity":716741},{"priceId":0,"timeStamp":{"year":2011,"month":8,"dayOfMonth":13,"hourOfDay":14,"minute":57,"second":57},"closePrice":143.7,"openPrice":143.9,"lowPrice":142.25,"highPrice":146.75,"lastClosePrice":142.9,"totalTradedQuantity":635949},{"priceId":0,"timeStamp":{"year":2011,"month":8,"dayOfMonth":14,"hourOfDay":14,"minute":57,"second":57},"closePrice":144.2,"openPrice":143.1,"lowPrice":142.75,"highPrice":145.55,"lastClosePrice":143.7,"totalTradedQuantity":638334},{"priceId":0,"timeStamp":{"year":2011,"month":8,"dayOfMonth":15,"hourOfDay":14,"minute":57,"second":57},"closePrice":140.45,"openPrice":142.5,"lowPrice":138.65,"highPrice":145.5,"lastClosePrice":144.2,"totalTradedQuantity":856457},{"priceId":0,"timeStamp":{"year":2011,"month":8,"dayOfMonth":16,"hourOfDay":14,"minute":57,"second":57},"closePrice":137.3,"openPrice":140.55,"lowPrice":136.4,"highPrice":141.8,"lastClosePrice":140.45,"totalTradedQuantity":531031},{"priceId":0,"timeStamp":{"year":2011,"month":8,"dayOfMonth":19,"hourOfDay":14,"minute":57,"second":57},"closePrice":133.45,"openPrice":136.1,"lowPrice":129.1,"highPrice":139.9,"lastClosePrice":137.3,"totalTradedQuantity":1279938},{"priceId":0,"timeStamp":{"year":2011,"month":8,"dayOfMonth":20,"hourOfDay":14,"minute":57,"second":57},"closePrice":132.65,"openPrice":132.1,"lowPrice":132.1,"highPrice":135.85,"lastClosePrice":133.45,"totalTradedQuantity":753570},{"priceId":0,"timeStamp":{"year":2011,"month":8,"dayOfMonth":21,"hourOfDay":14,"minute":57,"second":57},"closePrice":138.8,"openPrice":135.0,"lowPrice":132.3,"highPrice":139.5,"lastClosePrice":132.65,"totalTradedQuantity":245050},{"priceId":0,"timeStamp":{"year":2011,"month":8,"dayOfMonth":22,"hourOfDay":14,"minute":57,"second":57},"closePrice":133.85,"openPrice":137.75,"lowPrice":132.0,"highPrice":140.1,"lastClosePrice":138.8,"totalTradedQuantity":1049506},{"priceId":0,"timeStamp":{"year":2011,"month":8,"dayOfMonth":23,"hourOfDay":14,"minute":57,"second":57},"closePrice":130.65,"openPrice":130.1,"lowPrice":128.3,"highPrice":132.95,"lastClosePrice":133.85,"totalTradedQuantity":323576},{"priceId":0,"timeStamp":{"year":2011,"month":8,"dayOfMonth":26,"hourOfDay":14,"minute":57,"second":57},"closePrice":129.7,"openPrice":132.0,"lowPrice":127.2,"highPrice":133.45,"lastClosePrice":130.65,"totalTradedQuantity":1177449},{"priceId":0,"timeStamp":{"year":2011,"month":8,"dayOfMonth":27,"hourOfDay":14,"minute":57,"second":57},"closePrice":129.7,"openPrice":130.05,"lowPrice":127.75,"highPrice":130.8,"lastClosePrice":129.7,"totalTradedQuantity":657092},{"priceId":0,"timeStamp":{"year":2011,"month":8,"dayOfMonth":28,"hourOfDay":14,"minute":57,"second":57},"closePrice":128.0,"openPrice":129.0,"lowPrice":120.05,"highPrice":131.0,"lastClosePrice":129.7,"totalTradedQuantity":872476},{"priceId":0,"timeStamp":{"year":2011,"month":8,"dayOfMonth":29,"hourOfDay":14,"minute":57,"second":57},"closePrice":129.7,"openPrice":129.0,"lowPrice":124.1,"highPrice":133.5,"lastClosePrice":128.0,"totalTradedQuantity":1045577},{"priceId":0,"timeStamp":{"year":2011,"month":8,"dayOfMonth":30,"hourOfDay":14,"minute":57,"second":57},"closePrice":128.5,"openPrice":130.0,"lowPrice":125.25,"highPrice":133.0,"lastClosePrice":129.7,"totalTradedQuantity":1269141},{"priceId":0,"timeStamp":{"year":2011,"month":9,"dayOfMonth":3,"hourOfDay":14,"minute":57,"second":57},"closePrice":120.75,"openPrice":126.1,"lowPrice":115.15,"highPrice":127.0,"lastClosePrice":128.5,"totalTradedQuantity":1153291},{"priceId":0,"timeStamp":{"year":2011,"month":9,"dayOfMonth":4,"hourOfDay":14,"minute":57,"second":57},"closePrice":112.3,"openPrice":121.3,"lowPrice":110.05,"highPrice":123.35,"lastClosePrice":120.75,"totalTradedQuantity":1464736},{"priceId":0,"timeStamp":{"year":2011,"month":9,"dayOfMonth":5,"hourOfDay":14,"minute":57,"second":57},"closePrice":111.05,"openPrice":112.5,"lowPrice":109.5,"highPrice":116.9,"lastClosePrice":112.3,"totalTradedQuantity":1961293},{"priceId":0,"timeStamp":{"year":2011,"month":9,"dayOfMonth":6,"hourOfDay":14,"minute":57,"second":57},"closePrice":111.05,"openPrice":112.5,"lowPrice":109.5,"highPrice":116.9,"lastClosePrice":112.3,"totalTradedQuantity":1961293},{"priceId":0,"timeStamp":{"year":2011,"month":9,"dayOfMonth":7,"hourOfDay":14,"minute":57,"second":57},"closePrice":116.85,"openPrice":111.45,"lowPrice":111.45,"highPrice":119.5,"lastClosePrice":111.05,"totalTradedQuantity":805275},{"priceId":0,"timeStamp":{"year":2011,"month":9,"dayOfMonth":10,"hourOfDay":14,"minute":57,"second":57},"closePrice":131.25,"openPrice":116.85,"lowPrice":116.85,"highPrice":133.8,"lastClosePrice":116.85,"totalTradedQuantity":1013207},{"priceId":0,"timeStamp":{"year":2011,"month":9,"dayOfMonth":11,"hourOfDay":14,"minute":57,"second":57},"closePrice":138.8,"openPrice":133.0,"lowPrice":132.4,"highPrice":141.4,"lastClosePrice":131.25,"totalTradedQuantity":1072577},{"priceId":0,"timeStamp":{"year":2011,"month":9,"dayOfMonth":12,"hourOfDay":14,"minute":57,"second":57},"closePrice":140.2,"openPrice":140.9,"lowPrice":134.8,"highPrice":144.0,"lastClosePrice":138.8,"totalTradedQuantity":756883},{"priceId":0,"timeStamp":{"year":2011,"month":9,"dayOfMonth":13,"hourOfDay":14,"minute":57,"second":57},"closePrice":136.0,"openPrice":139.8,"lowPrice":135.15,"highPrice":143.4,"lastClosePrice":140.2,"totalTradedQuantity":599405},{"priceId":0,"timeStamp":{"year":2011,"month":9,"dayOfMonth":14,"hourOfDay":14,"minute":57,"second":57},"closePrice":136.65,"openPrice":134.55,"lowPrice":133.0,"highPrice":137.9,"lastClosePrice":136.0,"totalTradedQuantity":277702},{"priceId":0,"timeStamp":{"year":2011,"month":9,"dayOfMonth":17,"hourOfDay":14,"minute":57,"second":57},"closePrice":141.3,"openPrice":137.05,"lowPrice":133.85,"highPrice":142.35,"lastClosePrice":136.65,"totalTradedQuantity":309011},{"priceId":0,"timeStamp":{"year":2011,"month":9,"dayOfMonth":18,"hourOfDay":14,"minute":57,"second":57},"closePrice":136.95,"openPrice":137.05,"lowPrice":135.55,"highPrice":140.0,"lastClosePrice":141.3,"totalTradedQuantity":251558},{"priceId":0,"timeStamp":{"year":2011,"month":9,"dayOfMonth":19,"hourOfDay":14,"minute":57,"second":57},"closePrice":135.25,"openPrice":139.9,"lowPrice":133.6,"highPrice":139.9,"lastClosePrice":136.95,"totalTradedQuantity":974480},{"priceId":0,"timeStamp":{"year":2011,"month":9,"dayOfMonth":20,"hourOfDay":14,"minute":57,"second":57},"closePrice":128.75,"openPrice":135.25,"lowPrice":127.65,"highPrice":135.25,"lastClosePrice":135.25,"totalTradedQuantity":610732},{"priceId":0,"timeStamp":{"year":2011,"month":9,"dayOfMonth":21,"hourOfDay":14,"minute":57,"second":57},"closePrice":126.65,"openPrice":128.7,"lowPrice":125.05,"highPrice":131.7,"lastClosePrice":128.75,"totalTradedQuantity":234354},{"priceId":0,"timeStamp":{"year":2011,"month":9,"dayOfMonth":24,"hourOfDay":14,"minute":57,"second":57},"closePrice":127.25,"openPrice":126.75,"lowPrice":122.55,"highPrice":130.9,"lastClosePrice":126.65,"totalTradedQuantity":455279},{"priceId":0,"timeStamp":{"year":2011,"month":9,"dayOfMonth":25,"hourOfDay":14,"minute":57,"second":57},"closePrice":124.0,"openPrice":125.3,"lowPrice":122.65,"highPrice":127.25,"lastClosePrice":127.25,"totalTradedQuantity":321161},{"priceId":0,"timeStamp":{"year":2011,"month":9,"dayOfMonth":26,"hourOfDay":14,"minute":57,"second":57},"closePrice":125.75,"openPrice":124.1,"lowPrice":124.1,"highPrice":127.0,"lastClosePrice":124.0,"totalTradedQuantity":50821},{"priceId":0,"timeStamp":{"year":2011,"month":9,"dayOfMonth":27,"hourOfDay":14,"minute":57,"second":57},"closePrice":125.75,"openPrice":124.1,"lowPrice":124.1,"highPrice":127.0,"lastClosePrice":124.0,"totalTradedQuantity":50821},{"priceId":0,"timeStamp":{"year":2011,"month":9,"dayOfMonth":28,"hourOfDay":14,"minute":57,"second":57},"closePrice":124.35,"openPrice":126.1,"lowPrice":123.6,"highPrice":128.9,"lastClosePrice":125.75,"totalTradedQuantity":371295},{"priceId":0,"timeStamp":{"year":2011,"month":9,"dayOfMonth":31,"hourOfDay":14,"minute":57,"second":57},"closePrice":127.6,"openPrice":124.45,"lowPrice":124.4,"highPrice":129.2,"lastClosePrice":124.35,"totalTradedQuantity":702706},{"priceId":0,"timeStamp":{"year":2011,"month":10,"dayOfMonth":1,"hourOfDay":14,"minute":57,"second":57},"closePrice":127.45,"openPrice":127.0,"lowPrice":126.15,"highPrice":129.7,"lastClosePrice":127.6,"totalTradedQuantity":668277},{"priceId":0,"timeStamp":{"year":2011,"month":10,"dayOfMonth":2,"hourOfDay":14,"minute":57,"second":57},"closePrice":127.45,"openPrice":126.2,"lowPrice":125.4,"highPrice":129.0,"lastClosePrice":127.45,"totalTradedQuantity":480446},{"priceId":0,"timeStamp":{"year":2011,"month":10,"dayOfMonth":3,"hourOfDay":14,"minute":57,"second":57},"closePrice":126.5,"openPrice":127.45,"lowPrice":124.6,"highPrice":127.5,"lastClosePrice":127.45,"totalTradedQuantity":188659},{"priceId":0,"timeStamp":{"year":2011,"month":10,"dayOfMonth":4,"hourOfDay":14,"minute":57,"second":57},"closePrice":126.2,"openPrice":128.0,"lowPrice":125.55,"highPrice":128.5,"lastClosePrice":126.5,"totalTradedQuantity":439970},{"priceId":0,"timeStamp":{"year":2011,"month":10,"dayOfMonth":7,"hourOfDay":14,"minute":57,"second":57},"closePrice":126.2,"openPrice":128.0,"lowPrice":125.55,"highPrice":128.5,"lastClosePrice":126.5,"totalTradedQuantity":439970},{"priceId":0,"timeStamp":{"year":2011,"month":10,"dayOfMonth":8,"hourOfDay":14,"minute":57,"second":57},"closePrice":122.8,"openPrice":128.0,"lowPrice":122.0,"highPrice":128.0,"lastClosePrice":126.2,"totalTradedQuantity":563228},{"priceId":0,"timeStamp":{"year":2011,"month":10,"dayOfMonth":9,"hourOfDay":14,"minute":57,"second":57},"closePrice":121.7,"openPrice":123.05,"lowPrice":121.2,"highPrice":125.65,"lastClosePrice":122.8,"totalTradedQuantity":395483},{"priceId":0,"timeStamp":{"year":2011,"month":10,"dayOfMonth":10,"hourOfDay":14,"minute":57,"second":57},"closePrice":121.7,"openPrice":123.05,"lowPrice":121.2,"highPrice":125.65,"lastClosePrice":122.8,"totalTradedQuantity":395483},{"priceId":0,"timeStamp":{"year":2011,"month":10,"dayOfMonth":11,"hourOfDay":14,"minute":57,"second":57},"closePrice":120.95,"openPrice":121.5,"lowPrice":119.8,"highPrice":123.5,"lastClosePrice":121.7,"totalTradedQuantity":484605},{"priceId":0,"timeStamp":{"year":2011,"month":10,"dayOfMonth":14,"hourOfDay":14,"minute":57,"second":57},"closePrice":117.95,"openPrice":121.0,"lowPrice":117.1,"highPrice":123.05,"lastClosePrice":120.95,"totalTradedQuantity":118670},{"priceId":0,"timeStamp":{"year":2011,"month":10,"dayOfMonth":15,"hourOfDay":14,"minute":57,"second":57},"closePrice":113.55,"openPrice":117.0,"lowPrice":110.8,"highPrice":118.6,"lastClosePrice":117.95,"totalTradedQuantity":531402},{"priceId":0,"timeStamp":{"year":2011,"month":10,"dayOfMonth":16,"hourOfDay":14,"minute":57,"second":57},"closePrice":113.2,"openPrice":113.0,"lowPrice":110.6,"highPrice":114.9,"lastClosePrice":113.55,"totalTradedQuantity":293794},{"priceId":0,"timeStamp":{"year":2011,"month":10,"dayOfMonth":17,"hourOfDay":14,"minute":57,"second":57},"closePrice":110.85,"openPrice":113.95,"lowPrice":109.0,"highPrice":114.45,"lastClosePrice":113.2,"totalTradedQuantity":271847},{"priceId":0,"timeStamp":{"year":2011,"month":10,"dayOfMonth":18,"hourOfDay":14,"minute":57,"second":57},"closePrice":94.8,"openPrice":109.95,"lowPrice":88.7,"highPrice":112.9,"lastClosePrice":110.85,"totalTradedQuantity":4010113},{"priceId":0,"timeStamp":{"year":2011,"month":10,"dayOfMonth":21,"hourOfDay":14,"minute":57,"second":57},"closePrice":100.8,"openPrice":91.0,"lowPrice":90.1,"highPrice":104.7,"lastClosePrice":94.8,"totalTradedQuantity":2491543},{"priceId":0,"timeStamp":{"year":2011,"month":10,"dayOfMonth":22,"hourOfDay":14,"minute":57,"second":57},"closePrice":120.75,"openPrice":104.7,"lowPrice":104.5,"highPrice":121.0,"lastClosePrice":100.8,"totalTradedQuantity":3429220},{"priceId":0,"timeStamp":{"year":2011,"month":10,"dayOfMonth":23,"hourOfDay":14,"minute":57,"second":57},"closePrice":122.05,"openPrice":124.9,"lowPrice":118.35,"highPrice":131.65,"lastClosePrice":120.75,"totalTradedQuantity":3468766},{"priceId":0,"timeStamp":{"year":2011,"month":10,"dayOfMonth":24,"hourOfDay":14,"minute":57,"second":57},"closePrice":126.55,"openPrice":122.1,"lowPrice":113.25,"highPrice":130.9,"lastClosePrice":122.05,"totalTradedQuantity":2369824},{"priceId":0,"timeStamp":{"year":2011,"month":10,"dayOfMonth":25,"hourOfDay":14,"minute":57,"second":57},"closePrice":121.75,"openPrice":123.2,"lowPrice":119.3,"highPrice":128.8,"lastClosePrice":126.55,"totalTradedQuantity":773032},{"priceId":0,"timeStamp":{"year":2011,"month":10,"dayOfMonth":28,"hourOfDay":14,"minute":57,"second":57},"closePrice":122.4,"openPrice":123.0,"lowPrice":121.5,"highPrice":126.5,"lastClosePrice":121.75,"totalTradedQuantity":347933},{"priceId":0,"timeStamp":{"year":2011,"month":10,"dayOfMonth":29,"hourOfDay":14,"minute":57,"second":57},"closePrice":120.55,"openPrice":123.2,"lowPrice":119.5,"highPrice":124.7,"lastClosePrice":122.4,"totalTradedQuantity":304987},{"priceId":0,"timeStamp":{"year":2011,"month":10,"dayOfMonth":30,"hourOfDay":14,"minute":57,"second":57},"closePrice":118.15,"openPrice":124.4,"lowPrice":115.6,"highPrice":130.05,"lastClosePrice":120.55,"totalTradedQuantity":354699},{"priceId":0,"timeStamp":{"year":2011,"month":11,"dayOfMonth":1,"hourOfDay":14,"minute":57,"second":57},"closePrice":116.9,"openPrice":121.05,"lowPrice":116.0,"highPrice":124.0,"lastClosePrice":118.15,"totalTradedQuantity":225965},{"priceId":0,"timeStamp":{"year":2011,"month":11,"dayOfMonth":2,"hourOfDay":14,"minute":57,"second":57},"closePrice":116.1,"openPrice":117.75,"lowPrice":115.25,"highPrice":118.3,"lastClosePrice":116.9,"totalTradedQuantity":158809},{"priceId":0,"timeStamp":{"year":2011,"month":11,"dayOfMonth":5,"hourOfDay":14,"minute":57,"second":57},"closePrice":118.1,"openPrice":117.4,"lowPrice":116.25,"highPrice":119.4,"lastClosePrice":116.1,"totalTradedQuantity":138277},{"priceId":0,"timeStamp":{"year":2011,"month":11,"dayOfMonth":6,"hourOfDay":14,"minute":57,"second":57},"closePrice":118.1,"openPrice":117.4,"lowPrice":116.25,"highPrice":119.4,"lastClosePrice":116.1,"totalTradedQuantity":138277},{"priceId":0,"timeStamp":{"year":2011,"month":11,"dayOfMonth":7,"hourOfDay":14,"minute":57,"second":57},"closePrice":118.2,"openPrice":119.0,"lowPrice":117.1,"highPrice":121.5,"lastClosePrice":118.1,"totalTradedQuantity":114862},{"priceId":0,"timeStamp":{"year":2011,"month":11,"dayOfMonth":8,"hourOfDay":14,"minute":57,"second":57},"closePrice":115.65,"openPrice":121.45,"lowPrice":114.6,"highPrice":121.45,"lastClosePrice":118.2,"totalTradedQuantity":111004},{"priceId":0,"timeStamp":{"year":2011,"month":11,"dayOfMonth":9,"hourOfDay":14,"minute":57,"second":57},"closePrice":113.6,"openPrice":114.95,"lowPrice":112.1,"highPrice":114.95,"lastClosePrice":115.65,"totalTradedQuantity":55280},{"priceId":0,"timeStamp":{"year":2011,"month":11,"dayOfMonth":12,"hourOfDay":14,"minute":57,"second":57},"closePrice":108.85,"openPrice":115.0,"lowPrice":108.0,"highPrice":116.0,"lastClosePrice":113.6,"totalTradedQuantity":105280},{"priceId":0,"timeStamp":{"year":2011,"month":11,"dayOfMonth":13,"hourOfDay":14,"minute":57,"second":57},"closePrice":102.05,"openPrice":110.95,"lowPrice":100.4,"highPrice":110.95,"lastClosePrice":108.85,"totalTradedQuantity":409326},{"priceId":0,"timeStamp":{"year":2011,"month":11,"dayOfMonth":14,"hourOfDay":14,"minute":57,"second":57},"closePrice":100.0,"openPrice":100.3,"lowPrice":98.5,"highPrice":104.35,"lastClosePrice":102.05,"totalTradedQuantity":134757},{"priceId":0,"timeStamp":{"year":2011,"month":11,"dayOfMonth":15,"hourOfDay":14,"minute":57,"second":57},"closePrice":95.6,"openPrice":98.0,"lowPrice":91.1,"highPrice":98.0,"lastClosePrice":100.0,"totalTradedQuantity":958488},{"priceId":0,"timeStamp":{"year":2011,"month":11,"dayOfMonth":16,"hourOfDay":14,"minute":57,"second":57},"closePrice":93.4,"openPrice":98.0,"lowPrice":91.7,"highPrice":99.7,"lastClosePrice":95.6,"totalTradedQuantity":407863},{"priceId":0,"timeStamp":{"year":2011,"month":11,"dayOfMonth":19,"hourOfDay":14,"minute":57,"second":57},"closePrice":93.7,"openPrice":90.0,"lowPrice":86.1,"highPrice":97.7,"lastClosePrice":93.4,"totalTradedQuantity":149947},{"priceId":0,"timeStamp":{"year":2011,"month":11,"dayOfMonth":20,"hourOfDay":14,"minute":57,"second":57},"closePrice":93.9,"openPrice":99.45,"lowPrice":92.5,"highPrice":99.45,"lastClosePrice":93.7,"totalTradedQuantity":137612},{"priceId":0,"timeStamp":{"year":2011,"month":11,"dayOfMonth":21,"hourOfDay":14,"minute":57,"second":57},"closePrice":93.0,"openPrice":94.5,"lowPrice":91.3,"highPrice":97.7,"lastClosePrice":93.9,"totalTradedQuantity":81433},{"priceId":0,"timeStamp":{"year":2011,"month":11,"dayOfMonth":22,"hourOfDay":14,"minute":57,"second":57},"closePrice":93.65,"openPrice":93.2,"lowPrice":92.35,"highPrice":94.9,"lastClosePrice":93.0,"totalTradedQuantity":93391},{"priceId":0,"timeStamp":{"year":2011,"month":11,"dayOfMonth":23,"hourOfDay":14,"minute":57,"second":57},"closePrice":93.25,"openPrice":94.75,"lowPrice":92.7,"highPrice":95.0,"lastClosePrice":93.65,"totalTradedQuantity":36984},{"priceId":0,"timeStamp":{"year":2011,"month":11,"dayOfMonth":26,"hourOfDay":14,"minute":57,"second":57},"closePrice":95.75,"openPrice":92.25,"lowPrice":92.25,"highPrice":96.5,"lastClosePrice":93.25,"totalTradedQuantity":119109},{"priceId":0,"timeStamp":{"year":2011,"month":11,"dayOfMonth":27,"hourOfDay":14,"minute":57,"second":57},"closePrice":98.0,"openPrice":96.5,"lowPrice":96.05,"highPrice":102.3,"lastClosePrice":95.75,"totalTradedQuantity":543004},{"priceId":0,"timeStamp":{"year":2011,"month":11,"dayOfMonth":28,"hourOfDay":14,"minute":57,"second":57},"closePrice":97.05,"openPrice":98.25,"lowPrice":96.15,"highPrice":98.25,"lastClosePrice":98.0,"totalTradedQuantity":70448},{"priceId":0,"timeStamp":{"year":2011,"month":11,"dayOfMonth":29,"hourOfDay":14,"minute":57,"second":57},"closePrice":96.15,"openPrice":96.15,"lowPrice":95.0,"highPrice":96.8,"lastClosePrice":97.05,"totalTradedQuantity":88844},{"priceId":0,"timeStamp":{"year":2011,"month":11,"dayOfMonth":30,"hourOfDay":14,"minute":57,"second":57},"closePrice":94.8,"openPrice":96.5,"lowPrice":94.1,"highPrice":99.75,"lastClosePrice":96.15,"totalTradedQuantity":84090},{"priceId":0,"timeStamp":{"year":2012,"month":0,"dayOfMonth":2,"hourOfDay":14,"minute":57,"second":57},"closePrice":94.4,"openPrice":96.15,"lowPrice":93.6,"highPrice":96.55,"lastClosePrice":94.8,"totalTradedQuantity":90250},{"priceId":0,"timeStamp":{"year":2012,"month":0,"dayOfMonth":3,"hourOfDay":14,"minute":57,"second":57},"closePrice":96.25,"openPrice":94.75,"lowPrice":94.1,"highPrice":97.0,"lastClosePrice":94.4,"totalTradedQuantity":65422},{"priceId":0,"timeStamp":{"year":2012,"month":0,"dayOfMonth":4,"hourOfDay":14,"minute":57,"second":57},"closePrice":96.65,"openPrice":97.25,"lowPrice":96.0,"highPrice":99.0,"lastClosePrice":96.25,"totalTradedQuantity":45672},{"priceId":0,"timeStamp":{"year":2012,"month":0,"dayOfMonth":5,"hourOfDay":14,"minute":57,"second":57},"closePrice":96.95,"openPrice":97.0,"lowPrice":96.1,"highPrice":97.5,"lastClosePrice":96.65,"totalTradedQuantity":69701},{"priceId":0,"timeStamp":{"year":2012,"month":0,"dayOfMonth":6,"hourOfDay":14,"minute":57,"second":57},"closePrice":96.1,"openPrice":97.0,"lowPrice":95.15,"highPrice":97.0,"lastClosePrice":96.95,"totalTradedQuantity":46663},{"priceId":0,"timeStamp":{"year":2012,"month":0,"dayOfMonth":9,"hourOfDay":14,"minute":57,"second":57},"closePrice":97.5,"openPrice":97.4,"lowPrice":96.2,"highPrice":99.5,"lastClosePrice":96.15,"totalTradedQuantity":143667},{"priceId":0,"timeStamp":{"year":2012,"month":0,"dayOfMonth":10,"hourOfDay":14,"minute":57,"second":57},"closePrice":104.8,"openPrice":98.9,"lowPrice":98.25,"highPrice":107.15,"lastClosePrice":97.5,"totalTradedQuantity":686266},{"priceId":0,"timeStamp":{"year":2012,"month":0,"dayOfMonth":11,"hourOfDay":14,"minute":57,"second":57},"closePrice":105.65,"openPrice":105.95,"lowPrice":105.0,"highPrice":109.0,"lastClosePrice":104.8,"totalTradedQuantity":439650},{"priceId":0,"timeStamp":{"year":2012,"month":0,"dayOfMonth":12,"hourOfDay":14,"minute":57,"second":57},"closePrice":108.3,"openPrice":105.9,"lowPrice":104.05,"highPrice":110.4,"lastClosePrice":105.65,"totalTradedQuantity":338184},{"priceId":0,"timeStamp":{"year":2012,"month":0,"dayOfMonth":13,"hourOfDay":14,"minute":57,"second":57},"closePrice":104.8,"openPrice":109.2,"lowPrice":104.35,"highPrice":109.8,"lastClosePrice":108.3,"totalTradedQuantity":85901},{"priceId":0,"timeStamp":{"year":2012,"month":0,"dayOfMonth":16,"hourOfDay":14,"minute":57,"second":57},"closePrice":106.1,"openPrice":104.0,"lowPrice":104.0,"highPrice":107.9,"lastClosePrice":104.8,"totalTradedQuantity":193726},{"priceId":0,"timeStamp":{"year":2012,"month":0,"dayOfMonth":17,"hourOfDay":14,"minute":57,"second":57},"closePrice":106.1,"openPrice":105.0,"lowPrice":103.1,"highPrice":107.3,"lastClosePrice":106.1,"totalTradedQuantity":474468},{"priceId":0,"timeStamp":{"year":2012,"month":0,"dayOfMonth":18,"hourOfDay":14,"minute":57,"second":57},"closePrice":104.45,"openPrice":104.5,"lowPrice":104.1,"highPrice":107.25,"lastClosePrice":106.1,"totalTradedQuantity":562846},{"priceId":0,"timeStamp":{"year":2012,"month":0,"dayOfMonth":19,"hourOfDay":14,"minute":57,"second":57},"closePrice":104.75,"openPrice":105.65,"lowPrice":104.35,"highPrice":107.05,"lastClosePrice":104.45,"totalTradedQuantity":78610},{"priceId":0,"timeStamp":{"year":2012,"month":0,"dayOfMonth":20,"hourOfDay":14,"minute":57,"second":57},"closePrice":109.0,"openPrice":104.1,"lowPrice":104.1,"highPrice":114.95,"lastClosePrice":104.75,"totalTradedQuantity":445511},{"priceId":0,"timeStamp":{"year":2012,"month":0,"dayOfMonth":23,"hourOfDay":14,"minute":57,"second":57},"closePrice":111.85,"openPrice":110.5,"lowPrice":107.3,"highPrice":114.0,"lastClosePrice":109.0,"totalTradedQuantity":238009},{"priceId":0,"timeStamp":{"year":2012,"month":0,"dayOfMonth":24,"hourOfDay":14,"minute":57,"second":57},"closePrice":111.6,"openPrice":112.75,"lowPrice":111.15,"highPrice":113.9,"lastClosePrice":111.85,"totalTradedQuantity":147994},{"priceId":0,"timeStamp":{"year":2012,"month":0,"dayOfMonth":25,"hourOfDay":14,"minute":57,"second":57},"closePrice":110.6,"openPrice":111.6,"lowPrice":109.25,"highPrice":113.9,"lastClosePrice":111.6,"totalTradedQuantity":100979},{"priceId":0,"timeStamp":{"year":2012,"month":0,"dayOfMonth":26,"hourOfDay":14,"minute":57,"second":57},"closePrice":110.6,"openPrice":111.6,"lowPrice":109.25,"highPrice":113.9,"lastClosePrice":111.6,"totalTradedQuantity":100979},{"priceId":0,"timeStamp":{"year":2012,"month":0,"dayOfMonth":27,"hourOfDay":14,"minute":57,"second":57},"closePrice":108.85,"openPrice":111.0,"lowPrice":108.2,"highPrice":112.9,"lastClosePrice":110.6,"totalTradedQuantity":103140},{"priceId":0,"timeStamp":{"year":2012,"month":0,"dayOfMonth":30,"hourOfDay":14,"minute":57,"second":57},"closePrice":108.85,"openPrice":112.8,"lowPrice":108.25,"highPrice":112.8,"lastClosePrice":108.85,"totalTradedQuantity":89200},{"priceId":0,"timeStamp":{"year":2012,"month":0,"dayOfMonth":31,"hourOfDay":14,"minute":57,"second":57},"closePrice":108.55,"openPrice":108.1,"lowPrice":108.1,"highPrice":110.5,"lastClosePrice":108.85,"totalTradedQuantity":107875},{"priceId":0,"timeStamp":{"year":2012,"month":1,"dayOfMonth":1,"hourOfDay":14,"minute":57,"second":57},"closePrice":111.7,"openPrice":109.05,"lowPrice":108.1,"highPrice":112.55,"lastClosePrice":108.55,"totalTradedQuantity":378138},{"priceId":0,"timeStamp":{"year":2012,"month":1,"dayOfMonth":2,"hourOfDay":14,"minute":57,"second":57},"closePrice":112.75,"openPrice":116.0,"lowPrice":111.05,"highPrice":116.0,"lastClosePrice":111.7,"totalTradedQuantity":259449},{"priceId":0,"timeStamp":{"year":2012,"month":1,"dayOfMonth":3,"hourOfDay":14,"minute":57,"second":57},"closePrice":116.2,"openPrice":114.5,"lowPrice":112.5,"highPrice":117.7,"lastClosePrice":112.75,"totalTradedQuantity":466192},{"priceId":0,"timeStamp":{"year":2012,"month":1,"dayOfMonth":6,"hourOfDay":14,"minute":57,"second":57},"closePrice":117.6,"openPrice":130.0,"lowPrice":116.2,"highPrice":130.0,"lastClosePrice":116.2,"totalTradedQuantity":414947},{"priceId":0,"timeStamp":{"year":2012,"month":1,"dayOfMonth":7,"hourOfDay":14,"minute":57,"second":57},"closePrice":118.45,"openPrice":116.85,"lowPrice":116.85,"highPrice":119.35,"lastClosePrice":117.6,"totalTradedQuantity":159364},{"priceId":0,"timeStamp":{"year":2012,"month":1,"dayOfMonth":8,"hourOfDay":14,"minute":57,"second":57},"closePrice":126.25,"openPrice":119.5,"lowPrice":118.1,"highPrice":127.65,"lastClosePrice":118.45,"totalTradedQuantity":346830},{"priceId":0,"timeStamp":{"year":2012,"month":1,"dayOfMonth":9,"hourOfDay":14,"minute":57,"second":57},"closePrice":126.25,"openPrice":118.3,"lowPrice":118.3,"highPrice":127.5,"lastClosePrice":126.25,"totalTradedQuantity":206564},{"priceId":0,"timeStamp":{"year":2012,"month":1,"dayOfMonth":10,"hourOfDay":14,"minute":57,"second":57},"closePrice":126.15,"openPrice":126.7,"lowPrice":125.1,"highPrice":128.8,"lastClosePrice":126.25,"totalTradedQuantity":245870},{"priceId":0,"timeStamp":{"year":2012,"month":1,"dayOfMonth":13,"hourOfDay":14,"minute":57,"second":57},"closePrice":127.15,"openPrice":127.45,"lowPrice":125.1,"highPrice":127.95,"lastClosePrice":126.15,"totalTradedQuantity":121266},{"priceId":0,"timeStamp":{"year":2012,"month":1,"dayOfMonth":14,"hourOfDay":14,"minute":57,"second":57},"closePrice":128.3,"openPrice":127.45,"lowPrice":124.15,"highPrice":130.45,"lastClosePrice":127.15,"totalTradedQuantity":481570},{"priceId":0,"timeStamp":{"year":2012,"month":1,"dayOfMonth":15,"hourOfDay":14,"minute":57,"second":57},"closePrice":128.2,"openPrice":126.75,"lowPrice":126.75,"highPrice":131.0,"lastClosePrice":128.3,"totalTradedQuantity":368087},{"priceId":0,"timeStamp":{"year":2012,"month":1,"dayOfMonth":16,"hourOfDay":14,"minute":57,"second":57},"closePrice":131.45,"openPrice":129.75,"lowPrice":128.1,"highPrice":133.3,"lastClosePrice":128.2,"totalTradedQuantity":544435},{"priceId":0,"timeStamp":{"year":2012,"month":1,"dayOfMonth":17,"hourOfDay":14,"minute":57,"second":57},"closePrice":134.3,"openPrice":132.7,"lowPrice":131.1,"highPrice":134.5,"lastClosePrice":131.45,"totalTradedQuantity":276742},{"priceId":0,"timeStamp":{"year":2012,"month":1,"dayOfMonth":20,"hourOfDay":14,"minute":57,"second":57},"closePrice":134.3,"openPrice":132.7,"lowPrice":131.1,"highPrice":134.5,"lastClosePrice":131.45,"totalTradedQuantity":276742},{"priceId":0,"timeStamp":{"year":2012,"month":1,"dayOfMonth":21,"hourOfDay":14,"minute":57,"second":57},"closePrice":131.9,"openPrice":134.45,"lowPrice":130.1,"highPrice":135.65,"lastClosePrice":134.3,"totalTradedQuantity":125032},{"priceId":0,"timeStamp":{"year":2012,"month":1,"dayOfMonth":22,"hourOfDay":14,"minute":57,"second":57},"closePrice":133.95,"openPrice":131.1,"lowPrice":131.1,"highPrice":134.8,"lastClosePrice":131.9,"totalTradedQuantity":2832834},{"priceId":0,"timeStamp":{"year":2012,"month":1,"dayOfMonth":23,"hourOfDay":14,"minute":57,"second":57},"closePrice":140.65,"openPrice":135.0,"lowPrice":133.65,"highPrice":141.0,"lastClosePrice":133.95,"totalTradedQuantity":1275853},{"priceId":0,"timeStamp":{"year":2012,"month":1,"dayOfMonth":24,"hourOfDay":14,"minute":57,"second":57},"closePrice":142.5,"openPrice":141.7,"lowPrice":138.55,"highPrice":144.0,"lastClosePrice":140.65,"totalTradedQuantity":1058994},{"priceId":0,"timeStamp":{"year":2012,"month":1,"dayOfMonth":27,"hourOfDay":14,"minute":57,"second":57},"closePrice":139.9,"openPrice":140.1,"lowPrice":137.0,"highPrice":143.3,"lastClosePrice":142.5,"totalTradedQuantity":226229},{"priceId":0,"timeStamp":{"year":2012,"month":1,"dayOfMonth":28,"hourOfDay":14,"minute":57,"second":57},"closePrice":140.7,"openPrice":139.85,"lowPrice":138.5,"highPrice":141.0,"lastClosePrice":139.9,"totalTradedQuantity":160621},{"priceId":0,"timeStamp":{"year":2012,"month":1,"dayOfMonth":29,"hourOfDay":14,"minute":57,"second":57},"closePrice":142.25,"openPrice":140.2,"lowPrice":140.2,"highPrice":146.7,"lastClosePrice":140.7,"totalTradedQuantity":546346},{"priceId":0,"timeStamp":{"year":2012,"month":2,"dayOfMonth":1,"hourOfDay":14,"minute":57,"second":57},"closePrice":143.9,"openPrice":141.55,"lowPrice":140.2,"highPrice":144.8,"lastClosePrice":142.25,"totalTradedQuantity":239479},{"priceId":0,"timeStamp":{"year":2012,"month":2,"dayOfMonth":2,"hourOfDay":14,"minute":57,"second":57},"closePrice":143.55,"openPrice":145.8,"lowPrice":142.5,"highPrice":146.45,"lastClosePrice":143.9,"totalTradedQuantity":130733},{"priceId":0,"timeStamp":{"year":2012,"month":2,"dayOfMonth":5,"hourOfDay":14,"minute":57,"second":57},"closePrice":138.85,"openPrice":143.0,"lowPrice":137.45,"highPrice":143.9,"lastClosePrice":142.25,"totalTradedQuantity":148266},{"priceId":0,"timeStamp":{"year":2012,"month":2,"dayOfMonth":6,"hourOfDay":14,"minute":57,"second":57},"closePrice":139.1,"openPrice":137.9,"lowPrice":136.5,"highPrice":140.8,"lastClosePrice":138.85,"totalTradedQuantity":151132},{"priceId":0,"timeStamp":{"year":2012,"month":2,"dayOfMonth":7,"hourOfDay":14,"minute":57,"second":57},"closePrice":134.55,"openPrice":138.1,"lowPrice":132.9,"highPrice":139.65,"lastClosePrice":139.1,"totalTradedQuantity":193599},{"priceId":0,"timeStamp":{"year":2012,"month":2,"dayOfMonth":8,"hourOfDay":14,"minute":57,"second":57},"closePrice":134.55,"openPrice":138.1,"lowPrice":132.9,"highPrice":139.65,"lastClosePrice":139.1,"totalTradedQuantity":193599},{"priceId":0,"timeStamp":{"year":2012,"month":2,"dayOfMonth":9,"hourOfDay":14,"minute":57,"second":57},"closePrice":140.95,"openPrice":136.55,"lowPrice":135.85,"highPrice":142.3,"lastClosePrice":134.55,"totalTradedQuantity":514531},{"priceId":0,"timeStamp":{"year":2012,"month":2,"dayOfMonth":12,"hourOfDay":14,"minute":57,"second":57},"closePrice":139.95,"openPrice":144.35,"lowPrice":138.5,"highPrice":144.4,"lastClosePrice":140.95,"totalTradedQuantity":26891},{"priceId":0,"timeStamp":{"year":2012,"month":2,"dayOfMonth":13,"hourOfDay":14,"minute":57,"second":57},"closePrice":139.9,"openPrice":141.9,"lowPrice":138.4,"highPrice":143.65,"lastClosePrice":139.95,"totalTradedQuantity":940435},{"priceId":0,"timeStamp":{"year":2012,"month":2,"dayOfMonth":14,"hourOfDay":14,"minute":57,"second":57},"closePrice":139.05,"openPrice":140.9,"lowPrice":138.15,"highPrice":140.95,"lastClosePrice":139.9,"totalTradedQuantity":547214},{"priceId":0,"timeStamp":{"year":2012,"month":2,"dayOfMonth":15,"hourOfDay":14,"minute":57,"second":57},"closePrice":136.45,"openPrice":140.25,"lowPrice":135.15,"highPrice":140.25,"lastClosePrice":139.05,"totalTradedQuantity":65226},{"priceId":0,"timeStamp":{"year":2012,"month":2,"dayOfMonth":16,"hourOfDay":14,"minute":57,"second":57},"closePrice":141.65,"openPrice":131.4,"lowPrice":131.4,"highPrice":144.2,"lastClosePrice":136.45,"totalTradedQuantity":385821},{"priceId":0,"timeStamp":{"year":2012,"month":2,"dayOfMonth":19,"hourOfDay":14,"minute":57,"second":57},"closePrice":136.55,"openPrice":142.05,"lowPrice":136.0,"highPrice":143.1,"lastClosePrice":141.65,"totalTradedQuantity":197224},{"priceId":0,"timeStamp":{"year":2012,"month":2,"dayOfMonth":20,"hourOfDay":14,"minute":57,"second":57},"closePrice":137.0,"openPrice":135.05,"lowPrice":135.0,"highPrice":139.95,"lastClosePrice":136.55,"totalTradedQuantity":266728},{"priceId":0,"timeStamp":{"year":2012,"month":2,"dayOfMonth":21,"hourOfDay":14,"minute":57,"second":57},"closePrice":137.4,"openPrice":138.2,"lowPrice":135.25,"highPrice":140.75,"lastClosePrice":137.0,"totalTradedQuantity":142711},{"priceId":0,"timeStamp":{"year":2012,"month":2,"dayOfMonth":22,"hourOfDay":14,"minute":57,"second":57},"closePrice":137.3,"openPrice":138.75,"lowPrice":136.2,"highPrice":140.0,"lastClosePrice":137.4,"totalTradedQuantity":421633},{"priceId":0,"timeStamp":{"year":2012,"month":2,"dayOfMonth":23,"hourOfDay":14,"minute":57,"second":57},"closePrice":139.5,"openPrice":138.5,"lowPrice":132.55,"highPrice":142.0,"lastClosePrice":137.3,"totalTradedQuantity":1239958},{"priceId":0,"timeStamp":{"year":2012,"month":2,"dayOfMonth":26,"hourOfDay":14,"minute":57,"second":57},"closePrice":135.9,"openPrice":139.0,"lowPrice":135.1,"highPrice":139.0,"lastClosePrice":139.5,"totalTradedQuantity":85099},{"priceId":0,"timeStamp":{"year":2012,"month":2,"dayOfMonth":27,"hourOfDay":14,"minute":57,"second":57},"closePrice":132.35,"openPrice":136.1,"lowPrice":131.2,"highPrice":137.0,"lastClosePrice":135.9,"totalTradedQuantity":415395},{"priceId":0,"timeStamp":{"year":2012,"month":2,"dayOfMonth":28,"hourOfDay":14,"minute":57,"second":57},"closePrice":134.4,"openPrice":136.95,"lowPrice":131.1,"highPrice":136.95,"lastClosePrice":132.35,"totalTradedQuantity":529451},{"priceId":0,"timeStamp":{"year":2012,"month":2,"dayOfMonth":29,"hourOfDay":14,"minute":57,"second":57},"closePrice":133.75,"openPrice":133.2,"lowPrice":132.55,"highPrice":135.75,"lastClosePrice":134.4,"totalTradedQuantity":741074},{"priceId":0,"timeStamp":{"year":2012,"month":2,"dayOfMonth":30,"hourOfDay":14,"minute":57,"second":57},"closePrice":132.95,"openPrice":135.5,"lowPrice":132.05,"highPrice":136.45,"lastClosePrice":133.75,"totalTradedQuantity":316701},{"priceId":0,"timeStamp":{"year":2012,"month":3,"dayOfMonth":2,"hourOfDay":14,"minute":57,"second":57},"closePrice":134.1,"openPrice":132.9,"lowPrice":132.2,"highPrice":134.9,"lastClosePrice":132.95,"totalTradedQuantity":193249},{"priceId":0,"timeStamp":{"year":2012,"month":3,"dayOfMonth":3,"hourOfDay":14,"minute":57,"second":57},"closePrice":134.7,"openPrice":134.5,"lowPrice":134.0,"highPrice":136.45,"lastClosePrice":134.1,"totalTradedQuantity":19815},{"priceId":0,"timeStamp":{"year":2012,"month":3,"dayOfMonth":4,"hourOfDay":14,"minute":57,"second":57},"closePrice":134.25,"openPrice":134.8,"lowPrice":133.35,"highPrice":137.0,"lastClosePrice":134.7,"totalTradedQuantity":1236500},{"priceId":0,"timeStamp":{"year":2012,"month":3,"dayOfMonth":5,"hourOfDay":14,"minute":57,"second":57},"closePrice":134.25,"openPrice":134.8,"lowPrice":133.35,"highPrice":137.0,"lastClosePrice":134.7,"totalTradedQuantity":1236500},{"priceId":0,"timeStamp":{"year":2012,"month":3,"dayOfMonth":6,"hourOfDay":14,"minute":57,"second":57},"closePrice":134.25,"openPrice":134.8,"lowPrice":133.35,"highPrice":137.0,"lastClosePrice":134.7,"totalTradedQuantity":1236500},{"priceId":0,"timeStamp":{"year":2012,"month":3,"dayOfMonth":9,"hourOfDay":14,"minute":57,"second":57},"closePrice":131.9,"openPrice":133.15,"lowPrice":130.1,"highPrice":135.95,"lastClosePrice":134.25,"totalTradedQuantity":564464},{"priceId":0,"timeStamp":{"year":2012,"month":3,"dayOfMonth":10,"hourOfDay":14,"minute":57,"second":57},"closePrice":131.3,"openPrice":131.2,"lowPrice":129.1,"highPrice":133.35,"lastClosePrice":131.9,"totalTradedQuantity":31918},{"priceId":0,"timeStamp":{"year":2012,"month":3,"dayOfMonth":11,"hourOfDay":14,"minute":57,"second":57},"closePrice":131.2,"openPrice":130.65,"lowPrice":129.05,"highPrice":132.7,"lastClosePrice":131.3,"totalTradedQuantity":102411},{"priceId":0,"timeStamp":{"year":2012,"month":3,"dayOfMonth":12,"hourOfDay":14,"minute":57,"second":57},"closePrice":130.1,"openPrice":129.0,"lowPrice":129.0,"highPrice":131.85,"lastClosePrice":131.2,"totalTradedQuantity":38440},{"priceId":0,"timeStamp":{"year":2012,"month":3,"dayOfMonth":13,"hourOfDay":14,"minute":57,"second":57},"closePrice":130.9,"openPrice":131.05,"lowPrice":130.0,"highPrice":132.0,"lastClosePrice":130.1,"totalTradedQuantity":44834},{"priceId":0,"timeStamp":{"year":2012,"month":3,"dayOfMonth":16,"hourOfDay":14,"minute":57,"second":57},"closePrice":131.55,"openPrice":130.1,"lowPrice":129.35,"highPrice":133.7,"lastClosePrice":130.9,"totalTradedQuantity":21782},{"priceId":0,"timeStamp":{"year":2012,"month":3,"dayOfMonth":17,"hourOfDay":14,"minute":57,"second":57},"closePrice":130.4,"openPrice":130.15,"lowPrice":130.0,"highPrice":133.45,"lastClosePrice":131.55,"totalTradedQuantity":57078},{"priceId":0,"timeStamp":{"year":2012,"month":3,"dayOfMonth":18,"hourOfDay":14,"minute":57,"second":57},"closePrice":130.4,"openPrice":131.0,"lowPrice":130.0,"highPrice":132.95,"lastClosePrice":130.4,"totalTradedQuantity":737545},{"priceId":0,"timeStamp":{"year":2012,"month":3,"dayOfMonth":19,"hourOfDay":14,"minute":57,"second":57},"closePrice":130.45,"openPrice":130.2,"lowPrice":129.55,"highPrice":131.4,"lastClosePrice":130.4,"totalTradedQuantity":66394},{"priceId":0,"timeStamp":{"year":2012,"month":3,"dayOfMonth":20,"hourOfDay":14,"minute":57,"second":57},"closePrice":128.6,"openPrice":131.0,"lowPrice":128.1,"highPrice":131.0,"lastClosePrice":130.45,"totalTradedQuantity":71302},{"priceId":0,"timeStamp":{"year":2012,"month":3,"dayOfMonth":23,"hourOfDay":14,"minute":57,"second":57},"closePrice":128.2,"openPrice":129.9,"lowPrice":127.2,"highPrice":129.9,"lastClosePrice":128.6,"totalTradedQuantity":23292},{"priceId":0,"timeStamp":{"year":2012,"month":3,"dayOfMonth":24,"hourOfDay":14,"minute":57,"second":57},"closePrice":127.25,"openPrice":128.75,"lowPrice":125.25,"highPrice":128.75,"lastClosePrice":128.2,"totalTradedQuantity":14389},{"priceId":0,"timeStamp":{"year":2012,"month":3,"dayOfMonth":25,"hourOfDay":14,"minute":57,"second":57},"closePrice":127.9,"openPrice":127.05,"lowPrice":127.0,"highPrice":130.5,"lastClosePrice":127.25,"totalTradedQuantity":28925},{"priceId":0,"timeStamp":{"year":2012,"month":3,"dayOfMonth":26,"hourOfDay":14,"minute":57,"second":57},"closePrice":131.25,"openPrice":128.1,"lowPrice":127.0,"highPrice":132.0,"lastClosePrice":127.9,"totalTradedQuantity":21456},{"priceId":0,"timeStamp":{"year":2012,"month":3,"dayOfMonth":27,"hourOfDay":14,"minute":57,"second":57},"closePrice":126.0,"openPrice":132.5,"lowPrice":124.6,"highPrice":135.9,"lastClosePrice":131.25,"totalTradedQuantity":94770},{"priceId":0,"timeStamp":{"year":2012,"month":3,"dayOfMonth":30,"hourOfDay":14,"minute":57,"second":57},"closePrice":127.35,"openPrice":126.95,"lowPrice":125.0,"highPrice":128.9,"lastClosePrice":126.65,"totalTradedQuantity":61432},{"priceId":0,"timeStamp":{"year":2012,"month":4,"dayOfMonth":1,"hourOfDay":14,"minute":57,"second":57},"closePrice":127.35,"openPrice":126.95,"lowPrice":125.0,"highPrice":128.9,"lastClosePrice":126.65,"totalTradedQuantity":61432},{"priceId":0,"timeStamp":{"year":2012,"month":4,"dayOfMonth":2,"hourOfDay":14,"minute":57,"second":57},"closePrice":125.25,"openPrice":128.85,"lowPrice":125.1,"highPrice":128.85,"lastClosePrice":127.35,"totalTradedQuantity":22799},{"priceId":0,"timeStamp":{"year":2012,"month":4,"dayOfMonth":3,"hourOfDay":14,"minute":57,"second":57},"closePrice":124.9,"openPrice":125.5,"lowPrice":124.1,"highPrice":126.4,"lastClosePrice":125.25,"totalTradedQuantity":39511},{"priceId":0,"timeStamp":{"year":2012,"month":4,"dayOfMonth":4,"hourOfDay":14,"minute":57,"second":57},"closePrice":120.05,"openPrice":124.15,"lowPrice":115.1,"highPrice":125.35,"lastClosePrice":124.9,"totalTradedQuantity":62659},{"priceId":0,"timeStamp":{"year":2012,"month":4,"dayOfMonth":7,"hourOfDay":14,"minute":57,"second":57},"closePrice":119.15,"openPrice":119.1,"lowPrice":115.0,"highPrice":120.95,"lastClosePrice":120.05,"totalTradedQuantity":31483},{"priceId":0,"timeStamp":{"year":2012,"month":4,"dayOfMonth":8,"hourOfDay":14,"minute":57,"second":57},"closePrice":116.95,"openPrice":118.1,"lowPrice":116.05,"highPrice":120.0,"lastClosePrice":119.15,"totalTradedQuantity":29050},{"priceId":0,"timeStamp":{"year":2012,"month":4,"dayOfMonth":9,"hourOfDay":14,"minute":57,"second":57},"closePrice":116.1,"openPrice":117.0,"lowPrice":115.0,"highPrice":117.5,"lastClosePrice":116.95,"totalTradedQuantity":17554},{"priceId":0,"timeStamp":{"year":2012,"month":4,"dayOfMonth":10,"hourOfDay":14,"minute":57,"second":57},"closePrice":117.35,"openPrice":115.05,"lowPrice":115.0,"highPrice":118.0,"lastClosePrice":116.1,"totalTradedQuantity":50669},{"priceId":0,"timeStamp":{"year":2012,"month":4,"dayOfMonth":11,"hourOfDay":14,"minute":57,"second":57},"closePrice":115.75,"openPrice":117.25,"lowPrice":115.0,"highPrice":117.3,"lastClosePrice":117.35,"totalTradedQuantity":11737},{"priceId":0,"timeStamp":{"year":2012,"month":4,"dayOfMonth":14,"hourOfDay":14,"minute":57,"second":57},"closePrice":120.15,"openPrice":115.85,"lowPrice":115.65,"highPrice":122.45,"lastClosePrice":115.75,"totalTradedQuantity":85810},{"priceId":0,"timeStamp":{"year":2012,"month":4,"dayOfMonth":15,"hourOfDay":14,"minute":57,"second":57},"closePrice":122.9,"openPrice":119.6,"lowPrice":119.6,"highPrice":125.0,"lastClosePrice":120.15,"totalTradedQuantity":60222},{"priceId":0,"timeStamp":{"year":2012,"month":4,"dayOfMonth":16,"hourOfDay":14,"minute":57,"second":57},"closePrice":118.4,"openPrice":122.1,"lowPrice":116.3,"highPrice":122.5,"lastClosePrice":122.9,"totalTradedQuantity":186348},{"priceId":0,"timeStamp":{"year":2012,"month":4,"dayOfMonth":17,"hourOfDay":14,"minute":57,"second":57},"closePrice":117.75,"openPrice":117.25,"lowPrice":116.55,"highPrice":120.9,"lastClosePrice":118.4,"totalTradedQuantity":283146},{"priceId":0,"timeStamp":{"year":2012,"month":4,"dayOfMonth":18,"hourOfDay":14,"minute":57,"second":57},"closePrice":114.1,"openPrice":117.0,"lowPrice":112.9,"highPrice":119.9,"lastClosePrice":117.75,"totalTradedQuantity":260745},{"priceId":0,"timeStamp":{"year":2012,"month":4,"dayOfMonth":21,"hourOfDay":14,"minute":57,"second":57},"closePrice":113.2,"openPrice":113.2,"lowPrice":110.5,"highPrice":115.9,"lastClosePrice":114.1,"totalTradedQuantity":158747},{"priceId":0,"timeStamp":{"year":2012,"month":4,"dayOfMonth":22,"hourOfDay":14,"minute":57,"second":57},"closePrice":110.35,"openPrice":113.45,"lowPrice":109.7,"highPrice":113.9,"lastClosePrice":113.2,"totalTradedQuantity":55469},{"priceId":0,"timeStamp":{"year":2012,"month":4,"dayOfMonth":23,"hourOfDay":14,"minute":57,"second":57},"closePrice":105.8,"openPrice":110.05,"lowPrice":104.2,"highPrice":110.8,"lastClosePrice":110.35,"totalTradedQuantity":59233},{"priceId":0,"timeStamp":{"year":2012,"month":4,"dayOfMonth":24,"hourOfDay":14,"minute":57,"second":57},"closePrice":105.05,"openPrice":106.0,"lowPrice":103.25,"highPrice":106.5,"lastClosePrice":105.8,"totalTradedQuantity":75300},{"priceId":0,"timeStamp":{"year":2012,"month":4,"dayOfMonth":25,"hourOfDay":14,"minute":57,"second":57},"closePrice":104.3,"openPrice":105.05,"lowPrice":100.1,"highPrice":106.6,"lastClosePrice":105.05,"totalTradedQuantity":93429},{"priceId":0,"timeStamp":{"year":2012,"month":4,"dayOfMonth":28,"hourOfDay":14,"minute":57,"second":57},"closePrice":104.85,"openPrice":104.3,"lowPrice":103.35,"highPrice":106.5,"lastClosePrice":104.3,"totalTradedQuantity":39742},{"priceId":0,"timeStamp":{"year":2012,"month":4,"dayOfMonth":29,"hourOfDay":14,"minute":57,"second":57},"closePrice":106.0,"openPrice":105.0,"lowPrice":105.0,"highPrice":107.8,"lastClosePrice":104.85,"totalTradedQuantity":81488},{"priceId":0,"timeStamp":{"year":2012,"month":4,"dayOfMonth":30,"hourOfDay":14,"minute":57,"second":57},"closePrice":104.3,"openPrice":103.3,"lowPrice":103.3,"highPrice":106.75,"lastClosePrice":106.0,"totalTradedQuantity":55192},{"priceId":0,"timeStamp":{"year":2012,"month":4,"dayOfMonth":31,"hourOfDay":14,"minute":57,"second":57},"closePrice":99.55,"openPrice":103.5,"lowPrice":99.0,"highPrice":105.8,"lastClosePrice":104.3,"totalTradedQuantity":90030},{"priceId":0,"timeStamp":{"year":2012,"month":5,"dayOfMonth":1,"hourOfDay":14,"minute":57,"second":57},"closePrice":106.3,"openPrice":98.6,"lowPrice":98.6,"highPrice":117.7,"lastClosePrice":99.55,"totalTradedQuantity":541942},{"priceId":0,"timeStamp":{"year":2012,"month":5,"dayOfMonth":4,"hourOfDay":14,"minute":57,"second":57},"closePrice":103.4,"openPrice":105.0,"lowPrice":102.0,"highPrice":112.4,"lastClosePrice":106.3,"totalTradedQuantity":159462},{"priceId":0,"timeStamp":{"year":2012,"month":5,"dayOfMonth":5,"hourOfDay":14,"minute":57,"second":57},"closePrice":102.3,"openPrice":104.9,"lowPrice":101.2,"highPrice":107.5,"lastClosePrice":103.4,"totalTradedQuantity":70134},{"priceId":0,"timeStamp":{"year":2012,"month":5,"dayOfMonth":6,"hourOfDay":14,"minute":57,"second":57},"closePrice":101.75,"openPrice":103.05,"lowPrice":100.5,"highPrice":104.25,"lastClosePrice":102.3,"totalTradedQuantity":164350},{"priceId":0,"timeStamp":{"year":2012,"month":5,"dayOfMonth":7,"hourOfDay":14,"minute":57,"second":57},"closePrice":102.45,"openPrice":103.8,"lowPrice":101.75,"highPrice":103.8,"lastClosePrice":101.75,"totalTradedQuantity":62765},{"priceId":0,"timeStamp":{"year":2012,"month":5,"dayOfMonth":8,"hourOfDay":14,"minute":57,"second":57},"closePrice":102.45,"openPrice":102.1,"lowPrice":101.3,"highPrice":103.4,"lastClosePrice":102.45,"totalTradedQuantity":61551},{"priceId":0,"timeStamp":{"year":2012,"month":5,"dayOfMonth":11,"hourOfDay":14,"minute":57,"second":57},"closePrice":102.25,"openPrice":102.25,"lowPrice":101.7,"highPrice":105.5,"lastClosePrice":102.45,"totalTradedQuantity":77224},{"priceId":0,"timeStamp":{"year":2012,"month":5,"dayOfMonth":12,"hourOfDay":14,"minute":57,"second":57},"closePrice":103.65,"openPrice":102.7,"lowPrice":102.1,"highPrice":104.45,"lastClosePrice":102.25,"totalTradedQuantity":43637},{"priceId":0,"timeStamp":{"year":2012,"month":5,"dayOfMonth":13,"hourOfDay":14,"minute":57,"second":57},"closePrice":103.35,"openPrice":104.05,"lowPrice":102.0,"highPrice":105.05,"lastClosePrice":103.65,"totalTradedQuantity":84046},{"priceId":0,"timeStamp":{"year":2012,"month":5,"dayOfMonth":14,"hourOfDay":14,"minute":57,"second":57},"closePrice":102.0,"openPrice":104.9,"lowPrice":101.1,"highPrice":104.9,"lastClosePrice":103.35,"totalTradedQuantity":42967},{"priceId":0,"timeStamp":{"year":2012,"month":5,"dayOfMonth":15,"hourOfDay":14,"minute":57,"second":57},"closePrice":105.3,"openPrice":103.25,"lowPrice":101.5,"highPrice":106.75,"lastClosePrice":102.0,"totalTradedQuantity":92489},{"priceId":0,"timeStamp":{"year":2012,"month":5,"dayOfMonth":18,"hourOfDay":14,"minute":57,"second":57},"closePrice":101.5,"openPrice":104.15,"lowPrice":100.55,"highPrice":107.0,"lastClosePrice":105.3,"totalTradedQuantity":40577},{"priceId":0,"timeStamp":{"year":2012,"month":5,"dayOfMonth":19,"hourOfDay":14,"minute":57,"second":57},"closePrice":101.0,"openPrice":103.45,"lowPrice":100.5,"highPrice":103.45,"lastClosePrice":101.5,"totalTradedQuantity":45372},{"priceId":0,"timeStamp":{"year":2012,"month":5,"dayOfMonth":20,"hourOfDay":14,"minute":57,"second":57},"closePrice":102.2,"openPrice":102.9,"lowPrice":101.2,"highPrice":103.45,"lastClosePrice":101.0,"totalTradedQuantity":1050656},{"priceId":0,"timeStamp":{"year":2012,"month":5,"dayOfMonth":21,"hourOfDay":14,"minute":57,"second":57},"closePrice":103.45,"openPrice":102.5,"lowPrice":101.6,"highPrice":103.95,"lastClosePrice":102.2,"totalTradedQuantity":39556},{"priceId":0,"timeStamp":{"year":2012,"month":5,"dayOfMonth":22,"hourOfDay":14,"minute":57,"second":57},"closePrice":102.2,"openPrice":102.15,"lowPrice":100.6,"highPrice":102.7,"lastClosePrice":103.45,"totalTradedQuantity":52002},{"priceId":0,"timeStamp":{"year":2012,"month":5,"dayOfMonth":25,"hourOfDay":14,"minute":57,"second":57},"closePrice":102.3,"openPrice":103.6,"lowPrice":101.5,"highPrice":104.85,"lastClosePrice":102.2,"totalTradedQuantity":45579},{"priceId":0,"timeStamp":{"year":2012,"month":5,"dayOfMonth":26,"hourOfDay":14,"minute":57,"second":57},"closePrice":101.9,"openPrice":101.8,"lowPrice":101.6,"highPrice":104.8,"lastClosePrice":102.3,"totalTradedQuantity":420200},{"priceId":0,"timeStamp":{"year":2012,"month":5,"dayOfMonth":27,"hourOfDay":14,"minute":57,"second":57},"closePrice":104.3,"openPrice":102.9,"lowPrice":102.1,"highPrice":106.2,"lastClosePrice":101.9,"totalTradedQuantity":972965},{"priceId":0,"timeStamp":{"year":2012,"month":5,"dayOfMonth":28,"hourOfDay":14,"minute":57,"second":57},"closePrice":105.35,"openPrice":104.6,"lowPrice":103.25,"highPrice":109.0,"lastClosePrice":104.3,"totalTradedQuantity":381936},{"priceId":0,"timeStamp":{"year":2012,"month":5,"dayOfMonth":29,"hourOfDay":14,"minute":57,"second":57},"closePrice":106.3,"openPrice":106.6,"lowPrice":105.55,"highPrice":107.9,"lastClosePrice":105.35,"totalTradedQuantity":75392},{"priceId":0,"timeStamp":{"year":2012,"month":6,"dayOfMonth":2,"hourOfDay":14,"minute":57,"second":57},"closePrice":108.05,"openPrice":107.45,"lowPrice":106.6,"highPrice":108.35,"lastClosePrice":106.3,"totalTradedQuantity":36723},{"priceId":0,"timeStamp":{"year":2012,"month":6,"dayOfMonth":3,"hourOfDay":14,"minute":57,"second":57},"closePrice":106.15,"openPrice":107.1,"lowPrice":105.6,"highPrice":109.5,"lastClosePrice":108.05,"totalTradedQuantity":71853},{"priceId":0,"timeStamp":{"year":2012,"month":6,"dayOfMonth":4,"hourOfDay":14,"minute":57,"second":57},"closePrice":111.95,"openPrice":107.0,"lowPrice":106.0,"highPrice":114.9,"lastClosePrice":106.15,"totalTradedQuantity":147293},{"priceId":0,"timeStamp":{"year":2012,"month":6,"dayOfMonth":5,"hourOfDay":14,"minute":57,"second":57},"closePrice":114.6,"openPrice":113.85,"lowPrice":113.2,"highPrice":116.1,"lastClosePrice":111.95,"totalTradedQuantity":96315},{"priceId":0,"timeStamp":{"year":2012,"month":6,"dayOfMonth":6,"hourOfDay":14,"minute":57,"second":57},"closePrice":113.0,"openPrice":115.8,"lowPrice":112.25,"highPrice":115.85,"lastClosePrice":114.6,"totalTradedQuantity":49311},{"priceId":0,"timeStamp":{"year":2012,"month":6,"dayOfMonth":9,"hourOfDay":14,"minute":57,"second":57},"closePrice":110.3,"openPrice":112.65,"lowPrice":109.5,"highPrice":114.3,"lastClosePrice":113.0,"totalTradedQuantity":40233},{"priceId":0,"timeStamp":{"year":2012,"month":6,"dayOfMonth":10,"hourOfDay":14,"minute":57,"second":57},"closePrice":112.2,"openPrice":109.4,"lowPrice":108.65,"highPrice":113.0,"lastClosePrice":110.3,"totalTradedQuantity":33805},{"priceId":0,"timeStamp":{"year":2012,"month":6,"dayOfMonth":11,"hourOfDay":14,"minute":57,"second":57},"closePrice":110.2,"openPrice":110.05,"lowPrice":109.8,"highPrice":113.0,"lastClosePrice":112.2,"totalTradedQuantity":22373},{"priceId":0,"timeStamp":{"year":2012,"month":6,"dayOfMonth":12,"hourOfDay":14,"minute":57,"second":57},"closePrice":108.15,"openPrice":108.0,"lowPrice":107.25,"highPrice":109.8,"lastClosePrice":110.2,"totalTradedQuantity":36741},{"priceId":0,"timeStamp":{"year":2012,"month":6,"dayOfMonth":13,"hourOfDay":14,"minute":57,"second":57},"closePrice":108.45,"openPrice":107.2,"lowPrice":106.25,"highPrice":111.65,"lastClosePrice":108.15,"totalTradedQuantity":106728},{"priceId":0,"timeStamp":{"year":2012,"month":6,"dayOfMonth":16,"hourOfDay":14,"minute":57,"second":57},"closePrice":106.2,"openPrice":108.0,"lowPrice":105.6,"highPrice":109.9,"lastClosePrice":108.45,"totalTradedQuantity":35188},{"priceId":0,"timeStamp":{"year":2012,"month":6,"dayOfMonth":17,"hourOfDay":14,"minute":57,"second":57},"closePrice":105.45,"openPrice":106.9,"lowPrice":105.1,"highPrice":107.0,"lastClosePrice":106.2,"totalTradedQuantity":28509},{"priceId":0,"timeStamp":{"year":2012,"month":6,"dayOfMonth":18,"hourOfDay":14,"minute":57,"second":57},"closePrice":102.15,"openPrice":105.9,"lowPrice":101.7,"highPrice":105.9,"lastClosePrice":105.45,"totalTradedQuantity":87247},{"priceId":0,"timeStamp":{"year":2012,"month":6,"dayOfMonth":19,"hourOfDay":14,"minute":57,"second":57},"closePrice":105.5,"openPrice":102.9,"lowPrice":100.35,"highPrice":110.9,"lastClosePrice":102.15,"totalTradedQuantity":161148},{"priceId":0,"timeStamp":{"year":2012,"month":6,"dayOfMonth":20,"hourOfDay":14,"minute":57,"second":57},"closePrice":107.2,"openPrice":105.0,"lowPrice":105.0,"highPrice":111.0,"lastClosePrice":105.5,"totalTradedQuantity":212899},{"priceId":0,"timeStamp":{"year":2012,"month":6,"dayOfMonth":23,"hourOfDay":14,"minute":57,"second":57},"closePrice":105.45,"openPrice":106.0,"lowPrice":103.25,"highPrice":106.65,"lastClosePrice":107.2,"totalTradedQuantity":74344},{"priceId":0,"timeStamp":{"year":2012,"month":6,"dayOfMonth":24,"hourOfDay":14,"minute":57,"second":57},"closePrice":104.75,"openPrice":106.55,"lowPrice":104.05,"highPrice":106.65,"lastClosePrice":105.45,"totalTradedQuantity":48126},{"priceId":0,"timeStamp":{"year":2012,"month":6,"dayOfMonth":25,"hourOfDay":14,"minute":57,"second":57},"closePrice":105.2,"openPrice":105.15,"lowPrice":104.1,"highPrice":106.5,"lastClosePrice":104.75,"totalTradedQuantity":43437},{"priceId":0,"timeStamp":{"year":2012,"month":6,"dayOfMonth":26,"hourOfDay":14,"minute":57,"second":57},"closePrice":101.65,"openPrice":105.0,"lowPrice":100.45,"highPrice":105.5,"lastClosePrice":105.2,"totalTradedQuantity":50914},{"priceId":0,"timeStamp":{"year":2012,"month":6,"dayOfMonth":27,"hourOfDay":14,"minute":57,"second":57},"closePrice":100.15,"openPrice":102.05,"lowPrice":99.9,"highPrice":104.9,"lastClosePrice":101.65,"totalTradedQuantity":109338},{"priceId":0,"timeStamp":{"year":2012,"month":6,"dayOfMonth":30,"hourOfDay":14,"minute":57,"second":57},"closePrice":101.0,"openPrice":101.75,"lowPrice":98.5,"highPrice":101.9,"lastClosePrice":100.15,"totalTradedQuantity":87208},{"priceId":0,"timeStamp":{"year":2012,"month":6,"dayOfMonth":31,"hourOfDay":14,"minute":57,"second":57},"closePrice":102.7,"openPrice":101.9,"lowPrice":100.35,"highPrice":103.35,"lastClosePrice":101.0,"totalTradedQuantity":68928},{"priceId":0,"timeStamp":{"year":2012,"month":7,"dayOfMonth":1,"hourOfDay":14,"minute":57,"second":57},"closePrice":102.6,"openPrice":102.95,"lowPrice":102.05,"highPrice":104.2,"lastClosePrice":102.7,"totalTradedQuantity":61443},{"priceId":0,"timeStamp":{"year":2012,"month":7,"dayOfMonth":2,"hourOfDay":14,"minute":57,"second":57},"closePrice":101.95,"openPrice":102.25,"lowPrice":101.3,"highPrice":103.3,"lastClosePrice":102.6,"totalTradedQuantity":67267},{"priceId":0,"timeStamp":{"year":2012,"month":7,"dayOfMonth":3,"hourOfDay":14,"minute":57,"second":57},"closePrice":100.5,"openPrice":101.95,"lowPrice":100.25,"highPrice":102.55,"lastClosePrice":101.95,"totalTradedQuantity":50521},{"priceId":0,"timeStamp":{"year":2012,"month":7,"dayOfMonth":6,"hourOfDay":14,"minute":57,"second":57},"closePrice":99.65,"openPrice":101.15,"lowPrice":96.45,"highPrice":101.95,"lastClosePrice":100.5,"totalTradedQuantity":164274},{"priceId":0,"timeStamp":{"year":2012,"month":7,"dayOfMonth":7,"hourOfDay":14,"minute":57,"second":57},"closePrice":98.35,"openPrice":100.7,"lowPrice":97.8,"highPrice":100.95,"lastClosePrice":99.65,"totalTradedQuantity":74672},{"priceId":0,"timeStamp":{"year":2012,"month":7,"dayOfMonth":8,"hourOfDay":14,"minute":57,"second":57},"closePrice":93.85,"openPrice":99.4,"lowPrice":92.95,"highPrice":99.4,"lastClosePrice":98.35,"totalTradedQuantity":199477},{"priceId":0,"timeStamp":{"year":2012,"month":7,"dayOfMonth":9,"hourOfDay":14,"minute":57,"second":57},"closePrice":86.4,"openPrice":93.9,"lowPrice":85.1,"highPrice":94.55,"lastClosePrice":93.85,"totalTradedQuantity":848173},{"priceId":0,"timeStamp":{"year":2012,"month":7,"dayOfMonth":10,"hourOfDay":14,"minute":57,"second":57},"closePrice":95.7,"openPrice":86.45,"lowPrice":83.9,"highPrice":98.0,"lastClosePrice":86.4,"totalTradedQuantity":1101247},{"priceId":0,"timeStamp":{"year":2012,"month":7,"dayOfMonth":13,"hourOfDay":14,"minute":57,"second":57},"closePrice":96.1,"openPrice":96.85,"lowPrice":94.25,"highPrice":98.3,"lastClosePrice":95.7,"totalTradedQuantity":326808},{"priceId":0,"timeStamp":{"year":2012,"month":7,"dayOfMonth":14,"hourOfDay":14,"minute":57,"second":57},"closePrice":95.2,"openPrice":95.95,"lowPrice":95.0,"highPrice":96.85,"lastClosePrice":96.1,"totalTradedQuantity":92537},{"priceId":0,"timeStamp":{"year":2012,"month":7,"dayOfMonth":15,"hourOfDay":14,"minute":57,"second":57},"closePrice":95.2,"openPrice":95.95,"lowPrice":95.0,"highPrice":96.85,"lastClosePrice":96.1,"totalTradedQuantity":92537},{"priceId":0,"timeStamp":{"year":2012,"month":7,"dayOfMonth":16,"hourOfDay":14,"minute":57,"second":57},"closePrice":98.35,"openPrice":97.25,"lowPrice":95.0,"highPrice":101.5,"lastClosePrice":95.2,"totalTradedQuantity":509259},{"priceId":0,"timeStamp":{"year":2012,"month":7,"dayOfMonth":17,"hourOfDay":14,"minute":57,"second":57},"closePrice":96.75,"openPrice":98.8,"lowPrice":96.3,"highPrice":99.4,"lastClosePrice":98.35,"totalTradedQuantity":151741},{"priceId":0,"timeStamp":{"year":2012,"month":7,"dayOfMonth":20,"hourOfDay":14,"minute":57,"second":57},"closePrice":96.75,"openPrice":98.8,"lowPrice":96.3,"highPrice":99.4,"lastClosePrice":98.35,"totalTradedQuantity":151741},{"priceId":0,"timeStamp":{"year":2012,"month":7,"dayOfMonth":21,"hourOfDay":14,"minute":57,"second":57},"closePrice":96.75,"openPrice":97.85,"lowPrice":96.45,"highPrice":98.25,"lastClosePrice":96.75,"totalTradedQuantity":133454},{"priceId":0,"timeStamp":{"year":2012,"month":7,"dayOfMonth":22,"hourOfDay":14,"minute":57,"second":57},"closePrice":97.2,"openPrice":96.5,"lowPrice":95.15,"highPrice":98.2,"lastClosePrice":96.75,"totalTradedQuantity":100905},{"priceId":0,"timeStamp":{"year":2012,"month":7,"dayOfMonth":23,"hourOfDay":14,"minute":57,"second":57},"closePrice":95.5,"openPrice":97.3,"lowPrice":95.15,"highPrice":97.4,"lastClosePrice":97.2,"totalTradedQuantity":88646},{"priceId":0,"timeStamp":{"year":2012,"month":7,"dayOfMonth":24,"hourOfDay":14,"minute":57,"second":57},"closePrice":92.3,"openPrice":96.0,"lowPrice":92.0,"highPrice":96.0,"lastClosePrice":95.5,"totalTradedQuantity":100836},{"priceId":0,"timeStamp":{"year":2012,"month":7,"dayOfMonth":27,"hourOfDay":14,"minute":57,"second":57},"closePrice":91.6,"openPrice":92.85,"lowPrice":91.1,"highPrice":94.0,"lastClosePrice":92.3,"totalTradedQuantity":60751},{"priceId":0,"timeStamp":{"year":2012,"month":7,"dayOfMonth":28,"hourOfDay":14,"minute":57,"second":57},"closePrice":86.8,"openPrice":92.0,"lowPrice":85.2,"highPrice":92.25,"lastClosePrice":91.6,"totalTradedQuantity":181667},{"priceId":0,"timeStamp":{"year":2012,"month":7,"dayOfMonth":29,"hourOfDay":14,"minute":57,"second":57},"closePrice":90.15,"openPrice":86.8,"lowPrice":84.7,"highPrice":91.0,"lastClosePrice":86.8,"totalTradedQuantity":285752},{"priceId":0,"timeStamp":{"year":2012,"month":7,"dayOfMonth":30,"hourOfDay":14,"minute":57,"second":57},"closePrice":88.45,"openPrice":91.45,"lowPrice":86.45,"highPrice":92.0,"lastClosePrice":90.15,"totalTradedQuantity":161776},{"priceId":0,"timeStamp":{"year":2012,"month":7,"dayOfMonth":31,"hourOfDay":14,"minute":57,"second":57},"closePrice":88.35,"openPrice":88.45,"lowPrice":87.25,"highPrice":89.9,"lastClosePrice":88.45,"totalTradedQuantity":61568},{"priceId":0,"timeStamp":{"year":2012,"month":8,"dayOfMonth":3,"hourOfDay":14,"minute":57,"second":57},"closePrice":91.65,"openPrice":89.4,"lowPrice":88.9,"highPrice":94.65,"lastClosePrice":88.35,"totalTradedQuantity":343539},{"priceId":0,"timeStamp":{"year":2012,"month":8,"dayOfMonth":4,"hourOfDay":14,"minute":57,"second":57},"closePrice":89.65,"openPrice":91.75,"lowPrice":89.1,"highPrice":91.95,"lastClosePrice":91.65,"totalTradedQuantity":71016},{"priceId":0,"timeStamp":{"year":2012,"month":8,"dayOfMonth":5,"hourOfDay":14,"minute":57,"second":57},"closePrice":87.85,"openPrice":89.6,"lowPrice":87.05,"highPrice":90.8,"lastClosePrice":89.65,"totalTradedQuantity":57212},{"priceId":0,"timeStamp":{"year":2012,"month":8,"dayOfMonth":6,"hourOfDay":14,"minute":57,"second":57},"closePrice":88.85,"openPrice":88.8,"lowPrice":87.5,"highPrice":89.9,"lastClosePrice":87.85,"totalTradedQuantity":56401},{"priceId":0,"timeStamp":{"year":2012,"month":8,"dayOfMonth":7,"hourOfDay":14,"minute":57,"second":57},"closePrice":87.3,"openPrice":89.75,"lowPrice":86.3,"highPrice":91.0,"lastClosePrice":88.85,"totalTradedQuantity":137467},{"priceId":0,"timeStamp":{"year":2012,"month":8,"dayOfMonth":10,"hourOfDay":14,"minute":57,"second":57},"closePrice":87.4,"openPrice":87.5,"lowPrice":86.1,"highPrice":89.45,"lastClosePrice":88.55,"totalTradedQuantity":65805},{"priceId":0,"timeStamp":{"year":2012,"month":8,"dayOfMonth":11,"hourOfDay":14,"minute":57,"second":57},"closePrice":89.05,"openPrice":87.9,"lowPrice":86.9,"highPrice":91.9,"lastClosePrice":87.4,"totalTradedQuantity":302901},{"priceId":0,"timeStamp":{"year":2012,"month":8,"dayOfMonth":12,"hourOfDay":14,"minute":57,"second":57},"closePrice":88.35,"openPrice":89.0,"lowPrice":88.2,"highPrice":90.5,"lastClosePrice":89.05,"totalTradedQuantity":101142},{"priceId":0,"timeStamp":{"year":2012,"month":8,"dayOfMonth":13,"hourOfDay":14,"minute":57,"second":57},"closePrice":87.4,"openPrice":88.35,"lowPrice":87.0,"highPrice":89.5,"lastClosePrice":88.35,"totalTradedQuantity":89570},{"priceId":0,"timeStamp":{"year":2012,"month":8,"dayOfMonth":14,"hourOfDay":14,"minute":57,"second":57},"closePrice":87.45,"openPrice":88.7,"lowPrice":87.05,"highPrice":89.05,"lastClosePrice":87.4,"totalTradedQuantity":128151},{"priceId":0,"timeStamp":{"year":2012,"month":8,"dayOfMonth":17,"hourOfDay":14,"minute":57,"second":57},"closePrice":88.05,"openPrice":88.9,"lowPrice":87.6,"highPrice":89.0,"lastClosePrice":87.45,"totalTradedQuantity":94249},{"priceId":0,"timeStamp":{"year":2012,"month":8,"dayOfMonth":18,"hourOfDay":14,"minute":57,"second":57},"closePrice":89.65,"openPrice":88.7,"lowPrice":88.1,"highPrice":91.8,"lastClosePrice":88.05,"totalTradedQuantity":282077},{"priceId":0,"timeStamp":{"year":2012,"month":8,"dayOfMonth":19,"hourOfDay":14,"minute":57,"second":57},"closePrice":89.65,"openPrice":88.7,"lowPrice":88.1,"highPrice":91.8,"lastClosePrice":88.05,"totalTradedQuantity":282077},{"priceId":0,"timeStamp":{"year":2012,"month":8,"dayOfMonth":20,"hourOfDay":14,"minute":57,"second":57},"closePrice":89.25,"openPrice":89.1,"lowPrice":88.95,"highPrice":90.3,"lastClosePrice":89.65,"totalTradedQuantity":124521},{"priceId":0,"timeStamp":{"year":2012,"month":8,"dayOfMonth":21,"hourOfDay":14,"minute":57,"second":57},"closePrice":87.05,"openPrice":88.2,"lowPrice":86.5,"highPrice":91.6,"lastClosePrice":89.25,"totalTradedQuantity":516717},{"priceId":0,"timeStamp":{"year":2012,"month":8,"dayOfMonth":24,"hourOfDay":14,"minute":57,"second":57},"closePrice":86.9,"openPrice":87.05,"lowPrice":86.3,"highPrice":90.65,"lastClosePrice":87.05,"totalTradedQuantity":511790},{"priceId":0,"timeStamp":{"year":2012,"month":8,"dayOfMonth":25,"hourOfDay":14,"minute":57,"second":57},"closePrice":87.5,"openPrice":86.55,"lowPrice":86.55,"highPrice":88.45,"lastClosePrice":86.9,"totalTradedQuantity":128122},{"priceId":0,"timeStamp":{"year":2012,"month":8,"dayOfMonth":26,"hourOfDay":14,"minute":57,"second":57},"closePrice":89.6,"openPrice":87.2,"lowPrice":87.0,"highPrice":90.75,"lastClosePrice":87.5,"totalTradedQuantity":740812},{"priceId":0,"timeStamp":{"year":2012,"month":8,"dayOfMonth":27,"hourOfDay":14,"minute":57,"second":57},"closePrice":89.35,"openPrice":94.1,"lowPrice":88.25,"highPrice":94.9,"lastClosePrice":89.6,"totalTradedQuantity":2590291},{"priceId":0,"timeStamp":{"year":2012,"month":8,"dayOfMonth":28,"hourOfDay":14,"minute":57,"second":57},"closePrice":88.55,"openPrice":90.6,"lowPrice":87.5,"highPrice":91.95,"lastClosePrice":89.35,"totalTradedQuantity":682399},{"priceId":0,"timeStamp":{"year":2012,"month":9,"dayOfMonth":1,"hourOfDay":14,"minute":57,"second":57},"closePrice":89.45,"openPrice":89.2,"lowPrice":88.4,"highPrice":90.3,"lastClosePrice":88.55,"totalTradedQuantity":288049},{"priceId":0,"timeStamp":{"year":2012,"month":9,"dayOfMonth":2,"hourOfDay":14,"minute":57,"second":57},"closePrice":89.45,"openPrice":89.2,"lowPrice":88.4,"highPrice":90.3,"lastClosePrice":88.55,"totalTradedQuantity":288049},{"priceId":0,"timeStamp":{"year":2012,"month":9,"dayOfMonth":3,"hourOfDay":14,"minute":57,"second":57},"closePrice":89.75,"openPrice":89.75,"lowPrice":89.2,"highPrice":90.45,"lastClosePrice":89.45,"totalTradedQuantity":218661},{"priceId":0,"timeStamp":{"year":2012,"month":9,"dayOfMonth":4,"hourOfDay":14,"minute":57,"second":57},"closePrice":91.7,"openPrice":90.7,"lowPrice":89.7,"highPrice":92.9,"lastClosePrice":89.75,"totalTradedQuantity":758786},{"priceId":0,"timeStamp":{"year":2012,"month":9,"dayOfMonth":5,"hourOfDay":14,"minute":57,"second":57},"closePrice":88.4,"openPrice":92.5,"lowPrice":87.8,"highPrice":92.6,"lastClosePrice":91.7,"totalTradedQuantity":409593},{"priceId":0,"timeStamp":{"year":2012,"month":9,"dayOfMonth":8,"hourOfDay":14,"minute":57,"second":57},"closePrice":87.3,"openPrice":88.9,"lowPrice":87.0,"highPrice":89.8,"lastClosePrice":88.4,"totalTradedQuantity":334014},{"priceId":0,"timeStamp":{"year":2012,"month":9,"dayOfMonth":9,"hourOfDay":14,"minute":57,"second":57},"closePrice":86.2,"openPrice":88.3,"lowPrice":86.05,"highPrice":88.3,"lastClosePrice":87.3,"totalTradedQuantity":416085},{"priceId":0,"timeStamp":{"year":2012,"month":9,"dayOfMonth":10,"hourOfDay":14,"minute":57,"second":57},"closePrice":83.4,"openPrice":86.45,"lowPrice":83.05,"highPrice":86.45,"lastClosePrice":86.2,"totalTradedQuantity":480739},{"priceId":0,"timeStamp":{"year":2012,"month":9,"dayOfMonth":11,"hourOfDay":14,"minute":57,"second":57},"closePrice":80.0,"openPrice":83.95,"lowPrice":79.3,"highPrice":84.0,"lastClosePrice":83.4,"totalTradedQuantity":1111061},{"priceId":0,"timeStamp":{"year":2012,"month":9,"dayOfMonth":12,"hourOfDay":14,"minute":57,"second":57},"closePrice":78.7,"openPrice":80.85,"lowPrice":78.5,"highPrice":81.25,"lastClosePrice":80.0,"totalTradedQuantity":532029},{"priceId":0,"timeStamp":{"year":2012,"month":9,"dayOfMonth":15,"hourOfDay":14,"minute":57,"second":57},"closePrice":80.35,"openPrice":79.3,"lowPrice":78.35,"highPrice":80.75,"lastClosePrice":78.7,"totalTradedQuantity":341555},{"priceId":0,"timeStamp":{"year":2012,"month":9,"dayOfMonth":16,"hourOfDay":14,"minute":57,"second":57},"closePrice":77.8,"openPrice":79.6,"lowPrice":77.3,"highPrice":81.3,"lastClosePrice":80.35,"totalTradedQuantity":346441},{"priceId":0,"timeStamp":{"year":2012,"month":9,"dayOfMonth":17,"hourOfDay":14,"minute":57,"second":57},"closePrice":77.45,"openPrice":88.15,"lowPrice":77.0,"highPrice":88.15,"lastClosePrice":77.8,"totalTradedQuantity":358591},{"priceId":0,"timeStamp":{"year":2012,"month":9,"dayOfMonth":18,"hourOfDay":14,"minute":57,"second":57},"closePrice":76.35,"openPrice":78.65,"lowPrice":76.0,"highPrice":78.7,"lastClosePrice":77.45,"totalTradedQuantity":403213},{"priceId":0,"timeStamp":{"year":2012,"month":9,"dayOfMonth":19,"hourOfDay":14,"minute":57,"second":57},"closePrice":76.75,"openPrice":77.1,"lowPrice":76.0,"highPrice":78.5,"lastClosePrice":76.35,"totalTradedQuantity":409066},{"priceId":0,"timeStamp":{"year":2012,"month":9,"dayOfMonth":22,"hourOfDay":14,"minute":57,"second":57},"closePrice":74.05,"openPrice":77.05,"lowPrice":73.65,"highPrice":77.05,"lastClosePrice":76.75,"totalTradedQuantity":411655},{"priceId":0,"timeStamp":{"year":2012,"month":9,"dayOfMonth":23,"hourOfDay":14,"minute":57,"second":57},"closePrice":75.05,"openPrice":74.05,"lowPrice":72.2,"highPrice":76.1,"lastClosePrice":74.05,"totalTradedQuantity":654535},{"priceId":0,"timeStamp":{"year":2012,"month":9,"dayOfMonth":24,"hourOfDay":14,"minute":57,"second":57},"closePrice":75.05,"openPrice":74.05,"lowPrice":72.2,"highPrice":76.1,"lastClosePrice":74.05,"totalTradedQuantity":654535},{"priceId":0,"timeStamp":{"year":2012,"month":9,"dayOfMonth":25,"hourOfDay":14,"minute":57,"second":57},"closePrice":77.15,"openPrice":75.55,"lowPrice":75.05,"highPrice":77.8,"lastClosePrice":75.05,"totalTradedQuantity":460313},{"priceId":0,"timeStamp":{"year":2012,"month":9,"dayOfMonth":26,"hourOfDay":14,"minute":57,"second":57},"closePrice":76.0,"openPrice":77.55,"lowPrice":75.4,"highPrice":78.95,"lastClosePrice":77.15,"totalTradedQuantity":222211},{"priceId":0,"timeStamp":{"year":2012,"month":9,"dayOfMonth":29,"hourOfDay":14,"minute":57,"second":57},"closePrice":73.9,"openPrice":75.6,"lowPrice":73.5,"highPrice":76.9,"lastClosePrice":76.0,"totalTradedQuantity":240655},{"priceId":0,"timeStamp":{"year":2012,"month":9,"dayOfMonth":30,"hourOfDay":14,"minute":57,"second":57},"closePrice":71.55,"openPrice":74.4,"lowPrice":71.1,"highPrice":74.4,"lastClosePrice":73.9,"totalTradedQuantity":268442},{"priceId":0,"timeStamp":{"year":2012,"month":9,"dayOfMonth":31,"hourOfDay":14,"minute":57,"second":57},"closePrice":71.45,"openPrice":71.9,"lowPrice":70.5,"highPrice":73.75,"lastClosePrice":71.55,"totalTradedQuantity":512253},{"priceId":0,"timeStamp":{"year":2012,"month":10,"dayOfMonth":1,"hourOfDay":14,"minute":57,"second":57},"closePrice":72.0,"openPrice":71.85,"lowPrice":71.1,"highPrice":72.55,"lastClosePrice":71.45,"totalTradedQuantity":120870},{"priceId":0,"timeStamp":{"year":2012,"month":10,"dayOfMonth":2,"hourOfDay":14,"minute":57,"second":57},"closePrice":71.9,"openPrice":72.65,"lowPrice":71.6,"highPrice":72.9,"lastClosePrice":72.0,"totalTradedQuantity":269709},{"priceId":0,"timeStamp":{"year":2012,"month":10,"dayOfMonth":5,"hourOfDay":14,"minute":57,"second":57},"closePrice":72.15,"openPrice":71.9,"lowPrice":71.65,"highPrice":72.9,"lastClosePrice":71.9,"totalTradedQuantity":246176},{"priceId":0,"timeStamp":{"year":2012,"month":10,"dayOfMonth":6,"hourOfDay":14,"minute":57,"second":57},"closePrice":72.1,"openPrice":72.35,"lowPrice":71.5,"highPrice":73.4,"lastClosePrice":72.15,"totalTradedQuantity":511615},{"priceId":0,"timeStamp":{"year":2012,"month":10,"dayOfMonth":7,"hourOfDay":14,"minute":57,"second":57},"closePrice":72.7,"openPrice":72.85,"lowPrice":72.45,"highPrice":73.7,"lastClosePrice":72.1,"totalTradedQuantity":414599},{"priceId":0,"timeStamp":{"year":2012,"month":10,"dayOfMonth":8,"hourOfDay":14,"minute":57,"second":57},"closePrice":72.35,"openPrice":72.5,"lowPrice":71.5,"highPrice":72.5,"lastClosePrice":72.7,"totalTradedQuantity":151574},{"priceId":0,"timeStamp":{"year":2012,"month":10,"dayOfMonth":9,"hourOfDay":14,"minute":57,"second":57},"closePrice":71.3,"openPrice":72.75,"lowPrice":71.1,"highPrice":73.7,"lastClosePrice":72.35,"totalTradedQuantity":169872},{"priceId":0,"timeStamp":{"year":2012,"month":10,"dayOfMonth":12,"hourOfDay":14,"minute":57,"second":57},"closePrice":71.1,"openPrice":71.8,"lowPrice":70.7,"highPrice":72.5,"lastClosePrice":71.3,"totalTradedQuantity":149735},{"priceId":0,"timeStamp":{"year":2012,"month":10,"dayOfMonth":13,"hourOfDay":14,"minute":57,"second":57},"closePrice":71.95,"openPrice":71.15,"lowPrice":71.15,"highPrice":72.25,"lastClosePrice":71.1,"totalTradedQuantity":44004},{"priceId":0,"timeStamp":{"year":2012,"month":10,"dayOfMonth":14,"hourOfDay":14,"minute":57,"second":57},"closePrice":71.95,"openPrice":71.15,"lowPrice":71.15,"highPrice":72.25,"lastClosePrice":71.1,"totalTradedQuantity":44004},{"priceId":0,"timeStamp":{"year":2012,"month":10,"dayOfMonth":15,"hourOfDay":14,"minute":57,"second":57},"closePrice":77.0,"openPrice":71.95,"lowPrice":71.3,"highPrice":77.35,"lastClosePrice":71.95,"totalTradedQuantity":1413600},{"priceId":0,"timeStamp":{"year":2012,"month":10,"dayOfMonth":16,"hourOfDay":14,"minute":57,"second":57},"closePrice":73.3,"openPrice":77.0,"lowPrice":72.3,"highPrice":79.3,"lastClosePrice":77.0,"totalTradedQuantity":944464},{"priceId":0,"timeStamp":{"year":2012,"month":10,"dayOfMonth":19,"hourOfDay":14,"minute":57,"second":57},"closePrice":71.25,"openPrice":73.55,"lowPrice":70.8,"highPrice":74.0,"lastClosePrice":73.3,"totalTradedQuantity":272872},{"priceId":0,"timeStamp":{"year":2012,"month":10,"dayOfMonth":20,"hourOfDay":14,"minute":57,"second":57},"closePrice":71.45,"openPrice":71.45,"lowPrice":71.1,"highPrice":72.55,"lastClosePrice":71.25,"totalTradedQuantity":201492},{"priceId":0,"timeStamp":{"year":2012,"month":10,"dayOfMonth":21,"hourOfDay":14,"minute":57,"second":57},"closePrice":71.7,"openPrice":71.55,"lowPrice":71.1,"highPrice":72.3,"lastClosePrice":71.45,"totalTradedQuantity":106882},{"priceId":0,"timeStamp":{"year":2012,"month":10,"dayOfMonth":22,"hourOfDay":14,"minute":57,"second":57},"closePrice":71.4,"openPrice":71.7,"lowPrice":70.9,"highPrice":72.9,"lastClosePrice":71.7,"totalTradedQuantity":161670},{"priceId":0,"timeStamp":{"year":2012,"month":10,"dayOfMonth":23,"hourOfDay":14,"minute":57,"second":57},"closePrice":71.15,"openPrice":71.2,"lowPrice":71.0,"highPrice":72.2,"lastClosePrice":71.4,"totalTradedQuantity":166071},{"priceId":0,"timeStamp":{"year":2012,"month":10,"dayOfMonth":26,"hourOfDay":14,"minute":57,"second":57},"closePrice":70.55,"openPrice":71.6,"lowPrice":70.3,"highPrice":71.9,"lastClosePrice":71.15,"totalTradedQuantity":151741},{"priceId":0,"timeStamp":{"year":2012,"month":10,"dayOfMonth":27,"hourOfDay":14,"minute":57,"second":57},"closePrice":71.05,"openPrice":71.25,"lowPrice":70.3,"highPrice":71.85,"lastClosePrice":70.55,"totalTradedQuantity":246648},{"priceId":0,"timeStamp":{"year":2012,"month":10,"dayOfMonth":28,"hourOfDay":14,"minute":57,"second":57},"closePrice":71.05,"openPrice":71.25,"lowPrice":70.3,"highPrice":71.85,"lastClosePrice":70.55,"totalTradedQuantity":246648},{"priceId":0,"timeStamp":{"year":2012,"month":10,"dayOfMonth":29,"hourOfDay":14,"minute":57,"second":57},"closePrice":70.95,"openPrice":72.8,"lowPrice":70.55,"highPrice":72.8,"lastClosePrice":71.05,"totalTradedQuantity":232692},{"priceId":0,"timeStamp":{"year":2012,"month":10,"dayOfMonth":30,"hourOfDay":14,"minute":57,"second":57},"closePrice":71.2,"openPrice":72.75,"lowPrice":71.05,"highPrice":72.75,"lastClosePrice":70.95,"totalTradedQuantity":233900},{"priceId":0,"timeStamp":{"year":2012,"month":11,"dayOfMonth":3,"hourOfDay":14,"minute":57,"second":57},"closePrice":72.65,"openPrice":71.5,"lowPrice":71.2,"highPrice":73.95,"lastClosePrice":71.2,"totalTradedQuantity":409364},{"priceId":0,"timeStamp":{"year":2012,"month":11,"dayOfMonth":4,"hourOfDay":14,"minute":57,"second":57},"closePrice":72.9,"openPrice":72.6,"lowPrice":72.2,"highPrice":73.8,"lastClosePrice":72.65,"totalTradedQuantity":187285},{"priceId":0,"timeStamp":{"year":2012,"month":11,"dayOfMonth":5,"hourOfDay":14,"minute":57,"second":57},"closePrice":73.05,"openPrice":73.3,"lowPrice":72.85,"highPrice":74.5,"lastClosePrice":72.9,"totalTradedQuantity":184500},{"priceId":0,"timeStamp":{"year":2012,"month":11,"dayOfMonth":6,"hourOfDay":14,"minute":57,"second":57},"closePrice":72.75,"openPrice":72.1,"lowPrice":72.1,"highPrice":74.1,"lastClosePrice":73.05,"totalTradedQuantity":138160},{"priceId":0,"timeStamp":{"year":2012,"month":11,"dayOfMonth":7,"hourOfDay":14,"minute":57,"second":57},"closePrice":73.25,"openPrice":72.8,"lowPrice":72.75,"highPrice":73.9,"lastClosePrice":72.75,"totalTradedQuantity":168718},{"priceId":0,"timeStamp":{"year":2012,"month":11,"dayOfMonth":10,"hourOfDay":14,"minute":57,"second":57},"closePrice":73.25,"openPrice":73.5,"lowPrice":73.0,"highPrice":74.3,"lastClosePrice":73.25,"totalTradedQuantity":156261},{"priceId":0,"timeStamp":{"year":2012,"month":11,"dayOfMonth":11,"hourOfDay":14,"minute":57,"second":57},"closePrice":72.5,"openPrice":73.6,"lowPrice":72.2,"highPrice":74.25,"lastClosePrice":73.25,"totalTradedQuantity":233463},{"priceId":0,"timeStamp":{"year":2012,"month":11,"dayOfMonth":12,"hourOfDay":14,"minute":57,"second":57},"closePrice":71.75,"openPrice":73.25,"lowPrice":71.5,"highPrice":73.35,"lastClosePrice":72.5,"totalTradedQuantity":90812},{"priceId":0,"timeStamp":{"year":2012,"month":11,"dayOfMonth":13,"hourOfDay":14,"minute":57,"second":57},"closePrice":70.6,"openPrice":72.1,"lowPrice":70.4,"highPrice":72.2,"lastClosePrice":71.75,"totalTradedQuantity":141129},{"priceId":0,"timeStamp":{"year":2012,"month":11,"dayOfMonth":14,"hourOfDay":14,"minute":57,"second":57},"closePrice":70.45,"openPrice":71.2,"lowPrice":70.15,"highPrice":71.5,"lastClosePrice":70.6,"totalTradedQuantity":153931},{"priceId":0,"timeStamp":{"year":2012,"month":11,"dayOfMonth":17,"hourOfDay":14,"minute":57,"second":57},"closePrice":69.35,"openPrice":70.3,"lowPrice":69.05,"highPrice":70.85,"lastClosePrice":70.45,"totalTradedQuantity":338052},{"priceId":0,"timeStamp":{"year":2012,"month":11,"dayOfMonth":18,"hourOfDay":14,"minute":57,"second":57},"closePrice":70.15,"openPrice":70.0,"lowPrice":69.5,"highPrice":71.9,"lastClosePrice":69.35,"totalTradedQuantity":460651},{"priceId":0,"timeStamp":{"year":2012,"month":11,"dayOfMonth":19,"hourOfDay":14,"minute":57,"second":57},"closePrice":71.1,"openPrice":70.75,"lowPrice":70.3,"highPrice":71.95,"lastClosePrice":70.15,"totalTradedQuantity":1294826},{"priceId":0,"timeStamp":{"year":2012,"month":11,"dayOfMonth":20,"hourOfDay":14,"minute":57,"second":57},"closePrice":76.8,"openPrice":71.45,"lowPrice":71.1,"highPrice":77.7,"lastClosePrice":71.1,"totalTradedQuantity":1854847},{"priceId":0,"timeStamp":{"year":2012,"month":11,"dayOfMonth":21,"hourOfDay":14,"minute":57,"second":57},"closePrice":84.1,"openPrice":77.0,"lowPrice":76.0,"highPrice":84.85,"lastClosePrice":76.8,"totalTradedQuantity":5834346},{"priceId":0,"timeStamp":{"year":2012,"month":11,"dayOfMonth":24,"hourOfDay":14,"minute":57,"second":57},"closePrice":88.75,"openPrice":85.25,"lowPrice":84.4,"highPrice":89.75,"lastClosePrice":84.1,"totalTradedQuantity":3304109},{"priceId":0,"timeStamp":{"year":2012,"month":11,"dayOfMonth":25,"hourOfDay":14,"minute":57,"second":57},"closePrice":88.75,"openPrice":85.25,"lowPrice":84.4,"highPrice":89.75,"lastClosePrice":84.1,"totalTradedQuantity":3304109},{"priceId":0,"timeStamp":{"year":2012,"month":11,"dayOfMonth":26,"hourOfDay":14,"minute":57,"second":57},"closePrice":91.1,"openPrice":89.65,"lowPrice":87.3,"highPrice":94.8,"lastClosePrice":88.75,"totalTradedQuantity":5002416},{"priceId":0,"timeStamp":{"year":2012,"month":11,"dayOfMonth":27,"hourOfDay":14,"minute":57,"second":57},"closePrice":87.5,"openPrice":91.85,"lowPrice":86.1,"highPrice":91.9,"lastClosePrice":91.1,"totalTradedQuantity":1816825},{"priceId":0,"timeStamp":{"year":2012,"month":11,"dayOfMonth":28,"hourOfDay":14,"minute":57,"second":57},"closePrice":87.85,"openPrice":87.75,"lowPrice":85.35,"highPrice":89.35,"lastClosePrice":87.5,"totalTradedQuantity":648839},{"priceId":0,"timeStamp":{"year":2012,"month":11,"dayOfMonth":31,"hourOfDay":14,"minute":57,"second":57},"closePrice":88.3,"openPrice":88.7,"lowPrice":87.75,"highPrice":90.2,"lastClosePrice":87.85,"totalTradedQuantity":577467},{"priceId":0,"timeStamp":{"year":2013,"month":0,"dayOfMonth":1,"hourOfDay":14,"minute":57,"second":57},"closePrice":91.6,"openPrice":88.65,"lowPrice":88.2,"highPrice":92.8,"lastClosePrice":88.3,"totalTradedQuantity":1534056},{"priceId":0,"timeStamp":{"year":2013,"month":0,"dayOfMonth":2,"hourOfDay":14,"minute":57,"second":57},"closePrice":89.75,"openPrice":92.35,"lowPrice":88.65,"highPrice":92.7,"lastClosePrice":91.6,"totalTradedQuantity":691132},{"priceId":0,"timeStamp":{"year":2013,"month":0,"dayOfMonth":3,"hourOfDay":14,"minute":57,"second":57},"closePrice":91.9,"openPrice":90.1,"lowPrice":89.9,"highPrice":93.0,"lastClosePrice":89.75,"totalTradedQuantity":994780},{"priceId":0,"timeStamp":{"year":2013,"month":0,"dayOfMonth":4,"hourOfDay":14,"minute":57,"second":57},"closePrice":91.2,"openPrice":91.5,"lowPrice":90.35,"highPrice":92.4,"lastClosePrice":91.9,"totalTradedQuantity":744937},{"priceId":0,"timeStamp":{"year":2013,"month":0,"dayOfMonth":7,"hourOfDay":14,"minute":57,"second":57},"closePrice":90.35,"openPrice":91.6,"lowPrice":89.6,"highPrice":92.4,"lastClosePrice":91.2,"totalTradedQuantity":321775},{"priceId":0,"timeStamp":{"year":2013,"month":0,"dayOfMonth":8,"hourOfDay":14,"minute":57,"second":57},"closePrice":91.35,"openPrice":90.85,"lowPrice":90.2,"highPrice":94.0,"lastClosePrice":90.35,"totalTradedQuantity":1352733},{"priceId":0,"timeStamp":{"year":2013,"month":0,"dayOfMonth":9,"hourOfDay":14,"minute":57,"second":57},"closePrice":89.45,"openPrice":92.2,"lowPrice":88.8,"highPrice":92.2,"lastClosePrice":91.35,"totalTradedQuantity":259002},{"priceId":0,"timeStamp":{"year":2013,"month":0,"dayOfMonth":10,"hourOfDay":14,"minute":57,"second":57},"closePrice":86.2,"openPrice":89.6,"lowPrice":83.6,"highPrice":91.5,"lastClosePrice":89.45,"totalTradedQuantity":582971},{"priceId":0,"timeStamp":{"year":2013,"month":0,"dayOfMonth":11,"hourOfDay":14,"minute":57,"second":57},"closePrice":82.7,"openPrice":80.2,"lowPrice":80.2,"highPrice":85.8,"lastClosePrice":86.2,"totalTradedQuantity":446357},{"priceId":0,"timeStamp":{"year":2013,"month":0,"dayOfMonth":14,"hourOfDay":14,"minute":57,"second":57},"closePrice":81.1,"openPrice":83.4,"lowPrice":80.3,"highPrice":83.5,"lastClosePrice":82.7,"totalTradedQuantity":280940},{"priceId":0,"timeStamp":{"year":2013,"month":0,"dayOfMonth":15,"hourOfDay":14,"minute":57,"second":57},"closePrice":85.15,"openPrice":81.45,"lowPrice":81.4,"highPrice":86.2,"lastClosePrice":81.1,"totalTradedQuantity":471457},{"priceId":0,"timeStamp":{"year":2013,"month":0,"dayOfMonth":16,"hourOfDay":14,"minute":57,"second":57},"closePrice":83.35,"openPrice":85.5,"lowPrice":83.05,"highPrice":86.2,"lastClosePrice":85.15,"totalTradedQuantity":337873},{"priceId":0,"timeStamp":{"year":2013,"month":0,"dayOfMonth":17,"hourOfDay":14,"minute":57,"second":57},"closePrice":82.85,"openPrice":83.8,"lowPrice":81.9,"highPrice":83.8,"lastClosePrice":83.35,"totalTradedQuantity":182854},{"priceId":0,"timeStamp":{"year":2013,"month":0,"dayOfMonth":18,"hourOfDay":14,"minute":57,"second":57},"closePrice":83.75,"openPrice":82.55,"lowPrice":82.55,"highPrice":85.2,"lastClosePrice":82.85,"totalTradedQuantity":238787},{"priceId":0,"timeStamp":{"year":2013,"month":0,"dayOfMonth":21,"hourOfDay":14,"minute":57,"second":57},"closePrice":82.9,"openPrice":84.6,"lowPrice":82.6,"highPrice":84.6,"lastClosePrice":83.75,"totalTradedQuantity":124729},{"priceId":0,"timeStamp":{"year":2013,"month":0,"dayOfMonth":22,"hourOfDay":14,"minute":57,"second":57},"closePrice":81.65,"openPrice":83.0,"lowPrice":81.05,"highPrice":83.7,"lastClosePrice":82.9,"totalTradedQuantity":114420},{"priceId":0,"timeStamp":{"year":2013,"month":0,"dayOfMonth":23,"hourOfDay":14,"minute":57,"second":57},"closePrice":79.35,"openPrice":86.0,"lowPrice":79.0,"highPrice":86.0,"lastClosePrice":81.65,"totalTradedQuantity":294040},{"priceId":0,"timeStamp":{"year":2013,"month":0,"dayOfMonth":24,"hourOfDay":14,"minute":57,"second":57},"closePrice":75.35,"openPrice":79.85,"lowPrice":74.6,"highPrice":79.85,"lastClosePrice":79.35,"totalTradedQuantity":334521},{"priceId":0,"timeStamp":{"year":2013,"month":0,"dayOfMonth":25,"hourOfDay":14,"minute":57,"second":57},"closePrice":78.05,"openPrice":75.5,"lowPrice":74.65,"highPrice":79.45,"lastClosePrice":75.35,"totalTradedQuantity":236371},{"priceId":0,"timeStamp":{"year":2013,"month":0,"dayOfMonth":28,"hourOfDay":14,"minute":57,"second":57},"closePrice":76.8,"openPrice":78.65,"lowPrice":76.1,"highPrice":79.65,"lastClosePrice":78.05,"totalTradedQuantity":121731},{"priceId":0,"timeStamp":{"year":2013,"month":0,"dayOfMonth":29,"hourOfDay":14,"minute":57,"second":57},"closePrice":77.7,"openPrice":76.9,"lowPrice":74.55,"highPrice":78.8,"lastClosePrice":76.8,"totalTradedQuantity":156175},{"priceId":0,"timeStamp":{"year":2013,"month":0,"dayOfMonth":30,"hourOfDay":14,"minute":57,"second":57},"closePrice":76.25,"openPrice":78.05,"lowPrice":76.0,"highPrice":79.0,"lastClosePrice":77.7,"totalTradedQuantity":107237},{"priceId":0,"timeStamp":{"year":2013,"month":0,"dayOfMonth":31,"hourOfDay":14,"minute":57,"second":57},"closePrice":77.0,"openPrice":77.0,"lowPrice":74.8,"highPrice":77.9,"lastClosePrice":76.25,"totalTradedQuantity":190331},{"priceId":0,"timeStamp":{"year":2013,"month":1,"dayOfMonth":1,"hourOfDay":14,"minute":57,"second":57},"closePrice":76.1,"openPrice":76.9,"lowPrice":75.2,"highPrice":77.6,"lastClosePrice":77.0,"totalTradedQuantity":108033},{"priceId":0,"timeStamp":{"year":2013,"month":1,"dayOfMonth":4,"hourOfDay":14,"minute":57,"second":57},"closePrice":74.7,"openPrice":77.6,"lowPrice":74.0,"highPrice":77.6,"lastClosePrice":76.1,"totalTradedQuantity":68748},{"priceId":0,"timeStamp":{"year":2013,"month":1,"dayOfMonth":5,"hourOfDay":14,"minute":57,"second":57},"closePrice":73.85,"openPrice":74.15,"lowPrice":72.5,"highPrice":75.0,"lastClosePrice":74.7,"totalTradedQuantity":93513},{"priceId":0,"timeStamp":{"year":2013,"month":1,"dayOfMonth":6,"hourOfDay":14,"minute":57,"second":57},"closePrice":74.55,"openPrice":74.4,"lowPrice":73.85,"highPrice":75.9,"lastClosePrice":73.85,"totalTradedQuantity":96322},{"priceId":0,"timeStamp":{"year":2013,"month":1,"dayOfMonth":7,"hourOfDay":14,"minute":57,"second":57},"closePrice":73.5,"openPrice":74.6,"lowPrice":73.1,"highPrice":75.25,"lastClosePrice":74.55,"totalTradedQuantity":96298},{"priceId":0,"timeStamp":{"year":2013,"month":1,"dayOfMonth":8,"hourOfDay":14,"minute":57,"second":57},"closePrice":72.85,"openPrice":74.8,"lowPrice":71.85,"highPrice":74.8,"lastClosePrice":73.5,"totalTradedQuantity":96964},{"priceId":0,"timeStamp":{"year":2013,"month":1,"dayOfMonth":11,"hourOfDay":14,"minute":57,"second":57},"closePrice":73.7,"openPrice":72.8,"lowPrice":72.0,"highPrice":74.3,"lastClosePrice":72.85,"totalTradedQuantity":127271},{"priceId":0,"timeStamp":{"year":2013,"month":1,"dayOfMonth":12,"hourOfDay":14,"minute":57,"second":57},"closePrice":73.85,"openPrice":74.1,"lowPrice":73.05,"highPrice":74.75,"lastClosePrice":73.7,"totalTradedQuantity":66512},{"priceId":0,"timeStamp":{"year":2013,"month":1,"dayOfMonth":13,"hourOfDay":14,"minute":57,"second":57},"closePrice":73.6,"openPrice":74.0,"lowPrice":73.35,"highPrice":75.7,"lastClosePrice":73.85,"totalTradedQuantity":90153},{"priceId":0,"timeStamp":{"year":2013,"month":1,"dayOfMonth":14,"hourOfDay":14,"minute":57,"second":57},"closePrice":71.45,"openPrice":73.8,"lowPrice":70.85,"highPrice":73.8,"lastClosePrice":73.6,"totalTradedQuantity":67478},{"priceId":0,"timeStamp":{"year":2013,"month":1,"dayOfMonth":15,"hourOfDay":14,"minute":57,"second":57},"closePrice":70.55,"openPrice":71.4,"lowPrice":69.8,"highPrice":71.95,"lastClosePrice":71.45,"totalTradedQuantity":277602},{"priceId":0,"timeStamp":{"year":2013,"month":1,"dayOfMonth":18,"hourOfDay":14,"minute":57,"second":57},"closePrice":72.8,"openPrice":71.0,"lowPrice":70.5,"highPrice":75.9,"lastClosePrice":70.55,"totalTradedQuantity":320950}]}] as "text/html" using [org.springframework.http.converter.StringHttpMessageConverter@2792412e]
Null ModelAndView returned to DispatcherServlet with name 'appServlet': assuming HandlerAdapter completed request handling
Successfully completed request
DispatcherServlet with name 'appServlet' processing GET request for [/portfolio/addInvestment/myFirstTime/AMTEKAUTO]
Matching patterns for request [/portfolio/addInvestment/myFirstTime/AMTEKAUTO] are [/portfolio/addInvestment/{portfolioName}/{symbolName}]
URI Template variables for request [/portfolio/addInvestment/myFirstTime/AMTEKAUTO] are {portfolioName=myFirstTime, symbolName=AMTEKAUTO}
Mapping [/portfolio/addInvestment/myFirstTime/AMTEKAUTO] to HandlerExecutionChain with handler [com.inteltrader.rest.PortfolioServiceRest@263f3beb] and 2 interceptors
Last-Modified value for [/portfolio/addInvestment/myFirstTime/AMTEKAUTO] is: -1
Invoking request handler method: public org.springframework.http.ResponseEntity com.inteltrader.rest.PortfolioServiceRest.addInvestment(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
begin
Obtaining JDBC connection
Opening new JDBC connection
Created connection to: jdbc:mysql://localhost:3306/TRADER_DB, Isolation Level: 4
Obtained JDBC connection
initial autocommit status: true
disabling autocommit
Loading entity: [com.inteltrader.entity.Portfolio#myFirstTime]
select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Result set row: 0
Result row: EntityKey[com.inteltrader.entity.Investment#1], EntityKey[com.inteltrader.entity.Portfolio#myFirstTime]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Result set row: 1
Result row: EntityKey[com.inteltrader.entity.Investment#2], EntityKey[com.inteltrader.entity.Portfolio#myFirstTime]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Resolving associations for [com.inteltrader.entity.Investment#1]
Done materializing entity [com.inteltrader.entity.Investment#1]
Resolving associations for [com.inteltrader.entity.Portfolio#myFirstTime]
Done materializing entity [com.inteltrader.entity.Portfolio#myFirstTime]
Resolving associations for [com.inteltrader.entity.Investment#2]
Done materializing entity [com.inteltrader.entity.Investment#2]
1 collections were found in result set for role: com.inteltrader.entity.Portfolio.investmentList
Collection fully initialized: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
1 collections initialized for role: com.inteltrader.entity.Portfolio.investmentList
Done entity load
Loading collection: [com.inteltrader.entity.Investment.transactionsList#1]
select transactio0_.INVESTMENT_ID as INVESTMENT1_2_0_, transactio0_.quantity as quantity3_0_, transactio0_.transactionId as transact3_3_0_, transactio0_.transactionPrice as transact4_3_0_ from TRADER_DB.INVESTMENT_TRANSACTION transactio0_ where transactio0_.INVESTMENT_ID=?
Result set contains (possibly empty) collection: [com.inteltrader.entity.Investment.transactionsList#1]
1 collections were found in result set for role: com.inteltrader.entity.Investment.transactionsList
Collection fully initialized: [com.inteltrader.entity.Investment.transactionsList#1]
1 collections initialized for role: com.inteltrader.entity.Investment.transactionsList
Done loading collection
Loading collection: [com.inteltrader.entity.Investment.transactionsList#2]
select transactio0_.INVESTMENT_ID as INVESTMENT1_2_0_, transactio0_.quantity as quantity3_0_, transactio0_.transactionId as transact3_3_0_, transactio0_.transactionPrice as transact4_3_0_ from TRADER_DB.INVESTMENT_TRANSACTION transactio0_ where transactio0_.INVESTMENT_ID=?
Result set contains (possibly empty) collection: [com.inteltrader.entity.Investment.transactionsList#2]
1 collections were found in result set for role: com.inteltrader.entity.Investment.transactionsList
Collection fully initialized: [com.inteltrader.entity.Investment.transactionsList#2]
1 collections initialized for role: com.inteltrader.entity.Investment.transactionsList
Done loading collection
committing
Processing flush-time cascades
Executing identity-insert immediately
insert into TRADER_DB.INVESTMENT (associatedPortfolio_PORTFOLIO_NAME, currentPrice, quantity, INVESTMENT_SYMBOL) values (?, ?, ?, ?)
Natively generated identity: 3
Dirty checking collections
Collection dirty: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Collection found: [com.inteltrader.entity.Investment.transactionsList#1], was: [com.inteltrader.entity.Investment.transactionsList#1] (initialized)
Collection found: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime], was: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime] (initialized)
Collection found: [com.inteltrader.entity.Investment.transactionsList#2], was: [com.inteltrader.entity.Investment.transactionsList#2] (initialized)
Collection found: [com.inteltrader.entity.Investment.transactionsList#3], was: [<unreferenced>] (initialized)
Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
Flushed: 1 (re)creations, 1 updates, 0 removals to 4 collections
Listing entities:
com.inteltrader.entity.Investment{investmentId=3, quantity=null, currentPrice=null, symbolName=AMTEKAUTO, associatedPortfolio=com.inteltrader.entity.Portfolio#myFirstTime, transactionsList=[]}
com.inteltrader.entity.Investment{investmentId=2, quantity=null, currentPrice=null, symbolName=CIPLA, associatedPortfolio=com.inteltrader.entity.Portfolio#myFirstTime, transactionsList=[]}
com.inteltrader.entity.Investment{investmentId=1, quantity=null, currentPrice=null, symbolName=AMTEKAUTO, associatedPortfolio=com.inteltrader.entity.Portfolio#myFirstTime, transactionsList=[]}
com.inteltrader.entity.Portfolio{portfolioName=myFirstTime, investmentList=[com.inteltrader.entity.Investment#1, com.inteltrader.entity.Investment#2, com.inteltrader.entity.Investment#3]}
Inserting collection: [com.inteltrader.entity.Investment.transactionsList#3]
Collection was empty
committed JDBC Connection
re-enabling autocommit
Written [SUCCESS] as "text/html" using [org.springframework.http.converter.StringHttpMessageConverter@2792412e]
Null ModelAndView returned to DispatcherServlet with name 'appServlet': assuming HandlerAdapter completed request handling
Successfully completed request
DispatcherServlet with name 'appServlet' processing GET request for [/instrument/update/MyFirstTime]
Matching patterns for request [/instrument/update/MyFirstTime] are [/instrument/update/{portfolioName}]
URI Template variables for request [/instrument/update/MyFirstTime] are {portfolioName=MyFirstTime}
Mapping [/instrument/update/MyFirstTime] to HandlerExecutionChain with handler [com.inteltrader.rest.InstrumentServiceRest@71c219ef] and 2 interceptors
Last-Modified value for [/instrument/update/MyFirstTime] is: -1
Invoking request handler method: public org.springframework.http.ResponseEntity com.inteltrader.rest.InstrumentServiceRest.updateInstruments(java.lang.String,javax.servlet.http.HttpServletRequest)
Loading entity: [com.inteltrader.entity.Portfolio#MyFirstTime]
Obtaining JDBC connection
Opening new JDBC connection
Created connection to: jdbc:mysql://localhost:3306/TRADER_DB, Isolation Level: 4
Obtained JDBC connection
select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Result set row: 0
Result row: EntityKey[com.inteltrader.entity.Investment#1], EntityKey[com.inteltrader.entity.Portfolio#MyFirstTime]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Result set row: 1
Result row: EntityKey[com.inteltrader.entity.Investment#2], EntityKey[com.inteltrader.entity.Portfolio#MyFirstTime]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Result set row: 2
Result row: EntityKey[com.inteltrader.entity.Investment#3], EntityKey[com.inteltrader.entity.Portfolio#MyFirstTime]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Resolving associations for [com.inteltrader.entity.Investment#1]
Loading entity: [com.inteltrader.entity.Portfolio#myFirstTime]
select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Result set row: 0
Result row: EntityKey[com.inteltrader.entity.Investment#1], EntityKey[com.inteltrader.entity.Portfolio#myFirstTime]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Result set row: 1
Result row: EntityKey[com.inteltrader.entity.Investment#2], EntityKey[com.inteltrader.entity.Portfolio#myFirstTime]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Result set row: 2
Result row: EntityKey[com.inteltrader.entity.Investment#3], EntityKey[com.inteltrader.entity.Portfolio#myFirstTime]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Resolving associations for [com.inteltrader.entity.Portfolio#myFirstTime]
Done materializing entity [com.inteltrader.entity.Portfolio#myFirstTime]
No collections were found in result set for role: com.inteltrader.entity.Portfolio.investmentList
Done entity load
Done materializing entity [com.inteltrader.entity.Investment#1]
Resolving associations for [com.inteltrader.entity.Portfolio#MyFirstTime]
Done materializing entity [com.inteltrader.entity.Portfolio#MyFirstTime]
Resolving associations for [com.inteltrader.entity.Investment#2]
Done materializing entity [com.inteltrader.entity.Investment#2]
Resolving associations for [com.inteltrader.entity.Investment#3]
Done materializing entity [com.inteltrader.entity.Investment#3]
1 collections were found in result set for role: com.inteltrader.entity.Portfolio.investmentList
Collection fully initialized: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
1 collections initialized for role: com.inteltrader.entity.Portfolio.investmentList
Loading collection: [com.inteltrader.entity.Portfolio.investmentList#MyFirstTime]
select investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_1_, investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.associatedPortfolio_PORTFOLIO_NAME=?
Result set contains (possibly empty) collection: [com.inteltrader.entity.Portfolio.investmentList#MyFirstTime]
Result set row: 0
Result row: EntityKey[com.inteltrader.entity.Investment#1]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Result set row: 1
Result row: EntityKey[com.inteltrader.entity.Investment#2]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Result set row: 2
Result row: EntityKey[com.inteltrader.entity.Investment#3]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
1 collections were found in result set for role: com.inteltrader.entity.Portfolio.investmentList
Collection fully initialized: [com.inteltrader.entity.Portfolio.investmentList#MyFirstTime]
1 collections initialized for role: com.inteltrader.entity.Portfolio.investmentList
Done loading collection
Done entity load
Written [SUCCESS] as "text/html" using [org.springframework.http.converter.StringHttpMessageConverter@2792412e]
Null ModelAndView returned to DispatcherServlet with name 'appServlet': assuming HandlerAdapter completed request handling
Successfully completed request
Initializing servlet 'appServlet'
Initializing new StandardServletEnvironment
Adding [servletConfigInitParams] PropertySource with lowest search precedence
Adding [servletContextInitParams] PropertySource with lowest search precedence
Adding [jndiProperties] PropertySource with lowest search precedence
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment]
FrameworkServlet 'appServlet': initialization started
Servlet with name 'appServlet' will try to create custom WebApplicationContext context of class 'org.springframework.web.context.support.XmlWebApplicationContext', using parent context [Root WebApplicationContext: startup date [Fri Apr 19 15:03:44 IST 2013]; root of context hierarchy]
Searching for key 'spring.profiles.active' in [servletConfigInitParams]
Searching for key 'spring.profiles.active' in [servletContextInitParams]
Searching for key 'spring.profiles.active' in [jndiProperties]
Looking up JNDI object with name [java:comp/env/spring.profiles.active]
Converted JNDI name [java:comp/env/spring.profiles.active] not found - trying original name [spring.profiles.active]. javax.naming.NameNotFoundException: Name [spring.profiles.active] is not bound in this Context. Unable to find [spring.profiles.active].
Looking up JNDI object with name [spring.profiles.active]
JNDI lookup for name [spring.profiles.active] threw NamingException with message: Name [spring.profiles.active] is not bound in this Context. Unable to find [spring.profiles.active].. Returning null.
Searching for key 'spring.profiles.active' in [systemProperties]
Searching for key 'spring.profiles.active' in [systemEnvironment]
Could not find key 'spring.profiles.active' in any property source. Returning [null]
Searching for key 'spring.profiles.default' in [servletConfigInitParams]
Searching for key 'spring.profiles.default' in [servletContextInitParams]
Searching for key 'spring.profiles.default' in [jndiProperties]
Looking up JNDI object with name [java:comp/env/spring.profiles.default]
Converted JNDI name [java:comp/env/spring.profiles.default] not found - trying original name [spring.profiles.default]. javax.naming.NameNotFoundException: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].
Looking up JNDI object with name [spring.profiles.default]
JNDI lookup for name [spring.profiles.default] threw NamingException with message: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].. Returning null.
Searching for key 'spring.profiles.default' in [systemProperties]
Searching for key 'spring.profiles.default' in [systemEnvironment]
Could not find key 'spring.profiles.default' in any property source. Returning [null]
Searching for key 'spring.profiles.default' in [servletConfigInitParams]
Searching for key 'spring.profiles.default' in [servletContextInitParams]
Searching for key 'spring.profiles.default' in [jndiProperties]
Looking up JNDI object with name [java:comp/env/spring.profiles.default]
Converted JNDI name [java:comp/env/spring.profiles.default] not found - trying original name [spring.profiles.default]. javax.naming.NameNotFoundException: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].
Looking up JNDI object with name [spring.profiles.default]
JNDI lookup for name [spring.profiles.default] threw NamingException with message: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].. Returning null.
Searching for key 'spring.profiles.default' in [systemProperties]
Searching for key 'spring.profiles.default' in [systemEnvironment]
Could not find key 'spring.profiles.default' in any property source. Returning [null]
Replacing [servletContextInitParams] PropertySource with [servletContextInitParams]
Replacing [servletConfigInitParams] PropertySource with [servletConfigInitParams]
Refreshing WebApplicationContext for namespace 'appServlet-servlet': startup date [Fri Apr 19 15:03:47 IST 2013]; parent: Root WebApplicationContext
Initializing new StandardEnvironment
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
Initializing new StandardEnvironment
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
Loading schema mappings from [META-INF/spring.schemas]
Loaded schema mappings: {http://www.springframework.org/schema/data/jpa/spring-jpa-1.2.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.2.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.1.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.1.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.5.xsd=org/springframework/data/repository/config/spring-repository-1.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.0.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.3.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.4.xsd=org/springframework/data/repository/config/spring-repository-1.4.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.3.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/data/repository/spring-repository.xsd=org/springframework/data/repository/config/spring-repository-1.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.0.xsd=org/springframework/data/repository/config/spring-repository-1.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.1.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.1.xsd
Found XML schema [http://www.springframework.org/schema/task/spring-task-3.0.xsd] in classpath: org/springframework/scheduling/config/spring-task-3.0.xsd
Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd
Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd
Found XML schema [http://www.springframework.org/schema/tx/spring-tx-3.1.xsd] in classpath: org/springframework/transaction/config/spring-tx-3.1.xsd
Loading bean definitions
Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/data/repository=org.springframework.data.repository.config.RepositoryNameSpaceHandler, http://www.springframework.org/schema/data/jpa=org.springframework.data.jpa.repository.config.JpaRepositoryNameSpaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
Neither XML 'id' nor 'name' specified - using generated bean name [org.springframework.web.servlet.view.InternalResourceViewResolver#0]
Neither XML 'id' nor 'name' specified - using generated bean name [org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver#ad65e6a]
Initializing new StandardEnvironment
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
Looking for matching resources in directory tree [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Resolved location pattern [classpath*:com/inteltrader/**/*.class] to resources [file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\Advice.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\FIFOList.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\InstrumentVo.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\Strategies.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\Strategy.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\StrategyMACD.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao\IInstrumentDao.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao\InstrumentDao.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao\IPortfolioDao.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao\PortfolioDao.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Instrument.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Investment.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Portfolio.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Price.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Transactions.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest\InstrumentServiceRest.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest\PortfolioServiceRest.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\AnalyserService.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\CronService.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\InstrumentService.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\InstrumentServiceImpl.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\PortfolioService.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\PortfolioServiceImpl.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util\DownloadZip.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util\ExtractZipFile.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util\ReadPriceCsv.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util\RestCodes.class]]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Instrument.class]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Investment.class]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Portfolio.class]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest\InstrumentServiceRest.class]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest\PortfolioServiceRest.class]
Loaded 21 bean definitions from location pattern [/WEB-INF/applicationContext.xml]
Bean factory for WebApplicationContext for namespace 'appServlet-servlet': org.springframework.beans.factory.support.DefaultListableBeanFactory@7fd086b4: defining beans [org.springframework.context.annotation.internalAsyncAnnotationProcessor,org.springframework.context.annotation.internalScheduledAnnotationProcessor,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0,org.springframework.web.servlet.view.InternalResourceViewResolver#0,instrumentDao,portfolioDao,instrumentService,portfolioService,entityManagerFactory,transactionManager,instrument,investment,portfolio,instrumentServiceRest,portfolioServiceRest]; parent: org.springframework.beans.factory.support.DefaultListableBeanFactory@76039e99
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@7af6083c]
Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@2e96da35]
Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.DelegatingThemeSource@31cfe578]
Creating shared instance of singleton bean 'entityManagerFactory'
Creating instance of bean 'entityManagerFactory'
Eagerly caching bean 'entityManagerFactory' to allow for resolving potential circular references
Creating instance of bean 'org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver#ad65e6a'
Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Creating instance of bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0' to allow for resolving potential circular references
Creating instance of bean '(inner bean)'
Creating shared instance of singleton bean 'transactionManager'
Creating instance of bean 'transactionManager'
Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
Returning eagerly cached instance of singleton bean 'entityManagerFactory' that is not fully initialized yet - a consequence of a circular reference
Ignoring currently created advisor 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0': Error creating bean with name 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0': Cannot create inner bean '(inner bean)' of type [org.springframework.transaction.interceptor.TransactionInterceptor] while setting bean property 'transactionInterceptor'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)': Cannot resolve reference to bean 'transactionManager' while setting bean property 'transactionManager'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'transactionManager' defined in ServletContext resource [/WEB-INF/applicationContext.xml]: Cannot resolve reference to bean 'entityManagerFactory' while setting bean property 'entityManagerFactory'; nested exception is org.springframework.beans.factory.BeanCurrentlyInCreationException: Error creating bean with name 'entityManagerFactory': FactoryBean which is currently in creation returned null from getObject
Finished creating instance of bean 'org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver#ad65e6a'
Invoking afterPropertiesSet() on bean with name 'entityManagerFactory'
Building JPA container EntityManagerFactory for persistence unit 'intelTrader'
Adding type registration boolean -> org.hibernate.type.BooleanType@71128db2
Adding type registration boolean -> org.hibernate.type.BooleanType@71128db2
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@71128db2
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2fbb968d
Adding type registration true_false -> org.hibernate.type.TrueFalseType@7fd8ddf0
Adding type registration yes_no -> org.hibernate.type.YesNoType@1e0a0cbc
Adding type registration byte -> org.hibernate.type.ByteType@3c053625
Adding type registration byte -> org.hibernate.type.ByteType@3c053625
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3c053625
Adding type registration character -> org.hibernate.type.CharacterType@66ee596d
Adding type registration char -> org.hibernate.type.CharacterType@66ee596d
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@66ee596d
Adding type registration short -> org.hibernate.type.ShortType@37d5e75e
Adding type registration short -> org.hibernate.type.ShortType@37d5e75e
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@37d5e75e
Adding type registration integer -> org.hibernate.type.IntegerType@55a07b74
Adding type registration int -> org.hibernate.type.IntegerType@55a07b74
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@55a07b74
Adding type registration long -> org.hibernate.type.LongType@25f78f08
Adding type registration long -> org.hibernate.type.LongType@25f78f08
Adding type registration java.lang.Long -> org.hibernate.type.LongType@25f78f08
Adding type registration float -> org.hibernate.type.FloatType@51c1496
Adding type registration float -> org.hibernate.type.FloatType@51c1496
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@51c1496
Adding type registration double -> org.hibernate.type.DoubleType@58aeee2
Adding type registration double -> org.hibernate.type.DoubleType@58aeee2
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@58aeee2
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6faaa6f3
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6faaa6f3
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5c57cb28
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5c57cb28
Adding type registration string -> org.hibernate.type.StringType@4a55ddd0
Adding type registration java.lang.String -> org.hibernate.type.StringType@4a55ddd0
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@22e31699
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@44480328
Adding type registration url -> org.hibernate.type.UrlType@6d7bee23
Adding type registration java.net.URL -> org.hibernate.type.UrlType@6d7bee23
Adding type registration date -> org.hibernate.type.DateType@1dc5c394
Adding type registration java.sql.Date -> org.hibernate.type.DateType@1dc5c394
Adding type registration time -> org.hibernate.type.TimeType@47bed53c
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@47bed53c
Adding type registration timestamp -> org.hibernate.type.TimestampType@25d496c7
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@25d496c7
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@25d496c7
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@e9b3f1
Adding type registration calendar -> org.hibernate.type.CalendarType@4a407c9f
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4a407c9f
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4a407c9f
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@78e524cc
Adding type registration locale -> org.hibernate.type.LocaleType@53eaf4b3
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@53eaf4b3
Adding type registration currency -> org.hibernate.type.CurrencyType@44221cdd
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@44221cdd
Adding type registration timezone -> org.hibernate.type.TimeZoneType@2194d8f5
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2194d8f5
Adding type registration class -> org.hibernate.type.ClassType@37df8f67
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@37df8f67
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2e705eeb
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2e705eeb
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@623cb8f1
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@4964cd4e
Adding type registration binary -> org.hibernate.type.BinaryType@565c0697
Adding type registration byte[] -> org.hibernate.type.BinaryType@565c0697
Adding type registration [B -> org.hibernate.type.BinaryType@565c0697
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@164bbee7
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@164bbee7
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@164bbee7
Adding type registration image -> org.hibernate.type.ImageType@259704c2
Adding type registration characters -> org.hibernate.type.CharArrayType@53ab1b13
Adding type registration char[] -> org.hibernate.type.CharArrayType@53ab1b13
Adding type registration [C -> org.hibernate.type.CharArrayType@53ab1b13
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@53c427e3
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@53c427e3
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@53c427e3
Adding type registration text -> org.hibernate.type.TextType@23573e80
Adding type registration ntext -> org.hibernate.type.NTextType@29403193
Adding type registration blob -> org.hibernate.type.BlobType@3be4614a
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3be4614a
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1297e48e
Adding type registration clob -> org.hibernate.type.ClobType@10019d31
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@10019d31
Adding type registration nclob -> org.hibernate.type.NClobType@3f3e10bc
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3f3e10bc
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@41286cc9
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@557ab5c0
Adding type registration serializable -> org.hibernate.type.SerializableType@63c1ab8d
Adding type registration object -> org.hibernate.type.ObjectType@7d0212b9
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7d0212b9
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@47e242d4
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5791912a
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@15d18950
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6f8dee60
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4f1d19d7
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7f8b9ad4
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@266215b7
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@717fb510
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Processing PersistenceUnitInfo [
	name: intelTrader
	persistence provider classname: org.hibernate.ejb.HibernatePersistence
	classloader: WebappClassLoader
  context: 
  delegate: false
  repositories:
    /WEB-INF/classes/
----------> Parent Classloader:
ClassRealm[plugin>org.apache.tomcat.maven:tomcat7-maven-plugin:2.0, parent: sun.misc.Launcher$AppClassLoader@1875303f]

	Temporary classloader: org.springframework.instrument.classloading.SimpleThrowawayClassLoader@774867a6
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/vvarm1/IdeaProjects/intelTrader/src/main/webapp/WEB-INF/classes
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.inteltrader.entity.Instrument
		com.inteltrader.entity.Portfolio
		com.inteltrader.entity.Investment]
	Mapping files names []
	Properties [
		hibernate.connection.username: root
		hibernate.connection.password: root
		hibernate.dialect: org.hibernate.dialect.MySQLDialect
		hibernate.c3p0.min_size: 10
		hibernate.connection.url: jdbc:mysql://localhost:3306/TRADER_DB
		hibernate.show_sql: true
		hibernate.connection.driver_class: com.mysql.jdbc.Driver
		hibernate.hbm2ddl.auto: update]
Detect class: true; detect hbm: true
Detect class: true; detect hbm: true
Searching mapped entities in jar/par: file:/C:/Users/vvarm1/IdeaProjects/intelTrader/src/main/webapp/WEB-INF/classes
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.ejb.event.JpaIntegrator].
No JNDI name configured for binding Ejb3Configuration
Preparing to build session factory with filters : {}
Processing hbm.xml files
Process annotated classes
Binding entity from annotated class: com.inteltrader.entity.Instrument
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Instrument
Bind entity com.inteltrader.entity.Instrument on table INSTRUMENT
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=SYMBOL_NAME, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property symbolName with lazy=false
building SimpleValue for symbolName
Building property symbolName
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=priceList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=priceList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=priceList_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='priceList_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='SYMBOL_NAME', referencedColumn='', mappedBy=''}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Collection role: com.inteltrader.entity.Instrument.priceList
Building property priceList
Binding entity from annotated class: com.inteltrader.entity.Portfolio
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Portfolio
Bind entity com.inteltrader.entity.Portfolio on table PORTFOLIO
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=PORTFOLIO_NAME, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property portfolioName with lazy=false
building SimpleValue for portfolioName
Building property portfolioName
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='associatedPortfolio'}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=investmentList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=element, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=investmentList_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='investmentList_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='associatedPortfolio'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='associatedPortfolio'}
Collection role: com.inteltrader.entity.Portfolio.investmentList
Building property investmentList
Binding entity from annotated class: com.inteltrader.entity.Investment
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Investment
Bind entity com.inteltrader.entity.Investment on table INVESTMENT
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=INVESTMENT_ID, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property investmentId with lazy=false
building SimpleValue for investmentId
Building property investmentId
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=associatedPortfolio, insertable=true, updatable=true, unique=false}
Building property associatedPortfolio
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=currentPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property currentPrice with lazy=false
building SimpleValue for currentPrice
Building property currentPrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=quantity, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property quantity with lazy=false
building SimpleValue for quantity
Building property quantity
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=INVESTMENT_SYMBOL, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property symbolName with lazy=false
building SimpleValue for symbolName
Building property symbolName
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=transactionsList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=transactionsList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=transactionsList_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='transactionsList_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='INVESTMENT_ID', referencedColumn='', mappedBy=''}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Collection role: com.inteltrader.entity.Investment.transactionsList
Building property transactionsList
Setting SimpleValue typeName for symbolName
Setting SimpleValue typeName for portfolioName
Setting SimpleValue typeName for investmentId
Setting SimpleValue typeName for currentPrice
Setting SimpleValue typeName for quantity
Setting SimpleValue typeName for symbolName
Processing fk mappings (*ToOne and JoinedSubclass)
Processing extends queue
Processing extends queue
Processing collection mappings
Second pass for collection: com.inteltrader.entity.Investment.transactionsList
Binding a collection of element: com.inteltrader.entity.Investment.transactionsList
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT_TRANSACTION), mappingColumn=quantity, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property quantity with lazy=false
building SimpleValue for quantity
Setting SimpleValue typeName for quantity
Building property quantity
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT_TRANSACTION), mappingColumn=transactionId, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property transactionId with lazy=false
building SimpleValue for transactionId
Setting SimpleValue typeName for transactionId
Building property transactionId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT_TRANSACTION), mappingColumn=transactionPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property transactionPrice with lazy=false
building SimpleValue for transactionPrice
Setting SimpleValue typeName for transactionPrice
Building property transactionPrice
Mapped collection key: INVESTMENT_ID, element: quantity, transactionId, transactionPrice
Second pass for collection: com.inteltrader.entity.Instrument.priceList
Binding a collection of element: com.inteltrader.entity.Instrument.priceList
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=closePrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property closePrice with lazy=false
building SimpleValue for closePrice
Setting SimpleValue typeName for closePrice
Building property closePrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=highPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property highPrice with lazy=false
building SimpleValue for highPrice
Setting SimpleValue typeName for highPrice
Building property highPrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=lastClosePrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property lastClosePrice with lazy=false
building SimpleValue for lastClosePrice
Setting SimpleValue typeName for lastClosePrice
Building property lastClosePrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=lowPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property lowPrice with lazy=false
building SimpleValue for lowPrice
Setting SimpleValue typeName for lowPrice
Building property lowPrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=openPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property openPrice with lazy=false
building SimpleValue for openPrice
Setting SimpleValue typeName for openPrice
Building property openPrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=priceId, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property priceId with lazy=false
building SimpleValue for priceId
Setting SimpleValue typeName for priceId
Building property priceId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=timeStamp, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property timeStamp with lazy=false
building SimpleValue for timeStamp
Setting SimpleValue typeName for timeStamp
Building property timeStamp
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=totalTradedQuantity, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property totalTradedQuantity with lazy=false
building SimpleValue for totalTradedQuantity
Setting SimpleValue typeName for totalTradedQuantity
Building property totalTradedQuantity
Mapped collection key: SYMBOL_NAME, element: closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity
Second pass for collection: com.inteltrader.entity.Portfolio.investmentList
Binding a OneToMany: com.inteltrader.entity.Portfolio.investmentList through a foreign key
Mapping collection: com.inteltrader.entity.Portfolio.investmentList -> INVESTMENT
Retrieving property com.inteltrader.entity.Investment.associatedPortfolio
Mapped collection key: associatedPortfolio_PORTFOLIO_NAME, one-to-many: com.inteltrader.entity.Investment
Processing native query and ResultSetMapping mappings
Processing association property references
Creating tables' unique integer identifiers
Processing foreign key constraints
Resolving reference to class: com.inteltrader.entity.Instrument
Resolving reference to class: com.inteltrader.entity.Portfolio
Resolving reference to class: com.inteltrader.entity.Investment
HHH000022: c3p0 properties were encountered, but the org.hibernate.service.jdbc.connections.internal.C3P0ConnectionProvider provider class was not found on the classpath; these properties are going to be ignored.
HHH000402: Using Hibernate built-in connection pool (not for production use!)
HHH000115: Hibernate connection pool size: 20
HHH000006: Autocommit mode: true
HHH000401: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/TRADER_DB]
HHH000046: Connection properties: {user=root, password=root, autocommit=true, release_mode=auto}
Opening new JDBC connection
Created connection to: jdbc:mysql://localhost:3306/TRADER_DB, Isolation Level: 4
Database ->
       name : MySQL
    version : 5.6.10-log
      major : 5
      minor : 6
Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.9 ( Revision: ${svn.Revision} )
      major : 5
      minor : 1
JDBC version : 3.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: disabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
multi-tenancy strategy : NONE
Connection release mode: auto
HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
Maximum outer join fetch depth: 2
Default batch fetch size: 1
Generate SQL with comments: disabled
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
HHH000397: Using ASTQueryTranslatorFactory
Query language substitutions: {}
JPA-QL strict compliance: enabled
Second-level cache: enabled
Query cache: disabled
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
Optimize cache for minimal puts: disabled
Structured second-level cache entries: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Named query checking : enabled
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : : disabled
Building session factory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\vvarm1\IdeaProjects\intelTrader\target\tomcat, hibernate.connection.url=jdbc:mysql://localhost:3306/TRADER_DB, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.ejb.discard_pc_on_close=false, catalina.useNaming=true, hibernate.transaction.flush_before_completion=false, os.name=Windows 7, sun.boot.class.path=C:\Program Files\Java\jdk1.7.0_10\jre\lib\resources.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\rt.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\jce.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.7.0_10\jre\classes, java.util.logging.config.file=C:\Users\vvarm1\IdeaProjects\intelTrader\target\tomcat\conf\logging.properties, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.7.0_10-b18, hibernate.connection.autocommit=true, hibernate.c3p0.min_size=10, user.name=vvarm1, shared.loader=, guice.disable.misplaced.annotation.check=true, tomcat.util.buf.StringCache.byte.enabled=true, javax.persistence.validation.mode=AUTO, hibernate.connection.release_mode=auto, idea.launcher.bin.path=C:\Program Files (x86)\JetBrains\IntelliJ IDEA Community Edition 12.0.4\bin, user.language=en, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, sun.boot.library.path=C:\Program Files\Java\jdk1.7.0_10\jre\bin, classworlds.conf=C:\Program Files\Apache Software Foundation\apache-maven-3.0.5\bin\m2.conf, java.version=1.7.0_10, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, user.timezone=Asia/Calcutta, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.7.0_10\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, file.encoding.pkg=sun.io, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.tomcat.,org.apache.jasper., file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=51.0, user.country=US, java.home=C:\Program Files\Java\jdk1.7.0_10\jre, java.vm.info=mixed mode, os.version=6.1, hibernate.transaction.factory_class=org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory, hibernate.query.jpaql_strict_compliance=true, path.separator=;, java.vm.version=23.6-b04, hibernate.connection.password=root, user.variant=, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.scan.DefaultJarScanner.jarsToSkip=bootstrap.jar,commons-daemon.jar,tomcat-juli.jar,annotations-api.jar,el-api.jar,jsp-api.jar,servlet-api.jar,catalina.jar,catalina-ant.jar,catalina-ha.jar,catalina-tribes.jar,jasper.jar,jasper-el.jar,ecj-*.jar,tomcat-api.jar,tomcat-util.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-jni.jar,tomcat-spdy.jar,tomcat-i18n-en.jar,tomcat-i18n-es.jar,tomcat-i18n-fr.jar,tomcat-i18n-ja.jar,tomcat-juli-adapters.jar,catalina-jmx-remote.jar,catalina-ws.jar,tomcat-jdbc.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,jstl.jar,geronimo-spec-jaxrpc*.jar,wsdl4j*.jar,ant.jar,ant-junit*.jar,aspectj*.jar,jmx.jar,h2*.jar,hibernate*.jar,httpclient*.jar,jmx-tools.jar,jta*.jar,log4j*.jar,mail*.jar,slf4j*.jar,xercesImpl.jar,xmlParserAPIs.jar,xml-apis.jar,access-bridge-64.jar,dnsns.jar,jaccess.jar,ldapsec.jar,localedata.jar,sunjce_provider.jar,sunmscapi.jar,sunpkcs11.jar,jhall.jar,tools.jar,sunec.jar,zipfs.jar,gnome-java-bridge.jar,pulse-java.jar,apple_provider.jar,AppleScriptEngine.jar,CoreAudio.jar,dns_sd.jar,j3daudio.jar,j3dcore.jar,j3dutils.jar,jai_core.jar,jai_codec.jar,mlibwrapper_jai.jar,MRJToolkit.jar,vecmath.jar,junit.jar,junit-*.jar,ant-launcher.jar, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.tomcat.,org.apache.jasper., user.script=, java.naming.factory.url.pkgs=org.apache.naming, user.home=C:\Users\vvarm1, org.apache.catalina.startup.ContextConfig.jarsToSkip=, java.specification.vendor=Oracle Corporation, hibernate.hbm2ddl.auto=update, java.library.path=C:\Program Files\Java\jdk1.7.0_10\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\JetBrains\IntelliJ IDEA Community Edition 12.0.4\bin\..\.\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\ThinkPad\Bluetooth Software\;C:\Program Files\ThinkPad\Bluetooth Software\syswow64;c:\Program Files\Intel\WiFi\bin\;c:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files (x86)\Git\cmd;C:\Users\vvarm1\Documents\play-2.0.3;C:\Program Files\Java\jdk1.7.0_10\bin;C:\Program Files\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\QuickTime\QTSystem\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Java\jre6\bin;C:\Program Files\Apache Software Foundation\apache-maven-3.0.5\bin;c:\program files (x86)\jetbrains\intellij idea community edition 12.0.4\jre\jre\bin;., java.vendor.url=http://java.oracle.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, org.apache.catalina.startup.TldConfig.jarsToSkip=, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, common.loader=${catalina.base}/lib,${catalina.base}/lib/*.jar,${catalina.home}/lib,${catalina.home}/lib/*.jar, maven.home=C:\Program Files\Apache Software Foundation\apache-maven-3.0.5, java.runtime.name=Java(TM) SE Runtime Environment, java.class.path=C:\Program Files\Apache Software Foundation\apache-maven-3.0.5\boot\plexus-classworlds-2.4.jar;C:\Program Files (x86)\JetBrains\IntelliJ IDEA Community Edition 12.0.4\lib\idea_rt.jar, sun.java.command=com.intellij.rt.execution.application.AppMain org.codehaus.classworlds.Launcher --no-plugin-registry --fail-fast --strict-checksums --update-snapshots org.apache.tomcat.maven:tomcat7-maven-plugin:2.0:run, hibernate.bytecode.use_reflection_optimizer=false, idea.launcher.port=7535, java.vm.specification.name=Java Virtual Machine Specification, catalina.home=C:\Users\vvarm1\IdeaProjects\intelTrader\target\tomcat, java.vm.specification.version=1.7, sun.os.patch.level=Service Pack 1, sun.cpu.endian=little, java.io.tmpdir=C:\Users\vvarm1\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, server.loader=, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, java.ext.dirs=C:\Program Files\Java\jdk1.7.0_10\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=C:\Users\vvarm1\IdeaProjects\intelTrader, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding=UTF-8, hibernate.use_identifier_rollback=false, java.specification.version=1.7, hibernate.show_sql=true}
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Static SQL for entity: com.inteltrader.entity.Investment
 Version select: select INVESTMENT_ID from TRADER_DB.INVESTMENT where INVESTMENT_ID =?
 Snapshot select: select investment_.INVESTMENT_ID, investment_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_, investment_.currentPrice as currentP2_2_, investment_.quantity as quantity2_, investment_.INVESTMENT_SYMBOL as INVESTMENT4_2_ from TRADER_DB.INVESTMENT investment_ where investment_.INVESTMENT_ID=?
 Insert 0: insert into TRADER_DB.INVESTMENT (associatedPortfolio_PORTFOLIO_NAME, currentPrice, quantity, INVESTMENT_SYMBOL, INVESTMENT_ID) values (?, ?, ?, ?, ?)
 Update 0: update TRADER_DB.INVESTMENT set associatedPortfolio_PORTFOLIO_NAME=?, currentPrice=?, quantity=?, INVESTMENT_SYMBOL=? where INVESTMENT_ID=?
 Delete 0: delete from TRADER_DB.INVESTMENT where INVESTMENT_ID=?
 Identity insert: insert into TRADER_DB.INVESTMENT (associatedPortfolio_PORTFOLIO_NAME, currentPrice, quantity, INVESTMENT_SYMBOL) values (?, ?, ?, ?)
Static SQL for entity: com.inteltrader.entity.Instrument
 Version select: select SYMBOL_NAME from TRADER_DB.INSTRUMENT where SYMBOL_NAME =?
 Snapshot select: select instrument_.SYMBOL_NAME from TRADER_DB.INSTRUMENT instrument_ where instrument_.SYMBOL_NAME=?
 Insert 0: insert into TRADER_DB.INSTRUMENT (SYMBOL_NAME) values (?)
 Update 0: null
 Delete 0: delete from TRADER_DB.INSTRUMENT where SYMBOL_NAME=?
Static SQL for entity: com.inteltrader.entity.Portfolio
 Version select: select PORTFOLIO_NAME from TRADER_DB.PORTFOLIO where PORTFOLIO_NAME =?
 Snapshot select: select portfolio_.PORTFOLIO_NAME from TRADER_DB.PORTFOLIO portfolio_ where portfolio_.PORTFOLIO_NAME=?
 Insert 0: insert into TRADER_DB.PORTFOLIO (PORTFOLIO_NAME) values (?)
 Update 0: null
 Delete 0: delete from TRADER_DB.PORTFOLIO where PORTFOLIO_NAME=?
Static SQL for collection: com.inteltrader.entity.Instrument.priceList
 Row insert: insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
 Row update: update TRADER_DB.INSTRUMENT_PRICE set closePrice=?, highPrice=?, lastClosePrice=?, lowPrice=?, openPrice=?, priceId=?, timeStamp=?, totalTradedQuantity=? where SYMBOL_NAME=? and priceId=? and totalTradedQuantity=?
 Row delete: delete from TRADER_DB.INSTRUMENT_PRICE where SYMBOL_NAME=? and priceId=? and totalTradedQuantity=?
 One-shot delete: delete from TRADER_DB.INSTRUMENT_PRICE where SYMBOL_NAME=?
Static SQL for collection: com.inteltrader.entity.Investment.transactionsList
 Row insert: insert into TRADER_DB.INVESTMENT_TRANSACTION (INVESTMENT_ID, quantity, transactionId, transactionPrice) values (?, ?, ?, ?)
 Row update: update TRADER_DB.INVESTMENT_TRANSACTION set quantity=?, transactionId=?, transactionPrice=? where INVESTMENT_ID=? and quantity=? and transactionId=? and transactionPrice=?
 Row delete: delete from TRADER_DB.INVESTMENT_TRANSACTION where INVESTMENT_ID=? and quantity=? and transactionId=? and transactionPrice=?
 One-shot delete: delete from TRADER_DB.INVESTMENT_TRANSACTION where INVESTMENT_ID=?
Static SQL for collection: com.inteltrader.entity.Portfolio.investmentList
 Row insert: update TRADER_DB.INVESTMENT set associatedPortfolio_PORTFOLIO_NAME=? where INVESTMENT_ID=?
 Row delete: update TRADER_DB.INVESTMENT set associatedPortfolio_PORTFOLIO_NAME=null where associatedPortfolio_PORTFOLIO_NAME=? and INVESTMENT_ID=?
 One-shot delete: update TRADER_DB.INVESTMENT set associatedPortfolio_PORTFOLIO_NAME=null where associatedPortfolio_PORTFOLIO_NAME=?
Static select for entity com.inteltrader.entity.Instrument [NONE]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for entity com.inteltrader.entity.Instrument [READ]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for entity com.inteltrader.entity.Instrument [UPGRADE]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [UPGRADE_NOWAIT]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [FORCE]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [PESSIMISTIC_READ]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? lock in share mode
Static select for entity com.inteltrader.entity.Instrument [PESSIMISTIC_WRITE]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [PESSIMISTIC_FORCE_INCREMENT]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [OPTIMISTIC]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for entity com.inteltrader.entity.Instrument [OPTIMISTIC_FORCE_INCREMENT]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for action ACTION_MERGE on entity com.inteltrader.entity.Instrument: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for action ACTION_REFRESH on entity com.inteltrader.entity.Instrument: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for entity com.inteltrader.entity.Investment [NONE]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_1_, investment0_.currentPrice as currentP2_2_1_, investment0_.quantity as quantity2_1_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_1_, portfolio1_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.INVESTMENT investment0_ left outer join TRADER_DB.PORTFOLIO portfolio1_ on investment0_.associatedPortfolio_PORTFOLIO_NAME=portfolio1_.PORTFOLIO_NAME where investment0_.INVESTMENT_ID=?
Static select for entity com.inteltrader.entity.Investment [READ]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_1_, investment0_.currentPrice as currentP2_2_1_, investment0_.quantity as quantity2_1_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_1_, portfolio1_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.INVESTMENT investment0_ left outer join TRADER_DB.PORTFOLIO portfolio1_ on investment0_.associatedPortfolio_PORTFOLIO_NAME=portfolio1_.PORTFOLIO_NAME where investment0_.INVESTMENT_ID=?
Static select for entity com.inteltrader.entity.Investment [UPGRADE]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [UPGRADE_NOWAIT]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [FORCE]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [PESSIMISTIC_READ]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? lock in share mode
Static select for entity com.inteltrader.entity.Investment [PESSIMISTIC_WRITE]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [PESSIMISTIC_FORCE_INCREMENT]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [OPTIMISTIC]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=?
Static select for entity com.inteltrader.entity.Investment [OPTIMISTIC_FORCE_INCREMENT]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=?
Static select for action ACTION_MERGE on entity com.inteltrader.entity.Investment: select investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_1_, investment0_.currentPrice as currentP2_2_1_, investment0_.quantity as quantity2_1_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_1_, portfolio1_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.INVESTMENT investment0_ left outer join TRADER_DB.PORTFOLIO portfolio1_ on investment0_.associatedPortfolio_PORTFOLIO_NAME=portfolio1_.PORTFOLIO_NAME where investment0_.INVESTMENT_ID=?
Static select for action ACTION_REFRESH on entity com.inteltrader.entity.Investment: select investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_1_, investment0_.currentPrice as currentP2_2_1_, investment0_.quantity as quantity2_1_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_1_, portfolio1_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.INVESTMENT investment0_ left outer join TRADER_DB.PORTFOLIO portfolio1_ on investment0_.associatedPortfolio_PORTFOLIO_NAME=portfolio1_.PORTFOLIO_NAME where investment0_.INVESTMENT_ID=?
Static select for entity com.inteltrader.entity.Portfolio [NONE]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Static select for entity com.inteltrader.entity.Portfolio [READ]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Static select for entity com.inteltrader.entity.Portfolio [UPGRADE]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [UPGRADE_NOWAIT]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [FORCE]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [PESSIMISTIC_READ]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? lock in share mode
Static select for entity com.inteltrader.entity.Portfolio [PESSIMISTIC_WRITE]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [PESSIMISTIC_FORCE_INCREMENT]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [OPTIMISTIC]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=?
Static select for entity com.inteltrader.entity.Portfolio [OPTIMISTIC_FORCE_INCREMENT]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=?
Static select for action ACTION_MERGE on entity com.inteltrader.entity.Portfolio: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Static select for action ACTION_REFRESH on entity com.inteltrader.entity.Portfolio: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Static select for collection com.inteltrader.entity.Instrument.priceList: select pricelist0_.SYMBOL_NAME as SYMBOL1_0_0_, pricelist0_.closePrice as closePrice1_0_, pricelist0_.highPrice as highPrice1_0_, pricelist0_.lastClosePrice as lastClos4_1_0_, pricelist0_.lowPrice as lowPrice1_0_, pricelist0_.openPrice as openPrice1_0_, pricelist0_.priceId as priceId1_0_, pricelist0_.timeStamp as timeStamp1_0_, pricelist0_.totalTradedQuantity as totalTra9_1_0_ from TRADER_DB.INSTRUMENT_PRICE pricelist0_ where pricelist0_.SYMBOL_NAME=?
Static select for one-to-many com.inteltrader.entity.Portfolio.investmentList: select investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_1_, investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.associatedPortfolio_PORTFOLIO_NAME=?
Static select for collection com.inteltrader.entity.Investment.transactionsList: select transactio0_.INVESTMENT_ID as INVESTMENT1_2_0_, transactio0_.quantity as quantity3_0_, transactio0_.transactionId as transact3_3_0_, transactio0_.transactionPrice as transact4_3_0_ from TRADER_DB.INVESTMENT_TRANSACTION transactio0_ where transactio0_.INVESTMENT_ID=?
Registering SessionFactory: d775ce44-e06d-47b2-a025-5123101a2467 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Instantiated session factory
HHH000228: Running hbm2ddl schema update
HHH000102: Fetching database metadata
HHH000396: Updating schema
Processing hbm.xml files
Process annotated classes
Processing fk mappings (*ToOne and JoinedSubclass)
Processing extends queue
Processing extends queue
Processing collection mappings
Processing native query and ResultSetMapping mappings
Processing association property references
Creating tables' unique integer identifiers
Processing foreign key constraints
Resolving reference to class: com.inteltrader.entity.Instrument
Resolving reference to class: com.inteltrader.entity.Portfolio
Resolving reference to class: com.inteltrader.entity.Investment
HHH000261: Table found: TRADER_DB.instrument
HHH000037: Columns: [symbol_name]
HHH000108: Foreign keys: []
HHH000126: Indexes: [primary]
HHH000261: Table found: TRADER_DB.instrument_price
HHH000037: Columns: [totaltradedquantity, timestamp, priceid, lastcloseprice, highprice, symbol_name, openprice, closeprice, lowprice]
HHH000108: Foreign keys: [fk3189a2d153ed548d]
HHH000126: Indexes: [fk3189a2d153ed548d]
HHH000261: Table found: TRADER_DB.investment
HHH000037: Columns: [investment_id, associatedportfolio_portfolio_name, currentprice, quantity, investment_symbol]
HHH000108: Foreign keys: [fk8fe41ed3c804d4f3]
HHH000126: Indexes: [fk8fe41ed3c804d4f3, primary]
HHH000261: Table found: TRADER_DB.investment_transaction
HHH000037: Columns: [transactionprice, investment_id, transactionid, quantity]
HHH000108: Foreign keys: [fka5863f52914590ae]
HHH000126: Indexes: [fka5863f52914590ae]
HHH000261: Table found: TRADER_DB.portfolio
HHH000037: Columns: [portfolio_name]
HHH000108: Foreign keys: []
HHH000126: Indexes: [primary]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
HHH000232: Schema update complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Statistics initialized [enabled=false]
Registering EntityManagerFactory: intelTrader 
HHH000436: Entity manager factory name (intelTrader) is already registered.  If entity manager will be clustered or passivated, specify a unique value for property 'hibernate.ejb.entitymanager_factory_name'
Finished creating instance of bean 'entityManagerFactory'
Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@7fd086b4: defining beans [org.springframework.context.annotation.internalAsyncAnnotationProcessor,org.springframework.context.annotation.internalScheduledAnnotationProcessor,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0,org.springframework.web.servlet.view.InternalResourceViewResolver#0,instrumentDao,portfolioDao,instrumentService,portfolioService,entityManagerFactory,transactionManager,instrument,investment,portfolio,instrumentServiceRest,portfolioServiceRest,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor]; parent: org.springframework.beans.factory.support.DefaultListableBeanFactory@76039e99
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Creating instance of bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0' to allow for resolving potential circular references
Creating instance of bean '(inner bean)'
Creating shared instance of singleton bean 'transactionManager'
Creating instance of bean 'transactionManager'
Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
Returning cached instance of singleton bean 'entityManagerFactory'
Invoking afterPropertiesSet() on bean with name 'transactionManager'
Finished creating instance of bean 'transactionManager'
Creating instance of bean '(inner bean)'
Finished creating instance of bean '(inner bean)'
Invoking afterPropertiesSet() on bean with name '(inner bean)'
Finished creating instance of bean '(inner bean)'
Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Creating shared instance of singleton bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Creating instance of bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Eagerly caching bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Creating shared instance of singleton bean 'instrumentDao'
Creating instance of bean 'instrumentDao'
Eagerly caching bean 'instrumentDao' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'instrumentDao'
Creating shared instance of singleton bean 'portfolioDao'
Creating instance of bean 'portfolioDao'
Eagerly caching bean 'portfolioDao' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'portfolioDao'
Creating shared instance of singleton bean 'instrumentService'
Creating instance of bean 'instrumentService'
Registered injected element on class [com.inteltrader.service.InstrumentServiceImpl]: PersistenceElement for javax.persistence.EntityManagerFactory com.inteltrader.service.InstrumentServiceImpl.entityManagerFactory
Registered injected element on class [com.inteltrader.service.InstrumentServiceImpl]: AutowiredFieldElement for private com.inteltrader.dao.IInstrumentDao com.inteltrader.service.InstrumentServiceImpl.instrumentDao
Registered injected element on class [com.inteltrader.service.InstrumentServiceImpl]: AutowiredFieldElement for private com.inteltrader.service.PortfolioService com.inteltrader.service.InstrumentServiceImpl.portfolioService
Eagerly caching bean 'instrumentService' to allow for resolving potential circular references
Processing injected method of bean 'instrumentService': PersistenceElement for javax.persistence.EntityManagerFactory com.inteltrader.service.InstrumentServiceImpl.entityManagerFactory
Returning cached instance of singleton bean 'entityManagerFactory'
Processing injected method of bean 'instrumentService': AutowiredFieldElement for private com.inteltrader.dao.IInstrumentDao com.inteltrader.service.InstrumentServiceImpl.instrumentDao
Returning cached instance of singleton bean 'instrumentDao'
Autowiring by type from bean name 'instrumentService' to bean named 'instrumentDao'
Processing injected method of bean 'instrumentService': AutowiredFieldElement for private com.inteltrader.service.PortfolioService com.inteltrader.service.InstrumentServiceImpl.portfolioService
Creating shared instance of singleton bean 'portfolioService'
Creating instance of bean 'portfolioService'
Registered injected element on class [com.inteltrader.service.PortfolioServiceImpl]: PersistenceElement for private javax.persistence.EntityManagerFactory com.inteltrader.service.PortfolioServiceImpl.entityManagerFactory
Registered injected element on class [com.inteltrader.service.PortfolioServiceImpl]: AutowiredFieldElement for private com.inteltrader.dao.IPortfolioDao com.inteltrader.service.PortfolioServiceImpl.portfolioDao
Eagerly caching bean 'portfolioService' to allow for resolving potential circular references
Processing injected method of bean 'portfolioService': PersistenceElement for private javax.persistence.EntityManagerFactory com.inteltrader.service.PortfolioServiceImpl.entityManagerFactory
Returning cached instance of singleton bean 'entityManagerFactory'
Processing injected method of bean 'portfolioService': AutowiredFieldElement for private com.inteltrader.dao.IPortfolioDao com.inteltrader.service.PortfolioServiceImpl.portfolioDao
Returning cached instance of singleton bean 'portfolioDao'
Autowiring by type from bean name 'portfolioService' to bean named 'portfolioDao'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'portfolioService'
Autowiring by type from bean name 'instrumentService' to bean named 'portfolioService'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'instrumentService'
Returning cached instance of singleton bean 'portfolioService'
Returning cached instance of singleton bean 'entityManagerFactory'
Returning cached instance of singleton bean 'transactionManager'
Creating shared instance of singleton bean 'instrument'
Creating instance of bean 'instrument'
Eagerly caching bean 'instrument' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'instrument'
Creating shared instance of singleton bean 'investment'
Creating instance of bean 'investment'
Eagerly caching bean 'investment' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'investment'
Creating shared instance of singleton bean 'portfolio'
Creating instance of bean 'portfolio'
Eagerly caching bean 'portfolio' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'portfolio'
Creating shared instance of singleton bean 'instrumentServiceRest'
Creating instance of bean 'instrumentServiceRest'
Registered injected element on class [com.inteltrader.rest.InstrumentServiceRest]: AutowiredFieldElement for private com.inteltrader.service.InstrumentService com.inteltrader.rest.InstrumentServiceRest.instrumentService
Eagerly caching bean 'instrumentServiceRest' to allow for resolving potential circular references
Processing injected method of bean 'instrumentServiceRest': AutowiredFieldElement for private com.inteltrader.service.InstrumentService com.inteltrader.rest.InstrumentServiceRest.instrumentService
Returning cached instance of singleton bean 'instrumentService'
Autowiring by type from bean name 'instrumentServiceRest' to bean named 'instrumentService'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'instrumentServiceRest'
Creating shared instance of singleton bean 'portfolioServiceRest'
Creating instance of bean 'portfolioServiceRest'
Registered injected element on class [com.inteltrader.rest.PortfolioServiceRest]: AutowiredFieldElement for private com.inteltrader.service.PortfolioService com.inteltrader.rest.PortfolioServiceRest.portfolioService
Eagerly caching bean 'portfolioServiceRest' to allow for resolving potential circular references
Processing injected method of bean 'portfolioServiceRest': AutowiredFieldElement for private com.inteltrader.service.PortfolioService com.inteltrader.rest.PortfolioServiceRest.portfolioService
Returning cached instance of singleton bean 'portfolioService'
Autowiring by type from bean name 'portfolioServiceRest' to bean named 'portfolioService'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'portfolioServiceRest'
Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@3e6e464c]
Returning cached instance of singleton bean 'lifecycleProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Unable to locate MultipartResolver with name 'multipartResolver': no multipart request handling provided
Creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Unable to locate LocaleResolver with name 'localeResolver': using default [org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver@39b0196a]
Creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Unable to locate ThemeResolver with name 'themeResolver': using default [org.springframework.web.servlet.theme.FixedThemeResolver@56d0a468]
Creating instance of bean 'org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping'
Looking for URL mappings in application context: WebApplicationContext for namespace 'appServlet-servlet': startup date [Fri Apr 19 15:03:47 IST 2013]; parent: Root WebApplicationContext
Rejected bean name 'org.springframework.context.annotation.internalAsyncAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalScheduledAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalRequiredAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalCommonAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.aop.config.internalAutoProxyCreator': no URL paths identified
Rejected bean name 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0': no URL paths identified
Rejected bean name 'org.springframework.web.servlet.view.InternalResourceViewResolver#0': no URL paths identified
Rejected bean name 'instrumentDao': no URL paths identified
Rejected bean name 'portfolioDao': no URL paths identified
Rejected bean name 'instrumentService': no URL paths identified
Rejected bean name 'portfolioService': no URL paths identified
Rejected bean name 'entityManagerFactory': no URL paths identified
Rejected bean name 'transactionManager': no URL paths identified
Rejected bean name 'instrument': no URL paths identified
Rejected bean name 'investment': no URL paths identified
Rejected bean name 'portfolio': no URL paths identified
Rejected bean name 'instrumentServiceRest': no URL paths identified
Rejected bean name 'portfolioServiceRest': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor': no URL paths identified
Rejected bean name 'environment': no URL paths identified
Rejected bean name 'systemProperties': no URL paths identified
Rejected bean name 'systemEnvironment': no URL paths identified
Rejected bean name 'servletConfig': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry': no URL paths identified
Rejected bean name 'messageSource': no URL paths identified
Rejected bean name 'applicationEventMulticaster': no URL paths identified
Rejected bean name 'lifecycleProcessor': no URL paths identified
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping'
Creating instance of bean 'org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping'
Looking for URL mappings in application context: WebApplicationContext for namespace 'appServlet-servlet': startup date [Fri Apr 19 15:03:47 IST 2013]; parent: Root WebApplicationContext
Rejected bean name 'org.springframework.context.annotation.internalAsyncAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalScheduledAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalRequiredAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalCommonAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.aop.config.internalAutoProxyCreator': no URL paths identified
Rejected bean name 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0': no URL paths identified
Rejected bean name 'org.springframework.web.servlet.view.InternalResourceViewResolver#0': no URL paths identified
Rejected bean name 'instrumentDao': no URL paths identified
Rejected bean name 'portfolioDao': no URL paths identified
Rejected bean name 'instrumentService': no URL paths identified
Rejected bean name 'portfolioService': no URL paths identified
Rejected bean name 'entityManagerFactory': no URL paths identified
Rejected bean name 'transactionManager': no URL paths identified
Rejected bean name 'instrument': no URL paths identified
Rejected bean name 'investment': no URL paths identified
Rejected bean name 'portfolio': no URL paths identified
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/create/{symbol}] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/create/{symbol}.*] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/create/{symbol}/] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/update/{portfolioName}] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/update/{portfolioName}.*] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/update/{portfolioName}/] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/load/{symbol}] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/load/{symbol}.*] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/load/{symbol}/] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/create/{portfolioName}] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/create/{portfolioName}.*] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/create/{portfolioName}/] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/addInvestment/{portfolioName}/{symbolName}] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/addInvestment/{portfolioName}/{symbolName}.*] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/addInvestment/{portfolioName}/{symbolName}/] onto handler 'portfolioServiceRest'
Rejected bean name 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor': no URL paths identified
Rejected bean name 'environment': no URL paths identified
Rejected bean name 'systemProperties': no URL paths identified
Rejected bean name 'systemEnvironment': no URL paths identified
Rejected bean name 'servletConfig': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry': no URL paths identified
Rejected bean name 'messageSource': no URL paths identified
Rejected bean name 'applicationEventMulticaster': no URL paths identified
Rejected bean name 'lifecycleProcessor': no URL paths identified
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping'
No HandlerMappings found in servlet 'appServlet': using default
Creating instance of bean 'org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter'
Creating instance of bean 'org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter'
Creating instance of bean 'org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter'
No HandlerAdapters found in servlet 'appServlet': using default
Creating instance of bean 'org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerExceptionResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerExceptionResolver'
Creating instance of bean 'org.springframework.web.servlet.mvc.annotation.ResponseStatusExceptionResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.annotation.ResponseStatusExceptionResolver'
Creating instance of bean 'org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver'
No HandlerExceptionResolvers found in servlet 'appServlet': using default
Creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Unable to locate RequestToViewNameTranslator with name 'viewNameTranslator': using default [org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@5a15c4f1]
Returning cached instance of singleton bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Returning cached instance of singleton bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Unable to locate FlashMapManager with name 'flashMapManager': using default [org.springframework.web.servlet.support.SessionFlashMapManager@5692d5f0]
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Searching for key 'spring.liveBeansView.mbeanDomain' in [servletConfigInitParams]
Searching for key 'spring.liveBeansView.mbeanDomain' in [servletContextInitParams]
Searching for key 'spring.liveBeansView.mbeanDomain' in [jndiProperties]
Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain]
Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException: Name [spring.liveBeansView.mbeanDomain] is not bound in this Context. Unable to find [spring.liveBeansView.mbeanDomain].
Looking up JNDI object with name [spring.liveBeansView.mbeanDomain]
JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: Name [spring.liveBeansView.mbeanDomain] is not bound in this Context. Unable to find [spring.liveBeansView.mbeanDomain].. Returning null.
Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
Published WebApplicationContext of servlet 'appServlet' as ServletContext attribute with name [org.springframework.web.servlet.FrameworkServlet.CONTEXT.appServlet]
FrameworkServlet 'appServlet': initialization completed in 504 ms
Servlet 'appServlet' configured successfully
DispatcherServlet with name 'appServlet' processing GET request for [/instrument/update/MyFirstTime]
Matching patterns for request [/instrument/update/MyFirstTime] are [/instrument/update/{portfolioName}]
URI Template variables for request [/instrument/update/MyFirstTime] are {portfolioName=MyFirstTime}
Mapping [/instrument/update/MyFirstTime] to HandlerExecutionChain with handler [com.inteltrader.rest.InstrumentServiceRest@4c3ca6e0] and 2 interceptors
Last-Modified value for [/instrument/update/MyFirstTime] is: -1
Invoking request handler method: public org.springframework.http.ResponseEntity com.inteltrader.rest.InstrumentServiceRest.updateInstruments(java.lang.String,javax.servlet.http.HttpServletRequest)
Loading entity: [com.inteltrader.entity.Portfolio#MyFirstTime]
Obtaining JDBC connection
Obtained JDBC connection
select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Result set row: 0
Result row: EntityKey[com.inteltrader.entity.Investment#1], EntityKey[com.inteltrader.entity.Portfolio#MyFirstTime]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Result set row: 1
Result row: EntityKey[com.inteltrader.entity.Investment#2], EntityKey[com.inteltrader.entity.Portfolio#MyFirstTime]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Result set row: 2
Result row: EntityKey[com.inteltrader.entity.Investment#3], EntityKey[com.inteltrader.entity.Portfolio#MyFirstTime]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Resolving associations for [com.inteltrader.entity.Investment#1]
Loading entity: [com.inteltrader.entity.Portfolio#myFirstTime]
select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Result set row: 0
Result row: EntityKey[com.inteltrader.entity.Investment#1], EntityKey[com.inteltrader.entity.Portfolio#myFirstTime]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Result set row: 1
Result row: EntityKey[com.inteltrader.entity.Investment#2], EntityKey[com.inteltrader.entity.Portfolio#myFirstTime]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Result set row: 2
Result row: EntityKey[com.inteltrader.entity.Investment#3], EntityKey[com.inteltrader.entity.Portfolio#myFirstTime]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Resolving associations for [com.inteltrader.entity.Portfolio#myFirstTime]
Done materializing entity [com.inteltrader.entity.Portfolio#myFirstTime]
No collections were found in result set for role: com.inteltrader.entity.Portfolio.investmentList
Done entity load
Done materializing entity [com.inteltrader.entity.Investment#1]
Resolving associations for [com.inteltrader.entity.Portfolio#MyFirstTime]
Done materializing entity [com.inteltrader.entity.Portfolio#MyFirstTime]
Resolving associations for [com.inteltrader.entity.Investment#2]
Done materializing entity [com.inteltrader.entity.Investment#2]
Resolving associations for [com.inteltrader.entity.Investment#3]
Done materializing entity [com.inteltrader.entity.Investment#3]
1 collections were found in result set for role: com.inteltrader.entity.Portfolio.investmentList
Collection fully initialized: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
1 collections initialized for role: com.inteltrader.entity.Portfolio.investmentList
Loading collection: [com.inteltrader.entity.Portfolio.investmentList#MyFirstTime]
select investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_1_, investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.associatedPortfolio_PORTFOLIO_NAME=?
Result set contains (possibly empty) collection: [com.inteltrader.entity.Portfolio.investmentList#MyFirstTime]
Result set row: 0
Result row: EntityKey[com.inteltrader.entity.Investment#1]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Result set row: 1
Result row: EntityKey[com.inteltrader.entity.Investment#2]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Result set row: 2
Result row: EntityKey[com.inteltrader.entity.Investment#3]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
1 collections were found in result set for role: com.inteltrader.entity.Portfolio.investmentList
Collection fully initialized: [com.inteltrader.entity.Portfolio.investmentList#MyFirstTime]
1 collections initialized for role: com.inteltrader.entity.Portfolio.investmentList
Done loading collection
Done entity load
Written [SUCCESS] as "text/html" using [org.springframework.http.converter.StringHttpMessageConverter@414886ea]
Null ModelAndView returned to DispatcherServlet with name 'appServlet': assuming HandlerAdapter completed request handling
Successfully completed request
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Initializing servlet 'appServlet'
Initializing new StandardServletEnvironment
Adding [servletConfigInitParams] PropertySource with lowest search precedence
Adding [servletContextInitParams] PropertySource with lowest search precedence
Adding [jndiProperties] PropertySource with lowest search precedence
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment]
FrameworkServlet 'appServlet': initialization started
Servlet with name 'appServlet' will try to create custom WebApplicationContext context of class 'org.springframework.web.context.support.XmlWebApplicationContext', using parent context [Root WebApplicationContext: startup date [Fri Apr 19 15:06:15 IST 2013]; root of context hierarchy]
Searching for key 'spring.profiles.active' in [servletConfigInitParams]
Searching for key 'spring.profiles.active' in [servletContextInitParams]
Searching for key 'spring.profiles.active' in [jndiProperties]
Looking up JNDI object with name [java:comp/env/spring.profiles.active]
Converted JNDI name [java:comp/env/spring.profiles.active] not found - trying original name [spring.profiles.active]. javax.naming.NameNotFoundException: Name [spring.profiles.active] is not bound in this Context. Unable to find [spring.profiles.active].
Looking up JNDI object with name [spring.profiles.active]
JNDI lookup for name [spring.profiles.active] threw NamingException with message: Name [spring.profiles.active] is not bound in this Context. Unable to find [spring.profiles.active].. Returning null.
Searching for key 'spring.profiles.active' in [systemProperties]
Searching for key 'spring.profiles.active' in [systemEnvironment]
Could not find key 'spring.profiles.active' in any property source. Returning [null]
Searching for key 'spring.profiles.default' in [servletConfigInitParams]
Searching for key 'spring.profiles.default' in [servletContextInitParams]
Searching for key 'spring.profiles.default' in [jndiProperties]
Looking up JNDI object with name [java:comp/env/spring.profiles.default]
Converted JNDI name [java:comp/env/spring.profiles.default] not found - trying original name [spring.profiles.default]. javax.naming.NameNotFoundException: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].
Looking up JNDI object with name [spring.profiles.default]
JNDI lookup for name [spring.profiles.default] threw NamingException with message: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].. Returning null.
Searching for key 'spring.profiles.default' in [systemProperties]
Searching for key 'spring.profiles.default' in [systemEnvironment]
Could not find key 'spring.profiles.default' in any property source. Returning [null]
Searching for key 'spring.profiles.default' in [servletConfigInitParams]
Searching for key 'spring.profiles.default' in [servletContextInitParams]
Searching for key 'spring.profiles.default' in [jndiProperties]
Looking up JNDI object with name [java:comp/env/spring.profiles.default]
Converted JNDI name [java:comp/env/spring.profiles.default] not found - trying original name [spring.profiles.default]. javax.naming.NameNotFoundException: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].
Looking up JNDI object with name [spring.profiles.default]
JNDI lookup for name [spring.profiles.default] threw NamingException with message: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].. Returning null.
Searching for key 'spring.profiles.default' in [systemProperties]
Searching for key 'spring.profiles.default' in [systemEnvironment]
Could not find key 'spring.profiles.default' in any property source. Returning [null]
Replacing [servletContextInitParams] PropertySource with [servletContextInitParams]
Replacing [servletConfigInitParams] PropertySource with [servletConfigInitParams]
Refreshing WebApplicationContext for namespace 'appServlet-servlet': startup date [Fri Apr 19 15:06:18 IST 2013]; parent: Root WebApplicationContext
Initializing new StandardEnvironment
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
Initializing new StandardEnvironment
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
Loading schema mappings from [META-INF/spring.schemas]
Loaded schema mappings: {http://www.springframework.org/schema/data/jpa/spring-jpa-1.2.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.2.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.1.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.1.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.5.xsd=org/springframework/data/repository/config/spring-repository-1.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.0.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.3.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.4.xsd=org/springframework/data/repository/config/spring-repository-1.4.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.3.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/data/repository/spring-repository.xsd=org/springframework/data/repository/config/spring-repository-1.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.0.xsd=org/springframework/data/repository/config/spring-repository-1.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.1.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.1.xsd
Found XML schema [http://www.springframework.org/schema/task/spring-task-3.0.xsd] in classpath: org/springframework/scheduling/config/spring-task-3.0.xsd
Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd
Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd
Found XML schema [http://www.springframework.org/schema/tx/spring-tx-3.1.xsd] in classpath: org/springframework/transaction/config/spring-tx-3.1.xsd
Loading bean definitions
Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/data/repository=org.springframework.data.repository.config.RepositoryNameSpaceHandler, http://www.springframework.org/schema/data/jpa=org.springframework.data.jpa.repository.config.JpaRepositoryNameSpaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
Neither XML 'id' nor 'name' specified - using generated bean name [org.springframework.web.servlet.view.InternalResourceViewResolver#0]
Neither XML 'id' nor 'name' specified - using generated bean name [org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver#515760c9]
Initializing new StandardEnvironment
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
Looking for matching resources in directory tree [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Resolved location pattern [classpath*:com/inteltrader/**/*.class] to resources [file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\Advice.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\FIFOList.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\InstrumentVo.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\Strategies.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\Strategy.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\StrategyMACD.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao\IInstrumentDao.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao\InstrumentDao.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao\IPortfolioDao.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao\PortfolioDao.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Instrument.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Investment.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Portfolio.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Price.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Transactions.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest\InstrumentServiceRest.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest\PortfolioServiceRest.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\AnalyserService.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\CronService.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\InstrumentService.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\InstrumentServiceImpl.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\PortfolioService.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\PortfolioServiceImpl.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util\DownloadZip.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util\ExtractZipFile.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util\ReadPriceCsv.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util\RestCodes.class]]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Instrument.class]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Investment.class]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Portfolio.class]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest\InstrumentServiceRest.class]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest\PortfolioServiceRest.class]
Loaded 21 bean definitions from location pattern [/WEB-INF/applicationContext.xml]
Bean factory for WebApplicationContext for namespace 'appServlet-servlet': org.springframework.beans.factory.support.DefaultListableBeanFactory@3f9355d7: defining beans [org.springframework.context.annotation.internalAsyncAnnotationProcessor,org.springframework.context.annotation.internalScheduledAnnotationProcessor,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0,org.springframework.web.servlet.view.InternalResourceViewResolver#0,instrumentDao,portfolioDao,instrumentService,portfolioService,entityManagerFactory,transactionManager,instrument,investment,portfolio,instrumentServiceRest,portfolioServiceRest]; parent: org.springframework.beans.factory.support.DefaultListableBeanFactory@13b7dd80
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@42cf4026]
Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@347ca10e]
Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.DelegatingThemeSource@6231b90d]
Creating shared instance of singleton bean 'entityManagerFactory'
Creating instance of bean 'entityManagerFactory'
Eagerly caching bean 'entityManagerFactory' to allow for resolving potential circular references
Creating instance of bean 'org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver#515760c9'
Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Creating instance of bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0' to allow for resolving potential circular references
Creating instance of bean '(inner bean)'
Creating shared instance of singleton bean 'transactionManager'
Creating instance of bean 'transactionManager'
Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
Returning eagerly cached instance of singleton bean 'entityManagerFactory' that is not fully initialized yet - a consequence of a circular reference
Ignoring currently created advisor 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0': Error creating bean with name 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0': Cannot create inner bean '(inner bean)' of type [org.springframework.transaction.interceptor.TransactionInterceptor] while setting bean property 'transactionInterceptor'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)': Cannot resolve reference to bean 'transactionManager' while setting bean property 'transactionManager'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'transactionManager' defined in ServletContext resource [/WEB-INF/applicationContext.xml]: Cannot resolve reference to bean 'entityManagerFactory' while setting bean property 'entityManagerFactory'; nested exception is org.springframework.beans.factory.BeanCurrentlyInCreationException: Error creating bean with name 'entityManagerFactory': FactoryBean which is currently in creation returned null from getObject
Finished creating instance of bean 'org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver#515760c9'
Invoking afterPropertiesSet() on bean with name 'entityManagerFactory'
Building JPA container EntityManagerFactory for persistence unit 'intelTrader'
Adding type registration boolean -> org.hibernate.type.BooleanType@354e9c82
Adding type registration boolean -> org.hibernate.type.BooleanType@354e9c82
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@354e9c82
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@984978b
Adding type registration true_false -> org.hibernate.type.TrueFalseType@792f1d1b
Adding type registration yes_no -> org.hibernate.type.YesNoType@8c286cd
Adding type registration byte -> org.hibernate.type.ByteType@3518cba5
Adding type registration byte -> org.hibernate.type.ByteType@3518cba5
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3518cba5
Adding type registration character -> org.hibernate.type.CharacterType@b7fd678
Adding type registration char -> org.hibernate.type.CharacterType@b7fd678
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@b7fd678
Adding type registration short -> org.hibernate.type.ShortType@2cec5a36
Adding type registration short -> org.hibernate.type.ShortType@2cec5a36
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2cec5a36
Adding type registration integer -> org.hibernate.type.IntegerType@4e481c53
Adding type registration int -> org.hibernate.type.IntegerType@4e481c53
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4e481c53
Adding type registration long -> org.hibernate.type.LongType@13e0301f
Adding type registration long -> org.hibernate.type.LongType@13e0301f
Adding type registration java.lang.Long -> org.hibernate.type.LongType@13e0301f
Adding type registration float -> org.hibernate.type.FloatType@74d41df8
Adding type registration float -> org.hibernate.type.FloatType@74d41df8
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@74d41df8
Adding type registration double -> org.hibernate.type.DoubleType@785dd85d
Adding type registration double -> org.hibernate.type.DoubleType@785dd85d
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@785dd85d
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@165809a6
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@165809a6
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@59825377
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@59825377
Adding type registration string -> org.hibernate.type.StringType@6bdedd39
Adding type registration java.lang.String -> org.hibernate.type.StringType@6bdedd39
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7ac6fbed
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@b5fcb93
Adding type registration url -> org.hibernate.type.UrlType@78d74223
Adding type registration java.net.URL -> org.hibernate.type.UrlType@78d74223
Adding type registration date -> org.hibernate.type.DateType@7bec29bf
Adding type registration java.sql.Date -> org.hibernate.type.DateType@7bec29bf
Adding type registration time -> org.hibernate.type.TimeType@299fad44
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@299fad44
Adding type registration timestamp -> org.hibernate.type.TimestampType@3a55334a
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3a55334a
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3a55334a
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1b95141d
Adding type registration calendar -> org.hibernate.type.CalendarType@973568c
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@973568c
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@973568c
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@624c642d
Adding type registration locale -> org.hibernate.type.LocaleType@929bf16
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@929bf16
Adding type registration currency -> org.hibernate.type.CurrencyType@1e62699f
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1e62699f
Adding type registration timezone -> org.hibernate.type.TimeZoneType@704b56ff
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@704b56ff
Adding type registration class -> org.hibernate.type.ClassType@7744626a
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7744626a
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1716f81a
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1716f81a
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2e97d63b
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@103fecbf
Adding type registration binary -> org.hibernate.type.BinaryType@667dc3fd
Adding type registration byte[] -> org.hibernate.type.BinaryType@667dc3fd
Adding type registration [B -> org.hibernate.type.BinaryType@667dc3fd
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5b261fd4
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5b261fd4
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5b261fd4
Adding type registration image -> org.hibernate.type.ImageType@47f92044
Adding type registration characters -> org.hibernate.type.CharArrayType@717f0d2d
Adding type registration char[] -> org.hibernate.type.CharArrayType@717f0d2d
Adding type registration [C -> org.hibernate.type.CharArrayType@717f0d2d
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@412bbda4
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@412bbda4
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@412bbda4
Adding type registration text -> org.hibernate.type.TextType@3f18c6de
Adding type registration ntext -> org.hibernate.type.NTextType@30c12b86
Adding type registration blob -> org.hibernate.type.BlobType@691638bc
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@691638bc
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@43cfd2c6
Adding type registration clob -> org.hibernate.type.ClobType@253feb82
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@253feb82
Adding type registration nclob -> org.hibernate.type.NClobType@5f00a3fb
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5f00a3fb
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7533f005
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@285992f6
Adding type registration serializable -> org.hibernate.type.SerializableType@645ee2c5
Adding type registration object -> org.hibernate.type.ObjectType@510a6331
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@510a6331
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2e6c36d8
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4284b6b7
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@16f7ca7f
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@660f63a0
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7c55d1b8
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@663bc6cd
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5e78f12a
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@56212cda
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Processing PersistenceUnitInfo [
	name: intelTrader
	persistence provider classname: org.hibernate.ejb.HibernatePersistence
	classloader: WebappClassLoader
  context: 
  delegate: false
  repositories:
    /WEB-INF/classes/
----------> Parent Classloader:
ClassRealm[plugin>org.apache.tomcat.maven:tomcat7-maven-plugin:2.0, parent: sun.misc.Launcher$AppClassLoader@1875303f]

	Temporary classloader: org.springframework.instrument.classloading.SimpleThrowawayClassLoader@1c07c863
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/vvarm1/IdeaProjects/intelTrader/src/main/webapp/WEB-INF/classes
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.inteltrader.entity.Instrument
		com.inteltrader.entity.Portfolio
		com.inteltrader.entity.Investment]
	Mapping files names []
	Properties [
		hibernate.connection.username: root
		hibernate.connection.password: root
		hibernate.dialect: org.hibernate.dialect.MySQLDialect
		hibernate.c3p0.min_size: 10
		hibernate.connection.url: jdbc:mysql://localhost:3306/TRADER_DB
		hibernate.show_sql: true
		hibernate.connection.driver_class: com.mysql.jdbc.Driver
		hibernate.hbm2ddl.auto: update]
Detect class: true; detect hbm: true
Detect class: true; detect hbm: true
Searching mapped entities in jar/par: file:/C:/Users/vvarm1/IdeaProjects/intelTrader/src/main/webapp/WEB-INF/classes
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.ejb.event.JpaIntegrator].
No JNDI name configured for binding Ejb3Configuration
Preparing to build session factory with filters : {}
Processing hbm.xml files
Process annotated classes
Binding entity from annotated class: com.inteltrader.entity.Instrument
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Instrument
Bind entity com.inteltrader.entity.Instrument on table INSTRUMENT
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=SYMBOL_NAME, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property symbolName with lazy=false
building SimpleValue for symbolName
Building property symbolName
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=priceList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=priceList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=priceList_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='priceList_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='SYMBOL_NAME', referencedColumn='', mappedBy=''}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Collection role: com.inteltrader.entity.Instrument.priceList
Building property priceList
Binding entity from annotated class: com.inteltrader.entity.Portfolio
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Portfolio
Bind entity com.inteltrader.entity.Portfolio on table PORTFOLIO
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=PORTFOLIO_NAME, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property portfolioName with lazy=false
building SimpleValue for portfolioName
Building property portfolioName
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='associatedPortfolio'}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=investmentList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=element, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=investmentList_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='investmentList_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='associatedPortfolio'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='associatedPortfolio'}
Collection role: com.inteltrader.entity.Portfolio.investmentList
Building property investmentList
Binding entity from annotated class: com.inteltrader.entity.Investment
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Investment
Bind entity com.inteltrader.entity.Investment on table INVESTMENT
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=INVESTMENT_ID, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property investmentId with lazy=false
building SimpleValue for investmentId
Building property investmentId
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=associatedPortfolio, insertable=true, updatable=true, unique=false}
Building property associatedPortfolio
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=currentPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property currentPrice with lazy=false
building SimpleValue for currentPrice
Building property currentPrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=quantity, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property quantity with lazy=false
building SimpleValue for quantity
Building property quantity
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=INVESTMENT_SYMBOL, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property symbolName with lazy=false
building SimpleValue for symbolName
Building property symbolName
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=transactionsList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=transactionsList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=transactionsList_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='transactionsList_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='INVESTMENT_ID', referencedColumn='', mappedBy=''}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Collection role: com.inteltrader.entity.Investment.transactionsList
Building property transactionsList
Setting SimpleValue typeName for symbolName
Setting SimpleValue typeName for portfolioName
Setting SimpleValue typeName for investmentId
Setting SimpleValue typeName for currentPrice
Setting SimpleValue typeName for quantity
Setting SimpleValue typeName for symbolName
Processing fk mappings (*ToOne and JoinedSubclass)
Processing extends queue
Processing extends queue
Processing collection mappings
Second pass for collection: com.inteltrader.entity.Investment.transactionsList
Binding a collection of element: com.inteltrader.entity.Investment.transactionsList
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT_TRANSACTION), mappingColumn=quantity, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property quantity with lazy=false
building SimpleValue for quantity
Setting SimpleValue typeName for quantity
Building property quantity
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT_TRANSACTION), mappingColumn=transactionId, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property transactionId with lazy=false
building SimpleValue for transactionId
Setting SimpleValue typeName for transactionId
Building property transactionId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT_TRANSACTION), mappingColumn=transactionPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property transactionPrice with lazy=false
building SimpleValue for transactionPrice
Setting SimpleValue typeName for transactionPrice
Building property transactionPrice
Mapped collection key: INVESTMENT_ID, element: quantity, transactionId, transactionPrice
Second pass for collection: com.inteltrader.entity.Instrument.priceList
Binding a collection of element: com.inteltrader.entity.Instrument.priceList
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=closePrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property closePrice with lazy=false
building SimpleValue for closePrice
Setting SimpleValue typeName for closePrice
Building property closePrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=highPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property highPrice with lazy=false
building SimpleValue for highPrice
Setting SimpleValue typeName for highPrice
Building property highPrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=lastClosePrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property lastClosePrice with lazy=false
building SimpleValue for lastClosePrice
Setting SimpleValue typeName for lastClosePrice
Building property lastClosePrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=lowPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property lowPrice with lazy=false
building SimpleValue for lowPrice
Setting SimpleValue typeName for lowPrice
Building property lowPrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=openPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property openPrice with lazy=false
building SimpleValue for openPrice
Setting SimpleValue typeName for openPrice
Building property openPrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=priceId, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property priceId with lazy=false
building SimpleValue for priceId
Setting SimpleValue typeName for priceId
Building property priceId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=timeStamp, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property timeStamp with lazy=false
building SimpleValue for timeStamp
Setting SimpleValue typeName for timeStamp
Building property timeStamp
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=totalTradedQuantity, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property totalTradedQuantity with lazy=false
building SimpleValue for totalTradedQuantity
Setting SimpleValue typeName for totalTradedQuantity
Building property totalTradedQuantity
Mapped collection key: SYMBOL_NAME, element: closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity
Second pass for collection: com.inteltrader.entity.Portfolio.investmentList
Binding a OneToMany: com.inteltrader.entity.Portfolio.investmentList through a foreign key
Mapping collection: com.inteltrader.entity.Portfolio.investmentList -> INVESTMENT
Retrieving property com.inteltrader.entity.Investment.associatedPortfolio
Mapped collection key: associatedPortfolio_PORTFOLIO_NAME, one-to-many: com.inteltrader.entity.Investment
Processing native query and ResultSetMapping mappings
Processing association property references
Creating tables' unique integer identifiers
Processing foreign key constraints
Resolving reference to class: com.inteltrader.entity.Instrument
Resolving reference to class: com.inteltrader.entity.Portfolio
Resolving reference to class: com.inteltrader.entity.Investment
HHH000022: c3p0 properties were encountered, but the org.hibernate.service.jdbc.connections.internal.C3P0ConnectionProvider provider class was not found on the classpath; these properties are going to be ignored.
HHH000402: Using Hibernate built-in connection pool (not for production use!)
HHH000115: Hibernate connection pool size: 20
HHH000006: Autocommit mode: true
HHH000401: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/TRADER_DB]
HHH000046: Connection properties: {user=root, password=root, autocommit=true, release_mode=auto}
Opening new JDBC connection
Created connection to: jdbc:mysql://localhost:3306/TRADER_DB, Isolation Level: 4
Database ->
       name : MySQL
    version : 5.6.10-log
      major : 5
      minor : 6
Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.9 ( Revision: ${svn.Revision} )
      major : 5
      minor : 1
JDBC version : 3.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: disabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
multi-tenancy strategy : NONE
Connection release mode: auto
HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
Maximum outer join fetch depth: 2
Default batch fetch size: 1
Generate SQL with comments: disabled
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
HHH000397: Using ASTQueryTranslatorFactory
Query language substitutions: {}
JPA-QL strict compliance: enabled
Second-level cache: enabled
Query cache: disabled
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
Optimize cache for minimal puts: disabled
Structured second-level cache entries: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Named query checking : enabled
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : : disabled
Building session factory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\vvarm1\IdeaProjects\intelTrader\target\tomcat, hibernate.connection.url=jdbc:mysql://localhost:3306/TRADER_DB, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.ejb.discard_pc_on_close=false, catalina.useNaming=true, hibernate.transaction.flush_before_completion=false, os.name=Windows 7, sun.boot.class.path=C:\Program Files\Java\jdk1.7.0_10\jre\lib\resources.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\rt.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\jce.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.7.0_10\jre\classes, java.util.logging.config.file=C:\Users\vvarm1\IdeaProjects\intelTrader\target\tomcat\conf\logging.properties, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.7.0_10-b18, hibernate.connection.autocommit=true, hibernate.c3p0.min_size=10, user.name=vvarm1, shared.loader=, guice.disable.misplaced.annotation.check=true, tomcat.util.buf.StringCache.byte.enabled=true, javax.persistence.validation.mode=AUTO, hibernate.connection.release_mode=auto, idea.launcher.bin.path=C:\Program Files (x86)\JetBrains\IntelliJ IDEA Community Edition 12.0.4\bin, user.language=en, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, sun.boot.library.path=C:\Program Files\Java\jdk1.7.0_10\jre\bin, classworlds.conf=C:\Program Files\Apache Software Foundation\apache-maven-3.0.5\bin\m2.conf, java.version=1.7.0_10, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, user.timezone=Asia/Calcutta, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.7.0_10\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, file.encoding.pkg=sun.io, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.tomcat.,org.apache.jasper., file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=51.0, user.country=US, java.home=C:\Program Files\Java\jdk1.7.0_10\jre, java.vm.info=mixed mode, os.version=6.1, hibernate.transaction.factory_class=org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory, hibernate.query.jpaql_strict_compliance=true, path.separator=;, java.vm.version=23.6-b04, hibernate.connection.password=root, user.variant=, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.scan.DefaultJarScanner.jarsToSkip=bootstrap.jar,commons-daemon.jar,tomcat-juli.jar,annotations-api.jar,el-api.jar,jsp-api.jar,servlet-api.jar,catalina.jar,catalina-ant.jar,catalina-ha.jar,catalina-tribes.jar,jasper.jar,jasper-el.jar,ecj-*.jar,tomcat-api.jar,tomcat-util.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-jni.jar,tomcat-spdy.jar,tomcat-i18n-en.jar,tomcat-i18n-es.jar,tomcat-i18n-fr.jar,tomcat-i18n-ja.jar,tomcat-juli-adapters.jar,catalina-jmx-remote.jar,catalina-ws.jar,tomcat-jdbc.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,jstl.jar,geronimo-spec-jaxrpc*.jar,wsdl4j*.jar,ant.jar,ant-junit*.jar,aspectj*.jar,jmx.jar,h2*.jar,hibernate*.jar,httpclient*.jar,jmx-tools.jar,jta*.jar,log4j*.jar,mail*.jar,slf4j*.jar,xercesImpl.jar,xmlParserAPIs.jar,xml-apis.jar,access-bridge-64.jar,dnsns.jar,jaccess.jar,ldapsec.jar,localedata.jar,sunjce_provider.jar,sunmscapi.jar,sunpkcs11.jar,jhall.jar,tools.jar,sunec.jar,zipfs.jar,gnome-java-bridge.jar,pulse-java.jar,apple_provider.jar,AppleScriptEngine.jar,CoreAudio.jar,dns_sd.jar,j3daudio.jar,j3dcore.jar,j3dutils.jar,jai_core.jar,jai_codec.jar,mlibwrapper_jai.jar,MRJToolkit.jar,vecmath.jar,junit.jar,junit-*.jar,ant-launcher.jar, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.tomcat.,org.apache.jasper., user.script=, java.naming.factory.url.pkgs=org.apache.naming, user.home=C:\Users\vvarm1, org.apache.catalina.startup.ContextConfig.jarsToSkip=, java.specification.vendor=Oracle Corporation, hibernate.hbm2ddl.auto=update, java.library.path=C:\Program Files\Java\jdk1.7.0_10\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\JetBrains\IntelliJ IDEA Community Edition 12.0.4\bin\..\.\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\ThinkPad\Bluetooth Software\;C:\Program Files\ThinkPad\Bluetooth Software\syswow64;c:\Program Files\Intel\WiFi\bin\;c:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files (x86)\Git\cmd;C:\Users\vvarm1\Documents\play-2.0.3;C:\Program Files\Java\jdk1.7.0_10\bin;C:\Program Files\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\QuickTime\QTSystem\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Java\jre6\bin;C:\Program Files\Apache Software Foundation\apache-maven-3.0.5\bin;c:\program files (x86)\jetbrains\intellij idea community edition 12.0.4\jre\jre\bin;., java.vendor.url=http://java.oracle.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, org.apache.catalina.startup.TldConfig.jarsToSkip=, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, common.loader=${catalina.base}/lib,${catalina.base}/lib/*.jar,${catalina.home}/lib,${catalina.home}/lib/*.jar, maven.home=C:\Program Files\Apache Software Foundation\apache-maven-3.0.5, java.runtime.name=Java(TM) SE Runtime Environment, java.class.path=C:\Program Files\Apache Software Foundation\apache-maven-3.0.5\boot\plexus-classworlds-2.4.jar;C:\Program Files (x86)\JetBrains\IntelliJ IDEA Community Edition 12.0.4\lib\idea_rt.jar, sun.java.command=com.intellij.rt.execution.application.AppMain org.codehaus.classworlds.Launcher --no-plugin-registry --fail-fast --strict-checksums --update-snapshots org.apache.tomcat.maven:tomcat7-maven-plugin:2.0:run, hibernate.bytecode.use_reflection_optimizer=false, idea.launcher.port=7536, java.vm.specification.name=Java Virtual Machine Specification, catalina.home=C:\Users\vvarm1\IdeaProjects\intelTrader\target\tomcat, java.vm.specification.version=1.7, sun.os.patch.level=Service Pack 1, sun.cpu.endian=little, java.io.tmpdir=C:\Users\vvarm1\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, server.loader=, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, java.ext.dirs=C:\Program Files\Java\jdk1.7.0_10\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=C:\Users\vvarm1\IdeaProjects\intelTrader, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding=UTF-8, hibernate.use_identifier_rollback=false, java.specification.version=1.7, hibernate.show_sql=true}
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Static SQL for entity: com.inteltrader.entity.Investment
 Version select: select INVESTMENT_ID from TRADER_DB.INVESTMENT where INVESTMENT_ID =?
 Snapshot select: select investment_.INVESTMENT_ID, investment_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_, investment_.currentPrice as currentP2_2_, investment_.quantity as quantity2_, investment_.INVESTMENT_SYMBOL as INVESTMENT4_2_ from TRADER_DB.INVESTMENT investment_ where investment_.INVESTMENT_ID=?
 Insert 0: insert into TRADER_DB.INVESTMENT (associatedPortfolio_PORTFOLIO_NAME, currentPrice, quantity, INVESTMENT_SYMBOL, INVESTMENT_ID) values (?, ?, ?, ?, ?)
 Update 0: update TRADER_DB.INVESTMENT set associatedPortfolio_PORTFOLIO_NAME=?, currentPrice=?, quantity=?, INVESTMENT_SYMBOL=? where INVESTMENT_ID=?
 Delete 0: delete from TRADER_DB.INVESTMENT where INVESTMENT_ID=?
 Identity insert: insert into TRADER_DB.INVESTMENT (associatedPortfolio_PORTFOLIO_NAME, currentPrice, quantity, INVESTMENT_SYMBOL) values (?, ?, ?, ?)
Static SQL for entity: com.inteltrader.entity.Instrument
 Version select: select SYMBOL_NAME from TRADER_DB.INSTRUMENT where SYMBOL_NAME =?
 Snapshot select: select instrument_.SYMBOL_NAME from TRADER_DB.INSTRUMENT instrument_ where instrument_.SYMBOL_NAME=?
 Insert 0: insert into TRADER_DB.INSTRUMENT (SYMBOL_NAME) values (?)
 Update 0: null
 Delete 0: delete from TRADER_DB.INSTRUMENT where SYMBOL_NAME=?
Static SQL for entity: com.inteltrader.entity.Portfolio
 Version select: select PORTFOLIO_NAME from TRADER_DB.PORTFOLIO where PORTFOLIO_NAME =?
 Snapshot select: select portfolio_.PORTFOLIO_NAME from TRADER_DB.PORTFOLIO portfolio_ where portfolio_.PORTFOLIO_NAME=?
 Insert 0: insert into TRADER_DB.PORTFOLIO (PORTFOLIO_NAME) values (?)
 Update 0: null
 Delete 0: delete from TRADER_DB.PORTFOLIO where PORTFOLIO_NAME=?
Static SQL for collection: com.inteltrader.entity.Instrument.priceList
 Row insert: insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
 Row update: update TRADER_DB.INSTRUMENT_PRICE set closePrice=?, highPrice=?, lastClosePrice=?, lowPrice=?, openPrice=?, priceId=?, timeStamp=?, totalTradedQuantity=? where SYMBOL_NAME=? and priceId=? and totalTradedQuantity=?
 Row delete: delete from TRADER_DB.INSTRUMENT_PRICE where SYMBOL_NAME=? and priceId=? and totalTradedQuantity=?
 One-shot delete: delete from TRADER_DB.INSTRUMENT_PRICE where SYMBOL_NAME=?
Static SQL for collection: com.inteltrader.entity.Investment.transactionsList
 Row insert: insert into TRADER_DB.INVESTMENT_TRANSACTION (INVESTMENT_ID, quantity, transactionId, transactionPrice) values (?, ?, ?, ?)
 Row update: update TRADER_DB.INVESTMENT_TRANSACTION set quantity=?, transactionId=?, transactionPrice=? where INVESTMENT_ID=? and quantity=? and transactionId=? and transactionPrice=?
 Row delete: delete from TRADER_DB.INVESTMENT_TRANSACTION where INVESTMENT_ID=? and quantity=? and transactionId=? and transactionPrice=?
 One-shot delete: delete from TRADER_DB.INVESTMENT_TRANSACTION where INVESTMENT_ID=?
Static SQL for collection: com.inteltrader.entity.Portfolio.investmentList
 Row insert: update TRADER_DB.INVESTMENT set associatedPortfolio_PORTFOLIO_NAME=? where INVESTMENT_ID=?
 Row delete: update TRADER_DB.INVESTMENT set associatedPortfolio_PORTFOLIO_NAME=null where associatedPortfolio_PORTFOLIO_NAME=? and INVESTMENT_ID=?
 One-shot delete: update TRADER_DB.INVESTMENT set associatedPortfolio_PORTFOLIO_NAME=null where associatedPortfolio_PORTFOLIO_NAME=?
Static select for entity com.inteltrader.entity.Instrument [NONE]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for entity com.inteltrader.entity.Instrument [READ]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for entity com.inteltrader.entity.Instrument [UPGRADE]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [UPGRADE_NOWAIT]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [FORCE]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [PESSIMISTIC_READ]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? lock in share mode
Static select for entity com.inteltrader.entity.Instrument [PESSIMISTIC_WRITE]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [PESSIMISTIC_FORCE_INCREMENT]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [OPTIMISTIC]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for entity com.inteltrader.entity.Instrument [OPTIMISTIC_FORCE_INCREMENT]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for action ACTION_MERGE on entity com.inteltrader.entity.Instrument: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for action ACTION_REFRESH on entity com.inteltrader.entity.Instrument: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for entity com.inteltrader.entity.Investment [NONE]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_1_, investment0_.currentPrice as currentP2_2_1_, investment0_.quantity as quantity2_1_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_1_, portfolio1_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.INVESTMENT investment0_ left outer join TRADER_DB.PORTFOLIO portfolio1_ on investment0_.associatedPortfolio_PORTFOLIO_NAME=portfolio1_.PORTFOLIO_NAME where investment0_.INVESTMENT_ID=?
Static select for entity com.inteltrader.entity.Investment [READ]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_1_, investment0_.currentPrice as currentP2_2_1_, investment0_.quantity as quantity2_1_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_1_, portfolio1_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.INVESTMENT investment0_ left outer join TRADER_DB.PORTFOLIO portfolio1_ on investment0_.associatedPortfolio_PORTFOLIO_NAME=portfolio1_.PORTFOLIO_NAME where investment0_.INVESTMENT_ID=?
Static select for entity com.inteltrader.entity.Investment [UPGRADE]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [UPGRADE_NOWAIT]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [FORCE]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [PESSIMISTIC_READ]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? lock in share mode
Static select for entity com.inteltrader.entity.Investment [PESSIMISTIC_WRITE]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [PESSIMISTIC_FORCE_INCREMENT]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [OPTIMISTIC]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=?
Static select for entity com.inteltrader.entity.Investment [OPTIMISTIC_FORCE_INCREMENT]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=?
Static select for action ACTION_MERGE on entity com.inteltrader.entity.Investment: select investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_1_, investment0_.currentPrice as currentP2_2_1_, investment0_.quantity as quantity2_1_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_1_, portfolio1_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.INVESTMENT investment0_ left outer join TRADER_DB.PORTFOLIO portfolio1_ on investment0_.associatedPortfolio_PORTFOLIO_NAME=portfolio1_.PORTFOLIO_NAME where investment0_.INVESTMENT_ID=?
Static select for action ACTION_REFRESH on entity com.inteltrader.entity.Investment: select investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_1_, investment0_.currentPrice as currentP2_2_1_, investment0_.quantity as quantity2_1_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_1_, portfolio1_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.INVESTMENT investment0_ left outer join TRADER_DB.PORTFOLIO portfolio1_ on investment0_.associatedPortfolio_PORTFOLIO_NAME=portfolio1_.PORTFOLIO_NAME where investment0_.INVESTMENT_ID=?
Static select for entity com.inteltrader.entity.Portfolio [NONE]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Static select for entity com.inteltrader.entity.Portfolio [READ]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Static select for entity com.inteltrader.entity.Portfolio [UPGRADE]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [UPGRADE_NOWAIT]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [FORCE]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [PESSIMISTIC_READ]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? lock in share mode
Static select for entity com.inteltrader.entity.Portfolio [PESSIMISTIC_WRITE]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [PESSIMISTIC_FORCE_INCREMENT]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [OPTIMISTIC]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=?
Static select for entity com.inteltrader.entity.Portfolio [OPTIMISTIC_FORCE_INCREMENT]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=?
Static select for action ACTION_MERGE on entity com.inteltrader.entity.Portfolio: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Static select for action ACTION_REFRESH on entity com.inteltrader.entity.Portfolio: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Static select for collection com.inteltrader.entity.Instrument.priceList: select pricelist0_.SYMBOL_NAME as SYMBOL1_0_0_, pricelist0_.closePrice as closePrice1_0_, pricelist0_.highPrice as highPrice1_0_, pricelist0_.lastClosePrice as lastClos4_1_0_, pricelist0_.lowPrice as lowPrice1_0_, pricelist0_.openPrice as openPrice1_0_, pricelist0_.priceId as priceId1_0_, pricelist0_.timeStamp as timeStamp1_0_, pricelist0_.totalTradedQuantity as totalTra9_1_0_ from TRADER_DB.INSTRUMENT_PRICE pricelist0_ where pricelist0_.SYMBOL_NAME=?
Static select for one-to-many com.inteltrader.entity.Portfolio.investmentList: select investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_1_, investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.associatedPortfolio_PORTFOLIO_NAME=?
Static select for collection com.inteltrader.entity.Investment.transactionsList: select transactio0_.INVESTMENT_ID as INVESTMENT1_2_0_, transactio0_.quantity as quantity3_0_, transactio0_.transactionId as transact3_3_0_, transactio0_.transactionPrice as transact4_3_0_ from TRADER_DB.INVESTMENT_TRANSACTION transactio0_ where transactio0_.INVESTMENT_ID=?
Registering SessionFactory: ca695ca0-3f19-4fa5-a1d0-e9ea5d84eff6 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Instantiated session factory
HHH000228: Running hbm2ddl schema update
HHH000102: Fetching database metadata
HHH000396: Updating schema
Processing hbm.xml files
Process annotated classes
Processing fk mappings (*ToOne and JoinedSubclass)
Processing extends queue
Processing extends queue
Processing collection mappings
Processing native query and ResultSetMapping mappings
Processing association property references
Creating tables' unique integer identifiers
Processing foreign key constraints
Resolving reference to class: com.inteltrader.entity.Instrument
Resolving reference to class: com.inteltrader.entity.Portfolio
Resolving reference to class: com.inteltrader.entity.Investment
HHH000261: Table found: TRADER_DB.instrument
HHH000037: Columns: [symbol_name]
HHH000108: Foreign keys: []
HHH000126: Indexes: [primary]
HHH000261: Table found: TRADER_DB.instrument_price
HHH000037: Columns: [totaltradedquantity, timestamp, priceid, lastcloseprice, highprice, symbol_name, openprice, closeprice, lowprice]
HHH000108: Foreign keys: [fk3189a2d153ed548d]
HHH000126: Indexes: [fk3189a2d153ed548d]
HHH000261: Table found: TRADER_DB.investment
HHH000037: Columns: [investment_id, associatedportfolio_portfolio_name, currentprice, quantity, investment_symbol]
HHH000108: Foreign keys: [fk8fe41ed3c804d4f3]
HHH000126: Indexes: [fk8fe41ed3c804d4f3, primary]
HHH000261: Table found: TRADER_DB.investment_transaction
HHH000037: Columns: [transactionprice, investment_id, transactionid, quantity]
HHH000108: Foreign keys: [fka5863f52914590ae]
HHH000126: Indexes: [fka5863f52914590ae]
HHH000261: Table found: TRADER_DB.portfolio
HHH000037: Columns: [portfolio_name]
HHH000108: Foreign keys: []
HHH000126: Indexes: [primary]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
HHH000232: Schema update complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Statistics initialized [enabled=false]
Registering EntityManagerFactory: intelTrader 
HHH000436: Entity manager factory name (intelTrader) is already registered.  If entity manager will be clustered or passivated, specify a unique value for property 'hibernate.ejb.entitymanager_factory_name'
Finished creating instance of bean 'entityManagerFactory'
Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@3f9355d7: defining beans [org.springframework.context.annotation.internalAsyncAnnotationProcessor,org.springframework.context.annotation.internalScheduledAnnotationProcessor,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0,org.springframework.web.servlet.view.InternalResourceViewResolver#0,instrumentDao,portfolioDao,instrumentService,portfolioService,entityManagerFactory,transactionManager,instrument,investment,portfolio,instrumentServiceRest,portfolioServiceRest,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor]; parent: org.springframework.beans.factory.support.DefaultListableBeanFactory@13b7dd80
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Creating instance of bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0' to allow for resolving potential circular references
Creating instance of bean '(inner bean)'
Creating shared instance of singleton bean 'transactionManager'
Creating instance of bean 'transactionManager'
Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
Returning cached instance of singleton bean 'entityManagerFactory'
Invoking afterPropertiesSet() on bean with name 'transactionManager'
Finished creating instance of bean 'transactionManager'
Creating instance of bean '(inner bean)'
Finished creating instance of bean '(inner bean)'
Invoking afterPropertiesSet() on bean with name '(inner bean)'
Finished creating instance of bean '(inner bean)'
Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Creating shared instance of singleton bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Creating instance of bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Eagerly caching bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Creating shared instance of singleton bean 'instrumentDao'
Creating instance of bean 'instrumentDao'
Eagerly caching bean 'instrumentDao' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'instrumentDao'
Creating shared instance of singleton bean 'portfolioDao'
Creating instance of bean 'portfolioDao'
Eagerly caching bean 'portfolioDao' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'portfolioDao'
Creating shared instance of singleton bean 'instrumentService'
Creating instance of bean 'instrumentService'
Registered injected element on class [com.inteltrader.service.InstrumentServiceImpl]: PersistenceElement for javax.persistence.EntityManagerFactory com.inteltrader.service.InstrumentServiceImpl.entityManagerFactory
Registered injected element on class [com.inteltrader.service.InstrumentServiceImpl]: AutowiredFieldElement for private com.inteltrader.dao.IInstrumentDao com.inteltrader.service.InstrumentServiceImpl.instrumentDao
Registered injected element on class [com.inteltrader.service.InstrumentServiceImpl]: AutowiredFieldElement for private com.inteltrader.service.PortfolioService com.inteltrader.service.InstrumentServiceImpl.portfolioService
Eagerly caching bean 'instrumentService' to allow for resolving potential circular references
Processing injected method of bean 'instrumentService': PersistenceElement for javax.persistence.EntityManagerFactory com.inteltrader.service.InstrumentServiceImpl.entityManagerFactory
Returning cached instance of singleton bean 'entityManagerFactory'
Processing injected method of bean 'instrumentService': AutowiredFieldElement for private com.inteltrader.dao.IInstrumentDao com.inteltrader.service.InstrumentServiceImpl.instrumentDao
Returning cached instance of singleton bean 'instrumentDao'
Autowiring by type from bean name 'instrumentService' to bean named 'instrumentDao'
Processing injected method of bean 'instrumentService': AutowiredFieldElement for private com.inteltrader.service.PortfolioService com.inteltrader.service.InstrumentServiceImpl.portfolioService
Creating shared instance of singleton bean 'portfolioService'
Creating instance of bean 'portfolioService'
Registered injected element on class [com.inteltrader.service.PortfolioServiceImpl]: PersistenceElement for private javax.persistence.EntityManagerFactory com.inteltrader.service.PortfolioServiceImpl.entityManagerFactory
Registered injected element on class [com.inteltrader.service.PortfolioServiceImpl]: AutowiredFieldElement for private com.inteltrader.dao.IPortfolioDao com.inteltrader.service.PortfolioServiceImpl.portfolioDao
Eagerly caching bean 'portfolioService' to allow for resolving potential circular references
Processing injected method of bean 'portfolioService': PersistenceElement for private javax.persistence.EntityManagerFactory com.inteltrader.service.PortfolioServiceImpl.entityManagerFactory
Returning cached instance of singleton bean 'entityManagerFactory'
Processing injected method of bean 'portfolioService': AutowiredFieldElement for private com.inteltrader.dao.IPortfolioDao com.inteltrader.service.PortfolioServiceImpl.portfolioDao
Returning cached instance of singleton bean 'portfolioDao'
Autowiring by type from bean name 'portfolioService' to bean named 'portfolioDao'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'portfolioService'
Autowiring by type from bean name 'instrumentService' to bean named 'portfolioService'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'instrumentService'
Returning cached instance of singleton bean 'portfolioService'
Returning cached instance of singleton bean 'entityManagerFactory'
Returning cached instance of singleton bean 'transactionManager'
Creating shared instance of singleton bean 'instrument'
Creating instance of bean 'instrument'
Eagerly caching bean 'instrument' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'instrument'
Creating shared instance of singleton bean 'investment'
Creating instance of bean 'investment'
Eagerly caching bean 'investment' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'investment'
Creating shared instance of singleton bean 'portfolio'
Creating instance of bean 'portfolio'
Eagerly caching bean 'portfolio' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'portfolio'
Creating shared instance of singleton bean 'instrumentServiceRest'
Creating instance of bean 'instrumentServiceRest'
Registered injected element on class [com.inteltrader.rest.InstrumentServiceRest]: AutowiredFieldElement for private com.inteltrader.service.InstrumentService com.inteltrader.rest.InstrumentServiceRest.instrumentService
Eagerly caching bean 'instrumentServiceRest' to allow for resolving potential circular references
Processing injected method of bean 'instrumentServiceRest': AutowiredFieldElement for private com.inteltrader.service.InstrumentService com.inteltrader.rest.InstrumentServiceRest.instrumentService
Returning cached instance of singleton bean 'instrumentService'
Autowiring by type from bean name 'instrumentServiceRest' to bean named 'instrumentService'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'instrumentServiceRest'
Creating shared instance of singleton bean 'portfolioServiceRest'
Creating instance of bean 'portfolioServiceRest'
Registered injected element on class [com.inteltrader.rest.PortfolioServiceRest]: AutowiredFieldElement for private com.inteltrader.service.PortfolioService com.inteltrader.rest.PortfolioServiceRest.portfolioService
Eagerly caching bean 'portfolioServiceRest' to allow for resolving potential circular references
Processing injected method of bean 'portfolioServiceRest': AutowiredFieldElement for private com.inteltrader.service.PortfolioService com.inteltrader.rest.PortfolioServiceRest.portfolioService
Returning cached instance of singleton bean 'portfolioService'
Autowiring by type from bean name 'portfolioServiceRest' to bean named 'portfolioService'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'portfolioServiceRest'
Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@36da7777]
Returning cached instance of singleton bean 'lifecycleProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Unable to locate MultipartResolver with name 'multipartResolver': no multipart request handling provided
Creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Unable to locate LocaleResolver with name 'localeResolver': using default [org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver@68e8e754]
Creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Unable to locate ThemeResolver with name 'themeResolver': using default [org.springframework.web.servlet.theme.FixedThemeResolver@37c1f888]
Creating instance of bean 'org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping'
Looking for URL mappings in application context: WebApplicationContext for namespace 'appServlet-servlet': startup date [Fri Apr 19 15:06:18 IST 2013]; parent: Root WebApplicationContext
Rejected bean name 'org.springframework.context.annotation.internalAsyncAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalScheduledAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalRequiredAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalCommonAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.aop.config.internalAutoProxyCreator': no URL paths identified
Rejected bean name 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0': no URL paths identified
Rejected bean name 'org.springframework.web.servlet.view.InternalResourceViewResolver#0': no URL paths identified
Rejected bean name 'instrumentDao': no URL paths identified
Rejected bean name 'portfolioDao': no URL paths identified
Rejected bean name 'instrumentService': no URL paths identified
Rejected bean name 'portfolioService': no URL paths identified
Rejected bean name 'entityManagerFactory': no URL paths identified
Rejected bean name 'transactionManager': no URL paths identified
Rejected bean name 'instrument': no URL paths identified
Rejected bean name 'investment': no URL paths identified
Rejected bean name 'portfolio': no URL paths identified
Rejected bean name 'instrumentServiceRest': no URL paths identified
Rejected bean name 'portfolioServiceRest': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor': no URL paths identified
Rejected bean name 'environment': no URL paths identified
Rejected bean name 'systemProperties': no URL paths identified
Rejected bean name 'systemEnvironment': no URL paths identified
Rejected bean name 'servletConfig': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry': no URL paths identified
Rejected bean name 'messageSource': no URL paths identified
Rejected bean name 'applicationEventMulticaster': no URL paths identified
Rejected bean name 'lifecycleProcessor': no URL paths identified
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping'
Creating instance of bean 'org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping'
Looking for URL mappings in application context: WebApplicationContext for namespace 'appServlet-servlet': startup date [Fri Apr 19 15:06:18 IST 2013]; parent: Root WebApplicationContext
Rejected bean name 'org.springframework.context.annotation.internalAsyncAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalScheduledAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalRequiredAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalCommonAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.aop.config.internalAutoProxyCreator': no URL paths identified
Rejected bean name 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0': no URL paths identified
Rejected bean name 'org.springframework.web.servlet.view.InternalResourceViewResolver#0': no URL paths identified
Rejected bean name 'instrumentDao': no URL paths identified
Rejected bean name 'portfolioDao': no URL paths identified
Rejected bean name 'instrumentService': no URL paths identified
Rejected bean name 'portfolioService': no URL paths identified
Rejected bean name 'entityManagerFactory': no URL paths identified
Rejected bean name 'transactionManager': no URL paths identified
Rejected bean name 'instrument': no URL paths identified
Rejected bean name 'investment': no URL paths identified
Rejected bean name 'portfolio': no URL paths identified
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/create/{symbol}] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/create/{symbol}.*] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/create/{symbol}/] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/update/{portfolioName}] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/update/{portfolioName}.*] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/update/{portfolioName}/] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/load/{symbol}] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/load/{symbol}.*] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/load/{symbol}/] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/create/{portfolioName}] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/create/{portfolioName}.*] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/create/{portfolioName}/] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/addInvestment/{portfolioName}/{symbolName}] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/addInvestment/{portfolioName}/{symbolName}.*] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/addInvestment/{portfolioName}/{symbolName}/] onto handler 'portfolioServiceRest'
Rejected bean name 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor': no URL paths identified
Rejected bean name 'environment': no URL paths identified
Rejected bean name 'systemProperties': no URL paths identified
Rejected bean name 'systemEnvironment': no URL paths identified
Rejected bean name 'servletConfig': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry': no URL paths identified
Rejected bean name 'messageSource': no URL paths identified
Rejected bean name 'applicationEventMulticaster': no URL paths identified
Rejected bean name 'lifecycleProcessor': no URL paths identified
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping'
No HandlerMappings found in servlet 'appServlet': using default
Creating instance of bean 'org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter'
Creating instance of bean 'org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter'
Creating instance of bean 'org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter'
No HandlerAdapters found in servlet 'appServlet': using default
Creating instance of bean 'org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerExceptionResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerExceptionResolver'
Creating instance of bean 'org.springframework.web.servlet.mvc.annotation.ResponseStatusExceptionResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.annotation.ResponseStatusExceptionResolver'
Creating instance of bean 'org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver'
No HandlerExceptionResolvers found in servlet 'appServlet': using default
Creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Unable to locate RequestToViewNameTranslator with name 'viewNameTranslator': using default [org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@7f12767]
Returning cached instance of singleton bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Returning cached instance of singleton bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Unable to locate FlashMapManager with name 'flashMapManager': using default [org.springframework.web.servlet.support.SessionFlashMapManager@17d88e42]
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Searching for key 'spring.liveBeansView.mbeanDomain' in [servletConfigInitParams]
Searching for key 'spring.liveBeansView.mbeanDomain' in [servletContextInitParams]
Searching for key 'spring.liveBeansView.mbeanDomain' in [jndiProperties]
Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain]
Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException: Name [spring.liveBeansView.mbeanDomain] is not bound in this Context. Unable to find [spring.liveBeansView.mbeanDomain].
Looking up JNDI object with name [spring.liveBeansView.mbeanDomain]
JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: Name [spring.liveBeansView.mbeanDomain] is not bound in this Context. Unable to find [spring.liveBeansView.mbeanDomain].. Returning null.
Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
Published WebApplicationContext of servlet 'appServlet' as ServletContext attribute with name [org.springframework.web.servlet.FrameworkServlet.CONTEXT.appServlet]
FrameworkServlet 'appServlet': initialization completed in 497 ms
Servlet 'appServlet' configured successfully
DispatcherServlet with name 'appServlet' processing GET request for [/instrument/update/MyFirstTime]
Matching patterns for request [/instrument/update/MyFirstTime] are [/instrument/update/{portfolioName}]
URI Template variables for request [/instrument/update/MyFirstTime] are {portfolioName=MyFirstTime}
Mapping [/instrument/update/MyFirstTime] to HandlerExecutionChain with handler [com.inteltrader.rest.InstrumentServiceRest@1914fb08] and 2 interceptors
Last-Modified value for [/instrument/update/MyFirstTime] is: -1
Invoking request handler method: public org.springframework.http.ResponseEntity com.inteltrader.rest.InstrumentServiceRest.updateInstruments(java.lang.String,javax.servlet.http.HttpServletRequest)
Loading entity: [com.inteltrader.entity.Portfolio#MyFirstTime]
Obtaining JDBC connection
Obtained JDBC connection
select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Result set row: 0
Result row: EntityKey[com.inteltrader.entity.Investment#1], EntityKey[com.inteltrader.entity.Portfolio#MyFirstTime]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Result set row: 1
Result row: EntityKey[com.inteltrader.entity.Investment#2], EntityKey[com.inteltrader.entity.Portfolio#MyFirstTime]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Result set row: 2
Result row: EntityKey[com.inteltrader.entity.Investment#3], EntityKey[com.inteltrader.entity.Portfolio#MyFirstTime]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Resolving associations for [com.inteltrader.entity.Investment#1]
Loading entity: [com.inteltrader.entity.Portfolio#myFirstTime]
select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Result set row: 0
Result row: EntityKey[com.inteltrader.entity.Investment#1], EntityKey[com.inteltrader.entity.Portfolio#myFirstTime]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Result set row: 1
Result row: EntityKey[com.inteltrader.entity.Investment#2], EntityKey[com.inteltrader.entity.Portfolio#myFirstTime]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Result set row: 2
Result row: EntityKey[com.inteltrader.entity.Investment#3], EntityKey[com.inteltrader.entity.Portfolio#myFirstTime]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Resolving associations for [com.inteltrader.entity.Portfolio#myFirstTime]
Done materializing entity [com.inteltrader.entity.Portfolio#myFirstTime]
No collections were found in result set for role: com.inteltrader.entity.Portfolio.investmentList
Done entity load
Done materializing entity [com.inteltrader.entity.Investment#1]
Resolving associations for [com.inteltrader.entity.Portfolio#MyFirstTime]
Done materializing entity [com.inteltrader.entity.Portfolio#MyFirstTime]
Resolving associations for [com.inteltrader.entity.Investment#2]
Done materializing entity [com.inteltrader.entity.Investment#2]
Resolving associations for [com.inteltrader.entity.Investment#3]
Done materializing entity [com.inteltrader.entity.Investment#3]
1 collections were found in result set for role: com.inteltrader.entity.Portfolio.investmentList
Collection fully initialized: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
1 collections initialized for role: com.inteltrader.entity.Portfolio.investmentList
Loading collection: [com.inteltrader.entity.Portfolio.investmentList#MyFirstTime]
select investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_1_, investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.associatedPortfolio_PORTFOLIO_NAME=?
Result set contains (possibly empty) collection: [com.inteltrader.entity.Portfolio.investmentList#MyFirstTime]
Result set row: 0
Result row: EntityKey[com.inteltrader.entity.Investment#1]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Result set row: 1
Result row: EntityKey[com.inteltrader.entity.Investment#2]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Result set row: 2
Result row: EntityKey[com.inteltrader.entity.Investment#3]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
1 collections were found in result set for role: com.inteltrader.entity.Portfolio.investmentList
Collection fully initialized: [com.inteltrader.entity.Portfolio.investmentList#MyFirstTime]
1 collections initialized for role: com.inteltrader.entity.Portfolio.investmentList
Done loading collection
Done entity load
Written [SUCCESS] as "text/html" using [org.springframework.http.converter.StringHttpMessageConverter@328b4c67]
Null ModelAndView returned to DispatcherServlet with name 'appServlet': assuming HandlerAdapter completed request handling
Successfully completed request
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Initializing servlet 'appServlet'
Initializing new StandardServletEnvironment
Adding [servletConfigInitParams] PropertySource with lowest search precedence
Adding [servletContextInitParams] PropertySource with lowest search precedence
Adding [jndiProperties] PropertySource with lowest search precedence
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment]
FrameworkServlet 'appServlet': initialization started
Servlet with name 'appServlet' will try to create custom WebApplicationContext context of class 'org.springframework.web.context.support.XmlWebApplicationContext', using parent context [Root WebApplicationContext: startup date [Fri Apr 19 15:12:25 IST 2013]; root of context hierarchy]
Searching for key 'spring.profiles.active' in [servletConfigInitParams]
Searching for key 'spring.profiles.active' in [servletContextInitParams]
Searching for key 'spring.profiles.active' in [jndiProperties]
Looking up JNDI object with name [java:comp/env/spring.profiles.active]
Converted JNDI name [java:comp/env/spring.profiles.active] not found - trying original name [spring.profiles.active]. javax.naming.NameNotFoundException: Name [spring.profiles.active] is not bound in this Context. Unable to find [spring.profiles.active].
Looking up JNDI object with name [spring.profiles.active]
JNDI lookup for name [spring.profiles.active] threw NamingException with message: Name [spring.profiles.active] is not bound in this Context. Unable to find [spring.profiles.active].. Returning null.
Searching for key 'spring.profiles.active' in [systemProperties]
Searching for key 'spring.profiles.active' in [systemEnvironment]
Could not find key 'spring.profiles.active' in any property source. Returning [null]
Searching for key 'spring.profiles.default' in [servletConfigInitParams]
Searching for key 'spring.profiles.default' in [servletContextInitParams]
Searching for key 'spring.profiles.default' in [jndiProperties]
Looking up JNDI object with name [java:comp/env/spring.profiles.default]
Converted JNDI name [java:comp/env/spring.profiles.default] not found - trying original name [spring.profiles.default]. javax.naming.NameNotFoundException: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].
Looking up JNDI object with name [spring.profiles.default]
JNDI lookup for name [spring.profiles.default] threw NamingException with message: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].. Returning null.
Searching for key 'spring.profiles.default' in [systemProperties]
Searching for key 'spring.profiles.default' in [systemEnvironment]
Could not find key 'spring.profiles.default' in any property source. Returning [null]
Searching for key 'spring.profiles.default' in [servletConfigInitParams]
Searching for key 'spring.profiles.default' in [servletContextInitParams]
Searching for key 'spring.profiles.default' in [jndiProperties]
Looking up JNDI object with name [java:comp/env/spring.profiles.default]
Converted JNDI name [java:comp/env/spring.profiles.default] not found - trying original name [spring.profiles.default]. javax.naming.NameNotFoundException: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].
Looking up JNDI object with name [spring.profiles.default]
JNDI lookup for name [spring.profiles.default] threw NamingException with message: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].. Returning null.
Searching for key 'spring.profiles.default' in [systemProperties]
Searching for key 'spring.profiles.default' in [systemEnvironment]
Could not find key 'spring.profiles.default' in any property source. Returning [null]
Replacing [servletContextInitParams] PropertySource with [servletContextInitParams]
Replacing [servletConfigInitParams] PropertySource with [servletConfigInitParams]
Refreshing WebApplicationContext for namespace 'appServlet-servlet': startup date [Fri Apr 19 15:12:27 IST 2013]; parent: Root WebApplicationContext
Initializing new StandardEnvironment
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
Initializing new StandardEnvironment
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
Loading schema mappings from [META-INF/spring.schemas]
Loaded schema mappings: {http://www.springframework.org/schema/data/jpa/spring-jpa-1.2.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.2.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.1.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.1.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.5.xsd=org/springframework/data/repository/config/spring-repository-1.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.0.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.3.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.4.xsd=org/springframework/data/repository/config/spring-repository-1.4.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.3.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/data/repository/spring-repository.xsd=org/springframework/data/repository/config/spring-repository-1.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.0.xsd=org/springframework/data/repository/config/spring-repository-1.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.1.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.1.xsd
Found XML schema [http://www.springframework.org/schema/task/spring-task-3.0.xsd] in classpath: org/springframework/scheduling/config/spring-task-3.0.xsd
Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd
Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd
Found XML schema [http://www.springframework.org/schema/tx/spring-tx-3.1.xsd] in classpath: org/springframework/transaction/config/spring-tx-3.1.xsd
Loading bean definitions
Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/data/repository=org.springframework.data.repository.config.RepositoryNameSpaceHandler, http://www.springframework.org/schema/data/jpa=org.springframework.data.jpa.repository.config.JpaRepositoryNameSpaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
Neither XML 'id' nor 'name' specified - using generated bean name [org.springframework.web.servlet.view.InternalResourceViewResolver#0]
Neither XML 'id' nor 'name' specified - using generated bean name [org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver#52939927]
Initializing new StandardEnvironment
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
Looking for matching resources in directory tree [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Resolved location pattern [classpath*:com/inteltrader/**/*.class] to resources [file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\Advice.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\FIFOList.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\InstrumentVo.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\Strategies.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\Strategy.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\StrategyMACD.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao\IInstrumentDao.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao\InstrumentDao.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao\IPortfolioDao.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao\PortfolioDao.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Instrument.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Investment.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Portfolio.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Price.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Transactions.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest\InstrumentServiceRest.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest\PortfolioServiceRest.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\AnalyserService.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\CronService.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\InstrumentService.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\InstrumentServiceImpl.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\PortfolioService.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\PortfolioServiceImpl.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util\DownloadZip.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util\ExtractZipFile.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util\ReadPriceCsv.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util\RestCodes.class]]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Instrument.class]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Investment.class]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Portfolio.class]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest\InstrumentServiceRest.class]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest\PortfolioServiceRest.class]
Loaded 21 bean definitions from location pattern [/WEB-INF/applicationContext.xml]
Bean factory for WebApplicationContext for namespace 'appServlet-servlet': org.springframework.beans.factory.support.DefaultListableBeanFactory@582bf9cb: defining beans [org.springframework.context.annotation.internalAsyncAnnotationProcessor,org.springframework.context.annotation.internalScheduledAnnotationProcessor,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0,org.springframework.web.servlet.view.InternalResourceViewResolver#0,instrumentDao,portfolioDao,instrumentService,portfolioService,entityManagerFactory,transactionManager,instrument,investment,portfolio,instrumentServiceRest,portfolioServiceRest]; parent: org.springframework.beans.factory.support.DefaultListableBeanFactory@a6822b0
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@72ad3b3d]
Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@4b0c5c9c]
Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.DelegatingThemeSource@18942c42]
Creating shared instance of singleton bean 'entityManagerFactory'
Creating instance of bean 'entityManagerFactory'
Eagerly caching bean 'entityManagerFactory' to allow for resolving potential circular references
Creating instance of bean 'org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver#52939927'
Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Creating instance of bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0' to allow for resolving potential circular references
Creating instance of bean '(inner bean)'
Creating shared instance of singleton bean 'transactionManager'
Creating instance of bean 'transactionManager'
Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
Returning eagerly cached instance of singleton bean 'entityManagerFactory' that is not fully initialized yet - a consequence of a circular reference
Ignoring currently created advisor 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0': Error creating bean with name 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0': Cannot create inner bean '(inner bean)' of type [org.springframework.transaction.interceptor.TransactionInterceptor] while setting bean property 'transactionInterceptor'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)': Cannot resolve reference to bean 'transactionManager' while setting bean property 'transactionManager'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'transactionManager' defined in ServletContext resource [/WEB-INF/applicationContext.xml]: Cannot resolve reference to bean 'entityManagerFactory' while setting bean property 'entityManagerFactory'; nested exception is org.springframework.beans.factory.BeanCurrentlyInCreationException: Error creating bean with name 'entityManagerFactory': FactoryBean which is currently in creation returned null from getObject
Finished creating instance of bean 'org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver#52939927'
Invoking afterPropertiesSet() on bean with name 'entityManagerFactory'
Building JPA container EntityManagerFactory for persistence unit 'intelTrader'
Adding type registration boolean -> org.hibernate.type.BooleanType@86a88b6
Adding type registration boolean -> org.hibernate.type.BooleanType@86a88b6
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@86a88b6
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@24fbe75e
Adding type registration true_false -> org.hibernate.type.TrueFalseType@2b4a1dfa
Adding type registration yes_no -> org.hibernate.type.YesNoType@4c4d756
Adding type registration byte -> org.hibernate.type.ByteType@56d13e2f
Adding type registration byte -> org.hibernate.type.ByteType@56d13e2f
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@56d13e2f
Adding type registration character -> org.hibernate.type.CharacterType@1d6596ca
Adding type registration char -> org.hibernate.type.CharacterType@1d6596ca
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1d6596ca
Adding type registration short -> org.hibernate.type.ShortType@5100a533
Adding type registration short -> org.hibernate.type.ShortType@5100a533
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5100a533
Adding type registration integer -> org.hibernate.type.IntegerType@3b0fb065
Adding type registration int -> org.hibernate.type.IntegerType@3b0fb065
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3b0fb065
Adding type registration long -> org.hibernate.type.LongType@3a897294
Adding type registration long -> org.hibernate.type.LongType@3a897294
Adding type registration java.lang.Long -> org.hibernate.type.LongType@3a897294
Adding type registration float -> org.hibernate.type.FloatType@71128db2
Adding type registration float -> org.hibernate.type.FloatType@71128db2
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@71128db2
Adding type registration double -> org.hibernate.type.DoubleType@3831587f
Adding type registration double -> org.hibernate.type.DoubleType@3831587f
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3831587f
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@77233fe4
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@77233fe4
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@26327f1e
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@26327f1e
Adding type registration string -> org.hibernate.type.StringType@1b200139
Adding type registration java.lang.String -> org.hibernate.type.StringType@1b200139
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@37d5e75e
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@415c7850
Adding type registration url -> org.hibernate.type.UrlType@40f11c96
Adding type registration java.net.URL -> org.hibernate.type.UrlType@40f11c96
Adding type registration date -> org.hibernate.type.DateType@5116a644
Adding type registration java.sql.Date -> org.hibernate.type.DateType@5116a644
Adding type registration time -> org.hibernate.type.TimeType@6ffb8048
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6ffb8048
Adding type registration timestamp -> org.hibernate.type.TimestampType@56c46a9f
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@56c46a9f
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@56c46a9f
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1ed8e92c
Adding type registration calendar -> org.hibernate.type.CalendarType@26efdd51
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@26efdd51
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@26efdd51
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7dade75
Adding type registration locale -> org.hibernate.type.LocaleType@aacc49a
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@aacc49a
Adding type registration currency -> org.hibernate.type.CurrencyType@42060c4b
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@42060c4b
Adding type registration timezone -> org.hibernate.type.TimeZoneType@38b219f9
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@38b219f9
Adding type registration class -> org.hibernate.type.ClassType@1266d261
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1266d261
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@47aef63a
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@47aef63a
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@36b53d4f
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@5295f395
Adding type registration binary -> org.hibernate.type.BinaryType@74ac357e
Adding type registration byte[] -> org.hibernate.type.BinaryType@74ac357e
Adding type registration [B -> org.hibernate.type.BinaryType@74ac357e
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@480ee892
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@480ee892
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@480ee892
Adding type registration image -> org.hibernate.type.ImageType@7006da8
Adding type registration characters -> org.hibernate.type.CharArrayType@66673ecf
Adding type registration char[] -> org.hibernate.type.CharArrayType@66673ecf
Adding type registration [C -> org.hibernate.type.CharArrayType@66673ecf
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6a497e26
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6a497e26
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6a497e26
Adding type registration text -> org.hibernate.type.TextType@7bc40e71
Adding type registration ntext -> org.hibernate.type.NTextType@544f8c6
Adding type registration blob -> org.hibernate.type.BlobType@103fecbf
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@103fecbf
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7ea0788
Adding type registration clob -> org.hibernate.type.ClobType@12cf3a3c
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@12cf3a3c
Adding type registration nclob -> org.hibernate.type.NClobType@3151cb34
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3151cb34
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5305f860
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@24302c03
Adding type registration serializable -> org.hibernate.type.SerializableType@2eeefe56
Adding type registration object -> org.hibernate.type.ObjectType@4d77bef7
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4d77bef7
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@27e5ada9
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@57ec46b5
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5916422b
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@445242be
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@749beafc
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@28608233
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5803f6fa
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6c4bc43a
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Processing PersistenceUnitInfo [
	name: intelTrader
	persistence provider classname: org.hibernate.ejb.HibernatePersistence
	classloader: WebappClassLoader
  context: 
  delegate: false
  repositories:
    /WEB-INF/classes/
----------> Parent Classloader:
ClassRealm[plugin>org.apache.tomcat.maven:tomcat7-maven-plugin:2.0, parent: sun.misc.Launcher$AppClassLoader@1875303f]

	Temporary classloader: org.springframework.instrument.classloading.SimpleThrowawayClassLoader@623ff361
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/vvarm1/IdeaProjects/intelTrader/src/main/webapp/WEB-INF/classes
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.inteltrader.entity.Instrument
		com.inteltrader.entity.Portfolio
		com.inteltrader.entity.Investment]
	Mapping files names []
	Properties [
		hibernate.connection.username: root
		hibernate.connection.password: root
		hibernate.dialect: org.hibernate.dialect.MySQLDialect
		hibernate.c3p0.min_size: 10
		hibernate.connection.url: jdbc:mysql://localhost:3306/TRADER_DB
		hibernate.show_sql: true
		hibernate.connection.driver_class: com.mysql.jdbc.Driver
		hibernate.hbm2ddl.auto: update]
Detect class: true; detect hbm: true
Detect class: true; detect hbm: true
Searching mapped entities in jar/par: file:/C:/Users/vvarm1/IdeaProjects/intelTrader/src/main/webapp/WEB-INF/classes
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.ejb.event.JpaIntegrator].
No JNDI name configured for binding Ejb3Configuration
Preparing to build session factory with filters : {}
Processing hbm.xml files
Process annotated classes
Binding entity from annotated class: com.inteltrader.entity.Instrument
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Instrument
Bind entity com.inteltrader.entity.Instrument on table INSTRUMENT
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=SYMBOL_NAME, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property symbolName with lazy=false
building SimpleValue for symbolName
Building property symbolName
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=priceList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=priceList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=priceList_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='priceList_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='SYMBOL_NAME', referencedColumn='', mappedBy=''}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Collection role: com.inteltrader.entity.Instrument.priceList
Building property priceList
Binding entity from annotated class: com.inteltrader.entity.Portfolio
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Portfolio
Bind entity com.inteltrader.entity.Portfolio on table PORTFOLIO
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=PORTFOLIO_NAME, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property portfolioName with lazy=false
building SimpleValue for portfolioName
Building property portfolioName
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='associatedPortfolio'}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=investmentList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=element, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=investmentList_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='investmentList_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='associatedPortfolio'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='associatedPortfolio'}
Collection role: com.inteltrader.entity.Portfolio.investmentList
Building property investmentList
Binding entity from annotated class: com.inteltrader.entity.Investment
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Investment
Bind entity com.inteltrader.entity.Investment on table INVESTMENT
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=INVESTMENT_ID, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property investmentId with lazy=false
building SimpleValue for investmentId
Building property investmentId
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=associatedPortfolio, insertable=true, updatable=true, unique=false}
Building property associatedPortfolio
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=currentPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property currentPrice with lazy=false
building SimpleValue for currentPrice
Building property currentPrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=quantity, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property quantity with lazy=false
building SimpleValue for quantity
Building property quantity
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=INVESTMENT_SYMBOL, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property symbolName with lazy=false
building SimpleValue for symbolName
Building property symbolName
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=transactionsList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=transactionsList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=transactionsList_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='transactionsList_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='INVESTMENT_ID', referencedColumn='', mappedBy=''}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Collection role: com.inteltrader.entity.Investment.transactionsList
Building property transactionsList
Setting SimpleValue typeName for symbolName
Setting SimpleValue typeName for portfolioName
Setting SimpleValue typeName for investmentId
Setting SimpleValue typeName for currentPrice
Setting SimpleValue typeName for quantity
Setting SimpleValue typeName for symbolName
Processing fk mappings (*ToOne and JoinedSubclass)
Processing extends queue
Processing extends queue
Processing collection mappings
Second pass for collection: com.inteltrader.entity.Investment.transactionsList
Binding a collection of element: com.inteltrader.entity.Investment.transactionsList
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT_TRANSACTION), mappingColumn=quantity, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property quantity with lazy=false
building SimpleValue for quantity
Setting SimpleValue typeName for quantity
Building property quantity
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT_TRANSACTION), mappingColumn=transactionId, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property transactionId with lazy=false
building SimpleValue for transactionId
Setting SimpleValue typeName for transactionId
Building property transactionId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT_TRANSACTION), mappingColumn=transactionPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property transactionPrice with lazy=false
building SimpleValue for transactionPrice
Setting SimpleValue typeName for transactionPrice
Building property transactionPrice
Mapped collection key: INVESTMENT_ID, element: quantity, transactionId, transactionPrice
Second pass for collection: com.inteltrader.entity.Instrument.priceList
Binding a collection of element: com.inteltrader.entity.Instrument.priceList
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=closePrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property closePrice with lazy=false
building SimpleValue for closePrice
Setting SimpleValue typeName for closePrice
Building property closePrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=highPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property highPrice with lazy=false
building SimpleValue for highPrice
Setting SimpleValue typeName for highPrice
Building property highPrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=lastClosePrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property lastClosePrice with lazy=false
building SimpleValue for lastClosePrice
Setting SimpleValue typeName for lastClosePrice
Building property lastClosePrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=lowPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property lowPrice with lazy=false
building SimpleValue for lowPrice
Setting SimpleValue typeName for lowPrice
Building property lowPrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=openPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property openPrice with lazy=false
building SimpleValue for openPrice
Setting SimpleValue typeName for openPrice
Building property openPrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=priceId, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property priceId with lazy=false
building SimpleValue for priceId
Setting SimpleValue typeName for priceId
Building property priceId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=timeStamp, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property timeStamp with lazy=false
building SimpleValue for timeStamp
Setting SimpleValue typeName for timeStamp
Building property timeStamp
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=totalTradedQuantity, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property totalTradedQuantity with lazy=false
building SimpleValue for totalTradedQuantity
Setting SimpleValue typeName for totalTradedQuantity
Building property totalTradedQuantity
Mapped collection key: SYMBOL_NAME, element: closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity
Second pass for collection: com.inteltrader.entity.Portfolio.investmentList
Binding a OneToMany: com.inteltrader.entity.Portfolio.investmentList through a foreign key
Mapping collection: com.inteltrader.entity.Portfolio.investmentList -> INVESTMENT
Retrieving property com.inteltrader.entity.Investment.associatedPortfolio
Mapped collection key: associatedPortfolio_PORTFOLIO_NAME, one-to-many: com.inteltrader.entity.Investment
Processing native query and ResultSetMapping mappings
Processing association property references
Creating tables' unique integer identifiers
Processing foreign key constraints
Resolving reference to class: com.inteltrader.entity.Instrument
Resolving reference to class: com.inteltrader.entity.Portfolio
Resolving reference to class: com.inteltrader.entity.Investment
HHH000022: c3p0 properties were encountered, but the org.hibernate.service.jdbc.connections.internal.C3P0ConnectionProvider provider class was not found on the classpath; these properties are going to be ignored.
HHH000402: Using Hibernate built-in connection pool (not for production use!)
HHH000115: Hibernate connection pool size: 20
HHH000006: Autocommit mode: true
HHH000401: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/TRADER_DB]
HHH000046: Connection properties: {user=root, password=root, autocommit=true, release_mode=auto}
Opening new JDBC connection
Created connection to: jdbc:mysql://localhost:3306/TRADER_DB, Isolation Level: 4
Database ->
       name : MySQL
    version : 5.6.10-log
      major : 5
      minor : 6
Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.9 ( Revision: ${svn.Revision} )
      major : 5
      minor : 1
JDBC version : 3.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: disabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
multi-tenancy strategy : NONE
Connection release mode: auto
HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
Maximum outer join fetch depth: 2
Default batch fetch size: 1
Generate SQL with comments: disabled
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
HHH000397: Using ASTQueryTranslatorFactory
Query language substitutions: {}
JPA-QL strict compliance: enabled
Second-level cache: enabled
Query cache: disabled
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
Optimize cache for minimal puts: disabled
Structured second-level cache entries: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Named query checking : enabled
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : : disabled
Building session factory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\vvarm1\IdeaProjects\intelTrader\target\tomcat, hibernate.connection.url=jdbc:mysql://localhost:3306/TRADER_DB, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.ejb.discard_pc_on_close=false, catalina.useNaming=true, hibernate.transaction.flush_before_completion=false, os.name=Windows 7, sun.boot.class.path=C:\Program Files\Java\jdk1.7.0_10\jre\lib\resources.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\rt.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\jce.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.7.0_10\jre\classes, java.util.logging.config.file=C:\Users\vvarm1\IdeaProjects\intelTrader\target\tomcat\conf\logging.properties, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.7.0_10-b18, hibernate.connection.autocommit=true, hibernate.c3p0.min_size=10, user.name=vvarm1, shared.loader=, guice.disable.misplaced.annotation.check=true, tomcat.util.buf.StringCache.byte.enabled=true, javax.persistence.validation.mode=AUTO, hibernate.connection.release_mode=auto, idea.launcher.bin.path=C:\Program Files (x86)\JetBrains\IntelliJ IDEA Community Edition 12.0.4\bin, user.language=en, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, sun.boot.library.path=C:\Program Files\Java\jdk1.7.0_10\jre\bin, classworlds.conf=C:\Program Files\Apache Software Foundation\apache-maven-3.0.5\bin\m2.conf, java.version=1.7.0_10, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, user.timezone=Asia/Calcutta, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.7.0_10\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, file.encoding.pkg=sun.io, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.tomcat.,org.apache.jasper., file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=51.0, user.country=US, java.home=C:\Program Files\Java\jdk1.7.0_10\jre, java.vm.info=mixed mode, os.version=6.1, hibernate.transaction.factory_class=org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory, hibernate.query.jpaql_strict_compliance=true, path.separator=;, java.vm.version=23.6-b04, hibernate.connection.password=root, user.variant=, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.scan.DefaultJarScanner.jarsToSkip=bootstrap.jar,commons-daemon.jar,tomcat-juli.jar,annotations-api.jar,el-api.jar,jsp-api.jar,servlet-api.jar,catalina.jar,catalina-ant.jar,catalina-ha.jar,catalina-tribes.jar,jasper.jar,jasper-el.jar,ecj-*.jar,tomcat-api.jar,tomcat-util.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-jni.jar,tomcat-spdy.jar,tomcat-i18n-en.jar,tomcat-i18n-es.jar,tomcat-i18n-fr.jar,tomcat-i18n-ja.jar,tomcat-juli-adapters.jar,catalina-jmx-remote.jar,catalina-ws.jar,tomcat-jdbc.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,jstl.jar,geronimo-spec-jaxrpc*.jar,wsdl4j*.jar,ant.jar,ant-junit*.jar,aspectj*.jar,jmx.jar,h2*.jar,hibernate*.jar,httpclient*.jar,jmx-tools.jar,jta*.jar,log4j*.jar,mail*.jar,slf4j*.jar,xercesImpl.jar,xmlParserAPIs.jar,xml-apis.jar,access-bridge-64.jar,dnsns.jar,jaccess.jar,ldapsec.jar,localedata.jar,sunjce_provider.jar,sunmscapi.jar,sunpkcs11.jar,jhall.jar,tools.jar,sunec.jar,zipfs.jar,gnome-java-bridge.jar,pulse-java.jar,apple_provider.jar,AppleScriptEngine.jar,CoreAudio.jar,dns_sd.jar,j3daudio.jar,j3dcore.jar,j3dutils.jar,jai_core.jar,jai_codec.jar,mlibwrapper_jai.jar,MRJToolkit.jar,vecmath.jar,junit.jar,junit-*.jar,ant-launcher.jar, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.tomcat.,org.apache.jasper., user.script=, java.naming.factory.url.pkgs=org.apache.naming, user.home=C:\Users\vvarm1, org.apache.catalina.startup.ContextConfig.jarsToSkip=, java.specification.vendor=Oracle Corporation, hibernate.hbm2ddl.auto=update, java.library.path=C:\Program Files\Java\jdk1.7.0_10\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\JetBrains\IntelliJ IDEA Community Edition 12.0.4\bin\..\.\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\ThinkPad\Bluetooth Software\;C:\Program Files\ThinkPad\Bluetooth Software\syswow64;c:\Program Files\Intel\WiFi\bin\;c:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files (x86)\Git\cmd;C:\Users\vvarm1\Documents\play-2.0.3;C:\Program Files\Java\jdk1.7.0_10\bin;C:\Program Files\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\QuickTime\QTSystem\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Java\jre6\bin;C:\Program Files\Apache Software Foundation\apache-maven-3.0.5\bin;c:\program files (x86)\jetbrains\intellij idea community edition 12.0.4\jre\jre\bin;., java.vendor.url=http://java.oracle.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, org.apache.catalina.startup.TldConfig.jarsToSkip=, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, common.loader=${catalina.base}/lib,${catalina.base}/lib/*.jar,${catalina.home}/lib,${catalina.home}/lib/*.jar, maven.home=C:\Program Files\Apache Software Foundation\apache-maven-3.0.5, java.runtime.name=Java(TM) SE Runtime Environment, java.class.path=C:\Program Files\Apache Software Foundation\apache-maven-3.0.5\boot\plexus-classworlds-2.4.jar;C:\Program Files (x86)\JetBrains\IntelliJ IDEA Community Edition 12.0.4\lib\idea_rt.jar, sun.java.command=com.intellij.rt.execution.application.AppMain org.codehaus.classworlds.Launcher --no-plugin-registry --fail-fast --strict-checksums --update-snapshots org.apache.tomcat.maven:tomcat7-maven-plugin:2.0:run, hibernate.bytecode.use_reflection_optimizer=false, idea.launcher.port=7537, java.vm.specification.name=Java Virtual Machine Specification, catalina.home=C:\Users\vvarm1\IdeaProjects\intelTrader\target\tomcat, java.vm.specification.version=1.7, sun.os.patch.level=Service Pack 1, sun.cpu.endian=little, java.io.tmpdir=C:\Users\vvarm1\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, server.loader=, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, java.ext.dirs=C:\Program Files\Java\jdk1.7.0_10\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=C:\Users\vvarm1\IdeaProjects\intelTrader, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding=UTF-8, hibernate.use_identifier_rollback=false, java.specification.version=1.7, hibernate.show_sql=true}
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Static SQL for entity: com.inteltrader.entity.Investment
 Version select: select INVESTMENT_ID from TRADER_DB.INVESTMENT where INVESTMENT_ID =?
 Snapshot select: select investment_.INVESTMENT_ID, investment_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_, investment_.currentPrice as currentP2_2_, investment_.quantity as quantity2_, investment_.INVESTMENT_SYMBOL as INVESTMENT4_2_ from TRADER_DB.INVESTMENT investment_ where investment_.INVESTMENT_ID=?
 Insert 0: insert into TRADER_DB.INVESTMENT (associatedPortfolio_PORTFOLIO_NAME, currentPrice, quantity, INVESTMENT_SYMBOL, INVESTMENT_ID) values (?, ?, ?, ?, ?)
 Update 0: update TRADER_DB.INVESTMENT set associatedPortfolio_PORTFOLIO_NAME=?, currentPrice=?, quantity=?, INVESTMENT_SYMBOL=? where INVESTMENT_ID=?
 Delete 0: delete from TRADER_DB.INVESTMENT where INVESTMENT_ID=?
 Identity insert: insert into TRADER_DB.INVESTMENT (associatedPortfolio_PORTFOLIO_NAME, currentPrice, quantity, INVESTMENT_SYMBOL) values (?, ?, ?, ?)
Static SQL for entity: com.inteltrader.entity.Instrument
 Version select: select SYMBOL_NAME from TRADER_DB.INSTRUMENT where SYMBOL_NAME =?
 Snapshot select: select instrument_.SYMBOL_NAME from TRADER_DB.INSTRUMENT instrument_ where instrument_.SYMBOL_NAME=?
 Insert 0: insert into TRADER_DB.INSTRUMENT (SYMBOL_NAME) values (?)
 Update 0: null
 Delete 0: delete from TRADER_DB.INSTRUMENT where SYMBOL_NAME=?
Static SQL for entity: com.inteltrader.entity.Portfolio
 Version select: select PORTFOLIO_NAME from TRADER_DB.PORTFOLIO where PORTFOLIO_NAME =?
 Snapshot select: select portfolio_.PORTFOLIO_NAME from TRADER_DB.PORTFOLIO portfolio_ where portfolio_.PORTFOLIO_NAME=?
 Insert 0: insert into TRADER_DB.PORTFOLIO (PORTFOLIO_NAME) values (?)
 Update 0: null
 Delete 0: delete from TRADER_DB.PORTFOLIO where PORTFOLIO_NAME=?
Static SQL for collection: com.inteltrader.entity.Instrument.priceList
 Row insert: insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
 Row update: update TRADER_DB.INSTRUMENT_PRICE set closePrice=?, highPrice=?, lastClosePrice=?, lowPrice=?, openPrice=?, priceId=?, timeStamp=?, totalTradedQuantity=? where SYMBOL_NAME=? and priceId=? and totalTradedQuantity=?
 Row delete: delete from TRADER_DB.INSTRUMENT_PRICE where SYMBOL_NAME=? and priceId=? and totalTradedQuantity=?
 One-shot delete: delete from TRADER_DB.INSTRUMENT_PRICE where SYMBOL_NAME=?
Static SQL for collection: com.inteltrader.entity.Investment.transactionsList
 Row insert: insert into TRADER_DB.INVESTMENT_TRANSACTION (INVESTMENT_ID, quantity, transactionId, transactionPrice) values (?, ?, ?, ?)
 Row update: update TRADER_DB.INVESTMENT_TRANSACTION set quantity=?, transactionId=?, transactionPrice=? where INVESTMENT_ID=? and quantity=? and transactionId=? and transactionPrice=?
 Row delete: delete from TRADER_DB.INVESTMENT_TRANSACTION where INVESTMENT_ID=? and quantity=? and transactionId=? and transactionPrice=?
 One-shot delete: delete from TRADER_DB.INVESTMENT_TRANSACTION where INVESTMENT_ID=?
Static SQL for collection: com.inteltrader.entity.Portfolio.investmentList
 Row insert: update TRADER_DB.INVESTMENT set associatedPortfolio_PORTFOLIO_NAME=? where INVESTMENT_ID=?
 Row delete: update TRADER_DB.INVESTMENT set associatedPortfolio_PORTFOLIO_NAME=null where associatedPortfolio_PORTFOLIO_NAME=? and INVESTMENT_ID=?
 One-shot delete: update TRADER_DB.INVESTMENT set associatedPortfolio_PORTFOLIO_NAME=null where associatedPortfolio_PORTFOLIO_NAME=?
Static select for entity com.inteltrader.entity.Instrument [NONE]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for entity com.inteltrader.entity.Instrument [READ]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for entity com.inteltrader.entity.Instrument [UPGRADE]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [UPGRADE_NOWAIT]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [FORCE]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [PESSIMISTIC_READ]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? lock in share mode
Static select for entity com.inteltrader.entity.Instrument [PESSIMISTIC_WRITE]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [PESSIMISTIC_FORCE_INCREMENT]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [OPTIMISTIC]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for entity com.inteltrader.entity.Instrument [OPTIMISTIC_FORCE_INCREMENT]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for action ACTION_MERGE on entity com.inteltrader.entity.Instrument: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for action ACTION_REFRESH on entity com.inteltrader.entity.Instrument: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for entity com.inteltrader.entity.Investment [NONE]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_1_, investment0_.currentPrice as currentP2_2_1_, investment0_.quantity as quantity2_1_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_1_, portfolio1_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.INVESTMENT investment0_ left outer join TRADER_DB.PORTFOLIO portfolio1_ on investment0_.associatedPortfolio_PORTFOLIO_NAME=portfolio1_.PORTFOLIO_NAME where investment0_.INVESTMENT_ID=?
Static select for entity com.inteltrader.entity.Investment [READ]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_1_, investment0_.currentPrice as currentP2_2_1_, investment0_.quantity as quantity2_1_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_1_, portfolio1_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.INVESTMENT investment0_ left outer join TRADER_DB.PORTFOLIO portfolio1_ on investment0_.associatedPortfolio_PORTFOLIO_NAME=portfolio1_.PORTFOLIO_NAME where investment0_.INVESTMENT_ID=?
Static select for entity com.inteltrader.entity.Investment [UPGRADE]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [UPGRADE_NOWAIT]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [FORCE]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [PESSIMISTIC_READ]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? lock in share mode
Static select for entity com.inteltrader.entity.Investment [PESSIMISTIC_WRITE]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [PESSIMISTIC_FORCE_INCREMENT]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [OPTIMISTIC]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=?
Static select for entity com.inteltrader.entity.Investment [OPTIMISTIC_FORCE_INCREMENT]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=?
Static select for action ACTION_MERGE on entity com.inteltrader.entity.Investment: select investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_1_, investment0_.currentPrice as currentP2_2_1_, investment0_.quantity as quantity2_1_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_1_, portfolio1_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.INVESTMENT investment0_ left outer join TRADER_DB.PORTFOLIO portfolio1_ on investment0_.associatedPortfolio_PORTFOLIO_NAME=portfolio1_.PORTFOLIO_NAME where investment0_.INVESTMENT_ID=?
Static select for action ACTION_REFRESH on entity com.inteltrader.entity.Investment: select investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_1_, investment0_.currentPrice as currentP2_2_1_, investment0_.quantity as quantity2_1_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_1_, portfolio1_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.INVESTMENT investment0_ left outer join TRADER_DB.PORTFOLIO portfolio1_ on investment0_.associatedPortfolio_PORTFOLIO_NAME=portfolio1_.PORTFOLIO_NAME where investment0_.INVESTMENT_ID=?
Static select for entity com.inteltrader.entity.Portfolio [NONE]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Static select for entity com.inteltrader.entity.Portfolio [READ]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Static select for entity com.inteltrader.entity.Portfolio [UPGRADE]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [UPGRADE_NOWAIT]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [FORCE]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [PESSIMISTIC_READ]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? lock in share mode
Static select for entity com.inteltrader.entity.Portfolio [PESSIMISTIC_WRITE]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [PESSIMISTIC_FORCE_INCREMENT]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [OPTIMISTIC]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=?
Static select for entity com.inteltrader.entity.Portfolio [OPTIMISTIC_FORCE_INCREMENT]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=?
Static select for action ACTION_MERGE on entity com.inteltrader.entity.Portfolio: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Static select for action ACTION_REFRESH on entity com.inteltrader.entity.Portfolio: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Static select for collection com.inteltrader.entity.Instrument.priceList: select pricelist0_.SYMBOL_NAME as SYMBOL1_0_0_, pricelist0_.closePrice as closePrice1_0_, pricelist0_.highPrice as highPrice1_0_, pricelist0_.lastClosePrice as lastClos4_1_0_, pricelist0_.lowPrice as lowPrice1_0_, pricelist0_.openPrice as openPrice1_0_, pricelist0_.priceId as priceId1_0_, pricelist0_.timeStamp as timeStamp1_0_, pricelist0_.totalTradedQuantity as totalTra9_1_0_ from TRADER_DB.INSTRUMENT_PRICE pricelist0_ where pricelist0_.SYMBOL_NAME=?
Static select for one-to-many com.inteltrader.entity.Portfolio.investmentList: select investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_1_, investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.associatedPortfolio_PORTFOLIO_NAME=?
Static select for collection com.inteltrader.entity.Investment.transactionsList: select transactio0_.INVESTMENT_ID as INVESTMENT1_2_0_, transactio0_.quantity as quantity3_0_, transactio0_.transactionId as transact3_3_0_, transactio0_.transactionPrice as transact4_3_0_ from TRADER_DB.INVESTMENT_TRANSACTION transactio0_ where transactio0_.INVESTMENT_ID=?
Registering SessionFactory: 39ff475c-cc31-420d-8739-d569a171b32e (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Instantiated session factory
HHH000228: Running hbm2ddl schema update
HHH000102: Fetching database metadata
HHH000396: Updating schema
Processing hbm.xml files
Process annotated classes
Processing fk mappings (*ToOne and JoinedSubclass)
Processing extends queue
Processing extends queue
Processing collection mappings
Processing native query and ResultSetMapping mappings
Processing association property references
Creating tables' unique integer identifiers
Processing foreign key constraints
Resolving reference to class: com.inteltrader.entity.Instrument
Resolving reference to class: com.inteltrader.entity.Portfolio
Resolving reference to class: com.inteltrader.entity.Investment
HHH000261: Table found: TRADER_DB.instrument
HHH000037: Columns: [symbol_name]
HHH000108: Foreign keys: []
HHH000126: Indexes: [primary]
HHH000261: Table found: TRADER_DB.instrument_price
HHH000037: Columns: [totaltradedquantity, timestamp, priceid, lastcloseprice, highprice, symbol_name, openprice, closeprice, lowprice]
HHH000108: Foreign keys: [fk3189a2d153ed548d]
HHH000126: Indexes: [fk3189a2d153ed548d]
HHH000261: Table found: TRADER_DB.investment
HHH000037: Columns: [investment_id, associatedportfolio_portfolio_name, currentprice, quantity, investment_symbol]
HHH000108: Foreign keys: [fk8fe41ed3c804d4f3]
HHH000126: Indexes: [fk8fe41ed3c804d4f3, primary]
HHH000261: Table found: TRADER_DB.investment_transaction
HHH000037: Columns: [transactionprice, investment_id, transactionid, quantity]
HHH000108: Foreign keys: [fka5863f52914590ae]
HHH000126: Indexes: [fka5863f52914590ae]
HHH000261: Table found: TRADER_DB.portfolio
HHH000037: Columns: [portfolio_name]
HHH000108: Foreign keys: []
HHH000126: Indexes: [primary]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
HHH000232: Schema update complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Statistics initialized [enabled=false]
Registering EntityManagerFactory: intelTrader 
HHH000436: Entity manager factory name (intelTrader) is already registered.  If entity manager will be clustered or passivated, specify a unique value for property 'hibernate.ejb.entitymanager_factory_name'
Finished creating instance of bean 'entityManagerFactory'
Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@582bf9cb: defining beans [org.springframework.context.annotation.internalAsyncAnnotationProcessor,org.springframework.context.annotation.internalScheduledAnnotationProcessor,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0,org.springframework.web.servlet.view.InternalResourceViewResolver#0,instrumentDao,portfolioDao,instrumentService,portfolioService,entityManagerFactory,transactionManager,instrument,investment,portfolio,instrumentServiceRest,portfolioServiceRest,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor]; parent: org.springframework.beans.factory.support.DefaultListableBeanFactory@a6822b0
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Creating instance of bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0' to allow for resolving potential circular references
Creating instance of bean '(inner bean)'
Creating shared instance of singleton bean 'transactionManager'
Creating instance of bean 'transactionManager'
Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
Returning cached instance of singleton bean 'entityManagerFactory'
Invoking afterPropertiesSet() on bean with name 'transactionManager'
Finished creating instance of bean 'transactionManager'
Creating instance of bean '(inner bean)'
Finished creating instance of bean '(inner bean)'
Invoking afterPropertiesSet() on bean with name '(inner bean)'
Finished creating instance of bean '(inner bean)'
Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Creating shared instance of singleton bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Creating instance of bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Eagerly caching bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Creating shared instance of singleton bean 'instrumentDao'
Creating instance of bean 'instrumentDao'
Eagerly caching bean 'instrumentDao' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'instrumentDao'
Creating shared instance of singleton bean 'portfolioDao'
Creating instance of bean 'portfolioDao'
Eagerly caching bean 'portfolioDao' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'portfolioDao'
Creating shared instance of singleton bean 'instrumentService'
Creating instance of bean 'instrumentService'
Registered injected element on class [com.inteltrader.service.InstrumentServiceImpl]: PersistenceElement for javax.persistence.EntityManagerFactory com.inteltrader.service.InstrumentServiceImpl.entityManagerFactory
Registered injected element on class [com.inteltrader.service.InstrumentServiceImpl]: AutowiredFieldElement for private com.inteltrader.dao.IInstrumentDao com.inteltrader.service.InstrumentServiceImpl.instrumentDao
Registered injected element on class [com.inteltrader.service.InstrumentServiceImpl]: AutowiredFieldElement for private com.inteltrader.service.PortfolioService com.inteltrader.service.InstrumentServiceImpl.portfolioService
Eagerly caching bean 'instrumentService' to allow for resolving potential circular references
Processing injected method of bean 'instrumentService': PersistenceElement for javax.persistence.EntityManagerFactory com.inteltrader.service.InstrumentServiceImpl.entityManagerFactory
Returning cached instance of singleton bean 'entityManagerFactory'
Processing injected method of bean 'instrumentService': AutowiredFieldElement for private com.inteltrader.dao.IInstrumentDao com.inteltrader.service.InstrumentServiceImpl.instrumentDao
Returning cached instance of singleton bean 'instrumentDao'
Autowiring by type from bean name 'instrumentService' to bean named 'instrumentDao'
Processing injected method of bean 'instrumentService': AutowiredFieldElement for private com.inteltrader.service.PortfolioService com.inteltrader.service.InstrumentServiceImpl.portfolioService
Creating shared instance of singleton bean 'portfolioService'
Creating instance of bean 'portfolioService'
Registered injected element on class [com.inteltrader.service.PortfolioServiceImpl]: PersistenceElement for private javax.persistence.EntityManagerFactory com.inteltrader.service.PortfolioServiceImpl.entityManagerFactory
Registered injected element on class [com.inteltrader.service.PortfolioServiceImpl]: AutowiredFieldElement for private com.inteltrader.dao.IPortfolioDao com.inteltrader.service.PortfolioServiceImpl.portfolioDao
Eagerly caching bean 'portfolioService' to allow for resolving potential circular references
Processing injected method of bean 'portfolioService': PersistenceElement for private javax.persistence.EntityManagerFactory com.inteltrader.service.PortfolioServiceImpl.entityManagerFactory
Returning cached instance of singleton bean 'entityManagerFactory'
Processing injected method of bean 'portfolioService': AutowiredFieldElement for private com.inteltrader.dao.IPortfolioDao com.inteltrader.service.PortfolioServiceImpl.portfolioDao
Returning cached instance of singleton bean 'portfolioDao'
Autowiring by type from bean name 'portfolioService' to bean named 'portfolioDao'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'portfolioService'
Autowiring by type from bean name 'instrumentService' to bean named 'portfolioService'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'instrumentService'
Returning cached instance of singleton bean 'portfolioService'
Returning cached instance of singleton bean 'entityManagerFactory'
Returning cached instance of singleton bean 'transactionManager'
Creating shared instance of singleton bean 'instrument'
Creating instance of bean 'instrument'
Eagerly caching bean 'instrument' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'instrument'
Creating shared instance of singleton bean 'investment'
Creating instance of bean 'investment'
Eagerly caching bean 'investment' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'investment'
Creating shared instance of singleton bean 'portfolio'
Creating instance of bean 'portfolio'
Eagerly caching bean 'portfolio' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'portfolio'
Creating shared instance of singleton bean 'instrumentServiceRest'
Creating instance of bean 'instrumentServiceRest'
Registered injected element on class [com.inteltrader.rest.InstrumentServiceRest]: AutowiredFieldElement for private com.inteltrader.service.InstrumentService com.inteltrader.rest.InstrumentServiceRest.instrumentService
Eagerly caching bean 'instrumentServiceRest' to allow for resolving potential circular references
Processing injected method of bean 'instrumentServiceRest': AutowiredFieldElement for private com.inteltrader.service.InstrumentService com.inteltrader.rest.InstrumentServiceRest.instrumentService
Returning cached instance of singleton bean 'instrumentService'
Autowiring by type from bean name 'instrumentServiceRest' to bean named 'instrumentService'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'instrumentServiceRest'
Creating shared instance of singleton bean 'portfolioServiceRest'
Creating instance of bean 'portfolioServiceRest'
Registered injected element on class [com.inteltrader.rest.PortfolioServiceRest]: AutowiredFieldElement for private com.inteltrader.service.PortfolioService com.inteltrader.rest.PortfolioServiceRest.portfolioService
Eagerly caching bean 'portfolioServiceRest' to allow for resolving potential circular references
Processing injected method of bean 'portfolioServiceRest': AutowiredFieldElement for private com.inteltrader.service.PortfolioService com.inteltrader.rest.PortfolioServiceRest.portfolioService
Returning cached instance of singleton bean 'portfolioService'
Autowiring by type from bean name 'portfolioServiceRest' to bean named 'portfolioService'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'portfolioServiceRest'
Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@7c02bcaa]
Returning cached instance of singleton bean 'lifecycleProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Unable to locate MultipartResolver with name 'multipartResolver': no multipart request handling provided
Creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Unable to locate LocaleResolver with name 'localeResolver': using default [org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver@47e242d4]
Creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Unable to locate ThemeResolver with name 'themeResolver': using default [org.springframework.web.servlet.theme.FixedThemeResolver@54768cc4]
Creating instance of bean 'org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping'
Looking for URL mappings in application context: WebApplicationContext for namespace 'appServlet-servlet': startup date [Fri Apr 19 15:12:27 IST 2013]; parent: Root WebApplicationContext
Rejected bean name 'org.springframework.context.annotation.internalAsyncAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalScheduledAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalRequiredAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalCommonAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.aop.config.internalAutoProxyCreator': no URL paths identified
Rejected bean name 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0': no URL paths identified
Rejected bean name 'org.springframework.web.servlet.view.InternalResourceViewResolver#0': no URL paths identified
Rejected bean name 'instrumentDao': no URL paths identified
Rejected bean name 'portfolioDao': no URL paths identified
Rejected bean name 'instrumentService': no URL paths identified
Rejected bean name 'portfolioService': no URL paths identified
Rejected bean name 'entityManagerFactory': no URL paths identified
Rejected bean name 'transactionManager': no URL paths identified
Rejected bean name 'instrument': no URL paths identified
Rejected bean name 'investment': no URL paths identified
Rejected bean name 'portfolio': no URL paths identified
Rejected bean name 'instrumentServiceRest': no URL paths identified
Rejected bean name 'portfolioServiceRest': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor': no URL paths identified
Rejected bean name 'environment': no URL paths identified
Rejected bean name 'systemProperties': no URL paths identified
Rejected bean name 'systemEnvironment': no URL paths identified
Rejected bean name 'servletConfig': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry': no URL paths identified
Rejected bean name 'messageSource': no URL paths identified
Rejected bean name 'applicationEventMulticaster': no URL paths identified
Rejected bean name 'lifecycleProcessor': no URL paths identified
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping'
Creating instance of bean 'org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping'
Looking for URL mappings in application context: WebApplicationContext for namespace 'appServlet-servlet': startup date [Fri Apr 19 15:12:27 IST 2013]; parent: Root WebApplicationContext
Rejected bean name 'org.springframework.context.annotation.internalAsyncAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalScheduledAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalRequiredAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalCommonAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.aop.config.internalAutoProxyCreator': no URL paths identified
Rejected bean name 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0': no URL paths identified
Rejected bean name 'org.springframework.web.servlet.view.InternalResourceViewResolver#0': no URL paths identified
Rejected bean name 'instrumentDao': no URL paths identified
Rejected bean name 'portfolioDao': no URL paths identified
Rejected bean name 'instrumentService': no URL paths identified
Rejected bean name 'portfolioService': no URL paths identified
Rejected bean name 'entityManagerFactory': no URL paths identified
Rejected bean name 'transactionManager': no URL paths identified
Rejected bean name 'instrument': no URL paths identified
Rejected bean name 'investment': no URL paths identified
Rejected bean name 'portfolio': no URL paths identified
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/create/{symbol}] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/create/{symbol}.*] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/create/{symbol}/] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/update/{portfolioName}] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/update/{portfolioName}.*] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/update/{portfolioName}/] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/load/{symbol}] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/load/{symbol}.*] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/load/{symbol}/] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/create/{portfolioName}] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/create/{portfolioName}.*] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/create/{portfolioName}/] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/load/{portfolioName}] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/load/{portfolioName}.*] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/load/{portfolioName}/] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/addInvestment/{portfolioName}/{symbolName}] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/addInvestment/{portfolioName}/{symbolName}.*] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/addInvestment/{portfolioName}/{symbolName}/] onto handler 'portfolioServiceRest'
Rejected bean name 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor': no URL paths identified
Rejected bean name 'environment': no URL paths identified
Rejected bean name 'systemProperties': no URL paths identified
Rejected bean name 'systemEnvironment': no URL paths identified
Rejected bean name 'servletConfig': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry': no URL paths identified
Rejected bean name 'messageSource': no URL paths identified
Rejected bean name 'applicationEventMulticaster': no URL paths identified
Rejected bean name 'lifecycleProcessor': no URL paths identified
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping'
No HandlerMappings found in servlet 'appServlet': using default
Creating instance of bean 'org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter'
Creating instance of bean 'org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter'
Creating instance of bean 'org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter'
No HandlerAdapters found in servlet 'appServlet': using default
Creating instance of bean 'org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerExceptionResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerExceptionResolver'
Creating instance of bean 'org.springframework.web.servlet.mvc.annotation.ResponseStatusExceptionResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.annotation.ResponseStatusExceptionResolver'
Creating instance of bean 'org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver'
No HandlerExceptionResolvers found in servlet 'appServlet': using default
Creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Unable to locate RequestToViewNameTranslator with name 'viewNameTranslator': using default [org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@3bc28c53]
Returning cached instance of singleton bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Returning cached instance of singleton bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Unable to locate FlashMapManager with name 'flashMapManager': using default [org.springframework.web.servlet.support.SessionFlashMapManager@5dd2ad30]
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Searching for key 'spring.liveBeansView.mbeanDomain' in [servletConfigInitParams]
Searching for key 'spring.liveBeansView.mbeanDomain' in [servletContextInitParams]
Searching for key 'spring.liveBeansView.mbeanDomain' in [jndiProperties]
Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain]
Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException: Name [spring.liveBeansView.mbeanDomain] is not bound in this Context. Unable to find [spring.liveBeansView.mbeanDomain].
Looking up JNDI object with name [spring.liveBeansView.mbeanDomain]
JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: Name [spring.liveBeansView.mbeanDomain] is not bound in this Context. Unable to find [spring.liveBeansView.mbeanDomain].. Returning null.
Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
Published WebApplicationContext of servlet 'appServlet' as ServletContext attribute with name [org.springframework.web.servlet.FrameworkServlet.CONTEXT.appServlet]
FrameworkServlet 'appServlet': initialization completed in 496 ms
Servlet 'appServlet' configured successfully
DispatcherServlet with name 'appServlet' processing GET request for [/portfolio/load/MyFirstTime]
Matching patterns for request [/portfolio/load/MyFirstTime] are [/portfolio/load/{portfolioName}]
URI Template variables for request [/portfolio/load/MyFirstTime] are {portfolioName=MyFirstTime}
Mapping [/portfolio/load/MyFirstTime] to HandlerExecutionChain with handler [com.inteltrader.rest.PortfolioServiceRest@6bd98260] and 2 interceptors
Last-Modified value for [/portfolio/load/MyFirstTime] is: -1
Invoking request handler method: public org.springframework.http.ResponseEntity com.inteltrader.rest.PortfolioServiceRest.loadInstrument(java.lang.String,javax.servlet.http.HttpServletRequest)
Loading entity: [com.inteltrader.entity.Portfolio#MyFirstTime]
Obtaining JDBC connection
Obtained JDBC connection
select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Result set row: 0
Result row: EntityKey[com.inteltrader.entity.Investment#1], EntityKey[com.inteltrader.entity.Portfolio#MyFirstTime]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Result set row: 1
Result row: EntityKey[com.inteltrader.entity.Investment#2], EntityKey[com.inteltrader.entity.Portfolio#MyFirstTime]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Result set row: 2
Result row: EntityKey[com.inteltrader.entity.Investment#3], EntityKey[com.inteltrader.entity.Portfolio#MyFirstTime]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Resolving associations for [com.inteltrader.entity.Investment#1]
Loading entity: [com.inteltrader.entity.Portfolio#myFirstTime]
select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Result set row: 0
Result row: EntityKey[com.inteltrader.entity.Investment#1], EntityKey[com.inteltrader.entity.Portfolio#myFirstTime]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Result set row: 1
Result row: EntityKey[com.inteltrader.entity.Investment#2], EntityKey[com.inteltrader.entity.Portfolio#myFirstTime]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Result set row: 2
Result row: EntityKey[com.inteltrader.entity.Investment#3], EntityKey[com.inteltrader.entity.Portfolio#myFirstTime]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Resolving associations for [com.inteltrader.entity.Portfolio#myFirstTime]
Done materializing entity [com.inteltrader.entity.Portfolio#myFirstTime]
No collections were found in result set for role: com.inteltrader.entity.Portfolio.investmentList
Done entity load
Done materializing entity [com.inteltrader.entity.Investment#1]
Resolving associations for [com.inteltrader.entity.Portfolio#MyFirstTime]
Done materializing entity [com.inteltrader.entity.Portfolio#MyFirstTime]
Resolving associations for [com.inteltrader.entity.Investment#2]
Done materializing entity [com.inteltrader.entity.Investment#2]
Resolving associations for [com.inteltrader.entity.Investment#3]
Done materializing entity [com.inteltrader.entity.Investment#3]
1 collections were found in result set for role: com.inteltrader.entity.Portfolio.investmentList
Collection fully initialized: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
1 collections initialized for role: com.inteltrader.entity.Portfolio.investmentList
Loading collection: [com.inteltrader.entity.Portfolio.investmentList#MyFirstTime]
select investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_1_, investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.associatedPortfolio_PORTFOLIO_NAME=?
Result set contains (possibly empty) collection: [com.inteltrader.entity.Portfolio.investmentList#MyFirstTime]
Result set row: 0
Result row: EntityKey[com.inteltrader.entity.Investment#1]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Result set row: 1
Result row: EntityKey[com.inteltrader.entity.Investment#2]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Result set row: 2
Result row: EntityKey[com.inteltrader.entity.Investment#3]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
1 collections were found in result set for role: com.inteltrader.entity.Portfolio.investmentList
Collection fully initialized: [com.inteltrader.entity.Portfolio.investmentList#MyFirstTime]
1 collections initialized for role: com.inteltrader.entity.Portfolio.investmentList
Done loading collection
Done entity load
Written [{"portfolioName":"MyFirstTime","investmentList":[]}] as "text/html" using [org.springframework.http.converter.StringHttpMessageConverter@73e00a5b]
Null ModelAndView returned to DispatcherServlet with name 'appServlet': assuming HandlerAdapter completed request handling
Successfully completed request
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Initializing servlet 'appServlet'
Initializing new StandardServletEnvironment
Adding [servletConfigInitParams] PropertySource with lowest search precedence
Adding [servletContextInitParams] PropertySource with lowest search precedence
Adding [jndiProperties] PropertySource with lowest search precedence
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment]
FrameworkServlet 'appServlet': initialization started
Servlet with name 'appServlet' will try to create custom WebApplicationContext context of class 'org.springframework.web.context.support.XmlWebApplicationContext', using parent context [Root WebApplicationContext: startup date [Fri Apr 19 15:14:17 IST 2013]; root of context hierarchy]
Searching for key 'spring.profiles.active' in [servletConfigInitParams]
Searching for key 'spring.profiles.active' in [servletContextInitParams]
Searching for key 'spring.profiles.active' in [jndiProperties]
Looking up JNDI object with name [java:comp/env/spring.profiles.active]
Converted JNDI name [java:comp/env/spring.profiles.active] not found - trying original name [spring.profiles.active]. javax.naming.NameNotFoundException: Name [spring.profiles.active] is not bound in this Context. Unable to find [spring.profiles.active].
Looking up JNDI object with name [spring.profiles.active]
JNDI lookup for name [spring.profiles.active] threw NamingException with message: Name [spring.profiles.active] is not bound in this Context. Unable to find [spring.profiles.active].. Returning null.
Searching for key 'spring.profiles.active' in [systemProperties]
Searching for key 'spring.profiles.active' in [systemEnvironment]
Could not find key 'spring.profiles.active' in any property source. Returning [null]
Searching for key 'spring.profiles.default' in [servletConfigInitParams]
Searching for key 'spring.profiles.default' in [servletContextInitParams]
Searching for key 'spring.profiles.default' in [jndiProperties]
Looking up JNDI object with name [java:comp/env/spring.profiles.default]
Converted JNDI name [java:comp/env/spring.profiles.default] not found - trying original name [spring.profiles.default]. javax.naming.NameNotFoundException: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].
Looking up JNDI object with name [spring.profiles.default]
JNDI lookup for name [spring.profiles.default] threw NamingException with message: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].. Returning null.
Searching for key 'spring.profiles.default' in [systemProperties]
Searching for key 'spring.profiles.default' in [systemEnvironment]
Could not find key 'spring.profiles.default' in any property source. Returning [null]
Searching for key 'spring.profiles.default' in [servletConfigInitParams]
Searching for key 'spring.profiles.default' in [servletContextInitParams]
Searching for key 'spring.profiles.default' in [jndiProperties]
Looking up JNDI object with name [java:comp/env/spring.profiles.default]
Converted JNDI name [java:comp/env/spring.profiles.default] not found - trying original name [spring.profiles.default]. javax.naming.NameNotFoundException: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].
Looking up JNDI object with name [spring.profiles.default]
JNDI lookup for name [spring.profiles.default] threw NamingException with message: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].. Returning null.
Searching for key 'spring.profiles.default' in [systemProperties]
Searching for key 'spring.profiles.default' in [systemEnvironment]
Could not find key 'spring.profiles.default' in any property source. Returning [null]
Replacing [servletContextInitParams] PropertySource with [servletContextInitParams]
Replacing [servletConfigInitParams] PropertySource with [servletConfigInitParams]
Refreshing WebApplicationContext for namespace 'appServlet-servlet': startup date [Fri Apr 19 15:14:22 IST 2013]; parent: Root WebApplicationContext
Initializing new StandardEnvironment
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
Initializing new StandardEnvironment
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
Loading schema mappings from [META-INF/spring.schemas]
Loaded schema mappings: {http://www.springframework.org/schema/data/jpa/spring-jpa-1.2.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.2.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.1.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.1.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.5.xsd=org/springframework/data/repository/config/spring-repository-1.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.0.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.3.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.4.xsd=org/springframework/data/repository/config/spring-repository-1.4.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.3.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/data/repository/spring-repository.xsd=org/springframework/data/repository/config/spring-repository-1.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.0.xsd=org/springframework/data/repository/config/spring-repository-1.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.1.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.1.xsd
Found XML schema [http://www.springframework.org/schema/task/spring-task-3.0.xsd] in classpath: org/springframework/scheduling/config/spring-task-3.0.xsd
Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd
Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd
Found XML schema [http://www.springframework.org/schema/tx/spring-tx-3.1.xsd] in classpath: org/springframework/transaction/config/spring-tx-3.1.xsd
Loading bean definitions
Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/data/repository=org.springframework.data.repository.config.RepositoryNameSpaceHandler, http://www.springframework.org/schema/data/jpa=org.springframework.data.jpa.repository.config.JpaRepositoryNameSpaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
Neither XML 'id' nor 'name' specified - using generated bean name [org.springframework.web.servlet.view.InternalResourceViewResolver#0]
Neither XML 'id' nor 'name' specified - using generated bean name [org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver#125a86c1]
Initializing new StandardEnvironment
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
Looking for matching resources in directory tree [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Resolved location pattern [classpath*:com/inteltrader/**/*.class] to resources [file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\Advice.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\FIFOList.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\InstrumentVo.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\Strategies.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\Strategy.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\StrategyMACD.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao\IInstrumentDao.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao\InstrumentDao.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao\IPortfolioDao.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao\PortfolioDao.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Instrument.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Investment.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Portfolio.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Price.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Transactions.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest\InstrumentServiceRest.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest\PortfolioServiceRest.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\AnalyserService.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\CronService.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\InstrumentService.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\InstrumentServiceImpl.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\PortfolioService.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\PortfolioServiceImpl.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util\DownloadZip.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util\ExtractZipFile.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util\ReadPriceCsv.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util\RestCodes.class]]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Instrument.class]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Investment.class]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Portfolio.class]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest\InstrumentServiceRest.class]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest\PortfolioServiceRest.class]
Loaded 21 bean definitions from location pattern [/WEB-INF/applicationContext.xml]
Bean factory for WebApplicationContext for namespace 'appServlet-servlet': org.springframework.beans.factory.support.DefaultListableBeanFactory@7544f250: defining beans [org.springframework.context.annotation.internalAsyncAnnotationProcessor,org.springframework.context.annotation.internalScheduledAnnotationProcessor,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0,org.springframework.web.servlet.view.InternalResourceViewResolver#0,instrumentDao,portfolioDao,instrumentService,portfolioService,entityManagerFactory,transactionManager,instrument,investment,portfolio,instrumentServiceRest,portfolioServiceRest]; parent: org.springframework.beans.factory.support.DefaultListableBeanFactory@1d4053d6
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@53ddecd8]
Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@ee883ec]
Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.DelegatingThemeSource@432d0299]
Creating shared instance of singleton bean 'entityManagerFactory'
Creating instance of bean 'entityManagerFactory'
Eagerly caching bean 'entityManagerFactory' to allow for resolving potential circular references
Creating instance of bean 'org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver#125a86c1'
Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Creating instance of bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0' to allow for resolving potential circular references
Creating instance of bean '(inner bean)'
Creating shared instance of singleton bean 'transactionManager'
Creating instance of bean 'transactionManager'
Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
Returning eagerly cached instance of singleton bean 'entityManagerFactory' that is not fully initialized yet - a consequence of a circular reference
Ignoring currently created advisor 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0': Error creating bean with name 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0': Cannot create inner bean '(inner bean)' of type [org.springframework.transaction.interceptor.TransactionInterceptor] while setting bean property 'transactionInterceptor'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)': Cannot resolve reference to bean 'transactionManager' while setting bean property 'transactionManager'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'transactionManager' defined in ServletContext resource [/WEB-INF/applicationContext.xml]: Cannot resolve reference to bean 'entityManagerFactory' while setting bean property 'entityManagerFactory'; nested exception is org.springframework.beans.factory.BeanCurrentlyInCreationException: Error creating bean with name 'entityManagerFactory': FactoryBean which is currently in creation returned null from getObject
Finished creating instance of bean 'org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver#125a86c1'
Invoking afterPropertiesSet() on bean with name 'entityManagerFactory'
Building JPA container EntityManagerFactory for persistence unit 'intelTrader'
Adding type registration boolean -> org.hibernate.type.BooleanType@69d2b85a
Adding type registration boolean -> org.hibernate.type.BooleanType@69d2b85a
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@69d2b85a
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@44d49852
Adding type registration true_false -> org.hibernate.type.TrueFalseType@7e0a94fa
Adding type registration yes_no -> org.hibernate.type.YesNoType@6c9657d4
Adding type registration byte -> org.hibernate.type.ByteType@410a4c64
Adding type registration byte -> org.hibernate.type.ByteType@410a4c64
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@410a4c64
Adding type registration character -> org.hibernate.type.CharacterType@5854278
Adding type registration char -> org.hibernate.type.CharacterType@5854278
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5854278
Adding type registration short -> org.hibernate.type.ShortType@16850204
Adding type registration short -> org.hibernate.type.ShortType@16850204
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@16850204
Adding type registration integer -> org.hibernate.type.IntegerType@2270a34d
Adding type registration int -> org.hibernate.type.IntegerType@2270a34d
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2270a34d
Adding type registration long -> org.hibernate.type.LongType@1aab193e
Adding type registration long -> org.hibernate.type.LongType@1aab193e
Adding type registration java.lang.Long -> org.hibernate.type.LongType@1aab193e
Adding type registration float -> org.hibernate.type.FloatType@385bcf9c
Adding type registration float -> org.hibernate.type.FloatType@385bcf9c
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@385bcf9c
Adding type registration double -> org.hibernate.type.DoubleType@2294eb7c
Adding type registration double -> org.hibernate.type.DoubleType@2294eb7c
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2294eb7c
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@f212a54
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@f212a54
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7cf8261e
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7cf8261e
Adding type registration string -> org.hibernate.type.StringType@598288ea
Adding type registration java.lang.String -> org.hibernate.type.StringType@598288ea
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@c66832a
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6d614d55
Adding type registration url -> org.hibernate.type.UrlType@189c46cf
Adding type registration java.net.URL -> org.hibernate.type.UrlType@189c46cf
Adding type registration date -> org.hibernate.type.DateType@308151e7
Adding type registration java.sql.Date -> org.hibernate.type.DateType@308151e7
Adding type registration time -> org.hibernate.type.TimeType@7429bf2a
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7429bf2a
Adding type registration timestamp -> org.hibernate.type.TimestampType@7e308c04
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7e308c04
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7e308c04
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5edbde1
Adding type registration calendar -> org.hibernate.type.CalendarType@348d20a4
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@348d20a4
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@348d20a4
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@10bd5241
Adding type registration locale -> org.hibernate.type.LocaleType@23bff716
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@23bff716
Adding type registration currency -> org.hibernate.type.CurrencyType@46316ef0
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@46316ef0
Adding type registration timezone -> org.hibernate.type.TimeZoneType@1b507a94
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1b507a94
Adding type registration class -> org.hibernate.type.ClassType@50a3b5e5
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@50a3b5e5
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@c964e57
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@c964e57
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1090f2ff
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@2ac1e666
Adding type registration binary -> org.hibernate.type.BinaryType@46915616
Adding type registration byte[] -> org.hibernate.type.BinaryType@46915616
Adding type registration [B -> org.hibernate.type.BinaryType@46915616
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@760f1582
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@760f1582
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@760f1582
Adding type registration image -> org.hibernate.type.ImageType@6280cd64
Adding type registration characters -> org.hibernate.type.CharArrayType@2009f5c4
Adding type registration char[] -> org.hibernate.type.CharArrayType@2009f5c4
Adding type registration [C -> org.hibernate.type.CharArrayType@2009f5c4
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1804fd7d
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1804fd7d
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1804fd7d
Adding type registration text -> org.hibernate.type.TextType@62fd9d76
Adding type registration ntext -> org.hibernate.type.NTextType@52dcd527
Adding type registration blob -> org.hibernate.type.BlobType@5d22005a
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5d22005a
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@445cc06d
Adding type registration clob -> org.hibernate.type.ClobType@3d97cc2
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3d97cc2
Adding type registration nclob -> org.hibernate.type.NClobType@1d914106
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1d914106
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7324f595
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@372f945b
Adding type registration serializable -> org.hibernate.type.SerializableType@3e3afdb6
Adding type registration object -> org.hibernate.type.ObjectType@770e1f6d
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@770e1f6d
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4005ad43
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@34b22a8b
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1d0726b4
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@407e024f
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@10c9b19d
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@29abc307
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4b9115f0
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@22376652
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Processing PersistenceUnitInfo [
	name: intelTrader
	persistence provider classname: org.hibernate.ejb.HibernatePersistence
	classloader: WebappClassLoader
  context: 
  delegate: false
  repositories:
    /WEB-INF/classes/
----------> Parent Classloader:
ClassRealm[plugin>org.apache.tomcat.maven:tomcat7-maven-plugin:2.0, parent: sun.misc.Launcher$AppClassLoader@1875303f]

	Temporary classloader: org.springframework.instrument.classloading.SimpleThrowawayClassLoader@631ea30a
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/vvarm1/IdeaProjects/intelTrader/src/main/webapp/WEB-INF/classes
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.inteltrader.entity.Instrument
		com.inteltrader.entity.Portfolio
		com.inteltrader.entity.Investment]
	Mapping files names []
	Properties [
		hibernate.connection.username: root
		hibernate.connection.password: root
		hibernate.dialect: org.hibernate.dialect.MySQLDialect
		hibernate.c3p0.min_size: 10
		hibernate.connection.url: jdbc:mysql://localhost:3306/TRADER_DB
		hibernate.show_sql: true
		hibernate.connection.driver_class: com.mysql.jdbc.Driver
		hibernate.hbm2ddl.auto: update]
Detect class: true; detect hbm: true
Detect class: true; detect hbm: true
Searching mapped entities in jar/par: file:/C:/Users/vvarm1/IdeaProjects/intelTrader/src/main/webapp/WEB-INF/classes
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.ejb.event.JpaIntegrator].
No JNDI name configured for binding Ejb3Configuration
Preparing to build session factory with filters : {}
Processing hbm.xml files
Process annotated classes
Binding entity from annotated class: com.inteltrader.entity.Instrument
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Instrument
Bind entity com.inteltrader.entity.Instrument on table INSTRUMENT
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=SYMBOL_NAME, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property symbolName with lazy=false
building SimpleValue for symbolName
Building property symbolName
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=priceList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=priceList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=priceList_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='priceList_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='SYMBOL_NAME', referencedColumn='', mappedBy=''}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Collection role: com.inteltrader.entity.Instrument.priceList
Building property priceList
Binding entity from annotated class: com.inteltrader.entity.Portfolio
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Portfolio
Bind entity com.inteltrader.entity.Portfolio on table PORTFOLIO
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=PORTFOLIO_NAME, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property portfolioName with lazy=false
building SimpleValue for portfolioName
Building property portfolioName
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='associatedPortfolio'}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=investmentList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=element, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=investmentList_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='investmentList_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='associatedPortfolio'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='associatedPortfolio'}
Collection role: com.inteltrader.entity.Portfolio.investmentList
Building property investmentList
Binding entity from annotated class: com.inteltrader.entity.Investment
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Investment
Bind entity com.inteltrader.entity.Investment on table INVESTMENT
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=INVESTMENT_ID, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property investmentId with lazy=false
building SimpleValue for investmentId
Building property investmentId
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=associatedPortfolio, insertable=true, updatable=true, unique=false}
Building property associatedPortfolio
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=currentPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property currentPrice with lazy=false
building SimpleValue for currentPrice
Building property currentPrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=quantity, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property quantity with lazy=false
building SimpleValue for quantity
Building property quantity
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=INVESTMENT_SYMBOL, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property symbolName with lazy=false
building SimpleValue for symbolName
Building property symbolName
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=transactionsList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=transactionsList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=transactionsList_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='transactionsList_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='INVESTMENT_ID', referencedColumn='', mappedBy=''}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Collection role: com.inteltrader.entity.Investment.transactionsList
Building property transactionsList
Setting SimpleValue typeName for symbolName
Setting SimpleValue typeName for portfolioName
Setting SimpleValue typeName for investmentId
Setting SimpleValue typeName for currentPrice
Setting SimpleValue typeName for quantity
Setting SimpleValue typeName for symbolName
Processing fk mappings (*ToOne and JoinedSubclass)
Processing extends queue
Processing extends queue
Processing collection mappings
Second pass for collection: com.inteltrader.entity.Investment.transactionsList
Binding a collection of element: com.inteltrader.entity.Investment.transactionsList
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT_TRANSACTION), mappingColumn=quantity, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property quantity with lazy=false
building SimpleValue for quantity
Setting SimpleValue typeName for quantity
Building property quantity
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT_TRANSACTION), mappingColumn=transactionId, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property transactionId with lazy=false
building SimpleValue for transactionId
Setting SimpleValue typeName for transactionId
Building property transactionId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT_TRANSACTION), mappingColumn=transactionPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property transactionPrice with lazy=false
building SimpleValue for transactionPrice
Setting SimpleValue typeName for transactionPrice
Building property transactionPrice
Mapped collection key: INVESTMENT_ID, element: quantity, transactionId, transactionPrice
Second pass for collection: com.inteltrader.entity.Instrument.priceList
Binding a collection of element: com.inteltrader.entity.Instrument.priceList
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=closePrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property closePrice with lazy=false
building SimpleValue for closePrice
Setting SimpleValue typeName for closePrice
Building property closePrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=highPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property highPrice with lazy=false
building SimpleValue for highPrice
Setting SimpleValue typeName for highPrice
Building property highPrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=lastClosePrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property lastClosePrice with lazy=false
building SimpleValue for lastClosePrice
Setting SimpleValue typeName for lastClosePrice
Building property lastClosePrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=lowPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property lowPrice with lazy=false
building SimpleValue for lowPrice
Setting SimpleValue typeName for lowPrice
Building property lowPrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=openPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property openPrice with lazy=false
building SimpleValue for openPrice
Setting SimpleValue typeName for openPrice
Building property openPrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=priceId, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property priceId with lazy=false
building SimpleValue for priceId
Setting SimpleValue typeName for priceId
Building property priceId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=timeStamp, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property timeStamp with lazy=false
building SimpleValue for timeStamp
Setting SimpleValue typeName for timeStamp
Building property timeStamp
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=totalTradedQuantity, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property totalTradedQuantity with lazy=false
building SimpleValue for totalTradedQuantity
Setting SimpleValue typeName for totalTradedQuantity
Building property totalTradedQuantity
Mapped collection key: SYMBOL_NAME, element: closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity
Second pass for collection: com.inteltrader.entity.Portfolio.investmentList
Binding a OneToMany: com.inteltrader.entity.Portfolio.investmentList through a foreign key
Mapping collection: com.inteltrader.entity.Portfolio.investmentList -> INVESTMENT
Retrieving property com.inteltrader.entity.Investment.associatedPortfolio
Mapped collection key: associatedPortfolio_PORTFOLIO_NAME, one-to-many: com.inteltrader.entity.Investment
Processing native query and ResultSetMapping mappings
Processing association property references
Creating tables' unique integer identifiers
Processing foreign key constraints
Resolving reference to class: com.inteltrader.entity.Instrument
Resolving reference to class: com.inteltrader.entity.Portfolio
Resolving reference to class: com.inteltrader.entity.Investment
HHH000022: c3p0 properties were encountered, but the org.hibernate.service.jdbc.connections.internal.C3P0ConnectionProvider provider class was not found on the classpath; these properties are going to be ignored.
HHH000402: Using Hibernate built-in connection pool (not for production use!)
HHH000115: Hibernate connection pool size: 20
HHH000006: Autocommit mode: true
HHH000401: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/TRADER_DB]
HHH000046: Connection properties: {user=root, password=root, autocommit=true, release_mode=auto}
Opening new JDBC connection
Created connection to: jdbc:mysql://localhost:3306/TRADER_DB, Isolation Level: 4
Database ->
       name : MySQL
    version : 5.6.10-log
      major : 5
      minor : 6
Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.9 ( Revision: ${svn.Revision} )
      major : 5
      minor : 1
JDBC version : 3.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: disabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
multi-tenancy strategy : NONE
Connection release mode: auto
HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
Maximum outer join fetch depth: 2
Default batch fetch size: 1
Generate SQL with comments: disabled
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
HHH000397: Using ASTQueryTranslatorFactory
Query language substitutions: {}
JPA-QL strict compliance: enabled
Second-level cache: enabled
Query cache: disabled
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
Optimize cache for minimal puts: disabled
Structured second-level cache entries: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Named query checking : enabled
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : : disabled
Building session factory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\vvarm1\IdeaProjects\intelTrader\target\tomcat, hibernate.connection.url=jdbc:mysql://localhost:3306/TRADER_DB, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.ejb.discard_pc_on_close=false, catalina.useNaming=true, hibernate.transaction.flush_before_completion=false, os.name=Windows 7, sun.boot.class.path=C:\Program Files\Java\jdk1.7.0_10\jre\lib\resources.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\rt.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\jce.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.7.0_10\jre\classes, java.util.logging.config.file=C:\Users\vvarm1\IdeaProjects\intelTrader\target\tomcat\conf\logging.properties, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.7.0_10-b18, hibernate.connection.autocommit=true, hibernate.c3p0.min_size=10, user.name=vvarm1, shared.loader=, guice.disable.misplaced.annotation.check=true, tomcat.util.buf.StringCache.byte.enabled=true, javax.persistence.validation.mode=AUTO, hibernate.connection.release_mode=auto, idea.launcher.bin.path=C:\Program Files (x86)\JetBrains\IntelliJ IDEA Community Edition 12.0.4\bin, user.language=en, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, sun.boot.library.path=C:\Program Files\Java\jdk1.7.0_10\jre\bin, classworlds.conf=C:\Program Files\Apache Software Foundation\apache-maven-3.0.5\bin\m2.conf, java.version=1.7.0_10, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, user.timezone=Asia/Calcutta, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.7.0_10\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, file.encoding.pkg=sun.io, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.tomcat.,org.apache.jasper., file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=51.0, user.country=US, java.home=C:\Program Files\Java\jdk1.7.0_10\jre, java.vm.info=mixed mode, os.version=6.1, hibernate.transaction.factory_class=org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory, hibernate.query.jpaql_strict_compliance=true, path.separator=;, java.vm.version=23.6-b04, hibernate.connection.password=root, user.variant=, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.scan.DefaultJarScanner.jarsToSkip=bootstrap.jar,commons-daemon.jar,tomcat-juli.jar,annotations-api.jar,el-api.jar,jsp-api.jar,servlet-api.jar,catalina.jar,catalina-ant.jar,catalina-ha.jar,catalina-tribes.jar,jasper.jar,jasper-el.jar,ecj-*.jar,tomcat-api.jar,tomcat-util.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-jni.jar,tomcat-spdy.jar,tomcat-i18n-en.jar,tomcat-i18n-es.jar,tomcat-i18n-fr.jar,tomcat-i18n-ja.jar,tomcat-juli-adapters.jar,catalina-jmx-remote.jar,catalina-ws.jar,tomcat-jdbc.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,jstl.jar,geronimo-spec-jaxrpc*.jar,wsdl4j*.jar,ant.jar,ant-junit*.jar,aspectj*.jar,jmx.jar,h2*.jar,hibernate*.jar,httpclient*.jar,jmx-tools.jar,jta*.jar,log4j*.jar,mail*.jar,slf4j*.jar,xercesImpl.jar,xmlParserAPIs.jar,xml-apis.jar,access-bridge-64.jar,dnsns.jar,jaccess.jar,ldapsec.jar,localedata.jar,sunjce_provider.jar,sunmscapi.jar,sunpkcs11.jar,jhall.jar,tools.jar,sunec.jar,zipfs.jar,gnome-java-bridge.jar,pulse-java.jar,apple_provider.jar,AppleScriptEngine.jar,CoreAudio.jar,dns_sd.jar,j3daudio.jar,j3dcore.jar,j3dutils.jar,jai_core.jar,jai_codec.jar,mlibwrapper_jai.jar,MRJToolkit.jar,vecmath.jar,junit.jar,junit-*.jar,ant-launcher.jar, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.tomcat.,org.apache.jasper., user.script=, java.naming.factory.url.pkgs=org.apache.naming, user.home=C:\Users\vvarm1, org.apache.catalina.startup.ContextConfig.jarsToSkip=, java.specification.vendor=Oracle Corporation, hibernate.hbm2ddl.auto=update, java.library.path=C:\Program Files\Java\jdk1.7.0_10\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\JetBrains\IntelliJ IDEA Community Edition 12.0.4\bin\..\.\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\ThinkPad\Bluetooth Software\;C:\Program Files\ThinkPad\Bluetooth Software\syswow64;c:\Program Files\Intel\WiFi\bin\;c:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files (x86)\Git\cmd;C:\Users\vvarm1\Documents\play-2.0.3;C:\Program Files\Java\jdk1.7.0_10\bin;C:\Program Files\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\QuickTime\QTSystem\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Java\jre6\bin;C:\Program Files\Apache Software Foundation\apache-maven-3.0.5\bin;c:\program files (x86)\jetbrains\intellij idea community edition 12.0.4\jre\jre\bin;., java.vendor.url=http://java.oracle.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, org.apache.catalina.startup.TldConfig.jarsToSkip=, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, common.loader=${catalina.base}/lib,${catalina.base}/lib/*.jar,${catalina.home}/lib,${catalina.home}/lib/*.jar, maven.home=C:\Program Files\Apache Software Foundation\apache-maven-3.0.5, java.runtime.name=Java(TM) SE Runtime Environment, java.class.path=C:\Program Files\Apache Software Foundation\apache-maven-3.0.5\boot\plexus-classworlds-2.4.jar;C:\Program Files (x86)\JetBrains\IntelliJ IDEA Community Edition 12.0.4\lib\idea_rt.jar, sun.java.command=com.intellij.rt.execution.application.AppMain org.codehaus.classworlds.Launcher --no-plugin-registry --fail-fast --strict-checksums --update-snapshots org.apache.tomcat.maven:tomcat7-maven-plugin:2.0:run, hibernate.bytecode.use_reflection_optimizer=false, idea.launcher.port=7538, java.vm.specification.name=Java Virtual Machine Specification, catalina.home=C:\Users\vvarm1\IdeaProjects\intelTrader\target\tomcat, java.vm.specification.version=1.7, sun.os.patch.level=Service Pack 1, sun.cpu.endian=little, java.io.tmpdir=C:\Users\vvarm1\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, server.loader=, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, java.ext.dirs=C:\Program Files\Java\jdk1.7.0_10\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=C:\Users\vvarm1\IdeaProjects\intelTrader, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding=UTF-8, hibernate.use_identifier_rollback=false, java.specification.version=1.7, hibernate.show_sql=true}
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Static SQL for entity: com.inteltrader.entity.Investment
 Version select: select INVESTMENT_ID from TRADER_DB.INVESTMENT where INVESTMENT_ID =?
 Snapshot select: select investment_.INVESTMENT_ID, investment_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_, investment_.currentPrice as currentP2_2_, investment_.quantity as quantity2_, investment_.INVESTMENT_SYMBOL as INVESTMENT4_2_ from TRADER_DB.INVESTMENT investment_ where investment_.INVESTMENT_ID=?
 Insert 0: insert into TRADER_DB.INVESTMENT (associatedPortfolio_PORTFOLIO_NAME, currentPrice, quantity, INVESTMENT_SYMBOL, INVESTMENT_ID) values (?, ?, ?, ?, ?)
 Update 0: update TRADER_DB.INVESTMENT set associatedPortfolio_PORTFOLIO_NAME=?, currentPrice=?, quantity=?, INVESTMENT_SYMBOL=? where INVESTMENT_ID=?
 Delete 0: delete from TRADER_DB.INVESTMENT where INVESTMENT_ID=?
 Identity insert: insert into TRADER_DB.INVESTMENT (associatedPortfolio_PORTFOLIO_NAME, currentPrice, quantity, INVESTMENT_SYMBOL) values (?, ?, ?, ?)
Static SQL for entity: com.inteltrader.entity.Instrument
 Version select: select SYMBOL_NAME from TRADER_DB.INSTRUMENT where SYMBOL_NAME =?
 Snapshot select: select instrument_.SYMBOL_NAME from TRADER_DB.INSTRUMENT instrument_ where instrument_.SYMBOL_NAME=?
 Insert 0: insert into TRADER_DB.INSTRUMENT (SYMBOL_NAME) values (?)
 Update 0: null
 Delete 0: delete from TRADER_DB.INSTRUMENT where SYMBOL_NAME=?
Static SQL for entity: com.inteltrader.entity.Portfolio
 Version select: select PORTFOLIO_NAME from TRADER_DB.PORTFOLIO where PORTFOLIO_NAME =?
 Snapshot select: select portfolio_.PORTFOLIO_NAME from TRADER_DB.PORTFOLIO portfolio_ where portfolio_.PORTFOLIO_NAME=?
 Insert 0: insert into TRADER_DB.PORTFOLIO (PORTFOLIO_NAME) values (?)
 Update 0: null
 Delete 0: delete from TRADER_DB.PORTFOLIO where PORTFOLIO_NAME=?
Static SQL for collection: com.inteltrader.entity.Instrument.priceList
 Row insert: insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
 Row update: update TRADER_DB.INSTRUMENT_PRICE set closePrice=?, highPrice=?, lastClosePrice=?, lowPrice=?, openPrice=?, priceId=?, timeStamp=?, totalTradedQuantity=? where SYMBOL_NAME=? and priceId=? and totalTradedQuantity=?
 Row delete: delete from TRADER_DB.INSTRUMENT_PRICE where SYMBOL_NAME=? and priceId=? and totalTradedQuantity=?
 One-shot delete: delete from TRADER_DB.INSTRUMENT_PRICE where SYMBOL_NAME=?
Static SQL for collection: com.inteltrader.entity.Investment.transactionsList
 Row insert: insert into TRADER_DB.INVESTMENT_TRANSACTION (INVESTMENT_ID, quantity, transactionId, transactionPrice) values (?, ?, ?, ?)
 Row update: update TRADER_DB.INVESTMENT_TRANSACTION set quantity=?, transactionId=?, transactionPrice=? where INVESTMENT_ID=? and quantity=? and transactionId=? and transactionPrice=?
 Row delete: delete from TRADER_DB.INVESTMENT_TRANSACTION where INVESTMENT_ID=? and quantity=? and transactionId=? and transactionPrice=?
 One-shot delete: delete from TRADER_DB.INVESTMENT_TRANSACTION where INVESTMENT_ID=?
Static SQL for collection: com.inteltrader.entity.Portfolio.investmentList
 Row insert: update TRADER_DB.INVESTMENT set associatedPortfolio_PORTFOLIO_NAME=? where INVESTMENT_ID=?
 Row delete: update TRADER_DB.INVESTMENT set associatedPortfolio_PORTFOLIO_NAME=null where associatedPortfolio_PORTFOLIO_NAME=? and INVESTMENT_ID=?
 One-shot delete: update TRADER_DB.INVESTMENT set associatedPortfolio_PORTFOLIO_NAME=null where associatedPortfolio_PORTFOLIO_NAME=?
Static select for entity com.inteltrader.entity.Instrument [NONE]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for entity com.inteltrader.entity.Instrument [READ]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for entity com.inteltrader.entity.Instrument [UPGRADE]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [UPGRADE_NOWAIT]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [FORCE]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [PESSIMISTIC_READ]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? lock in share mode
Static select for entity com.inteltrader.entity.Instrument [PESSIMISTIC_WRITE]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [PESSIMISTIC_FORCE_INCREMENT]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [OPTIMISTIC]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for entity com.inteltrader.entity.Instrument [OPTIMISTIC_FORCE_INCREMENT]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for action ACTION_MERGE on entity com.inteltrader.entity.Instrument: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for action ACTION_REFRESH on entity com.inteltrader.entity.Instrument: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for entity com.inteltrader.entity.Investment [NONE]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_1_, investment0_.currentPrice as currentP2_2_1_, investment0_.quantity as quantity2_1_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_1_, portfolio1_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.INVESTMENT investment0_ left outer join TRADER_DB.PORTFOLIO portfolio1_ on investment0_.associatedPortfolio_PORTFOLIO_NAME=portfolio1_.PORTFOLIO_NAME where investment0_.INVESTMENT_ID=?
Static select for entity com.inteltrader.entity.Investment [READ]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_1_, investment0_.currentPrice as currentP2_2_1_, investment0_.quantity as quantity2_1_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_1_, portfolio1_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.INVESTMENT investment0_ left outer join TRADER_DB.PORTFOLIO portfolio1_ on investment0_.associatedPortfolio_PORTFOLIO_NAME=portfolio1_.PORTFOLIO_NAME where investment0_.INVESTMENT_ID=?
Static select for entity com.inteltrader.entity.Investment [UPGRADE]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [UPGRADE_NOWAIT]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [FORCE]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [PESSIMISTIC_READ]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? lock in share mode
Static select for entity com.inteltrader.entity.Investment [PESSIMISTIC_WRITE]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [PESSIMISTIC_FORCE_INCREMENT]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [OPTIMISTIC]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=?
Static select for entity com.inteltrader.entity.Investment [OPTIMISTIC_FORCE_INCREMENT]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=?
Static select for action ACTION_MERGE on entity com.inteltrader.entity.Investment: select investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_1_, investment0_.currentPrice as currentP2_2_1_, investment0_.quantity as quantity2_1_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_1_, portfolio1_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.INVESTMENT investment0_ left outer join TRADER_DB.PORTFOLIO portfolio1_ on investment0_.associatedPortfolio_PORTFOLIO_NAME=portfolio1_.PORTFOLIO_NAME where investment0_.INVESTMENT_ID=?
Static select for action ACTION_REFRESH on entity com.inteltrader.entity.Investment: select investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_1_, investment0_.currentPrice as currentP2_2_1_, investment0_.quantity as quantity2_1_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_1_, portfolio1_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.INVESTMENT investment0_ left outer join TRADER_DB.PORTFOLIO portfolio1_ on investment0_.associatedPortfolio_PORTFOLIO_NAME=portfolio1_.PORTFOLIO_NAME where investment0_.INVESTMENT_ID=?
Static select for entity com.inteltrader.entity.Portfolio [NONE]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Static select for entity com.inteltrader.entity.Portfolio [READ]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Static select for entity com.inteltrader.entity.Portfolio [UPGRADE]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [UPGRADE_NOWAIT]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [FORCE]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [PESSIMISTIC_READ]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? lock in share mode
Static select for entity com.inteltrader.entity.Portfolio [PESSIMISTIC_WRITE]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [PESSIMISTIC_FORCE_INCREMENT]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [OPTIMISTIC]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=?
Static select for entity com.inteltrader.entity.Portfolio [OPTIMISTIC_FORCE_INCREMENT]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=?
Static select for action ACTION_MERGE on entity com.inteltrader.entity.Portfolio: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Static select for action ACTION_REFRESH on entity com.inteltrader.entity.Portfolio: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Static select for collection com.inteltrader.entity.Instrument.priceList: select pricelist0_.SYMBOL_NAME as SYMBOL1_0_0_, pricelist0_.closePrice as closePrice1_0_, pricelist0_.highPrice as highPrice1_0_, pricelist0_.lastClosePrice as lastClos4_1_0_, pricelist0_.lowPrice as lowPrice1_0_, pricelist0_.openPrice as openPrice1_0_, pricelist0_.priceId as priceId1_0_, pricelist0_.timeStamp as timeStamp1_0_, pricelist0_.totalTradedQuantity as totalTra9_1_0_ from TRADER_DB.INSTRUMENT_PRICE pricelist0_ where pricelist0_.SYMBOL_NAME=?
Static select for one-to-many com.inteltrader.entity.Portfolio.investmentList: select investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_1_, investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.associatedPortfolio_PORTFOLIO_NAME=?
Static select for collection com.inteltrader.entity.Investment.transactionsList: select transactio0_.INVESTMENT_ID as INVESTMENT1_2_0_, transactio0_.quantity as quantity3_0_, transactio0_.transactionId as transact3_3_0_, transactio0_.transactionPrice as transact4_3_0_ from TRADER_DB.INVESTMENT_TRANSACTION transactio0_ where transactio0_.INVESTMENT_ID=?
Registering SessionFactory: 7b25b2a0-b3b6-4576-b931-36b76b5e91d2 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Instantiated session factory
HHH000228: Running hbm2ddl schema update
HHH000102: Fetching database metadata
HHH000396: Updating schema
Processing hbm.xml files
Process annotated classes
Processing fk mappings (*ToOne and JoinedSubclass)
Processing extends queue
Processing extends queue
Processing collection mappings
Processing native query and ResultSetMapping mappings
Processing association property references
Creating tables' unique integer identifiers
Processing foreign key constraints
Resolving reference to class: com.inteltrader.entity.Instrument
Resolving reference to class: com.inteltrader.entity.Portfolio
Resolving reference to class: com.inteltrader.entity.Investment
HHH000261: Table found: TRADER_DB.instrument
HHH000037: Columns: [symbol_name]
HHH000108: Foreign keys: []
HHH000126: Indexes: [primary]
HHH000261: Table found: TRADER_DB.instrument_price
HHH000037: Columns: [totaltradedquantity, timestamp, priceid, lastcloseprice, highprice, symbol_name, openprice, closeprice, lowprice]
HHH000108: Foreign keys: [fk3189a2d153ed548d]
HHH000126: Indexes: [fk3189a2d153ed548d]
HHH000261: Table found: TRADER_DB.investment
HHH000037: Columns: [investment_id, associatedportfolio_portfolio_name, currentprice, quantity, investment_symbol]
HHH000108: Foreign keys: [fk8fe41ed3c804d4f3]
HHH000126: Indexes: [fk8fe41ed3c804d4f3, primary]
HHH000261: Table found: TRADER_DB.investment_transaction
HHH000037: Columns: [transactionprice, investment_id, transactionid, quantity]
HHH000108: Foreign keys: [fka5863f52914590ae]
HHH000126: Indexes: [fka5863f52914590ae]
HHH000261: Table found: TRADER_DB.portfolio
HHH000037: Columns: [portfolio_name]
HHH000108: Foreign keys: []
HHH000126: Indexes: [primary]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
HHH000232: Schema update complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Statistics initialized [enabled=false]
Registering EntityManagerFactory: intelTrader 
HHH000436: Entity manager factory name (intelTrader) is already registered.  If entity manager will be clustered or passivated, specify a unique value for property 'hibernate.ejb.entitymanager_factory_name'
Finished creating instance of bean 'entityManagerFactory'
Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@7544f250: defining beans [org.springframework.context.annotation.internalAsyncAnnotationProcessor,org.springframework.context.annotation.internalScheduledAnnotationProcessor,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0,org.springframework.web.servlet.view.InternalResourceViewResolver#0,instrumentDao,portfolioDao,instrumentService,portfolioService,entityManagerFactory,transactionManager,instrument,investment,portfolio,instrumentServiceRest,portfolioServiceRest,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor]; parent: org.springframework.beans.factory.support.DefaultListableBeanFactory@1d4053d6
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Creating instance of bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0' to allow for resolving potential circular references
Creating instance of bean '(inner bean)'
Creating shared instance of singleton bean 'transactionManager'
Creating instance of bean 'transactionManager'
Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
Returning cached instance of singleton bean 'entityManagerFactory'
Invoking afterPropertiesSet() on bean with name 'transactionManager'
Finished creating instance of bean 'transactionManager'
Creating instance of bean '(inner bean)'
Finished creating instance of bean '(inner bean)'
Invoking afterPropertiesSet() on bean with name '(inner bean)'
Finished creating instance of bean '(inner bean)'
Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Creating shared instance of singleton bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Creating instance of bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Eagerly caching bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Creating shared instance of singleton bean 'instrumentDao'
Creating instance of bean 'instrumentDao'
Eagerly caching bean 'instrumentDao' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'instrumentDao'
Creating shared instance of singleton bean 'portfolioDao'
Creating instance of bean 'portfolioDao'
Eagerly caching bean 'portfolioDao' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'portfolioDao'
Creating shared instance of singleton bean 'instrumentService'
Creating instance of bean 'instrumentService'
Registered injected element on class [com.inteltrader.service.InstrumentServiceImpl]: PersistenceElement for javax.persistence.EntityManagerFactory com.inteltrader.service.InstrumentServiceImpl.entityManagerFactory
Registered injected element on class [com.inteltrader.service.InstrumentServiceImpl]: AutowiredFieldElement for private com.inteltrader.dao.IInstrumentDao com.inteltrader.service.InstrumentServiceImpl.instrumentDao
Registered injected element on class [com.inteltrader.service.InstrumentServiceImpl]: AutowiredFieldElement for private com.inteltrader.service.PortfolioService com.inteltrader.service.InstrumentServiceImpl.portfolioService
Eagerly caching bean 'instrumentService' to allow for resolving potential circular references
Processing injected method of bean 'instrumentService': PersistenceElement for javax.persistence.EntityManagerFactory com.inteltrader.service.InstrumentServiceImpl.entityManagerFactory
Returning cached instance of singleton bean 'entityManagerFactory'
Processing injected method of bean 'instrumentService': AutowiredFieldElement for private com.inteltrader.dao.IInstrumentDao com.inteltrader.service.InstrumentServiceImpl.instrumentDao
Returning cached instance of singleton bean 'instrumentDao'
Autowiring by type from bean name 'instrumentService' to bean named 'instrumentDao'
Processing injected method of bean 'instrumentService': AutowiredFieldElement for private com.inteltrader.service.PortfolioService com.inteltrader.service.InstrumentServiceImpl.portfolioService
Creating shared instance of singleton bean 'portfolioService'
Creating instance of bean 'portfolioService'
Registered injected element on class [com.inteltrader.service.PortfolioServiceImpl]: PersistenceElement for private javax.persistence.EntityManagerFactory com.inteltrader.service.PortfolioServiceImpl.entityManagerFactory
Registered injected element on class [com.inteltrader.service.PortfolioServiceImpl]: AutowiredFieldElement for private com.inteltrader.dao.IPortfolioDao com.inteltrader.service.PortfolioServiceImpl.portfolioDao
Eagerly caching bean 'portfolioService' to allow for resolving potential circular references
Processing injected method of bean 'portfolioService': PersistenceElement for private javax.persistence.EntityManagerFactory com.inteltrader.service.PortfolioServiceImpl.entityManagerFactory
Returning cached instance of singleton bean 'entityManagerFactory'
Processing injected method of bean 'portfolioService': AutowiredFieldElement for private com.inteltrader.dao.IPortfolioDao com.inteltrader.service.PortfolioServiceImpl.portfolioDao
Returning cached instance of singleton bean 'portfolioDao'
Autowiring by type from bean name 'portfolioService' to bean named 'portfolioDao'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'portfolioService'
Autowiring by type from bean name 'instrumentService' to bean named 'portfolioService'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'instrumentService'
Returning cached instance of singleton bean 'portfolioService'
Returning cached instance of singleton bean 'entityManagerFactory'
Returning cached instance of singleton bean 'transactionManager'
Creating shared instance of singleton bean 'instrument'
Creating instance of bean 'instrument'
Eagerly caching bean 'instrument' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'instrument'
Creating shared instance of singleton bean 'investment'
Creating instance of bean 'investment'
Eagerly caching bean 'investment' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'investment'
Creating shared instance of singleton bean 'portfolio'
Creating instance of bean 'portfolio'
Eagerly caching bean 'portfolio' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'portfolio'
Creating shared instance of singleton bean 'instrumentServiceRest'
Creating instance of bean 'instrumentServiceRest'
Registered injected element on class [com.inteltrader.rest.InstrumentServiceRest]: AutowiredFieldElement for private com.inteltrader.service.InstrumentService com.inteltrader.rest.InstrumentServiceRest.instrumentService
Eagerly caching bean 'instrumentServiceRest' to allow for resolving potential circular references
Processing injected method of bean 'instrumentServiceRest': AutowiredFieldElement for private com.inteltrader.service.InstrumentService com.inteltrader.rest.InstrumentServiceRest.instrumentService
Returning cached instance of singleton bean 'instrumentService'
Autowiring by type from bean name 'instrumentServiceRest' to bean named 'instrumentService'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'instrumentServiceRest'
Creating shared instance of singleton bean 'portfolioServiceRest'
Creating instance of bean 'portfolioServiceRest'
Registered injected element on class [com.inteltrader.rest.PortfolioServiceRest]: AutowiredFieldElement for private com.inteltrader.service.PortfolioService com.inteltrader.rest.PortfolioServiceRest.portfolioService
Eagerly caching bean 'portfolioServiceRest' to allow for resolving potential circular references
Processing injected method of bean 'portfolioServiceRest': AutowiredFieldElement for private com.inteltrader.service.PortfolioService com.inteltrader.rest.PortfolioServiceRest.portfolioService
Returning cached instance of singleton bean 'portfolioService'
Autowiring by type from bean name 'portfolioServiceRest' to bean named 'portfolioService'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'portfolioServiceRest'
Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@6bff9c98]
Returning cached instance of singleton bean 'lifecycleProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Unable to locate MultipartResolver with name 'multipartResolver': no multipart request handling provided
Creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Unable to locate LocaleResolver with name 'localeResolver': using default [org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver@1b3a24e1]
Creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Unable to locate ThemeResolver with name 'themeResolver': using default [org.springframework.web.servlet.theme.FixedThemeResolver@18e09213]
Creating instance of bean 'org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping'
Looking for URL mappings in application context: WebApplicationContext for namespace 'appServlet-servlet': startup date [Fri Apr 19 15:14:22 IST 2013]; parent: Root WebApplicationContext
Rejected bean name 'org.springframework.context.annotation.internalAsyncAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalScheduledAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalRequiredAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalCommonAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.aop.config.internalAutoProxyCreator': no URL paths identified
Rejected bean name 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0': no URL paths identified
Rejected bean name 'org.springframework.web.servlet.view.InternalResourceViewResolver#0': no URL paths identified
Rejected bean name 'instrumentDao': no URL paths identified
Rejected bean name 'portfolioDao': no URL paths identified
Rejected bean name 'instrumentService': no URL paths identified
Rejected bean name 'portfolioService': no URL paths identified
Rejected bean name 'entityManagerFactory': no URL paths identified
Rejected bean name 'transactionManager': no URL paths identified
Rejected bean name 'instrument': no URL paths identified
Rejected bean name 'investment': no URL paths identified
Rejected bean name 'portfolio': no URL paths identified
Rejected bean name 'instrumentServiceRest': no URL paths identified
Rejected bean name 'portfolioServiceRest': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor': no URL paths identified
Rejected bean name 'environment': no URL paths identified
Rejected bean name 'systemProperties': no URL paths identified
Rejected bean name 'systemEnvironment': no URL paths identified
Rejected bean name 'servletConfig': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry': no URL paths identified
Rejected bean name 'messageSource': no URL paths identified
Rejected bean name 'applicationEventMulticaster': no URL paths identified
Rejected bean name 'lifecycleProcessor': no URL paths identified
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping'
Creating instance of bean 'org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping'
Looking for URL mappings in application context: WebApplicationContext for namespace 'appServlet-servlet': startup date [Fri Apr 19 15:14:22 IST 2013]; parent: Root WebApplicationContext
Rejected bean name 'org.springframework.context.annotation.internalAsyncAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalScheduledAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalRequiredAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalCommonAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.aop.config.internalAutoProxyCreator': no URL paths identified
Rejected bean name 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0': no URL paths identified
Rejected bean name 'org.springframework.web.servlet.view.InternalResourceViewResolver#0': no URL paths identified
Rejected bean name 'instrumentDao': no URL paths identified
Rejected bean name 'portfolioDao': no URL paths identified
Rejected bean name 'instrumentService': no URL paths identified
Rejected bean name 'portfolioService': no URL paths identified
Rejected bean name 'entityManagerFactory': no URL paths identified
Rejected bean name 'transactionManager': no URL paths identified
Rejected bean name 'instrument': no URL paths identified
Rejected bean name 'investment': no URL paths identified
Rejected bean name 'portfolio': no URL paths identified
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/create/{symbol}] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/create/{symbol}.*] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/create/{symbol}/] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/update/{portfolioName}] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/update/{portfolioName}.*] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/update/{portfolioName}/] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/load/{symbol}] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/load/{symbol}.*] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/load/{symbol}/] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/create/{portfolioName}] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/create/{portfolioName}.*] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/create/{portfolioName}/] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/load/{portfolioName}] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/load/{portfolioName}.*] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/load/{portfolioName}/] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/addInvestment/{portfolioName}/{symbolName}] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/addInvestment/{portfolioName}/{symbolName}.*] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/addInvestment/{portfolioName}/{symbolName}/] onto handler 'portfolioServiceRest'
Rejected bean name 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor': no URL paths identified
Rejected bean name 'environment': no URL paths identified
Rejected bean name 'systemProperties': no URL paths identified
Rejected bean name 'systemEnvironment': no URL paths identified
Rejected bean name 'servletConfig': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry': no URL paths identified
Rejected bean name 'messageSource': no URL paths identified
Rejected bean name 'applicationEventMulticaster': no URL paths identified
Rejected bean name 'lifecycleProcessor': no URL paths identified
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping'
No HandlerMappings found in servlet 'appServlet': using default
Creating instance of bean 'org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter'
Creating instance of bean 'org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter'
Creating instance of bean 'org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter'
No HandlerAdapters found in servlet 'appServlet': using default
Creating instance of bean 'org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerExceptionResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerExceptionResolver'
Creating instance of bean 'org.springframework.web.servlet.mvc.annotation.ResponseStatusExceptionResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.annotation.ResponseStatusExceptionResolver'
Creating instance of bean 'org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver'
No HandlerExceptionResolvers found in servlet 'appServlet': using default
Creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Unable to locate RequestToViewNameTranslator with name 'viewNameTranslator': using default [org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@2be9a73c]
Returning cached instance of singleton bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Returning cached instance of singleton bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Unable to locate FlashMapManager with name 'flashMapManager': using default [org.springframework.web.servlet.support.SessionFlashMapManager@76c00e2]
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Searching for key 'spring.liveBeansView.mbeanDomain' in [servletConfigInitParams]
Searching for key 'spring.liveBeansView.mbeanDomain' in [servletContextInitParams]
Searching for key 'spring.liveBeansView.mbeanDomain' in [jndiProperties]
Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain]
Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException: Name [spring.liveBeansView.mbeanDomain] is not bound in this Context. Unable to find [spring.liveBeansView.mbeanDomain].
Looking up JNDI object with name [spring.liveBeansView.mbeanDomain]
JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: Name [spring.liveBeansView.mbeanDomain] is not bound in this Context. Unable to find [spring.liveBeansView.mbeanDomain].. Returning null.
Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
Published WebApplicationContext of servlet 'appServlet' as ServletContext attribute with name [org.springframework.web.servlet.FrameworkServlet.CONTEXT.appServlet]
FrameworkServlet 'appServlet': initialization completed in 600 ms
Servlet 'appServlet' configured successfully
DispatcherServlet with name 'appServlet' processing GET request for [/portfolio/create/myFirstTime]
Matching patterns for request [/portfolio/create/myFirstTime] are [/portfolio/create/{portfolioName}]
URI Template variables for request [/portfolio/create/myFirstTime] are {portfolioName=myFirstTime}
Mapping [/portfolio/create/myFirstTime] to HandlerExecutionChain with handler [com.inteltrader.rest.PortfolioServiceRest@ae3590e] and 2 interceptors
Last-Modified value for [/portfolio/create/myFirstTime] is: -1
Invoking request handler method: public org.springframework.http.ResponseEntity com.inteltrader.rest.PortfolioServiceRest.createPortfolio(java.lang.String,javax.servlet.http.HttpServletRequest)
begin
Obtaining JDBC connection
Obtained JDBC connection
initial autocommit status: true
disabling autocommit
Generated identifier: myFirstTime, using strategy: org.hibernate.id.Assigned
committing
Processing flush-time cascades
Dirty checking collections
Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
Listing entities:
com.inteltrader.entity.Portfolio{portfolioName=myFirstTime, investmentList=null}
insert into TRADER_DB.PORTFOLIO (PORTFOLIO_NAME) values (?)
committed JDBC Connection
re-enabling autocommit
Written [SUCCESS] as "text/html" using [org.springframework.http.converter.StringHttpMessageConverter@7ef018f5]
Null ModelAndView returned to DispatcherServlet with name 'appServlet': assuming HandlerAdapter completed request handling
Successfully completed request
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
DispatcherServlet with name 'appServlet' processing GET request for [/portfolio/addInvestment/myFirstTime/AMTEKAUTO]
Matching patterns for request [/portfolio/addInvestment/myFirstTime/AMTEKAUTO] are [/portfolio/addInvestment/{portfolioName}/{symbolName}]
URI Template variables for request [/portfolio/addInvestment/myFirstTime/AMTEKAUTO] are {portfolioName=myFirstTime, symbolName=AMTEKAUTO}
Mapping [/portfolio/addInvestment/myFirstTime/AMTEKAUTO] to HandlerExecutionChain with handler [com.inteltrader.rest.PortfolioServiceRest@ae3590e] and 2 interceptors
Last-Modified value for [/portfolio/addInvestment/myFirstTime/AMTEKAUTO] is: -1
Invoking request handler method: public org.springframework.http.ResponseEntity com.inteltrader.rest.PortfolioServiceRest.addInvestment(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
begin
Obtaining JDBC connection
Opening new JDBC connection
Created connection to: jdbc:mysql://localhost:3306/TRADER_DB, Isolation Level: 4
Obtained JDBC connection
initial autocommit status: true
disabling autocommit
Loading entity: [com.inteltrader.entity.Portfolio#myFirstTime]
select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Result set row: 0
Result row: null, EntityKey[com.inteltrader.entity.Portfolio#myFirstTime]
Result set contains (possibly empty) collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Resolving associations for [com.inteltrader.entity.Portfolio#myFirstTime]
Done materializing entity [com.inteltrader.entity.Portfolio#myFirstTime]
1 collections were found in result set for role: com.inteltrader.entity.Portfolio.investmentList
Collection fully initialized: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
1 collections initialized for role: com.inteltrader.entity.Portfolio.investmentList
Done entity load
committing
Processing flush-time cascades
Executing identity-insert immediately
insert into TRADER_DB.INVESTMENT (associatedPortfolio_PORTFOLIO_NAME, currentPrice, quantity, INVESTMENT_SYMBOL) values (?, ?, ?, ?)
Natively generated identity: 1
Dirty checking collections
Collection dirty: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Collection found: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime], was: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime] (initialized)
Collection found: [com.inteltrader.entity.Investment.transactionsList#1], was: [<unreferenced>] (initialized)
Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
Flushed: 1 (re)creations, 1 updates, 0 removals to 2 collections
Listing entities:
com.inteltrader.entity.Investment{investmentId=1, quantity=null, currentPrice=null, symbolName=AMTEKAUTO, associatedPortfolio=com.inteltrader.entity.Portfolio#myFirstTime, transactionsList=[]}
com.inteltrader.entity.Portfolio{portfolioName=myFirstTime, investmentList=[com.inteltrader.entity.Investment#1]}
Inserting collection: [com.inteltrader.entity.Investment.transactionsList#1]
Collection was empty
committed JDBC Connection
re-enabling autocommit
Written [SUCCESS] as "text/html" using [org.springframework.http.converter.StringHttpMessageConverter@7ef018f5]
Null ModelAndView returned to DispatcherServlet with name 'appServlet': assuming HandlerAdapter completed request handling
Successfully completed request
DispatcherServlet with name 'appServlet' processing GET request for [/portfolio/addInvestment/myFirstTime/CIPLA]
Matching patterns for request [/portfolio/addInvestment/myFirstTime/CIPLA] are [/portfolio/addInvestment/{portfolioName}/{symbolName}]
URI Template variables for request [/portfolio/addInvestment/myFirstTime/CIPLA] are {portfolioName=myFirstTime, symbolName=CIPLA}
Mapping [/portfolio/addInvestment/myFirstTime/CIPLA] to HandlerExecutionChain with handler [com.inteltrader.rest.PortfolioServiceRest@ae3590e] and 2 interceptors
Last-Modified value for [/portfolio/addInvestment/myFirstTime/CIPLA] is: -1
Invoking request handler method: public org.springframework.http.ResponseEntity com.inteltrader.rest.PortfolioServiceRest.addInvestment(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
begin
Obtaining JDBC connection
Opening new JDBC connection
Created connection to: jdbc:mysql://localhost:3306/TRADER_DB, Isolation Level: 4
Obtained JDBC connection
initial autocommit status: true
disabling autocommit
Loading entity: [com.inteltrader.entity.Portfolio#myFirstTime]
select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Result set row: 0
Result row: EntityKey[com.inteltrader.entity.Investment#1], EntityKey[com.inteltrader.entity.Portfolio#myFirstTime]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Resolving associations for [com.inteltrader.entity.Investment#1]
Done materializing entity [com.inteltrader.entity.Investment#1]
Resolving associations for [com.inteltrader.entity.Portfolio#myFirstTime]
Done materializing entity [com.inteltrader.entity.Portfolio#myFirstTime]
1 collections were found in result set for role: com.inteltrader.entity.Portfolio.investmentList
Collection fully initialized: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
1 collections initialized for role: com.inteltrader.entity.Portfolio.investmentList
Done entity load
Loading collection: [com.inteltrader.entity.Investment.transactionsList#1]
select transactio0_.INVESTMENT_ID as INVESTMENT1_2_0_, transactio0_.quantity as quantity3_0_, transactio0_.transactionId as transact3_3_0_, transactio0_.transactionPrice as transact4_3_0_ from TRADER_DB.INVESTMENT_TRANSACTION transactio0_ where transactio0_.INVESTMENT_ID=?
Result set contains (possibly empty) collection: [com.inteltrader.entity.Investment.transactionsList#1]
1 collections were found in result set for role: com.inteltrader.entity.Investment.transactionsList
Collection fully initialized: [com.inteltrader.entity.Investment.transactionsList#1]
1 collections initialized for role: com.inteltrader.entity.Investment.transactionsList
Done loading collection
committing
Processing flush-time cascades
Executing identity-insert immediately
insert into TRADER_DB.INVESTMENT (associatedPortfolio_PORTFOLIO_NAME, currentPrice, quantity, INVESTMENT_SYMBOL) values (?, ?, ?, ?)
Natively generated identity: 2
Dirty checking collections
Collection dirty: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Collection found: [com.inteltrader.entity.Investment.transactionsList#1], was: [com.inteltrader.entity.Investment.transactionsList#1] (initialized)
Collection found: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime], was: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime] (initialized)
Collection found: [com.inteltrader.entity.Investment.transactionsList#2], was: [<unreferenced>] (initialized)
Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
Flushed: 1 (re)creations, 1 updates, 0 removals to 3 collections
Listing entities:
com.inteltrader.entity.Investment{investmentId=2, quantity=null, currentPrice=null, symbolName=CIPLA, associatedPortfolio=com.inteltrader.entity.Portfolio#myFirstTime, transactionsList=[]}
com.inteltrader.entity.Investment{investmentId=1, quantity=null, currentPrice=null, symbolName=AMTEKAUTO, associatedPortfolio=com.inteltrader.entity.Portfolio#myFirstTime, transactionsList=[]}
com.inteltrader.entity.Portfolio{portfolioName=myFirstTime, investmentList=[com.inteltrader.entity.Investment#1, com.inteltrader.entity.Investment#2]}
Inserting collection: [com.inteltrader.entity.Investment.transactionsList#2]
Collection was empty
committed JDBC Connection
re-enabling autocommit
Written [SUCCESS] as "text/html" using [org.springframework.http.converter.StringHttpMessageConverter@7ef018f5]
Null ModelAndView returned to DispatcherServlet with name 'appServlet': assuming HandlerAdapter completed request handling
Successfully completed request
DispatcherServlet with name 'appServlet' processing GET request for [/portfolio/load/MyFirstTime]
Matching patterns for request [/portfolio/load/MyFirstTime] are [/portfolio/load/{portfolioName}]
URI Template variables for request [/portfolio/load/MyFirstTime] are {portfolioName=MyFirstTime}
Mapping [/portfolio/load/MyFirstTime] to HandlerExecutionChain with handler [com.inteltrader.rest.PortfolioServiceRest@ae3590e] and 2 interceptors
Last-Modified value for [/portfolio/load/MyFirstTime] is: -1
Invoking request handler method: public org.springframework.http.ResponseEntity com.inteltrader.rest.PortfolioServiceRest.loadInstrument(java.lang.String,javax.servlet.http.HttpServletRequest)
Loading entity: [com.inteltrader.entity.Portfolio#MyFirstTime]
Obtaining JDBC connection
Opening new JDBC connection
Created connection to: jdbc:mysql://localhost:3306/TRADER_DB, Isolation Level: 4
Obtained JDBC connection
select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Result set row: 0
Result row: EntityKey[com.inteltrader.entity.Investment#1], EntityKey[com.inteltrader.entity.Portfolio#MyFirstTime]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Result set row: 1
Result row: EntityKey[com.inteltrader.entity.Investment#2], EntityKey[com.inteltrader.entity.Portfolio#MyFirstTime]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Resolving associations for [com.inteltrader.entity.Investment#1]
Loading entity: [com.inteltrader.entity.Portfolio#myFirstTime]
select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Result set row: 0
Result row: EntityKey[com.inteltrader.entity.Investment#1], EntityKey[com.inteltrader.entity.Portfolio#myFirstTime]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Result set row: 1
Result row: EntityKey[com.inteltrader.entity.Investment#2], EntityKey[com.inteltrader.entity.Portfolio#myFirstTime]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Resolving associations for [com.inteltrader.entity.Portfolio#myFirstTime]
Done materializing entity [com.inteltrader.entity.Portfolio#myFirstTime]
No collections were found in result set for role: com.inteltrader.entity.Portfolio.investmentList
Done entity load
Done materializing entity [com.inteltrader.entity.Investment#1]
Resolving associations for [com.inteltrader.entity.Portfolio#MyFirstTime]
Done materializing entity [com.inteltrader.entity.Portfolio#MyFirstTime]
Resolving associations for [com.inteltrader.entity.Investment#2]
Done materializing entity [com.inteltrader.entity.Investment#2]
1 collections were found in result set for role: com.inteltrader.entity.Portfolio.investmentList
Collection fully initialized: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
1 collections initialized for role: com.inteltrader.entity.Portfolio.investmentList
Loading collection: [com.inteltrader.entity.Portfolio.investmentList#MyFirstTime]
select investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_1_, investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.associatedPortfolio_PORTFOLIO_NAME=?
Result set contains (possibly empty) collection: [com.inteltrader.entity.Portfolio.investmentList#MyFirstTime]
Result set row: 0
Result row: EntityKey[com.inteltrader.entity.Investment#1]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Result set row: 1
Result row: EntityKey[com.inteltrader.entity.Investment#2]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
1 collections were found in result set for role: com.inteltrader.entity.Portfolio.investmentList
Collection fully initialized: [com.inteltrader.entity.Portfolio.investmentList#MyFirstTime]
1 collections initialized for role: com.inteltrader.entity.Portfolio.investmentList
Done loading collection
Done entity load
Written [{"portfolioName":"MyFirstTime","investmentList":[]}] as "text/html" using [org.springframework.http.converter.StringHttpMessageConverter@7ef018f5]
Null ModelAndView returned to DispatcherServlet with name 'appServlet': assuming HandlerAdapter completed request handling
Successfully completed request
Initializing servlet 'appServlet'
Initializing new StandardServletEnvironment
Adding [servletConfigInitParams] PropertySource with lowest search precedence
Adding [servletContextInitParams] PropertySource with lowest search precedence
Adding [jndiProperties] PropertySource with lowest search precedence
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment]
FrameworkServlet 'appServlet': initialization started
Servlet with name 'appServlet' will try to create custom WebApplicationContext context of class 'org.springframework.web.context.support.XmlWebApplicationContext', using parent context [Root WebApplicationContext: startup date [Fri Apr 19 15:18:17 IST 2013]; root of context hierarchy]
Searching for key 'spring.profiles.active' in [servletConfigInitParams]
Searching for key 'spring.profiles.active' in [servletContextInitParams]
Searching for key 'spring.profiles.active' in [jndiProperties]
Looking up JNDI object with name [java:comp/env/spring.profiles.active]
Converted JNDI name [java:comp/env/spring.profiles.active] not found - trying original name [spring.profiles.active]. javax.naming.NameNotFoundException: Name [spring.profiles.active] is not bound in this Context. Unable to find [spring.profiles.active].
Looking up JNDI object with name [spring.profiles.active]
JNDI lookup for name [spring.profiles.active] threw NamingException with message: Name [spring.profiles.active] is not bound in this Context. Unable to find [spring.profiles.active].. Returning null.
Searching for key 'spring.profiles.active' in [systemProperties]
Searching for key 'spring.profiles.active' in [systemEnvironment]
Could not find key 'spring.profiles.active' in any property source. Returning [null]
Searching for key 'spring.profiles.default' in [servletConfigInitParams]
Searching for key 'spring.profiles.default' in [servletContextInitParams]
Searching for key 'spring.profiles.default' in [jndiProperties]
Looking up JNDI object with name [java:comp/env/spring.profiles.default]
Converted JNDI name [java:comp/env/spring.profiles.default] not found - trying original name [spring.profiles.default]. javax.naming.NameNotFoundException: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].
Looking up JNDI object with name [spring.profiles.default]
JNDI lookup for name [spring.profiles.default] threw NamingException with message: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].. Returning null.
Searching for key 'spring.profiles.default' in [systemProperties]
Searching for key 'spring.profiles.default' in [systemEnvironment]
Could not find key 'spring.profiles.default' in any property source. Returning [null]
Searching for key 'spring.profiles.default' in [servletConfigInitParams]
Searching for key 'spring.profiles.default' in [servletContextInitParams]
Searching for key 'spring.profiles.default' in [jndiProperties]
Looking up JNDI object with name [java:comp/env/spring.profiles.default]
Converted JNDI name [java:comp/env/spring.profiles.default] not found - trying original name [spring.profiles.default]. javax.naming.NameNotFoundException: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].
Looking up JNDI object with name [spring.profiles.default]
JNDI lookup for name [spring.profiles.default] threw NamingException with message: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].. Returning null.
Searching for key 'spring.profiles.default' in [systemProperties]
Searching for key 'spring.profiles.default' in [systemEnvironment]
Could not find key 'spring.profiles.default' in any property source. Returning [null]
Replacing [servletContextInitParams] PropertySource with [servletContextInitParams]
Replacing [servletConfigInitParams] PropertySource with [servletConfigInitParams]
Refreshing WebApplicationContext for namespace 'appServlet-servlet': startup date [Fri Apr 19 15:18:21 IST 2013]; parent: Root WebApplicationContext
Initializing new StandardEnvironment
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
Initializing new StandardEnvironment
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
Loading schema mappings from [META-INF/spring.schemas]
Loaded schema mappings: {http://www.springframework.org/schema/data/jpa/spring-jpa-1.2.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.2.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.1.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.1.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.5.xsd=org/springframework/data/repository/config/spring-repository-1.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.0.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.3.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.4.xsd=org/springframework/data/repository/config/spring-repository-1.4.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.3.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/data/repository/spring-repository.xsd=org/springframework/data/repository/config/spring-repository-1.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.0.xsd=org/springframework/data/repository/config/spring-repository-1.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.1.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.1.xsd
Found XML schema [http://www.springframework.org/schema/task/spring-task-3.0.xsd] in classpath: org/springframework/scheduling/config/spring-task-3.0.xsd
Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd
Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd
Found XML schema [http://www.springframework.org/schema/tx/spring-tx-3.1.xsd] in classpath: org/springframework/transaction/config/spring-tx-3.1.xsd
Loading bean definitions
Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/data/repository=org.springframework.data.repository.config.RepositoryNameSpaceHandler, http://www.springframework.org/schema/data/jpa=org.springframework.data.jpa.repository.config.JpaRepositoryNameSpaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
Neither XML 'id' nor 'name' specified - using generated bean name [org.springframework.web.servlet.view.InternalResourceViewResolver#0]
Neither XML 'id' nor 'name' specified - using generated bean name [org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver#4d19f40b]
Initializing new StandardEnvironment
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
Looking for matching resources in directory tree [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Resolved location pattern [classpath*:com/inteltrader/**/*.class] to resources [file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\Advice.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\FIFOList.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\InstrumentVo.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\Strategies.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\Strategy.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\StrategyMACD.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao\IInstrumentDao.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao\InstrumentDao.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao\IPortfolioDao.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao\PortfolioDao.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Instrument.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Investment.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Portfolio.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Price.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Transactions.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest\InstrumentServiceRest.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest\PortfolioServiceRest.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\AnalyserService.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\CronService.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\InstrumentService.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\InstrumentServiceImpl.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\PortfolioService.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\PortfolioServiceImpl.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util\DownloadZip.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util\ExtractZipFile.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util\ReadPriceCsv.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util\RestCodes.class]]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Instrument.class]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Investment.class]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Portfolio.class]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest\InstrumentServiceRest.class]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest\PortfolioServiceRest.class]
Loaded 21 bean definitions from location pattern [/WEB-INF/applicationContext.xml]
Bean factory for WebApplicationContext for namespace 'appServlet-servlet': org.springframework.beans.factory.support.DefaultListableBeanFactory@62e525b8: defining beans [org.springframework.context.annotation.internalAsyncAnnotationProcessor,org.springframework.context.annotation.internalScheduledAnnotationProcessor,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0,org.springframework.web.servlet.view.InternalResourceViewResolver#0,instrumentDao,portfolioDao,instrumentService,portfolioService,entityManagerFactory,transactionManager,instrument,investment,portfolio,instrumentServiceRest,portfolioServiceRest]; parent: org.springframework.beans.factory.support.DefaultListableBeanFactory@69cea63e
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@74dcf364]
Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@55ef662c]
Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.DelegatingThemeSource@581cfec7]
Creating shared instance of singleton bean 'entityManagerFactory'
Creating instance of bean 'entityManagerFactory'
Eagerly caching bean 'entityManagerFactory' to allow for resolving potential circular references
Creating instance of bean 'org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver#4d19f40b'
Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Creating instance of bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0' to allow for resolving potential circular references
Creating instance of bean '(inner bean)'
Creating shared instance of singleton bean 'transactionManager'
Creating instance of bean 'transactionManager'
Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
Returning eagerly cached instance of singleton bean 'entityManagerFactory' that is not fully initialized yet - a consequence of a circular reference
Ignoring currently created advisor 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0': Error creating bean with name 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0': Cannot create inner bean '(inner bean)' of type [org.springframework.transaction.interceptor.TransactionInterceptor] while setting bean property 'transactionInterceptor'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)': Cannot resolve reference to bean 'transactionManager' while setting bean property 'transactionManager'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'transactionManager' defined in ServletContext resource [/WEB-INF/applicationContext.xml]: Cannot resolve reference to bean 'entityManagerFactory' while setting bean property 'entityManagerFactory'; nested exception is org.springframework.beans.factory.BeanCurrentlyInCreationException: Error creating bean with name 'entityManagerFactory': FactoryBean which is currently in creation returned null from getObject
Finished creating instance of bean 'org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver#4d19f40b'
Invoking afterPropertiesSet() on bean with name 'entityManagerFactory'
Building JPA container EntityManagerFactory for persistence unit 'intelTrader'
Adding type registration boolean -> org.hibernate.type.BooleanType@43b31086
Adding type registration boolean -> org.hibernate.type.BooleanType@43b31086
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@43b31086
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5205f8e0
Adding type registration true_false -> org.hibernate.type.TrueFalseType@73b80c53
Adding type registration yes_no -> org.hibernate.type.YesNoType@1990c3f5
Adding type registration byte -> org.hibernate.type.ByteType@5cec9b6b
Adding type registration byte -> org.hibernate.type.ByteType@5cec9b6b
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5cec9b6b
Adding type registration character -> org.hibernate.type.CharacterType@5ff92b8e
Adding type registration char -> org.hibernate.type.CharacterType@5ff92b8e
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5ff92b8e
Adding type registration short -> org.hibernate.type.ShortType@157ce7bc
Adding type registration short -> org.hibernate.type.ShortType@157ce7bc
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@157ce7bc
Adding type registration integer -> org.hibernate.type.IntegerType@1ddeedb6
Adding type registration int -> org.hibernate.type.IntegerType@1ddeedb6
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1ddeedb6
Adding type registration long -> org.hibernate.type.LongType@7bedccdd
Adding type registration long -> org.hibernate.type.LongType@7bedccdd
Adding type registration java.lang.Long -> org.hibernate.type.LongType@7bedccdd
Adding type registration float -> org.hibernate.type.FloatType@bc9f839
Adding type registration float -> org.hibernate.type.FloatType@bc9f839
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@bc9f839
Adding type registration double -> org.hibernate.type.DoubleType@3408d38e
Adding type registration double -> org.hibernate.type.DoubleType@3408d38e
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3408d38e
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3c39a92
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3c39a92
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@272872a5
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@272872a5
Adding type registration string -> org.hibernate.type.StringType@4c19341e
Adding type registration java.lang.String -> org.hibernate.type.StringType@4c19341e
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7d94d0e7
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4363b696
Adding type registration url -> org.hibernate.type.UrlType@7280487
Adding type registration java.net.URL -> org.hibernate.type.UrlType@7280487
Adding type registration date -> org.hibernate.type.DateType@1173e5bf
Adding type registration java.sql.Date -> org.hibernate.type.DateType@1173e5bf
Adding type registration time -> org.hibernate.type.TimeType@2fa77e9a
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2fa77e9a
Adding type registration timestamp -> org.hibernate.type.TimestampType@21f24643
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@21f24643
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@21f24643
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@27f6f638
Adding type registration calendar -> org.hibernate.type.CalendarType@71dfe402
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@71dfe402
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@71dfe402
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@b100510
Adding type registration locale -> org.hibernate.type.LocaleType@25085ad
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@25085ad
Adding type registration currency -> org.hibernate.type.CurrencyType@3a55334a
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3a55334a
Adding type registration timezone -> org.hibernate.type.TimeZoneType@5f961d6b
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5f961d6b
Adding type registration class -> org.hibernate.type.ClassType@544f8c6
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@544f8c6
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5283edc
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5283edc
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@f5d2de6
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@69819bb7
Adding type registration binary -> org.hibernate.type.BinaryType@232a3c05
Adding type registration byte[] -> org.hibernate.type.BinaryType@232a3c05
Adding type registration [B -> org.hibernate.type.BinaryType@232a3c05
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2f3c95f8
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2f3c95f8
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2f3c95f8
Adding type registration image -> org.hibernate.type.ImageType@2e97d63b
Adding type registration characters -> org.hibernate.type.CharArrayType@5a14be8c
Adding type registration char[] -> org.hibernate.type.CharArrayType@5a14be8c
Adding type registration [C -> org.hibernate.type.CharArrayType@5a14be8c
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2dc61522
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2dc61522
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2dc61522
Adding type registration text -> org.hibernate.type.TextType@5f79b234
Adding type registration ntext -> org.hibernate.type.NTextType@4cf0e472
Adding type registration blob -> org.hibernate.type.BlobType@5305f860
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5305f860
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@24302c03
Adding type registration clob -> org.hibernate.type.ClobType@5c6ff75
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5c6ff75
Adding type registration nclob -> org.hibernate.type.NClobType@3b7d5d83
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3b7d5d83
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2546d67b
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5eb1f3f6
Adding type registration serializable -> org.hibernate.type.SerializableType@7a61c474
Adding type registration object -> org.hibernate.type.ObjectType@61d9faa6
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@61d9faa6
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@579ae802
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7af6083c
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2e96da35
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@31cfe578
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@47e242d4
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5791912a
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@15d18950
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6f8dee60
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Processing PersistenceUnitInfo [
	name: intelTrader
	persistence provider classname: org.hibernate.ejb.HibernatePersistence
	classloader: WebappClassLoader
  context: 
  delegate: false
  repositories:
    /WEB-INF/classes/
----------> Parent Classloader:
ClassRealm[plugin>org.apache.tomcat.maven:tomcat7-maven-plugin:2.0, parent: sun.misc.Launcher$AppClassLoader@1875303f]

	Temporary classloader: org.springframework.instrument.classloading.SimpleThrowawayClassLoader@4f1d19d7
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/vvarm1/IdeaProjects/intelTrader/src/main/webapp/WEB-INF/classes
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.inteltrader.entity.Instrument
		com.inteltrader.entity.Portfolio
		com.inteltrader.entity.Investment]
	Mapping files names []
	Properties [
		hibernate.connection.username: root
		hibernate.connection.password: root
		hibernate.dialect: org.hibernate.dialect.MySQLDialect
		hibernate.c3p0.min_size: 10
		hibernate.connection.url: jdbc:mysql://localhost:3306/TRADER_DB
		hibernate.show_sql: true
		hibernate.connection.driver_class: com.mysql.jdbc.Driver
		hibernate.hbm2ddl.auto: update]
Detect class: true; detect hbm: true
Detect class: true; detect hbm: true
Searching mapped entities in jar/par: file:/C:/Users/vvarm1/IdeaProjects/intelTrader/src/main/webapp/WEB-INF/classes
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.ejb.event.JpaIntegrator].
No JNDI name configured for binding Ejb3Configuration
Preparing to build session factory with filters : {}
Processing hbm.xml files
Process annotated classes
Binding entity from annotated class: com.inteltrader.entity.Instrument
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Instrument
Bind entity com.inteltrader.entity.Instrument on table INSTRUMENT
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=SYMBOL_NAME, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property symbolName with lazy=false
building SimpleValue for symbolName
Building property symbolName
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=priceList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=priceList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=priceList_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='priceList_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='SYMBOL_NAME', referencedColumn='', mappedBy=''}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Collection role: com.inteltrader.entity.Instrument.priceList
Building property priceList
Binding entity from annotated class: com.inteltrader.entity.Portfolio
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Portfolio
Bind entity com.inteltrader.entity.Portfolio on table PORTFOLIO
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=PORTFOLIO_NAME, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property portfolioName with lazy=false
building SimpleValue for portfolioName
Building property portfolioName
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='associatedPortfolio'}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=investmentList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=element, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=investmentList_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='investmentList_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='associatedPortfolio'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='associatedPortfolio'}
Collection role: com.inteltrader.entity.Portfolio.investmentList
Building property investmentList
Binding entity from annotated class: com.inteltrader.entity.Investment
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Investment
Bind entity com.inteltrader.entity.Investment on table INVESTMENT
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=INVESTMENT_ID, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property investmentId with lazy=false
building SimpleValue for investmentId
Building property investmentId
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=associatedPortfolio, insertable=true, updatable=true, unique=false}
Building property associatedPortfolio
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=currentPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property currentPrice with lazy=false
building SimpleValue for currentPrice
Building property currentPrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=quantity, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property quantity with lazy=false
building SimpleValue for quantity
Building property quantity
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=INVESTMENT_SYMBOL, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property symbolName with lazy=false
building SimpleValue for symbolName
Building property symbolName
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=transactionsList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=transactionsList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=transactionsList_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='transactionsList_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='INVESTMENT_ID', referencedColumn='', mappedBy=''}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Collection role: com.inteltrader.entity.Investment.transactionsList
Building property transactionsList
Setting SimpleValue typeName for symbolName
Setting SimpleValue typeName for portfolioName
Setting SimpleValue typeName for investmentId
Setting SimpleValue typeName for currentPrice
Setting SimpleValue typeName for quantity
Setting SimpleValue typeName for symbolName
Processing fk mappings (*ToOne and JoinedSubclass)
Processing extends queue
Processing extends queue
Processing collection mappings
Second pass for collection: com.inteltrader.entity.Investment.transactionsList
Binding a collection of element: com.inteltrader.entity.Investment.transactionsList
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT_TRANSACTION), mappingColumn=quantity, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property quantity with lazy=false
building SimpleValue for quantity
Setting SimpleValue typeName for quantity
Building property quantity
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT_TRANSACTION), mappingColumn=transactionId, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property transactionId with lazy=false
building SimpleValue for transactionId
Setting SimpleValue typeName for transactionId
Building property transactionId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT_TRANSACTION), mappingColumn=transactionPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property transactionPrice with lazy=false
building SimpleValue for transactionPrice
Setting SimpleValue typeName for transactionPrice
Building property transactionPrice
Mapped collection key: INVESTMENT_ID, element: quantity, transactionId, transactionPrice
Second pass for collection: com.inteltrader.entity.Instrument.priceList
Binding a collection of element: com.inteltrader.entity.Instrument.priceList
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=closePrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property closePrice with lazy=false
building SimpleValue for closePrice
Setting SimpleValue typeName for closePrice
Building property closePrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=highPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property highPrice with lazy=false
building SimpleValue for highPrice
Setting SimpleValue typeName for highPrice
Building property highPrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=lastClosePrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property lastClosePrice with lazy=false
building SimpleValue for lastClosePrice
Setting SimpleValue typeName for lastClosePrice
Building property lastClosePrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=lowPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property lowPrice with lazy=false
building SimpleValue for lowPrice
Setting SimpleValue typeName for lowPrice
Building property lowPrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=openPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property openPrice with lazy=false
building SimpleValue for openPrice
Setting SimpleValue typeName for openPrice
Building property openPrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=priceId, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property priceId with lazy=false
building SimpleValue for priceId
Setting SimpleValue typeName for priceId
Building property priceId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=timeStamp, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property timeStamp with lazy=false
building SimpleValue for timeStamp
Setting SimpleValue typeName for timeStamp
Building property timeStamp
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=totalTradedQuantity, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property totalTradedQuantity with lazy=false
building SimpleValue for totalTradedQuantity
Setting SimpleValue typeName for totalTradedQuantity
Building property totalTradedQuantity
Mapped collection key: SYMBOL_NAME, element: closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity
Second pass for collection: com.inteltrader.entity.Portfolio.investmentList
Binding a OneToMany: com.inteltrader.entity.Portfolio.investmentList through a foreign key
Mapping collection: com.inteltrader.entity.Portfolio.investmentList -> INVESTMENT
Retrieving property com.inteltrader.entity.Investment.associatedPortfolio
Mapped collection key: associatedPortfolio_PORTFOLIO_NAME, one-to-many: com.inteltrader.entity.Investment
Processing native query and ResultSetMapping mappings
Processing association property references
Creating tables' unique integer identifiers
Processing foreign key constraints
Resolving reference to class: com.inteltrader.entity.Instrument
Resolving reference to class: com.inteltrader.entity.Portfolio
Resolving reference to class: com.inteltrader.entity.Investment
HHH000022: c3p0 properties were encountered, but the org.hibernate.service.jdbc.connections.internal.C3P0ConnectionProvider provider class was not found on the classpath; these properties are going to be ignored.
HHH000402: Using Hibernate built-in connection pool (not for production use!)
HHH000115: Hibernate connection pool size: 20
HHH000006: Autocommit mode: true
HHH000401: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/TRADER_DB]
HHH000046: Connection properties: {user=root, password=root, autocommit=true, release_mode=auto}
Opening new JDBC connection
Created connection to: jdbc:mysql://localhost:3306/TRADER_DB, Isolation Level: 4
Database ->
       name : MySQL
    version : 5.6.10-log
      major : 5
      minor : 6
Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.9 ( Revision: ${svn.Revision} )
      major : 5
      minor : 1
JDBC version : 3.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: disabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
multi-tenancy strategy : NONE
Connection release mode: auto
HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
Maximum outer join fetch depth: 2
Default batch fetch size: 1
Generate SQL with comments: disabled
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
HHH000397: Using ASTQueryTranslatorFactory
Query language substitutions: {}
JPA-QL strict compliance: enabled
Second-level cache: enabled
Query cache: disabled
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
Optimize cache for minimal puts: disabled
Structured second-level cache entries: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Named query checking : enabled
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : : disabled
Building session factory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\vvarm1\IdeaProjects\intelTrader\target\tomcat, hibernate.connection.url=jdbc:mysql://localhost:3306/TRADER_DB, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.ejb.discard_pc_on_close=false, catalina.useNaming=true, hibernate.transaction.flush_before_completion=false, os.name=Windows 7, sun.boot.class.path=C:\Program Files\Java\jdk1.7.0_10\jre\lib\resources.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\rt.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\jce.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.7.0_10\jre\classes, java.util.logging.config.file=C:\Users\vvarm1\IdeaProjects\intelTrader\target\tomcat\conf\logging.properties, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.7.0_10-b18, hibernate.connection.autocommit=true, hibernate.c3p0.min_size=10, user.name=vvarm1, shared.loader=, guice.disable.misplaced.annotation.check=true, tomcat.util.buf.StringCache.byte.enabled=true, javax.persistence.validation.mode=AUTO, hibernate.connection.release_mode=auto, idea.launcher.bin.path=C:\Program Files (x86)\JetBrains\IntelliJ IDEA Community Edition 12.0.4\bin, user.language=en, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, sun.boot.library.path=C:\Program Files\Java\jdk1.7.0_10\jre\bin, classworlds.conf=C:\Program Files\Apache Software Foundation\apache-maven-3.0.5\bin\m2.conf, java.version=1.7.0_10, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, user.timezone=Asia/Calcutta, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.7.0_10\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, file.encoding.pkg=sun.io, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.tomcat.,org.apache.jasper., file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=51.0, user.country=US, java.home=C:\Program Files\Java\jdk1.7.0_10\jre, java.vm.info=mixed mode, os.version=6.1, hibernate.transaction.factory_class=org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory, hibernate.query.jpaql_strict_compliance=true, path.separator=;, java.vm.version=23.6-b04, hibernate.connection.password=root, user.variant=, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.scan.DefaultJarScanner.jarsToSkip=bootstrap.jar,commons-daemon.jar,tomcat-juli.jar,annotations-api.jar,el-api.jar,jsp-api.jar,servlet-api.jar,catalina.jar,catalina-ant.jar,catalina-ha.jar,catalina-tribes.jar,jasper.jar,jasper-el.jar,ecj-*.jar,tomcat-api.jar,tomcat-util.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-jni.jar,tomcat-spdy.jar,tomcat-i18n-en.jar,tomcat-i18n-es.jar,tomcat-i18n-fr.jar,tomcat-i18n-ja.jar,tomcat-juli-adapters.jar,catalina-jmx-remote.jar,catalina-ws.jar,tomcat-jdbc.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,jstl.jar,geronimo-spec-jaxrpc*.jar,wsdl4j*.jar,ant.jar,ant-junit*.jar,aspectj*.jar,jmx.jar,h2*.jar,hibernate*.jar,httpclient*.jar,jmx-tools.jar,jta*.jar,log4j*.jar,mail*.jar,slf4j*.jar,xercesImpl.jar,xmlParserAPIs.jar,xml-apis.jar,access-bridge-64.jar,dnsns.jar,jaccess.jar,ldapsec.jar,localedata.jar,sunjce_provider.jar,sunmscapi.jar,sunpkcs11.jar,jhall.jar,tools.jar,sunec.jar,zipfs.jar,gnome-java-bridge.jar,pulse-java.jar,apple_provider.jar,AppleScriptEngine.jar,CoreAudio.jar,dns_sd.jar,j3daudio.jar,j3dcore.jar,j3dutils.jar,jai_core.jar,jai_codec.jar,mlibwrapper_jai.jar,MRJToolkit.jar,vecmath.jar,junit.jar,junit-*.jar,ant-launcher.jar, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.tomcat.,org.apache.jasper., user.script=, java.naming.factory.url.pkgs=org.apache.naming, user.home=C:\Users\vvarm1, org.apache.catalina.startup.ContextConfig.jarsToSkip=, java.specification.vendor=Oracle Corporation, hibernate.hbm2ddl.auto=update, java.library.path=C:\Program Files\Java\jdk1.7.0_10\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\JetBrains\IntelliJ IDEA Community Edition 12.0.4\bin\..\.\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\ThinkPad\Bluetooth Software\;C:\Program Files\ThinkPad\Bluetooth Software\syswow64;c:\Program Files\Intel\WiFi\bin\;c:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files (x86)\Git\cmd;C:\Users\vvarm1\Documents\play-2.0.3;C:\Program Files\Java\jdk1.7.0_10\bin;C:\Program Files\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\QuickTime\QTSystem\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Java\jre6\bin;C:\Program Files\Apache Software Foundation\apache-maven-3.0.5\bin;c:\program files (x86)\jetbrains\intellij idea community edition 12.0.4\jre\jre\bin;., java.vendor.url=http://java.oracle.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, org.apache.catalina.startup.TldConfig.jarsToSkip=, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, common.loader=${catalina.base}/lib,${catalina.base}/lib/*.jar,${catalina.home}/lib,${catalina.home}/lib/*.jar, maven.home=C:\Program Files\Apache Software Foundation\apache-maven-3.0.5, java.runtime.name=Java(TM) SE Runtime Environment, java.class.path=C:\Program Files\Apache Software Foundation\apache-maven-3.0.5\boot\plexus-classworlds-2.4.jar;C:\Program Files (x86)\JetBrains\IntelliJ IDEA Community Edition 12.0.4\lib\idea_rt.jar, sun.java.command=com.intellij.rt.execution.application.AppMain org.codehaus.classworlds.Launcher --no-plugin-registry --fail-fast --strict-checksums --update-snapshots org.apache.tomcat.maven:tomcat7-maven-plugin:2.0:run, hibernate.bytecode.use_reflection_optimizer=false, idea.launcher.port=7532, java.vm.specification.name=Java Virtual Machine Specification, catalina.home=C:\Users\vvarm1\IdeaProjects\intelTrader\target\tomcat, java.vm.specification.version=1.7, sun.os.patch.level=Service Pack 1, sun.cpu.endian=little, java.io.tmpdir=C:\Users\vvarm1\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, server.loader=, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, java.ext.dirs=C:\Program Files\Java\jdk1.7.0_10\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=C:\Users\vvarm1\IdeaProjects\intelTrader, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding=UTF-8, hibernate.use_identifier_rollback=false, java.specification.version=1.7, hibernate.show_sql=true}
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Static SQL for entity: com.inteltrader.entity.Investment
 Version select: select INVESTMENT_ID from TRADER_DB.INVESTMENT where INVESTMENT_ID =?
 Snapshot select: select investment_.INVESTMENT_ID, investment_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_, investment_.currentPrice as currentP2_2_, investment_.quantity as quantity2_, investment_.INVESTMENT_SYMBOL as INVESTMENT4_2_ from TRADER_DB.INVESTMENT investment_ where investment_.INVESTMENT_ID=?
 Insert 0: insert into TRADER_DB.INVESTMENT (associatedPortfolio_PORTFOLIO_NAME, currentPrice, quantity, INVESTMENT_SYMBOL, INVESTMENT_ID) values (?, ?, ?, ?, ?)
 Update 0: update TRADER_DB.INVESTMENT set associatedPortfolio_PORTFOLIO_NAME=?, currentPrice=?, quantity=?, INVESTMENT_SYMBOL=? where INVESTMENT_ID=?
 Delete 0: delete from TRADER_DB.INVESTMENT where INVESTMENT_ID=?
 Identity insert: insert into TRADER_DB.INVESTMENT (associatedPortfolio_PORTFOLIO_NAME, currentPrice, quantity, INVESTMENT_SYMBOL) values (?, ?, ?, ?)
Static SQL for entity: com.inteltrader.entity.Instrument
 Version select: select SYMBOL_NAME from TRADER_DB.INSTRUMENT where SYMBOL_NAME =?
 Snapshot select: select instrument_.SYMBOL_NAME from TRADER_DB.INSTRUMENT instrument_ where instrument_.SYMBOL_NAME=?
 Insert 0: insert into TRADER_DB.INSTRUMENT (SYMBOL_NAME) values (?)
 Update 0: null
 Delete 0: delete from TRADER_DB.INSTRUMENT where SYMBOL_NAME=?
Static SQL for entity: com.inteltrader.entity.Portfolio
 Version select: select PORTFOLIO_NAME from TRADER_DB.PORTFOLIO where PORTFOLIO_NAME =?
 Snapshot select: select portfolio_.PORTFOLIO_NAME from TRADER_DB.PORTFOLIO portfolio_ where portfolio_.PORTFOLIO_NAME=?
 Insert 0: insert into TRADER_DB.PORTFOLIO (PORTFOLIO_NAME) values (?)
 Update 0: null
 Delete 0: delete from TRADER_DB.PORTFOLIO where PORTFOLIO_NAME=?
Static SQL for collection: com.inteltrader.entity.Instrument.priceList
 Row insert: insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
 Row update: update TRADER_DB.INSTRUMENT_PRICE set closePrice=?, highPrice=?, lastClosePrice=?, lowPrice=?, openPrice=?, priceId=?, timeStamp=?, totalTradedQuantity=? where SYMBOL_NAME=? and priceId=? and totalTradedQuantity=?
 Row delete: delete from TRADER_DB.INSTRUMENT_PRICE where SYMBOL_NAME=? and priceId=? and totalTradedQuantity=?
 One-shot delete: delete from TRADER_DB.INSTRUMENT_PRICE where SYMBOL_NAME=?
Static SQL for collection: com.inteltrader.entity.Investment.transactionsList
 Row insert: insert into TRADER_DB.INVESTMENT_TRANSACTION (INVESTMENT_ID, quantity, transactionId, transactionPrice) values (?, ?, ?, ?)
 Row update: update TRADER_DB.INVESTMENT_TRANSACTION set quantity=?, transactionId=?, transactionPrice=? where INVESTMENT_ID=? and quantity=? and transactionId=? and transactionPrice=?
 Row delete: delete from TRADER_DB.INVESTMENT_TRANSACTION where INVESTMENT_ID=? and quantity=? and transactionId=? and transactionPrice=?
 One-shot delete: delete from TRADER_DB.INVESTMENT_TRANSACTION where INVESTMENT_ID=?
Static SQL for collection: com.inteltrader.entity.Portfolio.investmentList
 Row insert: update TRADER_DB.INVESTMENT set associatedPortfolio_PORTFOLIO_NAME=? where INVESTMENT_ID=?
 Row delete: update TRADER_DB.INVESTMENT set associatedPortfolio_PORTFOLIO_NAME=null where associatedPortfolio_PORTFOLIO_NAME=? and INVESTMENT_ID=?
 One-shot delete: update TRADER_DB.INVESTMENT set associatedPortfolio_PORTFOLIO_NAME=null where associatedPortfolio_PORTFOLIO_NAME=?
Static select for entity com.inteltrader.entity.Instrument [NONE]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for entity com.inteltrader.entity.Instrument [READ]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for entity com.inteltrader.entity.Instrument [UPGRADE]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [UPGRADE_NOWAIT]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [FORCE]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [PESSIMISTIC_READ]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? lock in share mode
Static select for entity com.inteltrader.entity.Instrument [PESSIMISTIC_WRITE]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [PESSIMISTIC_FORCE_INCREMENT]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [OPTIMISTIC]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for entity com.inteltrader.entity.Instrument [OPTIMISTIC_FORCE_INCREMENT]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for action ACTION_MERGE on entity com.inteltrader.entity.Instrument: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for action ACTION_REFRESH on entity com.inteltrader.entity.Instrument: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for entity com.inteltrader.entity.Investment [NONE]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_1_, investment0_.currentPrice as currentP2_2_1_, investment0_.quantity as quantity2_1_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_1_, portfolio1_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.INVESTMENT investment0_ left outer join TRADER_DB.PORTFOLIO portfolio1_ on investment0_.associatedPortfolio_PORTFOLIO_NAME=portfolio1_.PORTFOLIO_NAME where investment0_.INVESTMENT_ID=?
Static select for entity com.inteltrader.entity.Investment [READ]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_1_, investment0_.currentPrice as currentP2_2_1_, investment0_.quantity as quantity2_1_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_1_, portfolio1_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.INVESTMENT investment0_ left outer join TRADER_DB.PORTFOLIO portfolio1_ on investment0_.associatedPortfolio_PORTFOLIO_NAME=portfolio1_.PORTFOLIO_NAME where investment0_.INVESTMENT_ID=?
Static select for entity com.inteltrader.entity.Investment [UPGRADE]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [UPGRADE_NOWAIT]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [FORCE]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [PESSIMISTIC_READ]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? lock in share mode
Static select for entity com.inteltrader.entity.Investment [PESSIMISTIC_WRITE]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [PESSIMISTIC_FORCE_INCREMENT]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [OPTIMISTIC]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=?
Static select for entity com.inteltrader.entity.Investment [OPTIMISTIC_FORCE_INCREMENT]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=?
Static select for action ACTION_MERGE on entity com.inteltrader.entity.Investment: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=?
Static select for action ACTION_REFRESH on entity com.inteltrader.entity.Investment: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=?
Static select for entity com.inteltrader.entity.Portfolio [NONE]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=?
Static select for entity com.inteltrader.entity.Portfolio [READ]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=?
Static select for entity com.inteltrader.entity.Portfolio [UPGRADE]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [UPGRADE_NOWAIT]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [FORCE]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [PESSIMISTIC_READ]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? lock in share mode
Static select for entity com.inteltrader.entity.Portfolio [PESSIMISTIC_WRITE]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [PESSIMISTIC_FORCE_INCREMENT]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [OPTIMISTIC]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=?
Static select for entity com.inteltrader.entity.Portfolio [OPTIMISTIC_FORCE_INCREMENT]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=?
Static select for action ACTION_MERGE on entity com.inteltrader.entity.Portfolio: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=?
Static select for action ACTION_REFRESH on entity com.inteltrader.entity.Portfolio: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=?
Static select for collection com.inteltrader.entity.Instrument.priceList: select pricelist0_.SYMBOL_NAME as SYMBOL1_0_0_, pricelist0_.closePrice as closePrice1_0_, pricelist0_.highPrice as highPrice1_0_, pricelist0_.lastClosePrice as lastClos4_1_0_, pricelist0_.lowPrice as lowPrice1_0_, pricelist0_.openPrice as openPrice1_0_, pricelist0_.priceId as priceId1_0_, pricelist0_.timeStamp as timeStamp1_0_, pricelist0_.totalTradedQuantity as totalTra9_1_0_ from TRADER_DB.INSTRUMENT_PRICE pricelist0_ where pricelist0_.SYMBOL_NAME=?
Static select for one-to-many com.inteltrader.entity.Portfolio.investmentList: select investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_1_, investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.associatedPortfolio_PORTFOLIO_NAME=?
Static select for collection com.inteltrader.entity.Investment.transactionsList: select transactio0_.INVESTMENT_ID as INVESTMENT1_2_0_, transactio0_.quantity as quantity3_0_, transactio0_.transactionId as transact3_3_0_, transactio0_.transactionPrice as transact4_3_0_ from TRADER_DB.INVESTMENT_TRANSACTION transactio0_ where transactio0_.INVESTMENT_ID=?
Registering SessionFactory: 70de57c7-e353-4f7d-9a46-1bc87e1b7629 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Instantiated session factory
HHH000228: Running hbm2ddl schema update
HHH000102: Fetching database metadata
HHH000396: Updating schema
Processing hbm.xml files
Process annotated classes
Processing fk mappings (*ToOne and JoinedSubclass)
Processing extends queue
Processing extends queue
Processing collection mappings
Processing native query and ResultSetMapping mappings
Processing association property references
Creating tables' unique integer identifiers
Processing foreign key constraints
Resolving reference to class: com.inteltrader.entity.Instrument
Resolving reference to class: com.inteltrader.entity.Portfolio
Resolving reference to class: com.inteltrader.entity.Investment
HHH000261: Table found: TRADER_DB.instrument
HHH000037: Columns: [symbol_name]
HHH000108: Foreign keys: []
HHH000126: Indexes: [primary]
HHH000261: Table found: TRADER_DB.instrument_price
HHH000037: Columns: [totaltradedquantity, timestamp, priceid, lastcloseprice, highprice, symbol_name, openprice, closeprice, lowprice]
HHH000108: Foreign keys: [fk3189a2d153ed548d]
HHH000126: Indexes: [fk3189a2d153ed548d]
HHH000261: Table found: TRADER_DB.investment
HHH000037: Columns: [investment_id, associatedportfolio_portfolio_name, currentprice, quantity, investment_symbol]
HHH000108: Foreign keys: [fk8fe41ed3c804d4f3]
HHH000126: Indexes: [fk8fe41ed3c804d4f3, primary]
HHH000261: Table found: TRADER_DB.investment_transaction
HHH000037: Columns: [transactionprice, investment_id, transactionid, quantity]
HHH000108: Foreign keys: [fka5863f52914590ae]
HHH000126: Indexes: [fka5863f52914590ae]
HHH000261: Table found: TRADER_DB.portfolio
HHH000037: Columns: [portfolio_name]
HHH000108: Foreign keys: []
HHH000126: Indexes: [primary]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
HHH000232: Schema update complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Statistics initialized [enabled=false]
Registering EntityManagerFactory: intelTrader 
HHH000436: Entity manager factory name (intelTrader) is already registered.  If entity manager will be clustered or passivated, specify a unique value for property 'hibernate.ejb.entitymanager_factory_name'
Finished creating instance of bean 'entityManagerFactory'
Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@62e525b8: defining beans [org.springframework.context.annotation.internalAsyncAnnotationProcessor,org.springframework.context.annotation.internalScheduledAnnotationProcessor,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0,org.springframework.web.servlet.view.InternalResourceViewResolver#0,instrumentDao,portfolioDao,instrumentService,portfolioService,entityManagerFactory,transactionManager,instrument,investment,portfolio,instrumentServiceRest,portfolioServiceRest,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor]; parent: org.springframework.beans.factory.support.DefaultListableBeanFactory@69cea63e
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Creating instance of bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0' to allow for resolving potential circular references
Creating instance of bean '(inner bean)'
Creating shared instance of singleton bean 'transactionManager'
Creating instance of bean 'transactionManager'
Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
Returning cached instance of singleton bean 'entityManagerFactory'
Invoking afterPropertiesSet() on bean with name 'transactionManager'
Finished creating instance of bean 'transactionManager'
Creating instance of bean '(inner bean)'
Finished creating instance of bean '(inner bean)'
Invoking afterPropertiesSet() on bean with name '(inner bean)'
Finished creating instance of bean '(inner bean)'
Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Creating shared instance of singleton bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Creating instance of bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Eagerly caching bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Creating shared instance of singleton bean 'instrumentDao'
Creating instance of bean 'instrumentDao'
Eagerly caching bean 'instrumentDao' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'instrumentDao'
Creating shared instance of singleton bean 'portfolioDao'
Creating instance of bean 'portfolioDao'
Eagerly caching bean 'portfolioDao' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'portfolioDao'
Creating shared instance of singleton bean 'instrumentService'
Creating instance of bean 'instrumentService'
Registered injected element on class [com.inteltrader.service.InstrumentServiceImpl]: PersistenceElement for javax.persistence.EntityManagerFactory com.inteltrader.service.InstrumentServiceImpl.entityManagerFactory
Registered injected element on class [com.inteltrader.service.InstrumentServiceImpl]: AutowiredFieldElement for private com.inteltrader.dao.IInstrumentDao com.inteltrader.service.InstrumentServiceImpl.instrumentDao
Registered injected element on class [com.inteltrader.service.InstrumentServiceImpl]: AutowiredFieldElement for private com.inteltrader.service.PortfolioService com.inteltrader.service.InstrumentServiceImpl.portfolioService
Eagerly caching bean 'instrumentService' to allow for resolving potential circular references
Processing injected method of bean 'instrumentService': PersistenceElement for javax.persistence.EntityManagerFactory com.inteltrader.service.InstrumentServiceImpl.entityManagerFactory
Returning cached instance of singleton bean 'entityManagerFactory'
Processing injected method of bean 'instrumentService': AutowiredFieldElement for private com.inteltrader.dao.IInstrumentDao com.inteltrader.service.InstrumentServiceImpl.instrumentDao
Returning cached instance of singleton bean 'instrumentDao'
Autowiring by type from bean name 'instrumentService' to bean named 'instrumentDao'
Processing injected method of bean 'instrumentService': AutowiredFieldElement for private com.inteltrader.service.PortfolioService com.inteltrader.service.InstrumentServiceImpl.portfolioService
Creating shared instance of singleton bean 'portfolioService'
Creating instance of bean 'portfolioService'
Registered injected element on class [com.inteltrader.service.PortfolioServiceImpl]: PersistenceElement for private javax.persistence.EntityManagerFactory com.inteltrader.service.PortfolioServiceImpl.entityManagerFactory
Registered injected element on class [com.inteltrader.service.PortfolioServiceImpl]: AutowiredFieldElement for private com.inteltrader.dao.IPortfolioDao com.inteltrader.service.PortfolioServiceImpl.portfolioDao
Eagerly caching bean 'portfolioService' to allow for resolving potential circular references
Processing injected method of bean 'portfolioService': PersistenceElement for private javax.persistence.EntityManagerFactory com.inteltrader.service.PortfolioServiceImpl.entityManagerFactory
Returning cached instance of singleton bean 'entityManagerFactory'
Processing injected method of bean 'portfolioService': AutowiredFieldElement for private com.inteltrader.dao.IPortfolioDao com.inteltrader.service.PortfolioServiceImpl.portfolioDao
Returning cached instance of singleton bean 'portfolioDao'
Autowiring by type from bean name 'portfolioService' to bean named 'portfolioDao'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'portfolioService'
Autowiring by type from bean name 'instrumentService' to bean named 'portfolioService'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'instrumentService'
Returning cached instance of singleton bean 'portfolioService'
Returning cached instance of singleton bean 'entityManagerFactory'
Returning cached instance of singleton bean 'transactionManager'
Creating shared instance of singleton bean 'instrument'
Creating instance of bean 'instrument'
Eagerly caching bean 'instrument' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'instrument'
Creating shared instance of singleton bean 'investment'
Creating instance of bean 'investment'
Eagerly caching bean 'investment' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'investment'
Creating shared instance of singleton bean 'portfolio'
Creating instance of bean 'portfolio'
Eagerly caching bean 'portfolio' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'portfolio'
Creating shared instance of singleton bean 'instrumentServiceRest'
Creating instance of bean 'instrumentServiceRest'
Registered injected element on class [com.inteltrader.rest.InstrumentServiceRest]: AutowiredFieldElement for private com.inteltrader.service.InstrumentService com.inteltrader.rest.InstrumentServiceRest.instrumentService
Eagerly caching bean 'instrumentServiceRest' to allow for resolving potential circular references
Processing injected method of bean 'instrumentServiceRest': AutowiredFieldElement for private com.inteltrader.service.InstrumentService com.inteltrader.rest.InstrumentServiceRest.instrumentService
Returning cached instance of singleton bean 'instrumentService'
Autowiring by type from bean name 'instrumentServiceRest' to bean named 'instrumentService'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'instrumentServiceRest'
Creating shared instance of singleton bean 'portfolioServiceRest'
Creating instance of bean 'portfolioServiceRest'
Registered injected element on class [com.inteltrader.rest.PortfolioServiceRest]: AutowiredFieldElement for private com.inteltrader.service.PortfolioService com.inteltrader.rest.PortfolioServiceRest.portfolioService
Eagerly caching bean 'portfolioServiceRest' to allow for resolving potential circular references
Processing injected method of bean 'portfolioServiceRest': AutowiredFieldElement for private com.inteltrader.service.PortfolioService com.inteltrader.rest.PortfolioServiceRest.portfolioService
Returning cached instance of singleton bean 'portfolioService'
Autowiring by type from bean name 'portfolioServiceRest' to bean named 'portfolioService'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'portfolioServiceRest'
Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@321705c3]
Returning cached instance of singleton bean 'lifecycleProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Unable to locate MultipartResolver with name 'multipartResolver': no multipart request handling provided
Creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Unable to locate LocaleResolver with name 'localeResolver': using default [org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver@31771aa1]
Creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Unable to locate ThemeResolver with name 'themeResolver': using default [org.springframework.web.servlet.theme.FixedThemeResolver@26e726f5]
Creating instance of bean 'org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping'
Looking for URL mappings in application context: WebApplicationContext for namespace 'appServlet-servlet': startup date [Fri Apr 19 15:18:21 IST 2013]; parent: Root WebApplicationContext
Rejected bean name 'org.springframework.context.annotation.internalAsyncAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalScheduledAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalRequiredAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalCommonAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.aop.config.internalAutoProxyCreator': no URL paths identified
Rejected bean name 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0': no URL paths identified
Rejected bean name 'org.springframework.web.servlet.view.InternalResourceViewResolver#0': no URL paths identified
Rejected bean name 'instrumentDao': no URL paths identified
Rejected bean name 'portfolioDao': no URL paths identified
Rejected bean name 'instrumentService': no URL paths identified
Rejected bean name 'portfolioService': no URL paths identified
Rejected bean name 'entityManagerFactory': no URL paths identified
Rejected bean name 'transactionManager': no URL paths identified
Rejected bean name 'instrument': no URL paths identified
Rejected bean name 'investment': no URL paths identified
Rejected bean name 'portfolio': no URL paths identified
Rejected bean name 'instrumentServiceRest': no URL paths identified
Rejected bean name 'portfolioServiceRest': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor': no URL paths identified
Rejected bean name 'environment': no URL paths identified
Rejected bean name 'systemProperties': no URL paths identified
Rejected bean name 'systemEnvironment': no URL paths identified
Rejected bean name 'servletConfig': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry': no URL paths identified
Rejected bean name 'messageSource': no URL paths identified
Rejected bean name 'applicationEventMulticaster': no URL paths identified
Rejected bean name 'lifecycleProcessor': no URL paths identified
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping'
Creating instance of bean 'org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping'
Looking for URL mappings in application context: WebApplicationContext for namespace 'appServlet-servlet': startup date [Fri Apr 19 15:18:21 IST 2013]; parent: Root WebApplicationContext
Rejected bean name 'org.springframework.context.annotation.internalAsyncAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalScheduledAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalRequiredAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalCommonAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.aop.config.internalAutoProxyCreator': no URL paths identified
Rejected bean name 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0': no URL paths identified
Rejected bean name 'org.springframework.web.servlet.view.InternalResourceViewResolver#0': no URL paths identified
Rejected bean name 'instrumentDao': no URL paths identified
Rejected bean name 'portfolioDao': no URL paths identified
Rejected bean name 'instrumentService': no URL paths identified
Rejected bean name 'portfolioService': no URL paths identified
Rejected bean name 'entityManagerFactory': no URL paths identified
Rejected bean name 'transactionManager': no URL paths identified
Rejected bean name 'instrument': no URL paths identified
Rejected bean name 'investment': no URL paths identified
Rejected bean name 'portfolio': no URL paths identified
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/create/{symbol}] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/create/{symbol}.*] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/create/{symbol}/] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/update/{portfolioName}] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/update/{portfolioName}.*] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/update/{portfolioName}/] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/load/{symbol}] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/load/{symbol}.*] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/load/{symbol}/] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/create/{portfolioName}] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/create/{portfolioName}.*] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/create/{portfolioName}/] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/load/{portfolioName}] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/load/{portfolioName}.*] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/load/{portfolioName}/] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/addInvestment/{portfolioName}/{symbolName}] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/addInvestment/{portfolioName}/{symbolName}.*] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/addInvestment/{portfolioName}/{symbolName}/] onto handler 'portfolioServiceRest'
Rejected bean name 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor': no URL paths identified
Rejected bean name 'environment': no URL paths identified
Rejected bean name 'systemProperties': no URL paths identified
Rejected bean name 'systemEnvironment': no URL paths identified
Rejected bean name 'servletConfig': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry': no URL paths identified
Rejected bean name 'messageSource': no URL paths identified
Rejected bean name 'applicationEventMulticaster': no URL paths identified
Rejected bean name 'lifecycleProcessor': no URL paths identified
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping'
No HandlerMappings found in servlet 'appServlet': using default
Creating instance of bean 'org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter'
Creating instance of bean 'org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter'
Creating instance of bean 'org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter'
No HandlerAdapters found in servlet 'appServlet': using default
Creating instance of bean 'org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerExceptionResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerExceptionResolver'
Creating instance of bean 'org.springframework.web.servlet.mvc.annotation.ResponseStatusExceptionResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.annotation.ResponseStatusExceptionResolver'
Creating instance of bean 'org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver'
No HandlerExceptionResolvers found in servlet 'appServlet': using default
Creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Unable to locate RequestToViewNameTranslator with name 'viewNameTranslator': using default [org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@284fc921]
Returning cached instance of singleton bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Returning cached instance of singleton bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Unable to locate FlashMapManager with name 'flashMapManager': using default [org.springframework.web.servlet.support.SessionFlashMapManager@7f12767]
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Searching for key 'spring.liveBeansView.mbeanDomain' in [servletConfigInitParams]
Searching for key 'spring.liveBeansView.mbeanDomain' in [servletContextInitParams]
Searching for key 'spring.liveBeansView.mbeanDomain' in [jndiProperties]
Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain]
Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException: Name [spring.liveBeansView.mbeanDomain] is not bound in this Context. Unable to find [spring.liveBeansView.mbeanDomain].
Looking up JNDI object with name [spring.liveBeansView.mbeanDomain]
JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: Name [spring.liveBeansView.mbeanDomain] is not bound in this Context. Unable to find [spring.liveBeansView.mbeanDomain].. Returning null.
Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
Published WebApplicationContext of servlet 'appServlet' as ServletContext attribute with name [org.springframework.web.servlet.FrameworkServlet.CONTEXT.appServlet]
FrameworkServlet 'appServlet': initialization completed in 553 ms
Servlet 'appServlet' configured successfully
DispatcherServlet with name 'appServlet' processing GET request for [/portfolio/load/MyFirstTime]
Matching patterns for request [/portfolio/load/MyFirstTime] are [/portfolio/load/{portfolioName}]
URI Template variables for request [/portfolio/load/MyFirstTime] are {portfolioName=MyFirstTime}
Mapping [/portfolio/load/MyFirstTime] to HandlerExecutionChain with handler [com.inteltrader.rest.PortfolioServiceRest@3d404c56] and 2 interceptors
Last-Modified value for [/portfolio/load/MyFirstTime] is: -1
Invoking request handler method: public org.springframework.http.ResponseEntity com.inteltrader.rest.PortfolioServiceRest.loadInstrument(java.lang.String,javax.servlet.http.HttpServletRequest)
Loading entity: [com.inteltrader.entity.Portfolio#MyFirstTime]
Obtaining JDBC connection
Obtained JDBC connection
select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=?
Result set row: 0
Result row: EntityKey[com.inteltrader.entity.Portfolio#MyFirstTime]
Resolving associations for [com.inteltrader.entity.Portfolio#MyFirstTime]
Done materializing entity [com.inteltrader.entity.Portfolio#MyFirstTime]
Done entity load
Loading collection: [com.inteltrader.entity.Portfolio.investmentList#MyFirstTime]
select investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_1_, investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.associatedPortfolio_PORTFOLIO_NAME=?
Result set contains (possibly empty) collection: [com.inteltrader.entity.Portfolio.investmentList#MyFirstTime]
Result set row: 0
Result row: EntityKey[com.inteltrader.entity.Investment#1]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Result set row: 1
Result row: EntityKey[com.inteltrader.entity.Investment#2]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Resolving associations for [com.inteltrader.entity.Investment#1]
Loading entity: [com.inteltrader.entity.Portfolio#myFirstTime]
select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=?
Result set row: 0
Result row: EntityKey[com.inteltrader.entity.Portfolio#myFirstTime]
Resolving associations for [com.inteltrader.entity.Portfolio#myFirstTime]
Done materializing entity [com.inteltrader.entity.Portfolio#myFirstTime]
Done entity load
Done materializing entity [com.inteltrader.entity.Investment#1]
Resolving associations for [com.inteltrader.entity.Investment#2]
Done materializing entity [com.inteltrader.entity.Investment#2]
2 collections were found in result set for role: com.inteltrader.entity.Portfolio.investmentList
Collection fully initialized: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Collection fully initialized: [com.inteltrader.entity.Portfolio.investmentList#MyFirstTime]
2 collections initialized for role: com.inteltrader.entity.Portfolio.investmentList
Done loading collection
Written [{"portfolioName":"MyFirstTime","investmentList":[]}] as "text/html" using [org.springframework.http.converter.StringHttpMessageConverter@f1939b8]
Null ModelAndView returned to DispatcherServlet with name 'appServlet': assuming HandlerAdapter completed request handling
Successfully completed request
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Initializing servlet 'appServlet'
Initializing new StandardServletEnvironment
Adding [servletConfigInitParams] PropertySource with lowest search precedence
Adding [servletContextInitParams] PropertySource with lowest search precedence
Adding [jndiProperties] PropertySource with lowest search precedence
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment]
FrameworkServlet 'appServlet': initialization started
Servlet with name 'appServlet' will try to create custom WebApplicationContext context of class 'org.springframework.web.context.support.XmlWebApplicationContext', using parent context [Root WebApplicationContext: startup date [Fri Apr 19 15:20:44 IST 2013]; root of context hierarchy]
Searching for key 'spring.profiles.active' in [servletConfigInitParams]
Searching for key 'spring.profiles.active' in [servletContextInitParams]
Searching for key 'spring.profiles.active' in [jndiProperties]
Looking up JNDI object with name [java:comp/env/spring.profiles.active]
Converted JNDI name [java:comp/env/spring.profiles.active] not found - trying original name [spring.profiles.active]. javax.naming.NameNotFoundException: Name [spring.profiles.active] is not bound in this Context. Unable to find [spring.profiles.active].
Looking up JNDI object with name [spring.profiles.active]
JNDI lookup for name [spring.profiles.active] threw NamingException with message: Name [spring.profiles.active] is not bound in this Context. Unable to find [spring.profiles.active].. Returning null.
Searching for key 'spring.profiles.active' in [systemProperties]
Searching for key 'spring.profiles.active' in [systemEnvironment]
Could not find key 'spring.profiles.active' in any property source. Returning [null]
Searching for key 'spring.profiles.default' in [servletConfigInitParams]
Searching for key 'spring.profiles.default' in [servletContextInitParams]
Searching for key 'spring.profiles.default' in [jndiProperties]
Looking up JNDI object with name [java:comp/env/spring.profiles.default]
Converted JNDI name [java:comp/env/spring.profiles.default] not found - trying original name [spring.profiles.default]. javax.naming.NameNotFoundException: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].
Looking up JNDI object with name [spring.profiles.default]
JNDI lookup for name [spring.profiles.default] threw NamingException with message: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].. Returning null.
Searching for key 'spring.profiles.default' in [systemProperties]
Searching for key 'spring.profiles.default' in [systemEnvironment]
Could not find key 'spring.profiles.default' in any property source. Returning [null]
Searching for key 'spring.profiles.default' in [servletConfigInitParams]
Searching for key 'spring.profiles.default' in [servletContextInitParams]
Searching for key 'spring.profiles.default' in [jndiProperties]
Looking up JNDI object with name [java:comp/env/spring.profiles.default]
Converted JNDI name [java:comp/env/spring.profiles.default] not found - trying original name [spring.profiles.default]. javax.naming.NameNotFoundException: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].
Looking up JNDI object with name [spring.profiles.default]
JNDI lookup for name [spring.profiles.default] threw NamingException with message: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].. Returning null.
Searching for key 'spring.profiles.default' in [systemProperties]
Searching for key 'spring.profiles.default' in [systemEnvironment]
Could not find key 'spring.profiles.default' in any property source. Returning [null]
Replacing [servletContextInitParams] PropertySource with [servletContextInitParams]
Replacing [servletConfigInitParams] PropertySource with [servletConfigInitParams]
Refreshing WebApplicationContext for namespace 'appServlet-servlet': startup date [Fri Apr 19 15:20:50 IST 2013]; parent: Root WebApplicationContext
Initializing new StandardEnvironment
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
Initializing new StandardEnvironment
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
Loading schema mappings from [META-INF/spring.schemas]
Loaded schema mappings: {http://www.springframework.org/schema/data/jpa/spring-jpa-1.2.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.2.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.1.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.1.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.5.xsd=org/springframework/data/repository/config/spring-repository-1.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.0.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.3.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.4.xsd=org/springframework/data/repository/config/spring-repository-1.4.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.3.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/data/repository/spring-repository.xsd=org/springframework/data/repository/config/spring-repository-1.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.0.xsd=org/springframework/data/repository/config/spring-repository-1.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.1.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.1.xsd
Found XML schema [http://www.springframework.org/schema/task/spring-task-3.0.xsd] in classpath: org/springframework/scheduling/config/spring-task-3.0.xsd
Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd
Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd
Found XML schema [http://www.springframework.org/schema/tx/spring-tx-3.1.xsd] in classpath: org/springframework/transaction/config/spring-tx-3.1.xsd
Loading bean definitions
Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/data/repository=org.springframework.data.repository.config.RepositoryNameSpaceHandler, http://www.springframework.org/schema/data/jpa=org.springframework.data.jpa.repository.config.JpaRepositoryNameSpaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
Neither XML 'id' nor 'name' specified - using generated bean name [org.springframework.web.servlet.view.InternalResourceViewResolver#0]
Neither XML 'id' nor 'name' specified - using generated bean name [org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver#7af6083c]
Initializing new StandardEnvironment
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
Looking for matching resources in directory tree [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Resolved location pattern [classpath*:com/inteltrader/**/*.class] to resources [file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\Advice.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\FIFOList.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\InstrumentVo.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\Strategies.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\Strategy.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\StrategyMACD.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao\IInstrumentDao.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao\InstrumentDao.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao\IPortfolioDao.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao\PortfolioDao.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Instrument.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Investment.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Portfolio.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Price.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Transactions.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest\InstrumentServiceRest.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest\PortfolioServiceRest.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\AnalyserService.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\CronService.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\InstrumentService.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\InstrumentServiceImpl.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\PortfolioService.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\PortfolioServiceImpl.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util\DownloadZip.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util\ExtractZipFile.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util\ReadPriceCsv.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util\RestCodes.class]]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Instrument.class]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Investment.class]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Portfolio.class]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest\InstrumentServiceRest.class]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest\PortfolioServiceRest.class]
Loaded 21 bean definitions from location pattern [/WEB-INF/applicationContext.xml]
Bean factory for WebApplicationContext for namespace 'appServlet-servlet': org.springframework.beans.factory.support.DefaultListableBeanFactory@2e96da35: defining beans [org.springframework.context.annotation.internalAsyncAnnotationProcessor,org.springframework.context.annotation.internalScheduledAnnotationProcessor,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0,org.springframework.web.servlet.view.InternalResourceViewResolver#0,instrumentDao,portfolioDao,instrumentService,portfolioService,entityManagerFactory,transactionManager,instrument,investment,portfolio,instrumentServiceRest,portfolioServiceRest]; parent: org.springframework.beans.factory.support.DefaultListableBeanFactory@6286c96d
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@61e8b6dc]
Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@753d57bb]
Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.DelegatingThemeSource@e4af21f]
Creating shared instance of singleton bean 'entityManagerFactory'
Creating instance of bean 'entityManagerFactory'
Eagerly caching bean 'entityManagerFactory' to allow for resolving potential circular references
Creating instance of bean 'org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver#7af6083c'
Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Creating instance of bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0' to allow for resolving potential circular references
Creating instance of bean '(inner bean)'
Creating shared instance of singleton bean 'transactionManager'
Creating instance of bean 'transactionManager'
Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
Returning eagerly cached instance of singleton bean 'entityManagerFactory' that is not fully initialized yet - a consequence of a circular reference
Ignoring currently created advisor 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0': Error creating bean with name 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0': Cannot create inner bean '(inner bean)' of type [org.springframework.transaction.interceptor.TransactionInterceptor] while setting bean property 'transactionInterceptor'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)': Cannot resolve reference to bean 'transactionManager' while setting bean property 'transactionManager'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'transactionManager' defined in ServletContext resource [/WEB-INF/applicationContext.xml]: Cannot resolve reference to bean 'entityManagerFactory' while setting bean property 'entityManagerFactory'; nested exception is org.springframework.beans.factory.BeanCurrentlyInCreationException: Error creating bean with name 'entityManagerFactory': FactoryBean which is currently in creation returned null from getObject
Finished creating instance of bean 'org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver#7af6083c'
Invoking afterPropertiesSet() on bean with name 'entityManagerFactory'
Building JPA container EntityManagerFactory for persistence unit 'intelTrader'
Adding type registration boolean -> org.hibernate.type.BooleanType@1056747f
Adding type registration boolean -> org.hibernate.type.BooleanType@1056747f
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1056747f
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@792f1d1b
Adding type registration true_false -> org.hibernate.type.TrueFalseType@2a079c26
Adding type registration yes_no -> org.hibernate.type.YesNoType@2b02440a
Adding type registration byte -> org.hibernate.type.ByteType@492f0ec3
Adding type registration byte -> org.hibernate.type.ByteType@492f0ec3
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@492f0ec3
Adding type registration character -> org.hibernate.type.CharacterType@57285f7e
Adding type registration char -> org.hibernate.type.CharacterType@57285f7e
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@57285f7e
Adding type registration short -> org.hibernate.type.ShortType@4c1a3bbd
Adding type registration short -> org.hibernate.type.ShortType@4c1a3bbd
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4c1a3bbd
Adding type registration integer -> org.hibernate.type.IntegerType@64493a45
Adding type registration int -> org.hibernate.type.IntegerType@64493a45
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@64493a45
Adding type registration long -> org.hibernate.type.LongType@1cc63c88
Adding type registration long -> org.hibernate.type.LongType@1cc63c88
Adding type registration java.lang.Long -> org.hibernate.type.LongType@1cc63c88
Adding type registration float -> org.hibernate.type.FloatType@1eb83276
Adding type registration float -> org.hibernate.type.FloatType@1eb83276
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1eb83276
Adding type registration double -> org.hibernate.type.DoubleType@4ea4311e
Adding type registration double -> org.hibernate.type.DoubleType@4ea4311e
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4ea4311e
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@55dfd2b4
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@55dfd2b4
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@32ad27fb
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@32ad27fb
Adding type registration string -> org.hibernate.type.StringType@4e8bf62
Adding type registration java.lang.String -> org.hibernate.type.StringType@4e8bf62
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2b6bdde6
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@78d74223
Adding type registration url -> org.hibernate.type.UrlType@49786c8a
Adding type registration java.net.URL -> org.hibernate.type.UrlType@49786c8a
Adding type registration date -> org.hibernate.type.DateType@4a407c9f
Adding type registration java.sql.Date -> org.hibernate.type.DateType@4a407c9f
Adding type registration time -> org.hibernate.type.TimeType@5ddacd09
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5ddacd09
Adding type registration timestamp -> org.hibernate.type.TimestampType@7ef9274d
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7ef9274d
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7ef9274d
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7bc40e71
Adding type registration calendar -> org.hibernate.type.CalendarType@1b84eb2c
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1b84eb2c
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1b84eb2c
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@98fcc5a
Adding type registration locale -> org.hibernate.type.LocaleType@4f04554e
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4f04554e
Adding type registration currency -> org.hibernate.type.CurrencyType@7a1a43c0
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7a1a43c0
Adding type registration timezone -> org.hibernate.type.TimeZoneType@39f8d357
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@39f8d357
Adding type registration class -> org.hibernate.type.ClassType@29ca7e4c
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@29ca7e4c
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@174a94af
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@174a94af
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7ea0788
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@5b7f3dcb
Adding type registration binary -> org.hibernate.type.BinaryType@2af33c80
Adding type registration byte[] -> org.hibernate.type.BinaryType@2af33c80
Adding type registration [B -> org.hibernate.type.BinaryType@2af33c80
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@11009278
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@11009278
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@11009278
Adding type registration image -> org.hibernate.type.ImageType@4c3a3f91
Adding type registration characters -> org.hibernate.type.CharArrayType@44f3f8d0
Adding type registration char[] -> org.hibernate.type.CharArrayType@44f3f8d0
Adding type registration [C -> org.hibernate.type.CharArrayType@44f3f8d0
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1cfeab22
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1cfeab22
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1cfeab22
Adding type registration text -> org.hibernate.type.TextType@3e27eb98
Adding type registration ntext -> org.hibernate.type.NTextType@2128fefc
Adding type registration blob -> org.hibernate.type.BlobType@78c099a6
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@78c099a6
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@40bee8c5
Adding type registration clob -> org.hibernate.type.ClobType@84c0e69
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@84c0e69
Adding type registration nclob -> org.hibernate.type.NClobType@647cd838
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@647cd838
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3e372f29
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@16babd32
Adding type registration serializable -> org.hibernate.type.SerializableType@7c92e1e8
Adding type registration object -> org.hibernate.type.ObjectType@29bbbce6
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@29bbbce6
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5a5dd88d
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@47343f54
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3729c851
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@181e5a22
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@70af7a8c
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1096b720
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@16d09e62
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5a4e3fa1
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Processing PersistenceUnitInfo [
	name: intelTrader
	persistence provider classname: org.hibernate.ejb.HibernatePersistence
	classloader: WebappClassLoader
  context: 
  delegate: false
  repositories:
    /WEB-INF/classes/
----------> Parent Classloader:
ClassRealm[plugin>org.apache.tomcat.maven:tomcat7-maven-plugin:2.0, parent: sun.misc.Launcher$AppClassLoader@1875303f]

	Temporary classloader: org.springframework.instrument.classloading.SimpleThrowawayClassLoader@47339158
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/vvarm1/IdeaProjects/intelTrader/src/main/webapp/WEB-INF/classes
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.inteltrader.entity.Instrument
		com.inteltrader.entity.Portfolio
		com.inteltrader.entity.Investment]
	Mapping files names []
	Properties [
		hibernate.connection.username: root
		hibernate.connection.password: root
		hibernate.dialect: org.hibernate.dialect.MySQLDialect
		hibernate.c3p0.min_size: 10
		hibernate.connection.url: jdbc:mysql://localhost:3306/TRADER_DB
		hibernate.show_sql: true
		hibernate.connection.driver_class: com.mysql.jdbc.Driver
		hibernate.hbm2ddl.auto: update]
Detect class: true; detect hbm: true
Detect class: true; detect hbm: true
Searching mapped entities in jar/par: file:/C:/Users/vvarm1/IdeaProjects/intelTrader/src/main/webapp/WEB-INF/classes
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.ejb.event.JpaIntegrator].
No JNDI name configured for binding Ejb3Configuration
Preparing to build session factory with filters : {}
Processing hbm.xml files
Process annotated classes
Binding entity from annotated class: com.inteltrader.entity.Instrument
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Instrument
Bind entity com.inteltrader.entity.Instrument on table INSTRUMENT
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=SYMBOL_NAME, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property symbolName with lazy=false
building SimpleValue for symbolName
Building property symbolName
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=priceList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=priceList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=priceList_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='priceList_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='SYMBOL_NAME', referencedColumn='', mappedBy=''}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Collection role: com.inteltrader.entity.Instrument.priceList
Building property priceList
Binding entity from annotated class: com.inteltrader.entity.Portfolio
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Portfolio
Bind entity com.inteltrader.entity.Portfolio on table PORTFOLIO
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=PORTFOLIO_NAME, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property portfolioName with lazy=false
building SimpleValue for portfolioName
Building property portfolioName
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='associatedPortfolio'}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=investmentList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=element, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=investmentList_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='investmentList_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='associatedPortfolio'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='associatedPortfolio'}
Collection role: com.inteltrader.entity.Portfolio.investmentList
Building property investmentList
Binding entity from annotated class: com.inteltrader.entity.Investment
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Investment
Bind entity com.inteltrader.entity.Investment on table INVESTMENT
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=INVESTMENT_ID, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property investmentId with lazy=false
building SimpleValue for investmentId
Building property investmentId
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=associatedPortfolio, insertable=true, updatable=true, unique=false}
Building property associatedPortfolio
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=currentPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property currentPrice with lazy=false
building SimpleValue for currentPrice
Building property currentPrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=quantity, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property quantity with lazy=false
building SimpleValue for quantity
Building property quantity
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=INVESTMENT_SYMBOL, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property symbolName with lazy=false
building SimpleValue for symbolName
Building property symbolName
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=transactionsList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=transactionsList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=transactionsList_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='transactionsList_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='INVESTMENT_ID', referencedColumn='', mappedBy=''}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Collection role: com.inteltrader.entity.Investment.transactionsList
Building property transactionsList
Setting SimpleValue typeName for symbolName
Setting SimpleValue typeName for portfolioName
Setting SimpleValue typeName for investmentId
Setting SimpleValue typeName for currentPrice
Setting SimpleValue typeName for quantity
Setting SimpleValue typeName for symbolName
Processing fk mappings (*ToOne and JoinedSubclass)
Processing extends queue
Processing extends queue
Processing collection mappings
Second pass for collection: com.inteltrader.entity.Investment.transactionsList
Binding a collection of element: com.inteltrader.entity.Investment.transactionsList
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT_TRANSACTION), mappingColumn=quantity, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property quantity with lazy=false
building SimpleValue for quantity
Setting SimpleValue typeName for quantity
Building property quantity
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT_TRANSACTION), mappingColumn=transactionId, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property transactionId with lazy=false
building SimpleValue for transactionId
Setting SimpleValue typeName for transactionId
Building property transactionId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT_TRANSACTION), mappingColumn=transactionPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property transactionPrice with lazy=false
building SimpleValue for transactionPrice
Setting SimpleValue typeName for transactionPrice
Building property transactionPrice
Mapped collection key: INVESTMENT_ID, element: quantity, transactionId, transactionPrice
Second pass for collection: com.inteltrader.entity.Instrument.priceList
Binding a collection of element: com.inteltrader.entity.Instrument.priceList
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=closePrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property closePrice with lazy=false
building SimpleValue for closePrice
Setting SimpleValue typeName for closePrice
Building property closePrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=highPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property highPrice with lazy=false
building SimpleValue for highPrice
Setting SimpleValue typeName for highPrice
Building property highPrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=lastClosePrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property lastClosePrice with lazy=false
building SimpleValue for lastClosePrice
Setting SimpleValue typeName for lastClosePrice
Building property lastClosePrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=lowPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property lowPrice with lazy=false
building SimpleValue for lowPrice
Setting SimpleValue typeName for lowPrice
Building property lowPrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=openPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property openPrice with lazy=false
building SimpleValue for openPrice
Setting SimpleValue typeName for openPrice
Building property openPrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=priceId, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property priceId with lazy=false
building SimpleValue for priceId
Setting SimpleValue typeName for priceId
Building property priceId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=timeStamp, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property timeStamp with lazy=false
building SimpleValue for timeStamp
Setting SimpleValue typeName for timeStamp
Building property timeStamp
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=totalTradedQuantity, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property totalTradedQuantity with lazy=false
building SimpleValue for totalTradedQuantity
Setting SimpleValue typeName for totalTradedQuantity
Building property totalTradedQuantity
Mapped collection key: SYMBOL_NAME, element: closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity
Second pass for collection: com.inteltrader.entity.Portfolio.investmentList
Binding a OneToMany: com.inteltrader.entity.Portfolio.investmentList through a foreign key
Mapping collection: com.inteltrader.entity.Portfolio.investmentList -> INVESTMENT
Retrieving property com.inteltrader.entity.Investment.associatedPortfolio
Mapped collection key: associatedPortfolio_PORTFOLIO_NAME, one-to-many: com.inteltrader.entity.Investment
Processing native query and ResultSetMapping mappings
Processing association property references
Creating tables' unique integer identifiers
Processing foreign key constraints
Resolving reference to class: com.inteltrader.entity.Instrument
Resolving reference to class: com.inteltrader.entity.Portfolio
Resolving reference to class: com.inteltrader.entity.Investment
HHH000022: c3p0 properties were encountered, but the org.hibernate.service.jdbc.connections.internal.C3P0ConnectionProvider provider class was not found on the classpath; these properties are going to be ignored.
HHH000402: Using Hibernate built-in connection pool (not for production use!)
HHH000115: Hibernate connection pool size: 20
HHH000006: Autocommit mode: true
HHH000401: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/TRADER_DB]
HHH000046: Connection properties: {user=root, password=root, autocommit=true, release_mode=auto}
Opening new JDBC connection
Created connection to: jdbc:mysql://localhost:3306/TRADER_DB, Isolation Level: 4
Database ->
       name : MySQL
    version : 5.6.10-log
      major : 5
      minor : 6
Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.9 ( Revision: ${svn.Revision} )
      major : 5
      minor : 1
JDBC version : 3.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: disabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
multi-tenancy strategy : NONE
Connection release mode: auto
HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
Maximum outer join fetch depth: 2
Default batch fetch size: 1
Generate SQL with comments: disabled
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
HHH000397: Using ASTQueryTranslatorFactory
Query language substitutions: {}
JPA-QL strict compliance: enabled
Second-level cache: enabled
Query cache: disabled
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
Optimize cache for minimal puts: disabled
Structured second-level cache entries: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Named query checking : enabled
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : : disabled
Building session factory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\vvarm1\IdeaProjects\intelTrader\target\tomcat, hibernate.connection.url=jdbc:mysql://localhost:3306/TRADER_DB, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.ejb.discard_pc_on_close=false, catalina.useNaming=true, hibernate.transaction.flush_before_completion=false, os.name=Windows 7, sun.boot.class.path=C:\Program Files\Java\jdk1.7.0_10\jre\lib\resources.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\rt.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\jce.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.7.0_10\jre\classes, java.util.logging.config.file=C:\Users\vvarm1\IdeaProjects\intelTrader\target\tomcat\conf\logging.properties, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.7.0_10-b18, hibernate.connection.autocommit=true, hibernate.c3p0.min_size=10, user.name=vvarm1, shared.loader=, guice.disable.misplaced.annotation.check=true, tomcat.util.buf.StringCache.byte.enabled=true, javax.persistence.validation.mode=AUTO, hibernate.connection.release_mode=auto, idea.launcher.bin.path=C:\Program Files (x86)\JetBrains\IntelliJ IDEA Community Edition 12.0.4\bin, user.language=en, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, sun.boot.library.path=C:\Program Files\Java\jdk1.7.0_10\jre\bin, classworlds.conf=C:\Program Files\Apache Software Foundation\apache-maven-3.0.5\bin\m2.conf, java.version=1.7.0_10, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, user.timezone=Asia/Calcutta, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.7.0_10\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, file.encoding.pkg=sun.io, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.tomcat.,org.apache.jasper., file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=51.0, user.country=US, java.home=C:\Program Files\Java\jdk1.7.0_10\jre, java.vm.info=mixed mode, os.version=6.1, hibernate.transaction.factory_class=org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory, hibernate.query.jpaql_strict_compliance=true, path.separator=;, java.vm.version=23.6-b04, hibernate.connection.password=root, user.variant=, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.scan.DefaultJarScanner.jarsToSkip=bootstrap.jar,commons-daemon.jar,tomcat-juli.jar,annotations-api.jar,el-api.jar,jsp-api.jar,servlet-api.jar,catalina.jar,catalina-ant.jar,catalina-ha.jar,catalina-tribes.jar,jasper.jar,jasper-el.jar,ecj-*.jar,tomcat-api.jar,tomcat-util.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-jni.jar,tomcat-spdy.jar,tomcat-i18n-en.jar,tomcat-i18n-es.jar,tomcat-i18n-fr.jar,tomcat-i18n-ja.jar,tomcat-juli-adapters.jar,catalina-jmx-remote.jar,catalina-ws.jar,tomcat-jdbc.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,jstl.jar,geronimo-spec-jaxrpc*.jar,wsdl4j*.jar,ant.jar,ant-junit*.jar,aspectj*.jar,jmx.jar,h2*.jar,hibernate*.jar,httpclient*.jar,jmx-tools.jar,jta*.jar,log4j*.jar,mail*.jar,slf4j*.jar,xercesImpl.jar,xmlParserAPIs.jar,xml-apis.jar,access-bridge-64.jar,dnsns.jar,jaccess.jar,ldapsec.jar,localedata.jar,sunjce_provider.jar,sunmscapi.jar,sunpkcs11.jar,jhall.jar,tools.jar,sunec.jar,zipfs.jar,gnome-java-bridge.jar,pulse-java.jar,apple_provider.jar,AppleScriptEngine.jar,CoreAudio.jar,dns_sd.jar,j3daudio.jar,j3dcore.jar,j3dutils.jar,jai_core.jar,jai_codec.jar,mlibwrapper_jai.jar,MRJToolkit.jar,vecmath.jar,junit.jar,junit-*.jar,ant-launcher.jar, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.tomcat.,org.apache.jasper., user.script=, java.naming.factory.url.pkgs=org.apache.naming, user.home=C:\Users\vvarm1, org.apache.catalina.startup.ContextConfig.jarsToSkip=, java.specification.vendor=Oracle Corporation, hibernate.hbm2ddl.auto=update, java.library.path=C:\Program Files\Java\jdk1.7.0_10\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\JetBrains\IntelliJ IDEA Community Edition 12.0.4\bin\..\.\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\ThinkPad\Bluetooth Software\;C:\Program Files\ThinkPad\Bluetooth Software\syswow64;c:\Program Files\Intel\WiFi\bin\;c:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files (x86)\Git\cmd;C:\Users\vvarm1\Documents\play-2.0.3;C:\Program Files\Java\jdk1.7.0_10\bin;C:\Program Files\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\QuickTime\QTSystem\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Java\jre6\bin;C:\Program Files\Apache Software Foundation\apache-maven-3.0.5\bin;c:\program files (x86)\jetbrains\intellij idea community edition 12.0.4\jre\jre\bin;., java.vendor.url=http://java.oracle.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, org.apache.catalina.startup.TldConfig.jarsToSkip=, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, common.loader=${catalina.base}/lib,${catalina.base}/lib/*.jar,${catalina.home}/lib,${catalina.home}/lib/*.jar, maven.home=C:\Program Files\Apache Software Foundation\apache-maven-3.0.5, java.runtime.name=Java(TM) SE Runtime Environment, java.class.path=C:\Program Files\Apache Software Foundation\apache-maven-3.0.5\boot\plexus-classworlds-2.4.jar;C:\Program Files (x86)\JetBrains\IntelliJ IDEA Community Edition 12.0.4\lib\idea_rt.jar, sun.java.command=com.intellij.rt.execution.application.AppMain org.codehaus.classworlds.Launcher --no-plugin-registry --fail-fast --strict-checksums --update-snapshots org.apache.tomcat.maven:tomcat7-maven-plugin:2.0:run, hibernate.bytecode.use_reflection_optimizer=false, idea.launcher.port=7533, java.vm.specification.name=Java Virtual Machine Specification, catalina.home=C:\Users\vvarm1\IdeaProjects\intelTrader\target\tomcat, java.vm.specification.version=1.7, sun.os.patch.level=Service Pack 1, sun.cpu.endian=little, java.io.tmpdir=C:\Users\vvarm1\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, server.loader=, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, java.ext.dirs=C:\Program Files\Java\jdk1.7.0_10\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=C:\Users\vvarm1\IdeaProjects\intelTrader, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding=UTF-8, hibernate.use_identifier_rollback=false, java.specification.version=1.7, hibernate.show_sql=true}
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Static SQL for entity: com.inteltrader.entity.Investment
 Version select: select INVESTMENT_ID from TRADER_DB.INVESTMENT where INVESTMENT_ID =?
 Snapshot select: select investment_.INVESTMENT_ID, investment_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_, investment_.currentPrice as currentP2_2_, investment_.quantity as quantity2_, investment_.INVESTMENT_SYMBOL as INVESTMENT4_2_ from TRADER_DB.INVESTMENT investment_ where investment_.INVESTMENT_ID=?
 Insert 0: insert into TRADER_DB.INVESTMENT (associatedPortfolio_PORTFOLIO_NAME, currentPrice, quantity, INVESTMENT_SYMBOL, INVESTMENT_ID) values (?, ?, ?, ?, ?)
 Update 0: update TRADER_DB.INVESTMENT set associatedPortfolio_PORTFOLIO_NAME=?, currentPrice=?, quantity=?, INVESTMENT_SYMBOL=? where INVESTMENT_ID=?
 Delete 0: delete from TRADER_DB.INVESTMENT where INVESTMENT_ID=?
 Identity insert: insert into TRADER_DB.INVESTMENT (associatedPortfolio_PORTFOLIO_NAME, currentPrice, quantity, INVESTMENT_SYMBOL) values (?, ?, ?, ?)
Static SQL for entity: com.inteltrader.entity.Instrument
 Version select: select SYMBOL_NAME from TRADER_DB.INSTRUMENT where SYMBOL_NAME =?
 Snapshot select: select instrument_.SYMBOL_NAME from TRADER_DB.INSTRUMENT instrument_ where instrument_.SYMBOL_NAME=?
 Insert 0: insert into TRADER_DB.INSTRUMENT (SYMBOL_NAME) values (?)
 Update 0: null
 Delete 0: delete from TRADER_DB.INSTRUMENT where SYMBOL_NAME=?
Static SQL for entity: com.inteltrader.entity.Portfolio
 Version select: select PORTFOLIO_NAME from TRADER_DB.PORTFOLIO where PORTFOLIO_NAME =?
 Snapshot select: select portfolio_.PORTFOLIO_NAME from TRADER_DB.PORTFOLIO portfolio_ where portfolio_.PORTFOLIO_NAME=?
 Insert 0: insert into TRADER_DB.PORTFOLIO (PORTFOLIO_NAME) values (?)
 Update 0: null
 Delete 0: delete from TRADER_DB.PORTFOLIO where PORTFOLIO_NAME=?
Static SQL for collection: com.inteltrader.entity.Instrument.priceList
 Row insert: insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
 Row update: update TRADER_DB.INSTRUMENT_PRICE set closePrice=?, highPrice=?, lastClosePrice=?, lowPrice=?, openPrice=?, priceId=?, timeStamp=?, totalTradedQuantity=? where SYMBOL_NAME=? and priceId=? and totalTradedQuantity=?
 Row delete: delete from TRADER_DB.INSTRUMENT_PRICE where SYMBOL_NAME=? and priceId=? and totalTradedQuantity=?
 One-shot delete: delete from TRADER_DB.INSTRUMENT_PRICE where SYMBOL_NAME=?
Static SQL for collection: com.inteltrader.entity.Investment.transactionsList
 Row insert: insert into TRADER_DB.INVESTMENT_TRANSACTION (INVESTMENT_ID, quantity, transactionId, transactionPrice) values (?, ?, ?, ?)
 Row update: update TRADER_DB.INVESTMENT_TRANSACTION set quantity=?, transactionId=?, transactionPrice=? where INVESTMENT_ID=? and quantity=? and transactionId=? and transactionPrice=?
 Row delete: delete from TRADER_DB.INVESTMENT_TRANSACTION where INVESTMENT_ID=? and quantity=? and transactionId=? and transactionPrice=?
 One-shot delete: delete from TRADER_DB.INVESTMENT_TRANSACTION where INVESTMENT_ID=?
Static SQL for collection: com.inteltrader.entity.Portfolio.investmentList
 Row insert: update TRADER_DB.INVESTMENT set associatedPortfolio_PORTFOLIO_NAME=? where INVESTMENT_ID=?
 Row delete: update TRADER_DB.INVESTMENT set associatedPortfolio_PORTFOLIO_NAME=null where associatedPortfolio_PORTFOLIO_NAME=? and INVESTMENT_ID=?
 One-shot delete: update TRADER_DB.INVESTMENT set associatedPortfolio_PORTFOLIO_NAME=null where associatedPortfolio_PORTFOLIO_NAME=?
Static select for entity com.inteltrader.entity.Instrument [NONE]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for entity com.inteltrader.entity.Instrument [READ]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for entity com.inteltrader.entity.Instrument [UPGRADE]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [UPGRADE_NOWAIT]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [FORCE]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [PESSIMISTIC_READ]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? lock in share mode
Static select for entity com.inteltrader.entity.Instrument [PESSIMISTIC_WRITE]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [PESSIMISTIC_FORCE_INCREMENT]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [OPTIMISTIC]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for entity com.inteltrader.entity.Instrument [OPTIMISTIC_FORCE_INCREMENT]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for action ACTION_MERGE on entity com.inteltrader.entity.Instrument: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for action ACTION_REFRESH on entity com.inteltrader.entity.Instrument: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for entity com.inteltrader.entity.Investment [NONE]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_1_, investment0_.currentPrice as currentP2_2_1_, investment0_.quantity as quantity2_1_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_1_, portfolio1_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.INVESTMENT investment0_ left outer join TRADER_DB.PORTFOLIO portfolio1_ on investment0_.associatedPortfolio_PORTFOLIO_NAME=portfolio1_.PORTFOLIO_NAME where investment0_.INVESTMENT_ID=?
Static select for entity com.inteltrader.entity.Investment [READ]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_1_, investment0_.currentPrice as currentP2_2_1_, investment0_.quantity as quantity2_1_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_1_, portfolio1_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.INVESTMENT investment0_ left outer join TRADER_DB.PORTFOLIO portfolio1_ on investment0_.associatedPortfolio_PORTFOLIO_NAME=portfolio1_.PORTFOLIO_NAME where investment0_.INVESTMENT_ID=?
Static select for entity com.inteltrader.entity.Investment [UPGRADE]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [UPGRADE_NOWAIT]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [FORCE]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [PESSIMISTIC_READ]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? lock in share mode
Static select for entity com.inteltrader.entity.Investment [PESSIMISTIC_WRITE]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [PESSIMISTIC_FORCE_INCREMENT]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [OPTIMISTIC]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=?
Static select for entity com.inteltrader.entity.Investment [OPTIMISTIC_FORCE_INCREMENT]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=?
Static select for action ACTION_MERGE on entity com.inteltrader.entity.Investment: select investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_1_, investment0_.currentPrice as currentP2_2_1_, investment0_.quantity as quantity2_1_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_1_, portfolio1_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.INVESTMENT investment0_ left outer join TRADER_DB.PORTFOLIO portfolio1_ on investment0_.associatedPortfolio_PORTFOLIO_NAME=portfolio1_.PORTFOLIO_NAME where investment0_.INVESTMENT_ID=?
Static select for action ACTION_REFRESH on entity com.inteltrader.entity.Investment: select investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_1_, investment0_.currentPrice as currentP2_2_1_, investment0_.quantity as quantity2_1_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_1_, portfolio1_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.INVESTMENT investment0_ left outer join TRADER_DB.PORTFOLIO portfolio1_ on investment0_.associatedPortfolio_PORTFOLIO_NAME=portfolio1_.PORTFOLIO_NAME where investment0_.INVESTMENT_ID=?
Static select for entity com.inteltrader.entity.Portfolio [NONE]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Static select for entity com.inteltrader.entity.Portfolio [READ]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Static select for entity com.inteltrader.entity.Portfolio [UPGRADE]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [UPGRADE_NOWAIT]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [FORCE]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [PESSIMISTIC_READ]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? lock in share mode
Static select for entity com.inteltrader.entity.Portfolio [PESSIMISTIC_WRITE]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [PESSIMISTIC_FORCE_INCREMENT]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [OPTIMISTIC]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=?
Static select for entity com.inteltrader.entity.Portfolio [OPTIMISTIC_FORCE_INCREMENT]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=?
Static select for action ACTION_MERGE on entity com.inteltrader.entity.Portfolio: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Static select for action ACTION_REFRESH on entity com.inteltrader.entity.Portfolio: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Static select for collection com.inteltrader.entity.Instrument.priceList: select pricelist0_.SYMBOL_NAME as SYMBOL1_0_0_, pricelist0_.closePrice as closePrice1_0_, pricelist0_.highPrice as highPrice1_0_, pricelist0_.lastClosePrice as lastClos4_1_0_, pricelist0_.lowPrice as lowPrice1_0_, pricelist0_.openPrice as openPrice1_0_, pricelist0_.priceId as priceId1_0_, pricelist0_.timeStamp as timeStamp1_0_, pricelist0_.totalTradedQuantity as totalTra9_1_0_ from TRADER_DB.INSTRUMENT_PRICE pricelist0_ where pricelist0_.SYMBOL_NAME=?
Static select for one-to-many com.inteltrader.entity.Portfolio.investmentList: select investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_1_, investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.associatedPortfolio_PORTFOLIO_NAME=?
Static select for collection com.inteltrader.entity.Investment.transactionsList: select transactio0_.INVESTMENT_ID as INVESTMENT1_2_0_, transactio0_.quantity as quantity3_0_, transactio0_.transactionId as transact3_3_0_, transactio0_.transactionPrice as transact4_3_0_ from TRADER_DB.INVESTMENT_TRANSACTION transactio0_ where transactio0_.INVESTMENT_ID=?
Registering SessionFactory: a2122b40-350f-4350-ac1d-4a3a8147fad6 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Instantiated session factory
HHH000228: Running hbm2ddl schema update
HHH000102: Fetching database metadata
HHH000396: Updating schema
Processing hbm.xml files
Process annotated classes
Processing fk mappings (*ToOne and JoinedSubclass)
Processing extends queue
Processing extends queue
Processing collection mappings
Processing native query and ResultSetMapping mappings
Processing association property references
Creating tables' unique integer identifiers
Processing foreign key constraints
Resolving reference to class: com.inteltrader.entity.Instrument
Resolving reference to class: com.inteltrader.entity.Portfolio
Resolving reference to class: com.inteltrader.entity.Investment
HHH000261: Table found: TRADER_DB.instrument
HHH000037: Columns: [symbol_name]
HHH000108: Foreign keys: []
HHH000126: Indexes: [primary]
HHH000261: Table found: TRADER_DB.instrument_price
HHH000037: Columns: [totaltradedquantity, timestamp, priceid, lastcloseprice, highprice, symbol_name, openprice, closeprice, lowprice]
HHH000108: Foreign keys: [fk3189a2d153ed548d]
HHH000126: Indexes: [fk3189a2d153ed548d]
HHH000261: Table found: TRADER_DB.investment
HHH000037: Columns: [investment_id, associatedportfolio_portfolio_name, currentprice, quantity, investment_symbol]
HHH000108: Foreign keys: [fk8fe41ed3c804d4f3]
HHH000126: Indexes: [fk8fe41ed3c804d4f3, primary]
HHH000261: Table found: TRADER_DB.investment_transaction
HHH000037: Columns: [transactionprice, investment_id, transactionid, quantity]
HHH000108: Foreign keys: [fka5863f52914590ae]
HHH000126: Indexes: [fka5863f52914590ae]
HHH000261: Table found: TRADER_DB.portfolio
HHH000037: Columns: [portfolio_name]
HHH000108: Foreign keys: []
HHH000126: Indexes: [primary]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
HHH000232: Schema update complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Statistics initialized [enabled=false]
Registering EntityManagerFactory: intelTrader 
HHH000436: Entity manager factory name (intelTrader) is already registered.  If entity manager will be clustered or passivated, specify a unique value for property 'hibernate.ejb.entitymanager_factory_name'
Finished creating instance of bean 'entityManagerFactory'
Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@2e96da35: defining beans [org.springframework.context.annotation.internalAsyncAnnotationProcessor,org.springframework.context.annotation.internalScheduledAnnotationProcessor,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0,org.springframework.web.servlet.view.InternalResourceViewResolver#0,instrumentDao,portfolioDao,instrumentService,portfolioService,entityManagerFactory,transactionManager,instrument,investment,portfolio,instrumentServiceRest,portfolioServiceRest,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor]; parent: org.springframework.beans.factory.support.DefaultListableBeanFactory@6286c96d
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Creating instance of bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0' to allow for resolving potential circular references
Creating instance of bean '(inner bean)'
Creating shared instance of singleton bean 'transactionManager'
Creating instance of bean 'transactionManager'
Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
Returning cached instance of singleton bean 'entityManagerFactory'
Invoking afterPropertiesSet() on bean with name 'transactionManager'
Finished creating instance of bean 'transactionManager'
Creating instance of bean '(inner bean)'
Finished creating instance of bean '(inner bean)'
Invoking afterPropertiesSet() on bean with name '(inner bean)'
Finished creating instance of bean '(inner bean)'
Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Creating shared instance of singleton bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Creating instance of bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Eagerly caching bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Creating shared instance of singleton bean 'instrumentDao'
Creating instance of bean 'instrumentDao'
Eagerly caching bean 'instrumentDao' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'instrumentDao'
Creating shared instance of singleton bean 'portfolioDao'
Creating instance of bean 'portfolioDao'
Eagerly caching bean 'portfolioDao' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'portfolioDao'
Creating shared instance of singleton bean 'instrumentService'
Creating instance of bean 'instrumentService'
Registered injected element on class [com.inteltrader.service.InstrumentServiceImpl]: PersistenceElement for javax.persistence.EntityManagerFactory com.inteltrader.service.InstrumentServiceImpl.entityManagerFactory
Registered injected element on class [com.inteltrader.service.InstrumentServiceImpl]: AutowiredFieldElement for private com.inteltrader.dao.IInstrumentDao com.inteltrader.service.InstrumentServiceImpl.instrumentDao
Registered injected element on class [com.inteltrader.service.InstrumentServiceImpl]: AutowiredFieldElement for private com.inteltrader.service.PortfolioService com.inteltrader.service.InstrumentServiceImpl.portfolioService
Eagerly caching bean 'instrumentService' to allow for resolving potential circular references
Processing injected method of bean 'instrumentService': PersistenceElement for javax.persistence.EntityManagerFactory com.inteltrader.service.InstrumentServiceImpl.entityManagerFactory
Returning cached instance of singleton bean 'entityManagerFactory'
Processing injected method of bean 'instrumentService': AutowiredFieldElement for private com.inteltrader.dao.IInstrumentDao com.inteltrader.service.InstrumentServiceImpl.instrumentDao
Returning cached instance of singleton bean 'instrumentDao'
Autowiring by type from bean name 'instrumentService' to bean named 'instrumentDao'
Processing injected method of bean 'instrumentService': AutowiredFieldElement for private com.inteltrader.service.PortfolioService com.inteltrader.service.InstrumentServiceImpl.portfolioService
Creating shared instance of singleton bean 'portfolioService'
Creating instance of bean 'portfolioService'
Registered injected element on class [com.inteltrader.service.PortfolioServiceImpl]: PersistenceElement for private javax.persistence.EntityManagerFactory com.inteltrader.service.PortfolioServiceImpl.entityManagerFactory
Registered injected element on class [com.inteltrader.service.PortfolioServiceImpl]: AutowiredFieldElement for private com.inteltrader.dao.IPortfolioDao com.inteltrader.service.PortfolioServiceImpl.portfolioDao
Eagerly caching bean 'portfolioService' to allow for resolving potential circular references
Processing injected method of bean 'portfolioService': PersistenceElement for private javax.persistence.EntityManagerFactory com.inteltrader.service.PortfolioServiceImpl.entityManagerFactory
Returning cached instance of singleton bean 'entityManagerFactory'
Processing injected method of bean 'portfolioService': AutowiredFieldElement for private com.inteltrader.dao.IPortfolioDao com.inteltrader.service.PortfolioServiceImpl.portfolioDao
Returning cached instance of singleton bean 'portfolioDao'
Autowiring by type from bean name 'portfolioService' to bean named 'portfolioDao'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'portfolioService'
Autowiring by type from bean name 'instrumentService' to bean named 'portfolioService'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'instrumentService'
Returning cached instance of singleton bean 'portfolioService'
Returning cached instance of singleton bean 'entityManagerFactory'
Returning cached instance of singleton bean 'transactionManager'
Creating shared instance of singleton bean 'instrument'
Creating instance of bean 'instrument'
Eagerly caching bean 'instrument' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'instrument'
Creating shared instance of singleton bean 'investment'
Creating instance of bean 'investment'
Eagerly caching bean 'investment' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'investment'
Creating shared instance of singleton bean 'portfolio'
Creating instance of bean 'portfolio'
Eagerly caching bean 'portfolio' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'portfolio'
Creating shared instance of singleton bean 'instrumentServiceRest'
Creating instance of bean 'instrumentServiceRest'
Registered injected element on class [com.inteltrader.rest.InstrumentServiceRest]: AutowiredFieldElement for private com.inteltrader.service.InstrumentService com.inteltrader.rest.InstrumentServiceRest.instrumentService
Eagerly caching bean 'instrumentServiceRest' to allow for resolving potential circular references
Processing injected method of bean 'instrumentServiceRest': AutowiredFieldElement for private com.inteltrader.service.InstrumentService com.inteltrader.rest.InstrumentServiceRest.instrumentService
Returning cached instance of singleton bean 'instrumentService'
Autowiring by type from bean name 'instrumentServiceRest' to bean named 'instrumentService'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'instrumentServiceRest'
Creating shared instance of singleton bean 'portfolioServiceRest'
Creating instance of bean 'portfolioServiceRest'
Registered injected element on class [com.inteltrader.rest.PortfolioServiceRest]: AutowiredFieldElement for private com.inteltrader.service.PortfolioService com.inteltrader.rest.PortfolioServiceRest.portfolioService
Eagerly caching bean 'portfolioServiceRest' to allow for resolving potential circular references
Processing injected method of bean 'portfolioServiceRest': AutowiredFieldElement for private com.inteltrader.service.PortfolioService com.inteltrader.rest.PortfolioServiceRest.portfolioService
Returning cached instance of singleton bean 'portfolioService'
Autowiring by type from bean name 'portfolioServiceRest' to bean named 'portfolioService'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'portfolioServiceRest'
Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@5afd8ccb]
Returning cached instance of singleton bean 'lifecycleProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Unable to locate MultipartResolver with name 'multipartResolver': no multipart request handling provided
Creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Unable to locate LocaleResolver with name 'localeResolver': using default [org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver@297b407b]
Creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Unable to locate ThemeResolver with name 'themeResolver': using default [org.springframework.web.servlet.theme.FixedThemeResolver@1371e566]
Creating instance of bean 'org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping'
Looking for URL mappings in application context: WebApplicationContext for namespace 'appServlet-servlet': startup date [Fri Apr 19 15:20:50 IST 2013]; parent: Root WebApplicationContext
Rejected bean name 'org.springframework.context.annotation.internalAsyncAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalScheduledAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalRequiredAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalCommonAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.aop.config.internalAutoProxyCreator': no URL paths identified
Rejected bean name 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0': no URL paths identified
Rejected bean name 'org.springframework.web.servlet.view.InternalResourceViewResolver#0': no URL paths identified
Rejected bean name 'instrumentDao': no URL paths identified
Rejected bean name 'portfolioDao': no URL paths identified
Rejected bean name 'instrumentService': no URL paths identified
Rejected bean name 'portfolioService': no URL paths identified
Rejected bean name 'entityManagerFactory': no URL paths identified
Rejected bean name 'transactionManager': no URL paths identified
Rejected bean name 'instrument': no URL paths identified
Rejected bean name 'investment': no URL paths identified
Rejected bean name 'portfolio': no URL paths identified
Rejected bean name 'instrumentServiceRest': no URL paths identified
Rejected bean name 'portfolioServiceRest': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor': no URL paths identified
Rejected bean name 'environment': no URL paths identified
Rejected bean name 'systemProperties': no URL paths identified
Rejected bean name 'systemEnvironment': no URL paths identified
Rejected bean name 'servletConfig': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry': no URL paths identified
Rejected bean name 'messageSource': no URL paths identified
Rejected bean name 'applicationEventMulticaster': no URL paths identified
Rejected bean name 'lifecycleProcessor': no URL paths identified
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping'
Creating instance of bean 'org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping'
Looking for URL mappings in application context: WebApplicationContext for namespace 'appServlet-servlet': startup date [Fri Apr 19 15:20:50 IST 2013]; parent: Root WebApplicationContext
Rejected bean name 'org.springframework.context.annotation.internalAsyncAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalScheduledAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalRequiredAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalCommonAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.aop.config.internalAutoProxyCreator': no URL paths identified
Rejected bean name 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0': no URL paths identified
Rejected bean name 'org.springframework.web.servlet.view.InternalResourceViewResolver#0': no URL paths identified
Rejected bean name 'instrumentDao': no URL paths identified
Rejected bean name 'portfolioDao': no URL paths identified
Rejected bean name 'instrumentService': no URL paths identified
Rejected bean name 'portfolioService': no URL paths identified
Rejected bean name 'entityManagerFactory': no URL paths identified
Rejected bean name 'transactionManager': no URL paths identified
Rejected bean name 'instrument': no URL paths identified
Rejected bean name 'investment': no URL paths identified
Rejected bean name 'portfolio': no URL paths identified
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/create/{symbol}] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/create/{symbol}.*] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/create/{symbol}/] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/update/{portfolioName}] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/update/{portfolioName}.*] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/update/{portfolioName}/] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/load/{symbol}] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/load/{symbol}.*] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/load/{symbol}/] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/create/{portfolioName}] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/create/{portfolioName}.*] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/create/{portfolioName}/] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/load/{portfolioName}] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/load/{portfolioName}.*] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/load/{portfolioName}/] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/addInvestment/{portfolioName}/{symbolName}] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/addInvestment/{portfolioName}/{symbolName}.*] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/addInvestment/{portfolioName}/{symbolName}/] onto handler 'portfolioServiceRest'
Rejected bean name 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor': no URL paths identified
Rejected bean name 'environment': no URL paths identified
Rejected bean name 'systemProperties': no URL paths identified
Rejected bean name 'systemEnvironment': no URL paths identified
Rejected bean name 'servletConfig': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry': no URL paths identified
Rejected bean name 'messageSource': no URL paths identified
Rejected bean name 'applicationEventMulticaster': no URL paths identified
Rejected bean name 'lifecycleProcessor': no URL paths identified
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping'
No HandlerMappings found in servlet 'appServlet': using default
Creating instance of bean 'org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter'
Creating instance of bean 'org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter'
Creating instance of bean 'org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter'
No HandlerAdapters found in servlet 'appServlet': using default
Creating instance of bean 'org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerExceptionResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerExceptionResolver'
Creating instance of bean 'org.springframework.web.servlet.mvc.annotation.ResponseStatusExceptionResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.annotation.ResponseStatusExceptionResolver'
Creating instance of bean 'org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver'
No HandlerExceptionResolvers found in servlet 'appServlet': using default
Creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Unable to locate RequestToViewNameTranslator with name 'viewNameTranslator': using default [org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@17d88e42]
Returning cached instance of singleton bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Returning cached instance of singleton bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Unable to locate FlashMapManager with name 'flashMapManager': using default [org.springframework.web.servlet.support.SessionFlashMapManager@e805dbb]
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Searching for key 'spring.liveBeansView.mbeanDomain' in [servletConfigInitParams]
Searching for key 'spring.liveBeansView.mbeanDomain' in [servletContextInitParams]
Searching for key 'spring.liveBeansView.mbeanDomain' in [jndiProperties]
Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain]
Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException: Name [spring.liveBeansView.mbeanDomain] is not bound in this Context. Unable to find [spring.liveBeansView.mbeanDomain].
Looking up JNDI object with name [spring.liveBeansView.mbeanDomain]
JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: Name [spring.liveBeansView.mbeanDomain] is not bound in this Context. Unable to find [spring.liveBeansView.mbeanDomain].. Returning null.
Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
Published WebApplicationContext of servlet 'appServlet' as ServletContext attribute with name [org.springframework.web.servlet.FrameworkServlet.CONTEXT.appServlet]
FrameworkServlet 'appServlet': initialization completed in 608 ms
Servlet 'appServlet' configured successfully
DispatcherServlet with name 'appServlet' processing GET request for [/portfolio/create/myFirstTime]
Matching patterns for request [/portfolio/create/myFirstTime] are [/portfolio/create/{portfolioName}]
URI Template variables for request [/portfolio/create/myFirstTime] are {portfolioName=myFirstTime}
Mapping [/portfolio/create/myFirstTime] to HandlerExecutionChain with handler [com.inteltrader.rest.PortfolioServiceRest@42271c4] and 2 interceptors
Last-Modified value for [/portfolio/create/myFirstTime] is: -1
Invoking request handler method: public org.springframework.http.ResponseEntity com.inteltrader.rest.PortfolioServiceRest.createPortfolio(java.lang.String,javax.servlet.http.HttpServletRequest)
begin
Obtaining JDBC connection
Obtained JDBC connection
initial autocommit status: true
disabling autocommit
Generated identifier: myFirstTime, using strategy: org.hibernate.id.Assigned
committing
Processing flush-time cascades
Dirty checking collections
Collection found: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime], was: [<unreferenced>] (initialized)
Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
Listing entities:
com.inteltrader.entity.Portfolio{portfolioName=myFirstTime, investmentList=[]}
insert into TRADER_DB.PORTFOLIO (PORTFOLIO_NAME) values (?)
committed JDBC Connection
re-enabling autocommit
Written [SUCCESS] as "text/html" using [org.springframework.http.converter.StringHttpMessageConverter@544d5255]
Null ModelAndView returned to DispatcherServlet with name 'appServlet': assuming HandlerAdapter completed request handling
Successfully completed request
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
DispatcherServlet with name 'appServlet' processing GET request for [/portfolio/addInvestment/myFirstTime/AMTEKAUTO]
Matching patterns for request [/portfolio/addInvestment/myFirstTime/AMTEKAUTO] are [/portfolio/addInvestment/{portfolioName}/{symbolName}]
URI Template variables for request [/portfolio/addInvestment/myFirstTime/AMTEKAUTO] are {portfolioName=myFirstTime, symbolName=AMTEKAUTO}
Mapping [/portfolio/addInvestment/myFirstTime/AMTEKAUTO] to HandlerExecutionChain with handler [com.inteltrader.rest.PortfolioServiceRest@42271c4] and 2 interceptors
Last-Modified value for [/portfolio/addInvestment/myFirstTime/AMTEKAUTO] is: -1
Invoking request handler method: public org.springframework.http.ResponseEntity com.inteltrader.rest.PortfolioServiceRest.addInvestment(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
begin
Obtaining JDBC connection
Opening new JDBC connection
Created connection to: jdbc:mysql://localhost:3306/TRADER_DB, Isolation Level: 4
Obtained JDBC connection
initial autocommit status: true
disabling autocommit
Loading entity: [com.inteltrader.entity.Portfolio#myFirstTime]
select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Result set row: 0
Result row: null, EntityKey[com.inteltrader.entity.Portfolio#myFirstTime]
Result set contains (possibly empty) collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Resolving associations for [com.inteltrader.entity.Portfolio#myFirstTime]
Done materializing entity [com.inteltrader.entity.Portfolio#myFirstTime]
1 collections were found in result set for role: com.inteltrader.entity.Portfolio.investmentList
Collection fully initialized: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
1 collections initialized for role: com.inteltrader.entity.Portfolio.investmentList
Done entity load
committing
Processing flush-time cascades
Executing identity-insert immediately
insert into TRADER_DB.INVESTMENT (associatedPortfolio_PORTFOLIO_NAME, currentPrice, quantity, INVESTMENT_SYMBOL) values (?, ?, ?, ?)
Natively generated identity: 1
Dirty checking collections
Collection dirty: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Collection found: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime], was: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime] (initialized)
Collection found: [com.inteltrader.entity.Investment.transactionsList#1], was: [<unreferenced>] (initialized)
Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
Flushed: 1 (re)creations, 1 updates, 0 removals to 2 collections
Listing entities:
com.inteltrader.entity.Investment{investmentId=1, quantity=null, currentPrice=null, symbolName=AMTEKAUTO, associatedPortfolio=com.inteltrader.entity.Portfolio#myFirstTime, transactionsList=[]}
com.inteltrader.entity.Portfolio{portfolioName=myFirstTime, investmentList=[com.inteltrader.entity.Investment#1]}
Inserting collection: [com.inteltrader.entity.Investment.transactionsList#1]
Collection was empty
committed JDBC Connection
re-enabling autocommit
Written [SUCCESS] as "text/html" using [org.springframework.http.converter.StringHttpMessageConverter@544d5255]
Null ModelAndView returned to DispatcherServlet with name 'appServlet': assuming HandlerAdapter completed request handling
Successfully completed request
DispatcherServlet with name 'appServlet' processing GET request for [/portfolio/load/MyFirstTime]
Matching patterns for request [/portfolio/load/MyFirstTime] are [/portfolio/load/{portfolioName}]
URI Template variables for request [/portfolio/load/MyFirstTime] are {portfolioName=MyFirstTime}
Mapping [/portfolio/load/MyFirstTime] to HandlerExecutionChain with handler [com.inteltrader.rest.PortfolioServiceRest@42271c4] and 2 interceptors
Last-Modified value for [/portfolio/load/MyFirstTime] is: -1
Invoking request handler method: public org.springframework.http.ResponseEntity com.inteltrader.rest.PortfolioServiceRest.loadInstrument(java.lang.String,javax.servlet.http.HttpServletRequest)
Loading entity: [com.inteltrader.entity.Portfolio#MyFirstTime]
Obtaining JDBC connection
Opening new JDBC connection
Created connection to: jdbc:mysql://localhost:3306/TRADER_DB, Isolation Level: 4
Obtained JDBC connection
select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Result set row: 0
Result row: EntityKey[com.inteltrader.entity.Investment#1], EntityKey[com.inteltrader.entity.Portfolio#MyFirstTime]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Resolving associations for [com.inteltrader.entity.Investment#1]
Loading entity: [com.inteltrader.entity.Portfolio#myFirstTime]
select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Result set row: 0
Result row: EntityKey[com.inteltrader.entity.Investment#1], EntityKey[com.inteltrader.entity.Portfolio#myFirstTime]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Resolving associations for [com.inteltrader.entity.Portfolio#myFirstTime]
Done materializing entity [com.inteltrader.entity.Portfolio#myFirstTime]
No collections were found in result set for role: com.inteltrader.entity.Portfolio.investmentList
Done entity load
Done materializing entity [com.inteltrader.entity.Investment#1]
Resolving associations for [com.inteltrader.entity.Portfolio#MyFirstTime]
Done materializing entity [com.inteltrader.entity.Portfolio#MyFirstTime]
1 collections were found in result set for role: com.inteltrader.entity.Portfolio.investmentList
Collection fully initialized: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
1 collections initialized for role: com.inteltrader.entity.Portfolio.investmentList
Loading collection: [com.inteltrader.entity.Portfolio.investmentList#MyFirstTime]
select investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_1_, investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.associatedPortfolio_PORTFOLIO_NAME=?
Result set contains (possibly empty) collection: [com.inteltrader.entity.Portfolio.investmentList#MyFirstTime]
Result set row: 0
Result row: EntityKey[com.inteltrader.entity.Investment#1]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
1 collections were found in result set for role: com.inteltrader.entity.Portfolio.investmentList
Collection fully initialized: [com.inteltrader.entity.Portfolio.investmentList#MyFirstTime]
1 collections initialized for role: com.inteltrader.entity.Portfolio.investmentList
Done loading collection
Done entity load
Written [{"portfolioName":"MyFirstTime","investmentList":[]}] as "text/html" using [org.springframework.http.converter.StringHttpMessageConverter@544d5255]
Null ModelAndView returned to DispatcherServlet with name 'appServlet': assuming HandlerAdapter completed request handling
Successfully completed request
Initializing servlet 'appServlet'
Initializing new StandardServletEnvironment
Adding [servletConfigInitParams] PropertySource with lowest search precedence
Adding [servletContextInitParams] PropertySource with lowest search precedence
Adding [jndiProperties] PropertySource with lowest search precedence
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment]
FrameworkServlet 'appServlet': initialization started
Servlet with name 'appServlet' will try to create custom WebApplicationContext context of class 'org.springframework.web.context.support.XmlWebApplicationContext', using parent context [Root WebApplicationContext: startup date [Fri Apr 19 16:10:19 IST 2013]; root of context hierarchy]
Searching for key 'spring.profiles.active' in [servletConfigInitParams]
Searching for key 'spring.profiles.active' in [servletContextInitParams]
Searching for key 'spring.profiles.active' in [jndiProperties]
Looking up JNDI object with name [java:comp/env/spring.profiles.active]
Converted JNDI name [java:comp/env/spring.profiles.active] not found - trying original name [spring.profiles.active]. javax.naming.NameNotFoundException: Name [spring.profiles.active] is not bound in this Context. Unable to find [spring.profiles.active].
Looking up JNDI object with name [spring.profiles.active]
JNDI lookup for name [spring.profiles.active] threw NamingException with message: Name [spring.profiles.active] is not bound in this Context. Unable to find [spring.profiles.active].. Returning null.
Searching for key 'spring.profiles.active' in [systemProperties]
Searching for key 'spring.profiles.active' in [systemEnvironment]
Could not find key 'spring.profiles.active' in any property source. Returning [null]
Searching for key 'spring.profiles.default' in [servletConfigInitParams]
Searching for key 'spring.profiles.default' in [servletContextInitParams]
Searching for key 'spring.profiles.default' in [jndiProperties]
Looking up JNDI object with name [java:comp/env/spring.profiles.default]
Converted JNDI name [java:comp/env/spring.profiles.default] not found - trying original name [spring.profiles.default]. javax.naming.NameNotFoundException: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].
Looking up JNDI object with name [spring.profiles.default]
JNDI lookup for name [spring.profiles.default] threw NamingException with message: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].. Returning null.
Searching for key 'spring.profiles.default' in [systemProperties]
Searching for key 'spring.profiles.default' in [systemEnvironment]
Could not find key 'spring.profiles.default' in any property source. Returning [null]
Searching for key 'spring.profiles.default' in [servletConfigInitParams]
Searching for key 'spring.profiles.default' in [servletContextInitParams]
Searching for key 'spring.profiles.default' in [jndiProperties]
Looking up JNDI object with name [java:comp/env/spring.profiles.default]
Converted JNDI name [java:comp/env/spring.profiles.default] not found - trying original name [spring.profiles.default]. javax.naming.NameNotFoundException: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].
Looking up JNDI object with name [spring.profiles.default]
JNDI lookup for name [spring.profiles.default] threw NamingException with message: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].. Returning null.
Searching for key 'spring.profiles.default' in [systemProperties]
Searching for key 'spring.profiles.default' in [systemEnvironment]
Could not find key 'spring.profiles.default' in any property source. Returning [null]
Replacing [servletContextInitParams] PropertySource with [servletContextInitParams]
Replacing [servletConfigInitParams] PropertySource with [servletConfigInitParams]
Refreshing WebApplicationContext for namespace 'appServlet-servlet': startup date [Fri Apr 19 16:10:22 IST 2013]; parent: Root WebApplicationContext
Initializing new StandardEnvironment
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
Initializing new StandardEnvironment
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
Loading schema mappings from [META-INF/spring.schemas]
Loaded schema mappings: {http://www.springframework.org/schema/data/jpa/spring-jpa-1.2.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.2.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.1.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.1.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.5.xsd=org/springframework/data/repository/config/spring-repository-1.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.0.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.3.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.4.xsd=org/springframework/data/repository/config/spring-repository-1.4.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.3.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/data/repository/spring-repository.xsd=org/springframework/data/repository/config/spring-repository-1.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.0.xsd=org/springframework/data/repository/config/spring-repository-1.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.1.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.1.xsd
Found XML schema [http://www.springframework.org/schema/task/spring-task-3.0.xsd] in classpath: org/springframework/scheduling/config/spring-task-3.0.xsd
Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd
Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd
Found XML schema [http://www.springframework.org/schema/tx/spring-tx-3.1.xsd] in classpath: org/springframework/transaction/config/spring-tx-3.1.xsd
Loading bean definitions
Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/data/repository=org.springframework.data.repository.config.RepositoryNameSpaceHandler, http://www.springframework.org/schema/data/jpa=org.springframework.data.jpa.repository.config.JpaRepositoryNameSpaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
Neither XML 'id' nor 'name' specified - using generated bean name [org.springframework.web.servlet.view.InternalResourceViewResolver#0]
Neither XML 'id' nor 'name' specified - using generated bean name [org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver#30a6bb6b]
Initializing new StandardEnvironment
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
Looking for matching resources in directory tree [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Resolved location pattern [classpath*:com/inteltrader/**/*.class] to resources [file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\Advice.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\FIFOList.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\InstrumentVo.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\Strategies.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\Strategy.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\StrategyMACD.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao\IInstrumentDao.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao\InstrumentDao.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao\IPortfolioDao.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao\PortfolioDao.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Instrument.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Investment.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Portfolio.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Price.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Transactions.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest\InstrumentServiceRest.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest\PortfolioServiceRest.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\AnalyserService.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\CronService.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\InstrumentService.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\InstrumentServiceImpl.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\PortfolioService.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\PortfolioServiceImpl.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util\DownloadZip.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util\ExtractZipFile.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util\ReadPriceCsv.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util\RestCodes.class]]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Instrument.class]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Investment.class]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Portfolio.class]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest\InstrumentServiceRest.class]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest\PortfolioServiceRest.class]
Loaded 21 bean definitions from location pattern [/WEB-INF/applicationContext.xml]
Bean factory for WebApplicationContext for namespace 'appServlet-servlet': org.springframework.beans.factory.support.DefaultListableBeanFactory@125a86c1: defining beans [org.springframework.context.annotation.internalAsyncAnnotationProcessor,org.springframework.context.annotation.internalScheduledAnnotationProcessor,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0,org.springframework.web.servlet.view.InternalResourceViewResolver#0,instrumentDao,portfolioDao,instrumentService,portfolioService,entityManagerFactory,transactionManager,instrument,investment,portfolio,instrumentServiceRest,portfolioServiceRest]; parent: org.springframework.beans.factory.support.DefaultListableBeanFactory@1baececc
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@5fc459b6]
Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@53ddecd8]
Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.DelegatingThemeSource@ee883ec]
Creating shared instance of singleton bean 'entityManagerFactory'
Creating instance of bean 'entityManagerFactory'
Eagerly caching bean 'entityManagerFactory' to allow for resolving potential circular references
Creating instance of bean 'org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver#30a6bb6b'
Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Creating instance of bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0' to allow for resolving potential circular references
Creating instance of bean '(inner bean)'
Creating shared instance of singleton bean 'transactionManager'
Creating instance of bean 'transactionManager'
Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
Returning eagerly cached instance of singleton bean 'entityManagerFactory' that is not fully initialized yet - a consequence of a circular reference
Ignoring currently created advisor 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0': Error creating bean with name 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0': Cannot create inner bean '(inner bean)' of type [org.springframework.transaction.interceptor.TransactionInterceptor] while setting bean property 'transactionInterceptor'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)': Cannot resolve reference to bean 'transactionManager' while setting bean property 'transactionManager'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'transactionManager' defined in ServletContext resource [/WEB-INF/applicationContext.xml]: Cannot resolve reference to bean 'entityManagerFactory' while setting bean property 'entityManagerFactory'; nested exception is org.springframework.beans.factory.BeanCurrentlyInCreationException: Error creating bean with name 'entityManagerFactory': FactoryBean which is currently in creation returned null from getObject
Finished creating instance of bean 'org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver#30a6bb6b'
Invoking afterPropertiesSet() on bean with name 'entityManagerFactory'
Building JPA container EntityManagerFactory for persistence unit 'intelTrader'
Adding type registration boolean -> org.hibernate.type.BooleanType@75f6c456
Adding type registration boolean -> org.hibernate.type.BooleanType@75f6c456
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@75f6c456
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2e058c02
Adding type registration true_false -> org.hibernate.type.TrueFalseType@493d8072
Adding type registration yes_no -> org.hibernate.type.YesNoType@2222cd3a
Adding type registration byte -> org.hibernate.type.ByteType@615c52cb
Adding type registration byte -> org.hibernate.type.ByteType@615c52cb
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@615c52cb
Adding type registration character -> org.hibernate.type.CharacterType@5f493b76
Adding type registration char -> org.hibernate.type.CharacterType@5f493b76
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5f493b76
Adding type registration short -> org.hibernate.type.ShortType@61390255
Adding type registration short -> org.hibernate.type.ShortType@61390255
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@61390255
Adding type registration integer -> org.hibernate.type.IntegerType@3d35f763
Adding type registration int -> org.hibernate.type.IntegerType@3d35f763
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3d35f763
Adding type registration long -> org.hibernate.type.LongType@7f14671e
Adding type registration long -> org.hibernate.type.LongType@7f14671e
Adding type registration java.lang.Long -> org.hibernate.type.LongType@7f14671e
Adding type registration float -> org.hibernate.type.FloatType@1a67a206
Adding type registration float -> org.hibernate.type.FloatType@1a67a206
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1a67a206
Adding type registration double -> org.hibernate.type.DoubleType@5c20d4db
Adding type registration double -> org.hibernate.type.DoubleType@5c20d4db
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5c20d4db
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@47f0b0d9
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@47f0b0d9
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@524e8b33
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@524e8b33
Adding type registration string -> org.hibernate.type.StringType@c82113a
Adding type registration java.lang.String -> org.hibernate.type.StringType@c82113a
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4cce4e4c
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@17c0f490
Adding type registration url -> org.hibernate.type.UrlType@4fd79d84
Adding type registration java.net.URL -> org.hibernate.type.UrlType@4fd79d84
Adding type registration date -> org.hibernate.type.DateType@22da78f9
Adding type registration java.sql.Date -> org.hibernate.type.DateType@22da78f9
Adding type registration time -> org.hibernate.type.TimeType@20a11899
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@20a11899
Adding type registration timestamp -> org.hibernate.type.TimestampType@271476c4
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@271476c4
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@271476c4
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2ac1105f
Adding type registration calendar -> org.hibernate.type.CalendarType@6672edc6
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6672edc6
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6672edc6
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@59fb467a
Adding type registration locale -> org.hibernate.type.LocaleType@1b3ba4be
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1b3ba4be
Adding type registration currency -> org.hibernate.type.CurrencyType@2e811eb8
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2e811eb8
Adding type registration timezone -> org.hibernate.type.TimeZoneType@5923ec42
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5923ec42
Adding type registration class -> org.hibernate.type.ClassType@16ca6c00
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@16ca6c00
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@e127a3f
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@e127a3f
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7d4a914f
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@2acedfdf
Adding type registration binary -> org.hibernate.type.BinaryType@2d1c61f
Adding type registration byte[] -> org.hibernate.type.BinaryType@2d1c61f
Adding type registration [B -> org.hibernate.type.BinaryType@2d1c61f
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1d9c1917
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1d9c1917
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1d9c1917
Adding type registration image -> org.hibernate.type.ImageType@37c0f83d
Adding type registration characters -> org.hibernate.type.CharArrayType@574f2df3
Adding type registration char[] -> org.hibernate.type.CharArrayType@574f2df3
Adding type registration [C -> org.hibernate.type.CharArrayType@574f2df3
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@760f1582
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@760f1582
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@760f1582
Adding type registration text -> org.hibernate.type.TextType@6280cd64
Adding type registration ntext -> org.hibernate.type.NTextType@10154e5e
Adding type registration blob -> org.hibernate.type.BlobType@4537336d
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4537336d
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@c883e09
Adding type registration clob -> org.hibernate.type.ClobType@3a186230
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3a186230
Adding type registration nclob -> org.hibernate.type.NClobType@dc1b4bc
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@dc1b4bc
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3e06b5c
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@63620338
Adding type registration serializable -> org.hibernate.type.SerializableType@7b5721b5
Adding type registration object -> org.hibernate.type.ObjectType@570f65a8
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@570f65a8
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@432d0299
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4005ad43
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@34b22a8b
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1d0726b4
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@407e024f
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@10c9b19d
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@29abc307
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4b9115f0
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Processing PersistenceUnitInfo [
	name: intelTrader
	persistence provider classname: org.hibernate.ejb.HibernatePersistence
	classloader: WebappClassLoader
  context: 
  delegate: false
  repositories:
    /WEB-INF/classes/
----------> Parent Classloader:
ClassRealm[plugin>org.apache.tomcat.maven:tomcat7-maven-plugin:2.0, parent: sun.misc.Launcher$AppClassLoader@35b284a4]

	Temporary classloader: org.springframework.instrument.classloading.SimpleThrowawayClassLoader@22376652
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/vvarm1/IdeaProjects/intelTrader/src/main/webapp/WEB-INF/classes
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.inteltrader.entity.Instrument
		com.inteltrader.entity.Portfolio
		com.inteltrader.entity.Investment]
	Mapping files names []
	Properties [
		hibernate.connection.username: root
		hibernate.connection.password: root
		hibernate.dialect: org.hibernate.dialect.MySQLDialect
		hibernate.c3p0.min_size: 10
		hibernate.connection.url: jdbc:mysql://localhost:3306/TRADER_DB
		hibernate.show_sql: true
		hibernate.connection.driver_class: com.mysql.jdbc.Driver
		hibernate.hbm2ddl.auto: update]
Detect class: true; detect hbm: true
Detect class: true; detect hbm: true
Searching mapped entities in jar/par: file:/C:/Users/vvarm1/IdeaProjects/intelTrader/src/main/webapp/WEB-INF/classes
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.ejb.event.JpaIntegrator].
No JNDI name configured for binding Ejb3Configuration
Preparing to build session factory with filters : {}
Processing hbm.xml files
Process annotated classes
Binding entity from annotated class: com.inteltrader.entity.Instrument
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Instrument
Bind entity com.inteltrader.entity.Instrument on table INSTRUMENT
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=SYMBOL_NAME, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property symbolName with lazy=false
building SimpleValue for symbolName
Building property symbolName
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=priceList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=priceList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=priceList_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='priceList_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='SYMBOL_NAME', referencedColumn='', mappedBy=''}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Collection role: com.inteltrader.entity.Instrument.priceList
Building property priceList
Binding entity from annotated class: com.inteltrader.entity.Portfolio
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Portfolio
Bind entity com.inteltrader.entity.Portfolio on table PORTFOLIO
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=PORTFOLIO_NAME, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property portfolioName with lazy=false
building SimpleValue for portfolioName
Building property portfolioName
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='associatedPortfolio'}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=investmentList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=element, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=investmentList_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='investmentList_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='associatedPortfolio'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='associatedPortfolio'}
Collection role: com.inteltrader.entity.Portfolio.investmentList
Building property investmentList
Binding entity from annotated class: com.inteltrader.entity.Investment
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Investment
Bind entity com.inteltrader.entity.Investment on table INVESTMENT
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=INVESTMENT_ID, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property investmentId with lazy=false
building SimpleValue for investmentId
Building property investmentId
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=associatedPortfolio, insertable=true, updatable=true, unique=false}
Building property associatedPortfolio
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=currentPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property currentPrice with lazy=false
building SimpleValue for currentPrice
Building property currentPrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=quantity, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property quantity with lazy=false
building SimpleValue for quantity
Building property quantity
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=INVESTMENT_SYMBOL, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property symbolName with lazy=false
building SimpleValue for symbolName
Building property symbolName
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=transactionsList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=transactionsList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=transactionsList_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='transactionsList_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='INVESTMENT_ID', referencedColumn='', mappedBy=''}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Collection role: com.inteltrader.entity.Investment.transactionsList
Building property transactionsList
Setting SimpleValue typeName for symbolName
Setting SimpleValue typeName for portfolioName
Setting SimpleValue typeName for investmentId
Setting SimpleValue typeName for currentPrice
Setting SimpleValue typeName for quantity
Setting SimpleValue typeName for symbolName
Processing fk mappings (*ToOne and JoinedSubclass)
Processing extends queue
Processing extends queue
Processing collection mappings
Second pass for collection: com.inteltrader.entity.Investment.transactionsList
Binding a collection of element: com.inteltrader.entity.Investment.transactionsList
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT_TRANSACTION), mappingColumn=quantity, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property quantity with lazy=false
building SimpleValue for quantity
Setting SimpleValue typeName for quantity
Building property quantity
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT_TRANSACTION), mappingColumn=transactionId, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property transactionId with lazy=false
building SimpleValue for transactionId
Setting SimpleValue typeName for transactionId
Building property transactionId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT_TRANSACTION), mappingColumn=transactionPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property transactionPrice with lazy=false
building SimpleValue for transactionPrice
Setting SimpleValue typeName for transactionPrice
Building property transactionPrice
Mapped collection key: INVESTMENT_ID, element: quantity, transactionId, transactionPrice
Second pass for collection: com.inteltrader.entity.Instrument.priceList
Binding a collection of element: com.inteltrader.entity.Instrument.priceList
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=closePrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property closePrice with lazy=false
building SimpleValue for closePrice
Setting SimpleValue typeName for closePrice
Building property closePrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=highPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property highPrice with lazy=false
building SimpleValue for highPrice
Setting SimpleValue typeName for highPrice
Building property highPrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=lastClosePrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property lastClosePrice with lazy=false
building SimpleValue for lastClosePrice
Setting SimpleValue typeName for lastClosePrice
Building property lastClosePrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=lowPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property lowPrice with lazy=false
building SimpleValue for lowPrice
Setting SimpleValue typeName for lowPrice
Building property lowPrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=openPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property openPrice with lazy=false
building SimpleValue for openPrice
Setting SimpleValue typeName for openPrice
Building property openPrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=priceId, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property priceId with lazy=false
building SimpleValue for priceId
Setting SimpleValue typeName for priceId
Building property priceId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=timeStamp, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property timeStamp with lazy=false
building SimpleValue for timeStamp
Setting SimpleValue typeName for timeStamp
Building property timeStamp
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=totalTradedQuantity, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property totalTradedQuantity with lazy=false
building SimpleValue for totalTradedQuantity
Setting SimpleValue typeName for totalTradedQuantity
Building property totalTradedQuantity
Mapped collection key: SYMBOL_NAME, element: closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity
Second pass for collection: com.inteltrader.entity.Portfolio.investmentList
Binding a OneToMany: com.inteltrader.entity.Portfolio.investmentList through a foreign key
Mapping collection: com.inteltrader.entity.Portfolio.investmentList -> INVESTMENT
Retrieving property com.inteltrader.entity.Investment.associatedPortfolio
Mapped collection key: associatedPortfolio_PORTFOLIO_NAME, one-to-many: com.inteltrader.entity.Investment
Processing native query and ResultSetMapping mappings
Processing association property references
Creating tables' unique integer identifiers
Processing foreign key constraints
Resolving reference to class: com.inteltrader.entity.Instrument
Resolving reference to class: com.inteltrader.entity.Portfolio
Resolving reference to class: com.inteltrader.entity.Investment
HHH000022: c3p0 properties were encountered, but the org.hibernate.service.jdbc.connections.internal.C3P0ConnectionProvider provider class was not found on the classpath; these properties are going to be ignored.
HHH000402: Using Hibernate built-in connection pool (not for production use!)
HHH000115: Hibernate connection pool size: 20
HHH000006: Autocommit mode: true
HHH000401: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/TRADER_DB]
HHH000046: Connection properties: {user=root, password=root, autocommit=true, release_mode=auto}
Opening new JDBC connection
Created connection to: jdbc:mysql://localhost:3306/TRADER_DB, Isolation Level: 4
Database ->
       name : MySQL
    version : 5.6.10-log
      major : 5
      minor : 6
Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.9 ( Revision: ${svn.Revision} )
      major : 5
      minor : 1
JDBC version : 3.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: disabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
multi-tenancy strategy : NONE
Connection release mode: auto
HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
Maximum outer join fetch depth: 2
Default batch fetch size: 1
Generate SQL with comments: disabled
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
HHH000397: Using ASTQueryTranslatorFactory
Query language substitutions: {}
JPA-QL strict compliance: enabled
Second-level cache: enabled
Query cache: disabled
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
Optimize cache for minimal puts: disabled
Structured second-level cache entries: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Named query checking : enabled
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : : disabled
Building session factory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\vvarm1\IdeaProjects\intelTrader\target\tomcat, hibernate.connection.url=jdbc:mysql://localhost:3306/TRADER_DB, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.ejb.discard_pc_on_close=false, catalina.useNaming=true, hibernate.transaction.flush_before_completion=false, os.name=Windows 7, sun.boot.class.path=C:\Program Files\Java\jdk1.7.0_10\jre\lib\resources.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\rt.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\jce.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.7.0_10\jre\classes, java.util.logging.config.file=C:\Users\vvarm1\IdeaProjects\intelTrader\target\tomcat\conf\logging.properties, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.7.0_10-b18, hibernate.connection.autocommit=true, hibernate.c3p0.min_size=10, user.name=vvarm1, shared.loader=, guice.disable.misplaced.annotation.check=true, tomcat.util.buf.StringCache.byte.enabled=true, javax.persistence.validation.mode=AUTO, hibernate.connection.release_mode=auto, idea.launcher.bin.path=C:\Program Files (x86)\JetBrains\IntelliJ IDEA Community Edition 12.0.4\bin, user.language=en, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, sun.boot.library.path=C:\Program Files\Java\jdk1.7.0_10\jre\bin, classworlds.conf=C:\Program Files\Apache Software Foundation\apache-maven-3.0.5\bin\m2.conf, java.version=1.7.0_10, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, user.timezone=Asia/Calcutta, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.7.0_10\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, file.encoding.pkg=sun.io, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.tomcat.,org.apache.jasper., file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=51.0, user.country=US, java.home=C:\Program Files\Java\jdk1.7.0_10\jre, java.vm.info=mixed mode, os.version=6.1, hibernate.transaction.factory_class=org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory, hibernate.query.jpaql_strict_compliance=true, path.separator=;, java.vm.version=23.6-b04, hibernate.connection.password=root, user.variant=, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.scan.DefaultJarScanner.jarsToSkip=bootstrap.jar,commons-daemon.jar,tomcat-juli.jar,annotations-api.jar,el-api.jar,jsp-api.jar,servlet-api.jar,catalina.jar,catalina-ant.jar,catalina-ha.jar,catalina-tribes.jar,jasper.jar,jasper-el.jar,ecj-*.jar,tomcat-api.jar,tomcat-util.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-jni.jar,tomcat-spdy.jar,tomcat-i18n-en.jar,tomcat-i18n-es.jar,tomcat-i18n-fr.jar,tomcat-i18n-ja.jar,tomcat-juli-adapters.jar,catalina-jmx-remote.jar,catalina-ws.jar,tomcat-jdbc.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,jstl.jar,geronimo-spec-jaxrpc*.jar,wsdl4j*.jar,ant.jar,ant-junit*.jar,aspectj*.jar,jmx.jar,h2*.jar,hibernate*.jar,httpclient*.jar,jmx-tools.jar,jta*.jar,log4j*.jar,mail*.jar,slf4j*.jar,xercesImpl.jar,xmlParserAPIs.jar,xml-apis.jar,access-bridge-64.jar,dnsns.jar,jaccess.jar,ldapsec.jar,localedata.jar,sunjce_provider.jar,sunmscapi.jar,sunpkcs11.jar,jhall.jar,tools.jar,sunec.jar,zipfs.jar,gnome-java-bridge.jar,pulse-java.jar,apple_provider.jar,AppleScriptEngine.jar,CoreAudio.jar,dns_sd.jar,j3daudio.jar,j3dcore.jar,j3dutils.jar,jai_core.jar,jai_codec.jar,mlibwrapper_jai.jar,MRJToolkit.jar,vecmath.jar,junit.jar,junit-*.jar,ant-launcher.jar, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.tomcat.,org.apache.jasper., user.script=, java.naming.factory.url.pkgs=org.apache.naming, user.home=C:\Users\vvarm1, org.apache.catalina.startup.ContextConfig.jarsToSkip=, java.specification.vendor=Oracle Corporation, hibernate.hbm2ddl.auto=update, java.library.path=C:\Program Files\Java\jdk1.7.0_10\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\JetBrains\IntelliJ IDEA Community Edition 12.0.4\bin\..\.\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\ThinkPad\Bluetooth Software\;C:\Program Files\ThinkPad\Bluetooth Software\syswow64;c:\Program Files\Intel\WiFi\bin\;c:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files (x86)\Git\cmd;C:\Users\vvarm1\Documents\play-2.0.3;C:\Program Files\Java\jdk1.7.0_10\bin;C:\Program Files\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\QuickTime\QTSystem\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Java\jre6\bin;C:\Program Files\Apache Software Foundation\apache-maven-3.0.5\bin;c:\program files (x86)\jetbrains\intellij idea community edition 12.0.4\jre\jre\bin;., java.vendor.url=http://java.oracle.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, org.apache.catalina.startup.TldConfig.jarsToSkip=, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, common.loader=${catalina.base}/lib,${catalina.base}/lib/*.jar,${catalina.home}/lib,${catalina.home}/lib/*.jar, maven.home=C:\Program Files\Apache Software Foundation\apache-maven-3.0.5, java.runtime.name=Java(TM) SE Runtime Environment, java.class.path=C:\Program Files\Apache Software Foundation\apache-maven-3.0.5\boot\plexus-classworlds-2.4.jar;C:\Program Files (x86)\JetBrains\IntelliJ IDEA Community Edition 12.0.4\lib\idea_rt.jar, sun.java.command=com.intellij.rt.execution.application.AppMain org.codehaus.classworlds.Launcher --no-plugin-registry --fail-fast --strict-checksums --update-snapshots org.apache.tomcat.maven:tomcat7-maven-plugin:2.0:run, hibernate.bytecode.use_reflection_optimizer=false, idea.launcher.port=7534, java.vm.specification.name=Java Virtual Machine Specification, catalina.home=C:\Users\vvarm1\IdeaProjects\intelTrader\target\tomcat, java.vm.specification.version=1.7, sun.os.patch.level=Service Pack 1, sun.cpu.endian=little, java.io.tmpdir=C:\Users\vvarm1\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, server.loader=, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, java.ext.dirs=C:\Program Files\Java\jdk1.7.0_10\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=C:\Users\vvarm1\IdeaProjects\intelTrader, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding=UTF-8, hibernate.use_identifier_rollback=false, java.specification.version=1.7, hibernate.show_sql=true}
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Static SQL for entity: com.inteltrader.entity.Investment
 Version select: select INVESTMENT_ID from TRADER_DB.INVESTMENT where INVESTMENT_ID =?
 Snapshot select: select investment_.INVESTMENT_ID, investment_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_, investment_.currentPrice as currentP2_2_, investment_.quantity as quantity2_, investment_.INVESTMENT_SYMBOL as INVESTMENT4_2_ from TRADER_DB.INVESTMENT investment_ where investment_.INVESTMENT_ID=?
 Insert 0: insert into TRADER_DB.INVESTMENT (associatedPortfolio_PORTFOLIO_NAME, currentPrice, quantity, INVESTMENT_SYMBOL, INVESTMENT_ID) values (?, ?, ?, ?, ?)
 Update 0: update TRADER_DB.INVESTMENT set associatedPortfolio_PORTFOLIO_NAME=?, currentPrice=?, quantity=?, INVESTMENT_SYMBOL=? where INVESTMENT_ID=?
 Delete 0: delete from TRADER_DB.INVESTMENT where INVESTMENT_ID=?
 Identity insert: insert into TRADER_DB.INVESTMENT (associatedPortfolio_PORTFOLIO_NAME, currentPrice, quantity, INVESTMENT_SYMBOL) values (?, ?, ?, ?)
Static SQL for entity: com.inteltrader.entity.Instrument
 Version select: select SYMBOL_NAME from TRADER_DB.INSTRUMENT where SYMBOL_NAME =?
 Snapshot select: select instrument_.SYMBOL_NAME from TRADER_DB.INSTRUMENT instrument_ where instrument_.SYMBOL_NAME=?
 Insert 0: insert into TRADER_DB.INSTRUMENT (SYMBOL_NAME) values (?)
 Update 0: null
 Delete 0: delete from TRADER_DB.INSTRUMENT where SYMBOL_NAME=?
Static SQL for entity: com.inteltrader.entity.Portfolio
 Version select: select PORTFOLIO_NAME from TRADER_DB.PORTFOLIO where PORTFOLIO_NAME =?
 Snapshot select: select portfolio_.PORTFOLIO_NAME from TRADER_DB.PORTFOLIO portfolio_ where portfolio_.PORTFOLIO_NAME=?
 Insert 0: insert into TRADER_DB.PORTFOLIO (PORTFOLIO_NAME) values (?)
 Update 0: null
 Delete 0: delete from TRADER_DB.PORTFOLIO where PORTFOLIO_NAME=?
Static SQL for collection: com.inteltrader.entity.Instrument.priceList
 Row insert: insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
 Row update: update TRADER_DB.INSTRUMENT_PRICE set closePrice=?, highPrice=?, lastClosePrice=?, lowPrice=?, openPrice=?, priceId=?, timeStamp=?, totalTradedQuantity=? where SYMBOL_NAME=? and priceId=? and totalTradedQuantity=?
 Row delete: delete from TRADER_DB.INSTRUMENT_PRICE where SYMBOL_NAME=? and priceId=? and totalTradedQuantity=?
 One-shot delete: delete from TRADER_DB.INSTRUMENT_PRICE where SYMBOL_NAME=?
Static SQL for collection: com.inteltrader.entity.Investment.transactionsList
 Row insert: insert into TRADER_DB.INVESTMENT_TRANSACTION (INVESTMENT_ID, quantity, transactionId, transactionPrice) values (?, ?, ?, ?)
 Row update: update TRADER_DB.INVESTMENT_TRANSACTION set quantity=?, transactionId=?, transactionPrice=? where INVESTMENT_ID=? and quantity=? and transactionId=? and transactionPrice=?
 Row delete: delete from TRADER_DB.INVESTMENT_TRANSACTION where INVESTMENT_ID=? and quantity=? and transactionId=? and transactionPrice=?
 One-shot delete: delete from TRADER_DB.INVESTMENT_TRANSACTION where INVESTMENT_ID=?
Static SQL for collection: com.inteltrader.entity.Portfolio.investmentList
 Row insert: update TRADER_DB.INVESTMENT set associatedPortfolio_PORTFOLIO_NAME=? where INVESTMENT_ID=?
 Row delete: update TRADER_DB.INVESTMENT set associatedPortfolio_PORTFOLIO_NAME=null where associatedPortfolio_PORTFOLIO_NAME=? and INVESTMENT_ID=?
 One-shot delete: update TRADER_DB.INVESTMENT set associatedPortfolio_PORTFOLIO_NAME=null where associatedPortfolio_PORTFOLIO_NAME=?
Static select for entity com.inteltrader.entity.Instrument [NONE]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for entity com.inteltrader.entity.Instrument [READ]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for entity com.inteltrader.entity.Instrument [UPGRADE]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [UPGRADE_NOWAIT]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [FORCE]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [PESSIMISTIC_READ]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? lock in share mode
Static select for entity com.inteltrader.entity.Instrument [PESSIMISTIC_WRITE]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [PESSIMISTIC_FORCE_INCREMENT]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [OPTIMISTIC]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for entity com.inteltrader.entity.Instrument [OPTIMISTIC_FORCE_INCREMENT]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for action ACTION_MERGE on entity com.inteltrader.entity.Instrument: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for action ACTION_REFRESH on entity com.inteltrader.entity.Instrument: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for entity com.inteltrader.entity.Investment [NONE]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_1_, investment0_.currentPrice as currentP2_2_1_, investment0_.quantity as quantity2_1_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_1_, portfolio1_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.INVESTMENT investment0_ left outer join TRADER_DB.PORTFOLIO portfolio1_ on investment0_.associatedPortfolio_PORTFOLIO_NAME=portfolio1_.PORTFOLIO_NAME where investment0_.INVESTMENT_ID=?
Static select for entity com.inteltrader.entity.Investment [READ]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_1_, investment0_.currentPrice as currentP2_2_1_, investment0_.quantity as quantity2_1_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_1_, portfolio1_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.INVESTMENT investment0_ left outer join TRADER_DB.PORTFOLIO portfolio1_ on investment0_.associatedPortfolio_PORTFOLIO_NAME=portfolio1_.PORTFOLIO_NAME where investment0_.INVESTMENT_ID=?
Static select for entity com.inteltrader.entity.Investment [UPGRADE]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [UPGRADE_NOWAIT]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [FORCE]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [PESSIMISTIC_READ]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? lock in share mode
Static select for entity com.inteltrader.entity.Investment [PESSIMISTIC_WRITE]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [PESSIMISTIC_FORCE_INCREMENT]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [OPTIMISTIC]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=?
Static select for entity com.inteltrader.entity.Investment [OPTIMISTIC_FORCE_INCREMENT]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=?
Static select for action ACTION_MERGE on entity com.inteltrader.entity.Investment: select investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_1_, investment0_.currentPrice as currentP2_2_1_, investment0_.quantity as quantity2_1_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_1_, portfolio1_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.INVESTMENT investment0_ left outer join TRADER_DB.PORTFOLIO portfolio1_ on investment0_.associatedPortfolio_PORTFOLIO_NAME=portfolio1_.PORTFOLIO_NAME where investment0_.INVESTMENT_ID=?
Static select for action ACTION_REFRESH on entity com.inteltrader.entity.Investment: select investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_1_, investment0_.currentPrice as currentP2_2_1_, investment0_.quantity as quantity2_1_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_1_, portfolio1_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.INVESTMENT investment0_ left outer join TRADER_DB.PORTFOLIO portfolio1_ on investment0_.associatedPortfolio_PORTFOLIO_NAME=portfolio1_.PORTFOLIO_NAME where investment0_.INVESTMENT_ID=?
Static select for entity com.inteltrader.entity.Portfolio [NONE]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Static select for entity com.inteltrader.entity.Portfolio [READ]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Static select for entity com.inteltrader.entity.Portfolio [UPGRADE]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [UPGRADE_NOWAIT]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [FORCE]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [PESSIMISTIC_READ]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? lock in share mode
Static select for entity com.inteltrader.entity.Portfolio [PESSIMISTIC_WRITE]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [PESSIMISTIC_FORCE_INCREMENT]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [OPTIMISTIC]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=?
Static select for entity com.inteltrader.entity.Portfolio [OPTIMISTIC_FORCE_INCREMENT]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=?
Static select for action ACTION_MERGE on entity com.inteltrader.entity.Portfolio: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Static select for action ACTION_REFRESH on entity com.inteltrader.entity.Portfolio: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Static select for collection com.inteltrader.entity.Instrument.priceList: select pricelist0_.SYMBOL_NAME as SYMBOL1_0_0_, pricelist0_.closePrice as closePrice1_0_, pricelist0_.highPrice as highPrice1_0_, pricelist0_.lastClosePrice as lastClos4_1_0_, pricelist0_.lowPrice as lowPrice1_0_, pricelist0_.openPrice as openPrice1_0_, pricelist0_.priceId as priceId1_0_, pricelist0_.timeStamp as timeStamp1_0_, pricelist0_.totalTradedQuantity as totalTra9_1_0_ from TRADER_DB.INSTRUMENT_PRICE pricelist0_ where pricelist0_.SYMBOL_NAME=?
Static select for one-to-many com.inteltrader.entity.Portfolio.investmentList: select investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_1_, investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.associatedPortfolio_PORTFOLIO_NAME=?
Static select for collection com.inteltrader.entity.Investment.transactionsList: select transactio0_.INVESTMENT_ID as INVESTMENT1_2_0_, transactio0_.quantity as quantity3_0_, transactio0_.transactionId as transact3_3_0_, transactio0_.transactionPrice as transact4_3_0_ from TRADER_DB.INVESTMENT_TRANSACTION transactio0_ where transactio0_.INVESTMENT_ID=?
Registering SessionFactory: 1e608b5f-adeb-4343-a295-20b68b75df39 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Instantiated session factory
HHH000228: Running hbm2ddl schema update
HHH000102: Fetching database metadata
HHH000396: Updating schema
Processing hbm.xml files
Process annotated classes
Processing fk mappings (*ToOne and JoinedSubclass)
Processing extends queue
Processing extends queue
Processing collection mappings
Processing native query and ResultSetMapping mappings
Processing association property references
Creating tables' unique integer identifiers
Processing foreign key constraints
Resolving reference to class: com.inteltrader.entity.Instrument
Resolving reference to class: com.inteltrader.entity.Portfolio
Resolving reference to class: com.inteltrader.entity.Investment
HHH000261: Table found: TRADER_DB.instrument
HHH000037: Columns: [symbol_name]
HHH000108: Foreign keys: []
HHH000126: Indexes: [primary]
HHH000261: Table found: TRADER_DB.instrument_price
HHH000037: Columns: [totaltradedquantity, timestamp, priceid, lastcloseprice, highprice, symbol_name, openprice, closeprice, lowprice]
HHH000108: Foreign keys: [fk3189a2d153ed548d]
HHH000126: Indexes: [fk3189a2d153ed548d]
HHH000261: Table found: TRADER_DB.investment
HHH000037: Columns: [investment_id, associatedportfolio_portfolio_name, currentprice, quantity, investment_symbol]
HHH000108: Foreign keys: [fk8fe41ed3c804d4f3]
HHH000126: Indexes: [fk8fe41ed3c804d4f3, primary]
HHH000261: Table found: TRADER_DB.investment_transaction
HHH000037: Columns: [transactionprice, investment_id, transactionid, quantity]
HHH000108: Foreign keys: [fka5863f52914590ae]
HHH000126: Indexes: [fka5863f52914590ae]
HHH000261: Table found: TRADER_DB.portfolio
HHH000037: Columns: [portfolio_name]
HHH000108: Foreign keys: []
HHH000126: Indexes: [primary]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
HHH000232: Schema update complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Statistics initialized [enabled=false]
Registering EntityManagerFactory: intelTrader 
HHH000436: Entity manager factory name (intelTrader) is already registered.  If entity manager will be clustered or passivated, specify a unique value for property 'hibernate.ejb.entitymanager_factory_name'
Finished creating instance of bean 'entityManagerFactory'
Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@125a86c1: defining beans [org.springframework.context.annotation.internalAsyncAnnotationProcessor,org.springframework.context.annotation.internalScheduledAnnotationProcessor,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0,org.springframework.web.servlet.view.InternalResourceViewResolver#0,instrumentDao,portfolioDao,instrumentService,portfolioService,entityManagerFactory,transactionManager,instrument,investment,portfolio,instrumentServiceRest,portfolioServiceRest,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor]; parent: org.springframework.beans.factory.support.DefaultListableBeanFactory@1baececc
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Creating instance of bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0' to allow for resolving potential circular references
Creating instance of bean '(inner bean)'
Creating shared instance of singleton bean 'transactionManager'
Creating instance of bean 'transactionManager'
Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
Returning cached instance of singleton bean 'entityManagerFactory'
Invoking afterPropertiesSet() on bean with name 'transactionManager'
Finished creating instance of bean 'transactionManager'
Creating instance of bean '(inner bean)'
Finished creating instance of bean '(inner bean)'
Invoking afterPropertiesSet() on bean with name '(inner bean)'
Finished creating instance of bean '(inner bean)'
Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Creating shared instance of singleton bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Creating instance of bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Eagerly caching bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Creating shared instance of singleton bean 'instrumentDao'
Creating instance of bean 'instrumentDao'
Eagerly caching bean 'instrumentDao' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'instrumentDao'
Creating shared instance of singleton bean 'portfolioDao'
Creating instance of bean 'portfolioDao'
Eagerly caching bean 'portfolioDao' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'portfolioDao'
Creating shared instance of singleton bean 'instrumentService'
Creating instance of bean 'instrumentService'
Registered injected element on class [com.inteltrader.service.InstrumentServiceImpl]: PersistenceElement for javax.persistence.EntityManagerFactory com.inteltrader.service.InstrumentServiceImpl.entityManagerFactory
Registered injected element on class [com.inteltrader.service.InstrumentServiceImpl]: AutowiredFieldElement for private com.inteltrader.dao.IInstrumentDao com.inteltrader.service.InstrumentServiceImpl.instrumentDao
Registered injected element on class [com.inteltrader.service.InstrumentServiceImpl]: AutowiredFieldElement for private com.inteltrader.service.PortfolioService com.inteltrader.service.InstrumentServiceImpl.portfolioService
Eagerly caching bean 'instrumentService' to allow for resolving potential circular references
Processing injected method of bean 'instrumentService': PersistenceElement for javax.persistence.EntityManagerFactory com.inteltrader.service.InstrumentServiceImpl.entityManagerFactory
Returning cached instance of singleton bean 'entityManagerFactory'
Processing injected method of bean 'instrumentService': AutowiredFieldElement for private com.inteltrader.dao.IInstrumentDao com.inteltrader.service.InstrumentServiceImpl.instrumentDao
Returning cached instance of singleton bean 'instrumentDao'
Autowiring by type from bean name 'instrumentService' to bean named 'instrumentDao'
Processing injected method of bean 'instrumentService': AutowiredFieldElement for private com.inteltrader.service.PortfolioService com.inteltrader.service.InstrumentServiceImpl.portfolioService
Creating shared instance of singleton bean 'portfolioService'
Creating instance of bean 'portfolioService'
Registered injected element on class [com.inteltrader.service.PortfolioServiceImpl]: PersistenceElement for private javax.persistence.EntityManagerFactory com.inteltrader.service.PortfolioServiceImpl.entityManagerFactory
Registered injected element on class [com.inteltrader.service.PortfolioServiceImpl]: AutowiredFieldElement for private com.inteltrader.dao.IPortfolioDao com.inteltrader.service.PortfolioServiceImpl.portfolioDao
Eagerly caching bean 'portfolioService' to allow for resolving potential circular references
Processing injected method of bean 'portfolioService': PersistenceElement for private javax.persistence.EntityManagerFactory com.inteltrader.service.PortfolioServiceImpl.entityManagerFactory
Returning cached instance of singleton bean 'entityManagerFactory'
Processing injected method of bean 'portfolioService': AutowiredFieldElement for private com.inteltrader.dao.IPortfolioDao com.inteltrader.service.PortfolioServiceImpl.portfolioDao
Returning cached instance of singleton bean 'portfolioDao'
Autowiring by type from bean name 'portfolioService' to bean named 'portfolioDao'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'portfolioService'
Autowiring by type from bean name 'instrumentService' to bean named 'portfolioService'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'instrumentService'
Returning cached instance of singleton bean 'portfolioService'
Returning cached instance of singleton bean 'entityManagerFactory'
Returning cached instance of singleton bean 'transactionManager'
Creating shared instance of singleton bean 'instrument'
Creating instance of bean 'instrument'
Eagerly caching bean 'instrument' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'instrument'
Creating shared instance of singleton bean 'investment'
Creating instance of bean 'investment'
Eagerly caching bean 'investment' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'investment'
Creating shared instance of singleton bean 'portfolio'
Creating instance of bean 'portfolio'
Eagerly caching bean 'portfolio' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'portfolio'
Creating shared instance of singleton bean 'instrumentServiceRest'
Creating instance of bean 'instrumentServiceRest'
Registered injected element on class [com.inteltrader.rest.InstrumentServiceRest]: AutowiredFieldElement for private com.inteltrader.service.InstrumentService com.inteltrader.rest.InstrumentServiceRest.instrumentService
Eagerly caching bean 'instrumentServiceRest' to allow for resolving potential circular references
Processing injected method of bean 'instrumentServiceRest': AutowiredFieldElement for private com.inteltrader.service.InstrumentService com.inteltrader.rest.InstrumentServiceRest.instrumentService
Returning cached instance of singleton bean 'instrumentService'
Autowiring by type from bean name 'instrumentServiceRest' to bean named 'instrumentService'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'instrumentServiceRest'
Creating shared instance of singleton bean 'portfolioServiceRest'
Creating instance of bean 'portfolioServiceRest'
Registered injected element on class [com.inteltrader.rest.PortfolioServiceRest]: AutowiredFieldElement for private com.inteltrader.service.PortfolioService com.inteltrader.rest.PortfolioServiceRest.portfolioService
Eagerly caching bean 'portfolioServiceRest' to allow for resolving potential circular references
Processing injected method of bean 'portfolioServiceRest': AutowiredFieldElement for private com.inteltrader.service.PortfolioService com.inteltrader.rest.PortfolioServiceRest.portfolioService
Returning cached instance of singleton bean 'portfolioService'
Autowiring by type from bean name 'portfolioServiceRest' to bean named 'portfolioService'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'portfolioServiceRest'
Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@7c8e8990]
Returning cached instance of singleton bean 'lifecycleProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Unable to locate MultipartResolver with name 'multipartResolver': no multipart request handling provided
Creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Unable to locate LocaleResolver with name 'localeResolver': using default [org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver@2873bb26]
Creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Unable to locate ThemeResolver with name 'themeResolver': using default [org.springframework.web.servlet.theme.FixedThemeResolver@585724f]
Creating instance of bean 'org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping'
Looking for URL mappings in application context: WebApplicationContext for namespace 'appServlet-servlet': startup date [Fri Apr 19 16:10:22 IST 2013]; parent: Root WebApplicationContext
Rejected bean name 'org.springframework.context.annotation.internalAsyncAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalScheduledAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalRequiredAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalCommonAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.aop.config.internalAutoProxyCreator': no URL paths identified
Rejected bean name 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0': no URL paths identified
Rejected bean name 'org.springframework.web.servlet.view.InternalResourceViewResolver#0': no URL paths identified
Rejected bean name 'instrumentDao': no URL paths identified
Rejected bean name 'portfolioDao': no URL paths identified
Rejected bean name 'instrumentService': no URL paths identified
Rejected bean name 'portfolioService': no URL paths identified
Rejected bean name 'entityManagerFactory': no URL paths identified
Rejected bean name 'transactionManager': no URL paths identified
Rejected bean name 'instrument': no URL paths identified
Rejected bean name 'investment': no URL paths identified
Rejected bean name 'portfolio': no URL paths identified
Rejected bean name 'instrumentServiceRest': no URL paths identified
Rejected bean name 'portfolioServiceRest': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor': no URL paths identified
Rejected bean name 'environment': no URL paths identified
Rejected bean name 'systemProperties': no URL paths identified
Rejected bean name 'systemEnvironment': no URL paths identified
Rejected bean name 'servletConfig': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry': no URL paths identified
Rejected bean name 'messageSource': no URL paths identified
Rejected bean name 'applicationEventMulticaster': no URL paths identified
Rejected bean name 'lifecycleProcessor': no URL paths identified
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping'
Creating instance of bean 'org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping'
Looking for URL mappings in application context: WebApplicationContext for namespace 'appServlet-servlet': startup date [Fri Apr 19 16:10:22 IST 2013]; parent: Root WebApplicationContext
Rejected bean name 'org.springframework.context.annotation.internalAsyncAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalScheduledAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalRequiredAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalCommonAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.aop.config.internalAutoProxyCreator': no URL paths identified
Rejected bean name 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0': no URL paths identified
Rejected bean name 'org.springframework.web.servlet.view.InternalResourceViewResolver#0': no URL paths identified
Rejected bean name 'instrumentDao': no URL paths identified
Rejected bean name 'portfolioDao': no URL paths identified
Rejected bean name 'instrumentService': no URL paths identified
Rejected bean name 'portfolioService': no URL paths identified
Rejected bean name 'entityManagerFactory': no URL paths identified
Rejected bean name 'transactionManager': no URL paths identified
Rejected bean name 'instrument': no URL paths identified
Rejected bean name 'investment': no URL paths identified
Rejected bean name 'portfolio': no URL paths identified
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/create/{symbol}] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/create/{symbol}.*] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/create/{symbol}/] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/update/{portfolioName}] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/update/{portfolioName}.*] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/update/{portfolioName}/] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/load/{symbol}] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/load/{symbol}.*] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/load/{symbol}/] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/create/{portfolioName}] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/create/{portfolioName}.*] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/create/{portfolioName}/] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/load/{portfolioName}] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/load/{portfolioName}.*] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/load/{portfolioName}/] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/addInvestment/{portfolioName}/{symbolName}] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/addInvestment/{portfolioName}/{symbolName}.*] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/addInvestment/{portfolioName}/{symbolName}/] onto handler 'portfolioServiceRest'
Rejected bean name 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor': no URL paths identified
Rejected bean name 'environment': no URL paths identified
Rejected bean name 'systemProperties': no URL paths identified
Rejected bean name 'systemEnvironment': no URL paths identified
Rejected bean name 'servletConfig': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry': no URL paths identified
Rejected bean name 'messageSource': no URL paths identified
Rejected bean name 'applicationEventMulticaster': no URL paths identified
Rejected bean name 'lifecycleProcessor': no URL paths identified
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping'
No HandlerMappings found in servlet 'appServlet': using default
Creating instance of bean 'org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter'
Creating instance of bean 'org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter'
Creating instance of bean 'org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter'
No HandlerAdapters found in servlet 'appServlet': using default
Creating instance of bean 'org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerExceptionResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerExceptionResolver'
Creating instance of bean 'org.springframework.web.servlet.mvc.annotation.ResponseStatusExceptionResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.annotation.ResponseStatusExceptionResolver'
Creating instance of bean 'org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver'
No HandlerExceptionResolvers found in servlet 'appServlet': using default
Creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Unable to locate RequestToViewNameTranslator with name 'viewNameTranslator': using default [org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@4888052c]
Returning cached instance of singleton bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Returning cached instance of singleton bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Unable to locate FlashMapManager with name 'flashMapManager': using default [org.springframework.web.servlet.support.SessionFlashMapManager@d76516b]
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Searching for key 'spring.liveBeansView.mbeanDomain' in [servletConfigInitParams]
Searching for key 'spring.liveBeansView.mbeanDomain' in [servletContextInitParams]
Searching for key 'spring.liveBeansView.mbeanDomain' in [jndiProperties]
Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain]
Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException: Name [spring.liveBeansView.mbeanDomain] is not bound in this Context. Unable to find [spring.liveBeansView.mbeanDomain].
Looking up JNDI object with name [spring.liveBeansView.mbeanDomain]
JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: Name [spring.liveBeansView.mbeanDomain] is not bound in this Context. Unable to find [spring.liveBeansView.mbeanDomain].. Returning null.
Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
Published WebApplicationContext of servlet 'appServlet' as ServletContext attribute with name [org.springframework.web.servlet.FrameworkServlet.CONTEXT.appServlet]
FrameworkServlet 'appServlet': initialization completed in 520 ms
Servlet 'appServlet' configured successfully
DispatcherServlet with name 'appServlet' processing GET request for [/portfolio/addInvestment/myFirstTime/CIPLA]
Matching patterns for request [/portfolio/addInvestment/myFirstTime/CIPLA] are [/portfolio/addInvestment/{portfolioName}/{symbolName}]
URI Template variables for request [/portfolio/addInvestment/myFirstTime/CIPLA] are {portfolioName=myFirstTime, symbolName=CIPLA}
Mapping [/portfolio/addInvestment/myFirstTime/CIPLA] to HandlerExecutionChain with handler [com.inteltrader.rest.PortfolioServiceRest@19e845e2] and 2 interceptors
Last-Modified value for [/portfolio/addInvestment/myFirstTime/CIPLA] is: -1
Invoking request handler method: public org.springframework.http.ResponseEntity com.inteltrader.rest.PortfolioServiceRest.addInvestment(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
begin
Obtaining JDBC connection
Obtained JDBC connection
initial autocommit status: true
disabling autocommit
Loading entity: [com.inteltrader.entity.Portfolio#myFirstTime]
select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Result set row: 0
Result row: EntityKey[com.inteltrader.entity.Investment#1], EntityKey[com.inteltrader.entity.Portfolio#myFirstTime]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Resolving associations for [com.inteltrader.entity.Investment#1]
Done materializing entity [com.inteltrader.entity.Investment#1]
Resolving associations for [com.inteltrader.entity.Portfolio#myFirstTime]
Done materializing entity [com.inteltrader.entity.Portfolio#myFirstTime]
1 collections were found in result set for role: com.inteltrader.entity.Portfolio.investmentList
Collection fully initialized: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
1 collections initialized for role: com.inteltrader.entity.Portfolio.investmentList
Done entity load
Loading collection: [com.inteltrader.entity.Investment.transactionsList#1]
select transactio0_.INVESTMENT_ID as INVESTMENT1_2_0_, transactio0_.quantity as quantity3_0_, transactio0_.transactionId as transact3_3_0_, transactio0_.transactionPrice as transact4_3_0_ from TRADER_DB.INVESTMENT_TRANSACTION transactio0_ where transactio0_.INVESTMENT_ID=?
Result set contains (possibly empty) collection: [com.inteltrader.entity.Investment.transactionsList#1]
1 collections were found in result set for role: com.inteltrader.entity.Investment.transactionsList
Collection fully initialized: [com.inteltrader.entity.Investment.transactionsList#1]
1 collections initialized for role: com.inteltrader.entity.Investment.transactionsList
Done loading collection
committing
Processing flush-time cascades
Executing identity-insert immediately
insert into TRADER_DB.INVESTMENT (associatedPortfolio_PORTFOLIO_NAME, currentPrice, quantity, INVESTMENT_SYMBOL) values (?, ?, ?, ?)
Natively generated identity: 2
Dirty checking collections
Collection dirty: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Collection found: [com.inteltrader.entity.Investment.transactionsList#1], was: [com.inteltrader.entity.Investment.transactionsList#1] (initialized)
Collection found: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime], was: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime] (initialized)
Collection found: [com.inteltrader.entity.Investment.transactionsList#2], was: [<unreferenced>] (initialized)
Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
Flushed: 1 (re)creations, 1 updates, 0 removals to 3 collections
Listing entities:
com.inteltrader.entity.Investment{investmentId=2, quantity=null, currentPrice=null, symbolName=CIPLA, associatedPortfolio=com.inteltrader.entity.Portfolio#myFirstTime, transactionsList=[]}
com.inteltrader.entity.Investment{investmentId=1, quantity=null, currentPrice=null, symbolName=AMTEKAUTO, associatedPortfolio=com.inteltrader.entity.Portfolio#myFirstTime, transactionsList=[]}
com.inteltrader.entity.Portfolio{portfolioName=myFirstTime, investmentList=[com.inteltrader.entity.Investment#1, com.inteltrader.entity.Investment#2]}
Inserting collection: [com.inteltrader.entity.Investment.transactionsList#2]
Collection was empty
committed JDBC Connection
re-enabling autocommit
Written [SUCCESS] as "text/html" using [org.springframework.http.converter.StringHttpMessageConverter@778cd80]
Null ModelAndView returned to DispatcherServlet with name 'appServlet': assuming HandlerAdapter completed request handling
Successfully completed request
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
DispatcherServlet with name 'appServlet' processing GET request for [/portfolio/addInvestment/myFirstTime/BLAD]
Matching patterns for request [/portfolio/addInvestment/myFirstTime/BLAD] are [/portfolio/addInvestment/{portfolioName}/{symbolName}]
URI Template variables for request [/portfolio/addInvestment/myFirstTime/BLAD] are {portfolioName=myFirstTime, symbolName=BLAD}
Mapping [/portfolio/addInvestment/myFirstTime/BLAD] to HandlerExecutionChain with handler [com.inteltrader.rest.PortfolioServiceRest@19e845e2] and 2 interceptors
Last-Modified value for [/portfolio/addInvestment/myFirstTime/BLAD] is: -1
Invoking request handler method: public org.springframework.http.ResponseEntity com.inteltrader.rest.PortfolioServiceRest.addInvestment(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
begin
Obtaining JDBC connection
Opening new JDBC connection
Created connection to: jdbc:mysql://localhost:3306/TRADER_DB, Isolation Level: 4
Obtained JDBC connection
initial autocommit status: true
disabling autocommit
Loading entity: [com.inteltrader.entity.Portfolio#myFirstTime]
select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Result set row: 0
Result row: EntityKey[com.inteltrader.entity.Investment#1], EntityKey[com.inteltrader.entity.Portfolio#myFirstTime]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Result set row: 1
Result row: EntityKey[com.inteltrader.entity.Investment#2], EntityKey[com.inteltrader.entity.Portfolio#myFirstTime]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Resolving associations for [com.inteltrader.entity.Investment#1]
Done materializing entity [com.inteltrader.entity.Investment#1]
Resolving associations for [com.inteltrader.entity.Portfolio#myFirstTime]
Done materializing entity [com.inteltrader.entity.Portfolio#myFirstTime]
Resolving associations for [com.inteltrader.entity.Investment#2]
Done materializing entity [com.inteltrader.entity.Investment#2]
1 collections were found in result set for role: com.inteltrader.entity.Portfolio.investmentList
Collection fully initialized: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
1 collections initialized for role: com.inteltrader.entity.Portfolio.investmentList
Done entity load
Loading collection: [com.inteltrader.entity.Investment.transactionsList#1]
select transactio0_.INVESTMENT_ID as INVESTMENT1_2_0_, transactio0_.quantity as quantity3_0_, transactio0_.transactionId as transact3_3_0_, transactio0_.transactionPrice as transact4_3_0_ from TRADER_DB.INVESTMENT_TRANSACTION transactio0_ where transactio0_.INVESTMENT_ID=?
Result set contains (possibly empty) collection: [com.inteltrader.entity.Investment.transactionsList#1]
1 collections were found in result set for role: com.inteltrader.entity.Investment.transactionsList
Collection fully initialized: [com.inteltrader.entity.Investment.transactionsList#1]
1 collections initialized for role: com.inteltrader.entity.Investment.transactionsList
Done loading collection
Loading collection: [com.inteltrader.entity.Investment.transactionsList#2]
select transactio0_.INVESTMENT_ID as INVESTMENT1_2_0_, transactio0_.quantity as quantity3_0_, transactio0_.transactionId as transact3_3_0_, transactio0_.transactionPrice as transact4_3_0_ from TRADER_DB.INVESTMENT_TRANSACTION transactio0_ where transactio0_.INVESTMENT_ID=?
Result set contains (possibly empty) collection: [com.inteltrader.entity.Investment.transactionsList#2]
1 collections were found in result set for role: com.inteltrader.entity.Investment.transactionsList
Collection fully initialized: [com.inteltrader.entity.Investment.transactionsList#2]
1 collections initialized for role: com.inteltrader.entity.Investment.transactionsList
Done loading collection
committing
Processing flush-time cascades
Executing identity-insert immediately
insert into TRADER_DB.INVESTMENT (associatedPortfolio_PORTFOLIO_NAME, currentPrice, quantity, INVESTMENT_SYMBOL) values (?, ?, ?, ?)
Natively generated identity: 3
Dirty checking collections
Collection dirty: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Collection found: [com.inteltrader.entity.Investment.transactionsList#1], was: [com.inteltrader.entity.Investment.transactionsList#1] (initialized)
Collection found: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime], was: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime] (initialized)
Collection found: [com.inteltrader.entity.Investment.transactionsList#2], was: [com.inteltrader.entity.Investment.transactionsList#2] (initialized)
Collection found: [com.inteltrader.entity.Investment.transactionsList#3], was: [<unreferenced>] (initialized)
Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
Flushed: 1 (re)creations, 1 updates, 0 removals to 4 collections
Listing entities:
com.inteltrader.entity.Investment{investmentId=3, quantity=null, currentPrice=null, symbolName=BLAD, associatedPortfolio=com.inteltrader.entity.Portfolio#myFirstTime, transactionsList=[]}
com.inteltrader.entity.Investment{investmentId=2, quantity=null, currentPrice=null, symbolName=CIPLA, associatedPortfolio=com.inteltrader.entity.Portfolio#myFirstTime, transactionsList=[]}
com.inteltrader.entity.Investment{investmentId=1, quantity=null, currentPrice=null, symbolName=AMTEKAUTO, associatedPortfolio=com.inteltrader.entity.Portfolio#myFirstTime, transactionsList=[]}
com.inteltrader.entity.Portfolio{portfolioName=myFirstTime, investmentList=[com.inteltrader.entity.Investment#1, com.inteltrader.entity.Investment#2, com.inteltrader.entity.Investment#3]}
Inserting collection: [com.inteltrader.entity.Investment.transactionsList#3]
Collection was empty
committed JDBC Connection
re-enabling autocommit
Written [SUCCESS] as "text/html" using [org.springframework.http.converter.StringHttpMessageConverter@778cd80]
Null ModelAndView returned to DispatcherServlet with name 'appServlet': assuming HandlerAdapter completed request handling
Successfully completed request
DispatcherServlet with name 'appServlet' processing GET request for [/portfolio/load/MyFirstTime]
Matching patterns for request [/portfolio/load/MyFirstTime] are [/portfolio/load/{portfolioName}]
URI Template variables for request [/portfolio/load/MyFirstTime] are {portfolioName=MyFirstTime}
Mapping [/portfolio/load/MyFirstTime] to HandlerExecutionChain with handler [com.inteltrader.rest.PortfolioServiceRest@19e845e2] and 2 interceptors
Last-Modified value for [/portfolio/load/MyFirstTime] is: -1
Invoking request handler method: public org.springframework.http.ResponseEntity com.inteltrader.rest.PortfolioServiceRest.loadInstrument(java.lang.String,javax.servlet.http.HttpServletRequest)
Loading entity: [com.inteltrader.entity.Portfolio#MyFirstTime]
Obtaining JDBC connection
Opening new JDBC connection
Created connection to: jdbc:mysql://localhost:3306/TRADER_DB, Isolation Level: 4
Obtained JDBC connection
select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Result set row: 0
Result row: EntityKey[com.inteltrader.entity.Investment#1], EntityKey[com.inteltrader.entity.Portfolio#MyFirstTime]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Result set row: 1
Result row: EntityKey[com.inteltrader.entity.Investment#2], EntityKey[com.inteltrader.entity.Portfolio#MyFirstTime]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Result set row: 2
Result row: EntityKey[com.inteltrader.entity.Investment#3], EntityKey[com.inteltrader.entity.Portfolio#MyFirstTime]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Resolving associations for [com.inteltrader.entity.Investment#1]
Loading entity: [com.inteltrader.entity.Portfolio#myFirstTime]
select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Result set row: 0
Result row: EntityKey[com.inteltrader.entity.Investment#1], EntityKey[com.inteltrader.entity.Portfolio#myFirstTime]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Result set row: 1
Result row: EntityKey[com.inteltrader.entity.Investment#2], EntityKey[com.inteltrader.entity.Portfolio#myFirstTime]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Result set row: 2
Result row: EntityKey[com.inteltrader.entity.Investment#3], EntityKey[com.inteltrader.entity.Portfolio#myFirstTime]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Resolving associations for [com.inteltrader.entity.Portfolio#myFirstTime]
Done materializing entity [com.inteltrader.entity.Portfolio#myFirstTime]
No collections were found in result set for role: com.inteltrader.entity.Portfolio.investmentList
Done entity load
Done materializing entity [com.inteltrader.entity.Investment#1]
Resolving associations for [com.inteltrader.entity.Portfolio#MyFirstTime]
Done materializing entity [com.inteltrader.entity.Portfolio#MyFirstTime]
Resolving associations for [com.inteltrader.entity.Investment#2]
Done materializing entity [com.inteltrader.entity.Investment#2]
Resolving associations for [com.inteltrader.entity.Investment#3]
Done materializing entity [com.inteltrader.entity.Investment#3]
1 collections were found in result set for role: com.inteltrader.entity.Portfolio.investmentList
Collection fully initialized: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
1 collections initialized for role: com.inteltrader.entity.Portfolio.investmentList
Loading collection: [com.inteltrader.entity.Portfolio.investmentList#MyFirstTime]
select investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_1_, investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.associatedPortfolio_PORTFOLIO_NAME=?
Result set contains (possibly empty) collection: [com.inteltrader.entity.Portfolio.investmentList#MyFirstTime]
Result set row: 0
Result row: EntityKey[com.inteltrader.entity.Investment#1]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Result set row: 1
Result row: EntityKey[com.inteltrader.entity.Investment#2]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Result set row: 2
Result row: EntityKey[com.inteltrader.entity.Investment#3]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
1 collections were found in result set for role: com.inteltrader.entity.Portfolio.investmentList
Collection fully initialized: [com.inteltrader.entity.Portfolio.investmentList#MyFirstTime]
1 collections initialized for role: com.inteltrader.entity.Portfolio.investmentList
Done loading collection
Done entity load
Written [{"portfolioName":"MyFirstTime","investmentList":[]}] as "text/html" using [org.springframework.http.converter.StringHttpMessageConverter@778cd80]
Null ModelAndView returned to DispatcherServlet with name 'appServlet': assuming HandlerAdapter completed request handling
Successfully completed request
Initializing servlet 'appServlet'
Initializing new StandardServletEnvironment
Adding [servletConfigInitParams] PropertySource with lowest search precedence
Adding [servletContextInitParams] PropertySource with lowest search precedence
Adding [jndiProperties] PropertySource with lowest search precedence
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment]
FrameworkServlet 'appServlet': initialization started
Servlet with name 'appServlet' will try to create custom WebApplicationContext context of class 'org.springframework.web.context.support.XmlWebApplicationContext', using parent context [Root WebApplicationContext: startup date [Fri Apr 19 17:12:41 IST 2013]; root of context hierarchy]
Searching for key 'spring.profiles.active' in [servletConfigInitParams]
Searching for key 'spring.profiles.active' in [servletContextInitParams]
Searching for key 'spring.profiles.active' in [jndiProperties]
Looking up JNDI object with name [java:comp/env/spring.profiles.active]
Converted JNDI name [java:comp/env/spring.profiles.active] not found - trying original name [spring.profiles.active]. javax.naming.NameNotFoundException: Name [spring.profiles.active] is not bound in this Context. Unable to find [spring.profiles.active].
Looking up JNDI object with name [spring.profiles.active]
JNDI lookup for name [spring.profiles.active] threw NamingException with message: Name [spring.profiles.active] is not bound in this Context. Unable to find [spring.profiles.active].. Returning null.
Searching for key 'spring.profiles.active' in [systemProperties]
Searching for key 'spring.profiles.active' in [systemEnvironment]
Could not find key 'spring.profiles.active' in any property source. Returning [null]
Searching for key 'spring.profiles.default' in [servletConfigInitParams]
Searching for key 'spring.profiles.default' in [servletContextInitParams]
Searching for key 'spring.profiles.default' in [jndiProperties]
Looking up JNDI object with name [java:comp/env/spring.profiles.default]
Converted JNDI name [java:comp/env/spring.profiles.default] not found - trying original name [spring.profiles.default]. javax.naming.NameNotFoundException: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].
Looking up JNDI object with name [spring.profiles.default]
JNDI lookup for name [spring.profiles.default] threw NamingException with message: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].. Returning null.
Searching for key 'spring.profiles.default' in [systemProperties]
Searching for key 'spring.profiles.default' in [systemEnvironment]
Could not find key 'spring.profiles.default' in any property source. Returning [null]
Searching for key 'spring.profiles.default' in [servletConfigInitParams]
Searching for key 'spring.profiles.default' in [servletContextInitParams]
Searching for key 'spring.profiles.default' in [jndiProperties]
Looking up JNDI object with name [java:comp/env/spring.profiles.default]
Converted JNDI name [java:comp/env/spring.profiles.default] not found - trying original name [spring.profiles.default]. javax.naming.NameNotFoundException: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].
Looking up JNDI object with name [spring.profiles.default]
JNDI lookup for name [spring.profiles.default] threw NamingException with message: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].. Returning null.
Searching for key 'spring.profiles.default' in [systemProperties]
Searching for key 'spring.profiles.default' in [systemEnvironment]
Could not find key 'spring.profiles.default' in any property source. Returning [null]
Replacing [servletContextInitParams] PropertySource with [servletContextInitParams]
Replacing [servletConfigInitParams] PropertySource with [servletConfigInitParams]
Refreshing WebApplicationContext for namespace 'appServlet-servlet': startup date [Fri Apr 19 17:12:43 IST 2013]; parent: Root WebApplicationContext
Initializing new StandardEnvironment
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
Initializing new StandardEnvironment
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
Loading schema mappings from [META-INF/spring.schemas]
Loaded schema mappings: {http://www.springframework.org/schema/data/jpa/spring-jpa-1.2.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.2.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.1.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.1.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.5.xsd=org/springframework/data/repository/config/spring-repository-1.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.0.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.3.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.4.xsd=org/springframework/data/repository/config/spring-repository-1.4.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.3.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/data/repository/spring-repository.xsd=org/springframework/data/repository/config/spring-repository-1.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.0.xsd=org/springframework/data/repository/config/spring-repository-1.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.1.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.1.xsd
Found XML schema [http://www.springframework.org/schema/task/spring-task-3.0.xsd] in classpath: org/springframework/scheduling/config/spring-task-3.0.xsd
Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd
Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd
Found XML schema [http://www.springframework.org/schema/tx/spring-tx-3.1.xsd] in classpath: org/springframework/transaction/config/spring-tx-3.1.xsd
Loading bean definitions
Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/data/repository=org.springframework.data.repository.config.RepositoryNameSpaceHandler, http://www.springframework.org/schema/data/jpa=org.springframework.data.jpa.repository.config.JpaRepositoryNameSpaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
Neither XML 'id' nor 'name' specified - using generated bean name [org.springframework.web.servlet.view.InternalResourceViewResolver#0]
Neither XML 'id' nor 'name' specified - using generated bean name [org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver#5dfbffce]
Initializing new StandardEnvironment
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
Looking for matching resources in directory tree [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Resolved location pattern [classpath*:com/inteltrader/**/*.class] to resources [file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\Advice.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\FIFOList.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\InstrumentVo.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\Strategies.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\Strategy.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\StrategyMACD.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao\IInstrumentDao.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao\InstrumentDao.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao\IPortfolioDao.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao\PortfolioDao.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Instrument.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Investment.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Portfolio.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Price.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Transactions.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest\InstrumentServiceRest.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest\PortfolioServiceRest.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\AnalyserService.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\CronService.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\InstrumentService.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\InstrumentServiceImpl.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\PortfolioService.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\PortfolioServiceImpl.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util\DownloadZip.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util\ExtractZipFile.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util\ReadPriceCsv.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util\RestCodes.class]]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Instrument.class]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Investment.class]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Portfolio.class]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest\InstrumentServiceRest.class]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest\PortfolioServiceRest.class]
Loaded 21 bean definitions from location pattern [/WEB-INF/applicationContext.xml]
Bean factory for WebApplicationContext for namespace 'appServlet-servlet': org.springframework.beans.factory.support.DefaultListableBeanFactory@4b575d96: defining beans [org.springframework.context.annotation.internalAsyncAnnotationProcessor,org.springframework.context.annotation.internalScheduledAnnotationProcessor,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0,org.springframework.web.servlet.view.InternalResourceViewResolver#0,instrumentDao,portfolioDao,instrumentService,portfolioService,entityManagerFactory,transactionManager,instrument,investment,portfolio,instrumentServiceRest,portfolioServiceRest]; parent: org.springframework.beans.factory.support.DefaultListableBeanFactory@346bc53f
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@49e4230e]
Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@20b99208]
Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.DelegatingThemeSource@77225c00]
Creating shared instance of singleton bean 'entityManagerFactory'
Creating instance of bean 'entityManagerFactory'
Eagerly caching bean 'entityManagerFactory' to allow for resolving potential circular references
Creating instance of bean 'org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver#5dfbffce'
Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Creating instance of bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0' to allow for resolving potential circular references
Creating instance of bean '(inner bean)'
Creating shared instance of singleton bean 'transactionManager'
Creating instance of bean 'transactionManager'
Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
Returning eagerly cached instance of singleton bean 'entityManagerFactory' that is not fully initialized yet - a consequence of a circular reference
Ignoring currently created advisor 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0': Error creating bean with name 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0': Cannot create inner bean '(inner bean)' of type [org.springframework.transaction.interceptor.TransactionInterceptor] while setting bean property 'transactionInterceptor'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)': Cannot resolve reference to bean 'transactionManager' while setting bean property 'transactionManager'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'transactionManager' defined in ServletContext resource [/WEB-INF/applicationContext.xml]: Cannot resolve reference to bean 'entityManagerFactory' while setting bean property 'entityManagerFactory'; nested exception is org.springframework.beans.factory.BeanCurrentlyInCreationException: Error creating bean with name 'entityManagerFactory': FactoryBean which is currently in creation returned null from getObject
Finished creating instance of bean 'org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver#5dfbffce'
Invoking afterPropertiesSet() on bean with name 'entityManagerFactory'
Building JPA container EntityManagerFactory for persistence unit 'intelTrader'
Adding type registration boolean -> org.hibernate.type.BooleanType@45e1d85d
Adding type registration boolean -> org.hibernate.type.BooleanType@45e1d85d
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@45e1d85d
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6e93b440
Adding type registration true_false -> org.hibernate.type.TrueFalseType@486d2340
Adding type registration yes_no -> org.hibernate.type.YesNoType@68a3ca9e
Adding type registration byte -> org.hibernate.type.ByteType@789cca2a
Adding type registration byte -> org.hibernate.type.ByteType@789cca2a
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@789cca2a
Adding type registration character -> org.hibernate.type.CharacterType@27d74a21
Adding type registration char -> org.hibernate.type.CharacterType@27d74a21
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@27d74a21
Adding type registration short -> org.hibernate.type.ShortType@61869e64
Adding type registration short -> org.hibernate.type.ShortType@61869e64
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@61869e64
Adding type registration integer -> org.hibernate.type.IntegerType@7d64cf04
Adding type registration int -> org.hibernate.type.IntegerType@7d64cf04
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7d64cf04
Adding type registration long -> org.hibernate.type.LongType@305d52e
Adding type registration long -> org.hibernate.type.LongType@305d52e
Adding type registration java.lang.Long -> org.hibernate.type.LongType@305d52e
Adding type registration float -> org.hibernate.type.FloatType@b84a4f1
Adding type registration float -> org.hibernate.type.FloatType@b84a4f1
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@b84a4f1
Adding type registration double -> org.hibernate.type.DoubleType@47759a6e
Adding type registration double -> org.hibernate.type.DoubleType@47759a6e
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@47759a6e
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1990c3f5
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1990c3f5
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6d345609
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6d345609
Adding type registration string -> org.hibernate.type.StringType@3d379e29
Adding type registration java.lang.String -> org.hibernate.type.StringType@3d379e29
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@54cf2ae
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2a5c0ab8
Adding type registration url -> org.hibernate.type.UrlType@3c48e8f5
Adding type registration java.net.URL -> org.hibernate.type.UrlType@3c48e8f5
Adding type registration date -> org.hibernate.type.DateType@7bedccdd
Adding type registration java.sql.Date -> org.hibernate.type.DateType@7bedccdd
Adding type registration time -> org.hibernate.type.TimeType@c50dd20
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@c50dd20
Adding type registration timestamp -> org.hibernate.type.TimestampType@5f8ac638
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5f8ac638
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5f8ac638
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@33c4ea91
Adding type registration calendar -> org.hibernate.type.CalendarType@4a9ed9f8
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4a9ed9f8
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4a9ed9f8
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1ed8e92c
Adding type registration locale -> org.hibernate.type.LocaleType@3221e751
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3221e751
Adding type registration currency -> org.hibernate.type.CurrencyType@359a48b2
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@359a48b2
Adding type registration timezone -> org.hibernate.type.TimeZoneType@4ea4311e
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4ea4311e
Adding type registration class -> org.hibernate.type.ClassType@6ec517f4
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6ec517f4
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@162382a5
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@162382a5
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4cb1616f
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@4e8bf62
Adding type registration binary -> org.hibernate.type.BinaryType@5295f395
Adding type registration byte[] -> org.hibernate.type.BinaryType@5295f395
Adding type registration [B -> org.hibernate.type.BinaryType@5295f395
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6b583cc9
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6b583cc9
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6b583cc9
Adding type registration image -> org.hibernate.type.ImageType@6e9701a1
Adding type registration characters -> org.hibernate.type.CharArrayType@480ee892
Adding type registration char[] -> org.hibernate.type.CharArrayType@480ee892
Adding type registration [C -> org.hibernate.type.CharArrayType@480ee892
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@48939ff6
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@48939ff6
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@48939ff6
Adding type registration text -> org.hibernate.type.TextType@3a55334a
Adding type registration ntext -> org.hibernate.type.NTextType@585b8a10
Adding type registration blob -> org.hibernate.type.BlobType@3a60af3
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3a60af3
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3299e502
Adding type registration clob -> org.hibernate.type.ClobType@717f0d2d
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@717f0d2d
Adding type registration nclob -> org.hibernate.type.NClobType@19733990
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@19733990
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1cc8444d
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5c984c50
Adding type registration serializable -> org.hibernate.type.SerializableType@3be4614a
Adding type registration object -> org.hibernate.type.ObjectType@5c6ff75
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5c6ff75
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@70c6411a
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@67dc4bcd
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2ff4b500
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6a972b98
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6aaf3ed3
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1745c55d
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@65a0689a
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6338a96
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Processing PersistenceUnitInfo [
	name: intelTrader
	persistence provider classname: org.hibernate.ejb.HibernatePersistence
	classloader: WebappClassLoader
  context: 
  delegate: false
  repositories:
    /WEB-INF/classes/
----------> Parent Classloader:
ClassRealm[plugin>org.apache.tomcat.maven:tomcat7-maven-plugin:2.0, parent: sun.misc.Launcher$AppClassLoader@1875303f]

	Temporary classloader: org.springframework.instrument.classloading.SimpleThrowawayClassLoader@21cf8108
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/vvarm1/IdeaProjects/intelTrader/src/main/webapp/WEB-INF/classes
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.inteltrader.entity.Instrument
		com.inteltrader.entity.Portfolio
		com.inteltrader.entity.Investment]
	Mapping files names []
	Properties [
		hibernate.connection.username: root
		hibernate.connection.password: root
		hibernate.dialect: org.hibernate.dialect.MySQLDialect
		hibernate.c3p0.min_size: 10
		hibernate.connection.url: jdbc:mysql://localhost:3306/TRADER_DB
		hibernate.show_sql: true
		hibernate.connection.driver_class: com.mysql.jdbc.Driver
		hibernate.hbm2ddl.auto: update]
Detect class: true; detect hbm: true
Detect class: true; detect hbm: true
Searching mapped entities in jar/par: file:/C:/Users/vvarm1/IdeaProjects/intelTrader/src/main/webapp/WEB-INF/classes
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.ejb.event.JpaIntegrator].
No JNDI name configured for binding Ejb3Configuration
Preparing to build session factory with filters : {}
Processing hbm.xml files
Process annotated classes
Binding entity from annotated class: com.inteltrader.entity.Instrument
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Instrument
Bind entity com.inteltrader.entity.Instrument on table INSTRUMENT
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=SYMBOL_NAME, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property symbolName with lazy=false
building SimpleValue for symbolName
Building property symbolName
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=priceList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=priceList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=priceList_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='priceList_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='SYMBOL_NAME', referencedColumn='', mappedBy=''}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Collection role: com.inteltrader.entity.Instrument.priceList
Building property priceList
Binding entity from annotated class: com.inteltrader.entity.Portfolio
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Portfolio
Bind entity com.inteltrader.entity.Portfolio on table PORTFOLIO
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=PORTFOLIO_NAME, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property portfolioName with lazy=false
building SimpleValue for portfolioName
Building property portfolioName
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='associatedPortfolio'}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=investmentList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=element, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=investmentList_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='investmentList_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='associatedPortfolio'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='associatedPortfolio'}
Collection role: com.inteltrader.entity.Portfolio.investmentList
Building property investmentList
Binding entity from annotated class: com.inteltrader.entity.Investment
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Investment
Bind entity com.inteltrader.entity.Investment on table INVESTMENT
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=INVESTMENT_ID, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property investmentId with lazy=false
building SimpleValue for investmentId
Building property investmentId
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=associatedPortfolio, insertable=true, updatable=true, unique=false}
Building property associatedPortfolio
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=currentPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property currentPrice with lazy=false
building SimpleValue for currentPrice
Building property currentPrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=quantity, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property quantity with lazy=false
building SimpleValue for quantity
Building property quantity
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=INVESTMENT_SYMBOL, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property symbolName with lazy=false
building SimpleValue for symbolName
Building property symbolName
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=transactionsList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=transactionsList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=transactionsList_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='transactionsList_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='INVESTMENT_ID', referencedColumn='', mappedBy=''}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Collection role: com.inteltrader.entity.Investment.transactionsList
Building property transactionsList
Setting SimpleValue typeName for symbolName
Setting SimpleValue typeName for portfolioName
Setting SimpleValue typeName for investmentId
Setting SimpleValue typeName for currentPrice
Setting SimpleValue typeName for quantity
Setting SimpleValue typeName for symbolName
Processing fk mappings (*ToOne and JoinedSubclass)
Processing extends queue
Processing extends queue
Processing collection mappings
Second pass for collection: com.inteltrader.entity.Investment.transactionsList
Binding a collection of element: com.inteltrader.entity.Investment.transactionsList
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT_TRANSACTION), mappingColumn=quantity, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property quantity with lazy=false
building SimpleValue for quantity
Setting SimpleValue typeName for quantity
Building property quantity
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT_TRANSACTION), mappingColumn=transactionId, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property transactionId with lazy=false
building SimpleValue for transactionId
Setting SimpleValue typeName for transactionId
Building property transactionId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT_TRANSACTION), mappingColumn=transactionPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property transactionPrice with lazy=false
building SimpleValue for transactionPrice
Setting SimpleValue typeName for transactionPrice
Building property transactionPrice
Mapped collection key: INVESTMENT_ID, element: quantity, transactionId, transactionPrice
Second pass for collection: com.inteltrader.entity.Instrument.priceList
Binding a collection of element: com.inteltrader.entity.Instrument.priceList
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=closePrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property closePrice with lazy=false
building SimpleValue for closePrice
Setting SimpleValue typeName for closePrice
Building property closePrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=highPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property highPrice with lazy=false
building SimpleValue for highPrice
Setting SimpleValue typeName for highPrice
Building property highPrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=lastClosePrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property lastClosePrice with lazy=false
building SimpleValue for lastClosePrice
Setting SimpleValue typeName for lastClosePrice
Building property lastClosePrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=lowPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property lowPrice with lazy=false
building SimpleValue for lowPrice
Setting SimpleValue typeName for lowPrice
Building property lowPrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=openPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property openPrice with lazy=false
building SimpleValue for openPrice
Setting SimpleValue typeName for openPrice
Building property openPrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=priceId, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property priceId with lazy=false
building SimpleValue for priceId
Setting SimpleValue typeName for priceId
Building property priceId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=timeStamp, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property timeStamp with lazy=false
building SimpleValue for timeStamp
Setting SimpleValue typeName for timeStamp
Building property timeStamp
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=totalTradedQuantity, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property totalTradedQuantity with lazy=false
building SimpleValue for totalTradedQuantity
Setting SimpleValue typeName for totalTradedQuantity
Building property totalTradedQuantity
Mapped collection key: SYMBOL_NAME, element: closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity
Second pass for collection: com.inteltrader.entity.Portfolio.investmentList
Binding a OneToMany: com.inteltrader.entity.Portfolio.investmentList through a foreign key
Mapping collection: com.inteltrader.entity.Portfolio.investmentList -> INVESTMENT
Retrieving property com.inteltrader.entity.Investment.associatedPortfolio
Mapped collection key: associatedPortfolio_PORTFOLIO_NAME, one-to-many: com.inteltrader.entity.Investment
Processing native query and ResultSetMapping mappings
Processing association property references
Creating tables' unique integer identifiers
Processing foreign key constraints
Resolving reference to class: com.inteltrader.entity.Instrument
Resolving reference to class: com.inteltrader.entity.Portfolio
Resolving reference to class: com.inteltrader.entity.Investment
HHH000022: c3p0 properties were encountered, but the org.hibernate.service.jdbc.connections.internal.C3P0ConnectionProvider provider class was not found on the classpath; these properties are going to be ignored.
HHH000402: Using Hibernate built-in connection pool (not for production use!)
HHH000115: Hibernate connection pool size: 20
HHH000006: Autocommit mode: true
HHH000401: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/TRADER_DB]
HHH000046: Connection properties: {user=root, password=root, autocommit=true, release_mode=auto}
Opening new JDBC connection
Created connection to: jdbc:mysql://localhost:3306/TRADER_DB, Isolation Level: 4
Database ->
       name : MySQL
    version : 5.6.10-log
      major : 5
      minor : 6
Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.9 ( Revision: ${svn.Revision} )
      major : 5
      minor : 1
JDBC version : 3.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: disabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
multi-tenancy strategy : NONE
Connection release mode: auto
HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
Maximum outer join fetch depth: 2
Default batch fetch size: 1
Generate SQL with comments: disabled
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
HHH000397: Using ASTQueryTranslatorFactory
Query language substitutions: {}
JPA-QL strict compliance: enabled
Second-level cache: enabled
Query cache: disabled
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
Optimize cache for minimal puts: disabled
Structured second-level cache entries: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Named query checking : enabled
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : : disabled
Building session factory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\vvarm1\IdeaProjects\intelTrader\target\tomcat, hibernate.connection.url=jdbc:mysql://localhost:3306/TRADER_DB, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.ejb.discard_pc_on_close=false, catalina.useNaming=true, hibernate.transaction.flush_before_completion=false, os.name=Windows 7, sun.boot.class.path=C:\Program Files\Java\jdk1.7.0_10\jre\lib\resources.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\rt.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\jce.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.7.0_10\jre\classes, java.util.logging.config.file=C:\Users\vvarm1\IdeaProjects\intelTrader\target\tomcat\conf\logging.properties, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.7.0_10-b18, hibernate.connection.autocommit=true, hibernate.c3p0.min_size=10, user.name=vvarm1, shared.loader=, guice.disable.misplaced.annotation.check=true, tomcat.util.buf.StringCache.byte.enabled=true, javax.persistence.validation.mode=AUTO, hibernate.connection.release_mode=auto, idea.launcher.bin.path=C:\Program Files (x86)\JetBrains\IntelliJ IDEA Community Edition 12.0.4\bin, user.language=en, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, sun.boot.library.path=C:\Program Files\Java\jdk1.7.0_10\jre\bin, classworlds.conf=C:\Program Files\Apache Software Foundation\apache-maven-3.0.5\bin\m2.conf, java.version=1.7.0_10, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, user.timezone=Asia/Calcutta, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.7.0_10\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, file.encoding.pkg=sun.io, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.tomcat.,org.apache.jasper., file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=51.0, user.country=US, java.home=C:\Program Files\Java\jdk1.7.0_10\jre, java.vm.info=mixed mode, os.version=6.1, hibernate.transaction.factory_class=org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory, hibernate.query.jpaql_strict_compliance=true, path.separator=;, java.vm.version=23.6-b04, hibernate.connection.password=root, user.variant=, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.scan.DefaultJarScanner.jarsToSkip=bootstrap.jar,commons-daemon.jar,tomcat-juli.jar,annotations-api.jar,el-api.jar,jsp-api.jar,servlet-api.jar,catalina.jar,catalina-ant.jar,catalina-ha.jar,catalina-tribes.jar,jasper.jar,jasper-el.jar,ecj-*.jar,tomcat-api.jar,tomcat-util.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-jni.jar,tomcat-spdy.jar,tomcat-i18n-en.jar,tomcat-i18n-es.jar,tomcat-i18n-fr.jar,tomcat-i18n-ja.jar,tomcat-juli-adapters.jar,catalina-jmx-remote.jar,catalina-ws.jar,tomcat-jdbc.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,jstl.jar,geronimo-spec-jaxrpc*.jar,wsdl4j*.jar,ant.jar,ant-junit*.jar,aspectj*.jar,jmx.jar,h2*.jar,hibernate*.jar,httpclient*.jar,jmx-tools.jar,jta*.jar,log4j*.jar,mail*.jar,slf4j*.jar,xercesImpl.jar,xmlParserAPIs.jar,xml-apis.jar,access-bridge-64.jar,dnsns.jar,jaccess.jar,ldapsec.jar,localedata.jar,sunjce_provider.jar,sunmscapi.jar,sunpkcs11.jar,jhall.jar,tools.jar,sunec.jar,zipfs.jar,gnome-java-bridge.jar,pulse-java.jar,apple_provider.jar,AppleScriptEngine.jar,CoreAudio.jar,dns_sd.jar,j3daudio.jar,j3dcore.jar,j3dutils.jar,jai_core.jar,jai_codec.jar,mlibwrapper_jai.jar,MRJToolkit.jar,vecmath.jar,junit.jar,junit-*.jar,ant-launcher.jar, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.tomcat.,org.apache.jasper., user.script=, java.naming.factory.url.pkgs=org.apache.naming, user.home=C:\Users\vvarm1, org.apache.catalina.startup.ContextConfig.jarsToSkip=, java.specification.vendor=Oracle Corporation, hibernate.hbm2ddl.auto=update, java.library.path=C:\Program Files\Java\jdk1.7.0_10\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\JetBrains\IntelliJ IDEA Community Edition 12.0.4\bin\..\.\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\ThinkPad\Bluetooth Software\;C:\Program Files\ThinkPad\Bluetooth Software\syswow64;c:\Program Files\Intel\WiFi\bin\;c:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files (x86)\Git\cmd;C:\Users\vvarm1\Documents\play-2.0.3;C:\Program Files\Java\jdk1.7.0_10\bin;C:\Program Files\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\QuickTime\QTSystem\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Java\jre6\bin;C:\Program Files\Apache Software Foundation\apache-maven-3.0.5\bin;c:\program files (x86)\jetbrains\intellij idea community edition 12.0.4\jre\jre\bin;., java.vendor.url=http://java.oracle.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, org.apache.catalina.startup.TldConfig.jarsToSkip=, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, common.loader=${catalina.base}/lib,${catalina.base}/lib/*.jar,${catalina.home}/lib,${catalina.home}/lib/*.jar, maven.home=C:\Program Files\Apache Software Foundation\apache-maven-3.0.5, java.runtime.name=Java(TM) SE Runtime Environment, java.class.path=C:\Program Files\Apache Software Foundation\apache-maven-3.0.5\boot\plexus-classworlds-2.4.jar;C:\Program Files (x86)\JetBrains\IntelliJ IDEA Community Edition 12.0.4\lib\idea_rt.jar, sun.java.command=com.intellij.rt.execution.application.AppMain org.codehaus.classworlds.Launcher --no-plugin-registry --fail-fast --strict-checksums --update-snapshots org.apache.tomcat.maven:tomcat7-maven-plugin:2.0:run, hibernate.bytecode.use_reflection_optimizer=false, idea.launcher.port=7532, java.vm.specification.name=Java Virtual Machine Specification, catalina.home=C:\Users\vvarm1\IdeaProjects\intelTrader\target\tomcat, java.vm.specification.version=1.7, sun.os.patch.level=Service Pack 1, sun.cpu.endian=little, java.io.tmpdir=C:\Users\vvarm1\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, server.loader=, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, java.ext.dirs=C:\Program Files\Java\jdk1.7.0_10\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=C:\Users\vvarm1\IdeaProjects\intelTrader, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding=UTF-8, hibernate.use_identifier_rollback=false, java.specification.version=1.7, hibernate.show_sql=true}
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Static SQL for entity: com.inteltrader.entity.Investment
 Version select: select INVESTMENT_ID from TRADER_DB.INVESTMENT where INVESTMENT_ID =?
 Snapshot select: select investment_.INVESTMENT_ID, investment_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_, investment_.currentPrice as currentP2_2_, investment_.quantity as quantity2_, investment_.INVESTMENT_SYMBOL as INVESTMENT4_2_ from TRADER_DB.INVESTMENT investment_ where investment_.INVESTMENT_ID=?
 Insert 0: insert into TRADER_DB.INVESTMENT (associatedPortfolio_PORTFOLIO_NAME, currentPrice, quantity, INVESTMENT_SYMBOL, INVESTMENT_ID) values (?, ?, ?, ?, ?)
 Update 0: update TRADER_DB.INVESTMENT set associatedPortfolio_PORTFOLIO_NAME=?, currentPrice=?, quantity=?, INVESTMENT_SYMBOL=? where INVESTMENT_ID=?
 Delete 0: delete from TRADER_DB.INVESTMENT where INVESTMENT_ID=?
 Identity insert: insert into TRADER_DB.INVESTMENT (associatedPortfolio_PORTFOLIO_NAME, currentPrice, quantity, INVESTMENT_SYMBOL) values (?, ?, ?, ?)
Static SQL for entity: com.inteltrader.entity.Instrument
 Version select: select SYMBOL_NAME from TRADER_DB.INSTRUMENT where SYMBOL_NAME =?
 Snapshot select: select instrument_.SYMBOL_NAME from TRADER_DB.INSTRUMENT instrument_ where instrument_.SYMBOL_NAME=?
 Insert 0: insert into TRADER_DB.INSTRUMENT (SYMBOL_NAME) values (?)
 Update 0: null
 Delete 0: delete from TRADER_DB.INSTRUMENT where SYMBOL_NAME=?
Static SQL for entity: com.inteltrader.entity.Portfolio
 Version select: select PORTFOLIO_NAME from TRADER_DB.PORTFOLIO where PORTFOLIO_NAME =?
 Snapshot select: select portfolio_.PORTFOLIO_NAME from TRADER_DB.PORTFOLIO portfolio_ where portfolio_.PORTFOLIO_NAME=?
 Insert 0: insert into TRADER_DB.PORTFOLIO (PORTFOLIO_NAME) values (?)
 Update 0: null
 Delete 0: delete from TRADER_DB.PORTFOLIO where PORTFOLIO_NAME=?
Static SQL for collection: com.inteltrader.entity.Instrument.priceList
 Row insert: insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
 Row update: update TRADER_DB.INSTRUMENT_PRICE set closePrice=?, highPrice=?, lastClosePrice=?, lowPrice=?, openPrice=?, priceId=?, timeStamp=?, totalTradedQuantity=? where SYMBOL_NAME=? and priceId=? and totalTradedQuantity=?
 Row delete: delete from TRADER_DB.INSTRUMENT_PRICE where SYMBOL_NAME=? and priceId=? and totalTradedQuantity=?
 One-shot delete: delete from TRADER_DB.INSTRUMENT_PRICE where SYMBOL_NAME=?
Static SQL for collection: com.inteltrader.entity.Investment.transactionsList
 Row insert: insert into TRADER_DB.INVESTMENT_TRANSACTION (INVESTMENT_ID, quantity, transactionId, transactionPrice) values (?, ?, ?, ?)
 Row update: update TRADER_DB.INVESTMENT_TRANSACTION set quantity=?, transactionId=?, transactionPrice=? where INVESTMENT_ID=? and quantity=? and transactionId=? and transactionPrice=?
 Row delete: delete from TRADER_DB.INVESTMENT_TRANSACTION where INVESTMENT_ID=? and quantity=? and transactionId=? and transactionPrice=?
 One-shot delete: delete from TRADER_DB.INVESTMENT_TRANSACTION where INVESTMENT_ID=?
Static SQL for collection: com.inteltrader.entity.Portfolio.investmentList
 Row insert: update TRADER_DB.INVESTMENT set associatedPortfolio_PORTFOLIO_NAME=? where INVESTMENT_ID=?
 Row delete: update TRADER_DB.INVESTMENT set associatedPortfolio_PORTFOLIO_NAME=null where associatedPortfolio_PORTFOLIO_NAME=? and INVESTMENT_ID=?
 One-shot delete: update TRADER_DB.INVESTMENT set associatedPortfolio_PORTFOLIO_NAME=null where associatedPortfolio_PORTFOLIO_NAME=?
Static select for entity com.inteltrader.entity.Instrument [NONE]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for entity com.inteltrader.entity.Instrument [READ]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for entity com.inteltrader.entity.Instrument [UPGRADE]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [UPGRADE_NOWAIT]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [FORCE]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [PESSIMISTIC_READ]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? lock in share mode
Static select for entity com.inteltrader.entity.Instrument [PESSIMISTIC_WRITE]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [PESSIMISTIC_FORCE_INCREMENT]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [OPTIMISTIC]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for entity com.inteltrader.entity.Instrument [OPTIMISTIC_FORCE_INCREMENT]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for action ACTION_MERGE on entity com.inteltrader.entity.Instrument: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for action ACTION_REFRESH on entity com.inteltrader.entity.Instrument: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for entity com.inteltrader.entity.Investment [NONE]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_1_, investment0_.currentPrice as currentP2_2_1_, investment0_.quantity as quantity2_1_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_1_, portfolio1_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.INVESTMENT investment0_ left outer join TRADER_DB.PORTFOLIO portfolio1_ on investment0_.associatedPortfolio_PORTFOLIO_NAME=portfolio1_.PORTFOLIO_NAME where investment0_.INVESTMENT_ID=?
Static select for entity com.inteltrader.entity.Investment [READ]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_1_, investment0_.currentPrice as currentP2_2_1_, investment0_.quantity as quantity2_1_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_1_, portfolio1_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.INVESTMENT investment0_ left outer join TRADER_DB.PORTFOLIO portfolio1_ on investment0_.associatedPortfolio_PORTFOLIO_NAME=portfolio1_.PORTFOLIO_NAME where investment0_.INVESTMENT_ID=?
Static select for entity com.inteltrader.entity.Investment [UPGRADE]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [UPGRADE_NOWAIT]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [FORCE]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [PESSIMISTIC_READ]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? lock in share mode
Static select for entity com.inteltrader.entity.Investment [PESSIMISTIC_WRITE]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [PESSIMISTIC_FORCE_INCREMENT]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [OPTIMISTIC]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=?
Static select for entity com.inteltrader.entity.Investment [OPTIMISTIC_FORCE_INCREMENT]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=?
Static select for action ACTION_MERGE on entity com.inteltrader.entity.Investment: select investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_1_, investment0_.currentPrice as currentP2_2_1_, investment0_.quantity as quantity2_1_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_1_, portfolio1_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.INVESTMENT investment0_ left outer join TRADER_DB.PORTFOLIO portfolio1_ on investment0_.associatedPortfolio_PORTFOLIO_NAME=portfolio1_.PORTFOLIO_NAME where investment0_.INVESTMENT_ID=?
Static select for action ACTION_REFRESH on entity com.inteltrader.entity.Investment: select investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_1_, investment0_.currentPrice as currentP2_2_1_, investment0_.quantity as quantity2_1_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_1_, portfolio1_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.INVESTMENT investment0_ left outer join TRADER_DB.PORTFOLIO portfolio1_ on investment0_.associatedPortfolio_PORTFOLIO_NAME=portfolio1_.PORTFOLIO_NAME where investment0_.INVESTMENT_ID=?
Static select for entity com.inteltrader.entity.Portfolio [NONE]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Static select for entity com.inteltrader.entity.Portfolio [READ]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Static select for entity com.inteltrader.entity.Portfolio [UPGRADE]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [UPGRADE_NOWAIT]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [FORCE]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [PESSIMISTIC_READ]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? lock in share mode
Static select for entity com.inteltrader.entity.Portfolio [PESSIMISTIC_WRITE]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [PESSIMISTIC_FORCE_INCREMENT]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [OPTIMISTIC]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=?
Static select for entity com.inteltrader.entity.Portfolio [OPTIMISTIC_FORCE_INCREMENT]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=?
Static select for action ACTION_MERGE on entity com.inteltrader.entity.Portfolio: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Static select for action ACTION_REFRESH on entity com.inteltrader.entity.Portfolio: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Static select for collection com.inteltrader.entity.Instrument.priceList: select pricelist0_.SYMBOL_NAME as SYMBOL1_0_0_, pricelist0_.closePrice as closePrice1_0_, pricelist0_.highPrice as highPrice1_0_, pricelist0_.lastClosePrice as lastClos4_1_0_, pricelist0_.lowPrice as lowPrice1_0_, pricelist0_.openPrice as openPrice1_0_, pricelist0_.priceId as priceId1_0_, pricelist0_.timeStamp as timeStamp1_0_, pricelist0_.totalTradedQuantity as totalTra9_1_0_ from TRADER_DB.INSTRUMENT_PRICE pricelist0_ where pricelist0_.SYMBOL_NAME=?
Static select for one-to-many com.inteltrader.entity.Portfolio.investmentList: select investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_1_, investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.associatedPortfolio_PORTFOLIO_NAME=?
Static select for collection com.inteltrader.entity.Investment.transactionsList: select transactio0_.INVESTMENT_ID as INVESTMENT1_2_0_, transactio0_.quantity as quantity3_0_, transactio0_.transactionId as transact3_3_0_, transactio0_.transactionPrice as transact4_3_0_ from TRADER_DB.INVESTMENT_TRANSACTION transactio0_ where transactio0_.INVESTMENT_ID=?
Registering SessionFactory: 7722dfa7-1e17-4bfc-80e1-7062493650c7 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Instantiated session factory
HHH000228: Running hbm2ddl schema update
HHH000102: Fetching database metadata
HHH000396: Updating schema
Processing hbm.xml files
Process annotated classes
Processing fk mappings (*ToOne and JoinedSubclass)
Processing extends queue
Processing extends queue
Processing collection mappings
Processing native query and ResultSetMapping mappings
Processing association property references
Creating tables' unique integer identifiers
Processing foreign key constraints
Resolving reference to class: com.inteltrader.entity.Instrument
Resolving reference to class: com.inteltrader.entity.Portfolio
Resolving reference to class: com.inteltrader.entity.Investment
HHH000261: Table found: TRADER_DB.instrument
HHH000037: Columns: [symbol_name]
HHH000108: Foreign keys: []
HHH000126: Indexes: [primary]
HHH000261: Table found: TRADER_DB.instrument_price
HHH000037: Columns: [totaltradedquantity, timestamp, priceid, lastcloseprice, highprice, symbol_name, openprice, closeprice, lowprice]
HHH000108: Foreign keys: [fk3189a2d153ed548d]
HHH000126: Indexes: [fk3189a2d153ed548d]
HHH000261: Table found: TRADER_DB.investment
HHH000037: Columns: [investment_id, associatedportfolio_portfolio_name, currentprice, quantity, investment_symbol]
HHH000108: Foreign keys: [fk8fe41ed3c804d4f3]
HHH000126: Indexes: [fk8fe41ed3c804d4f3, primary]
HHH000261: Table found: TRADER_DB.investment_transaction
HHH000037: Columns: [transactionprice, investment_id, transactionid, quantity]
HHH000108: Foreign keys: [fka5863f52914590ae]
HHH000126: Indexes: [fka5863f52914590ae]
HHH000261: Table found: TRADER_DB.portfolio
HHH000037: Columns: [portfolio_name]
HHH000108: Foreign keys: []
HHH000126: Indexes: [primary]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
HHH000232: Schema update complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Statistics initialized [enabled=false]
Registering EntityManagerFactory: intelTrader 
HHH000436: Entity manager factory name (intelTrader) is already registered.  If entity manager will be clustered or passivated, specify a unique value for property 'hibernate.ejb.entitymanager_factory_name'
Finished creating instance of bean 'entityManagerFactory'
Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@4b575d96: defining beans [org.springframework.context.annotation.internalAsyncAnnotationProcessor,org.springframework.context.annotation.internalScheduledAnnotationProcessor,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0,org.springframework.web.servlet.view.InternalResourceViewResolver#0,instrumentDao,portfolioDao,instrumentService,portfolioService,entityManagerFactory,transactionManager,instrument,investment,portfolio,instrumentServiceRest,portfolioServiceRest,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor]; parent: org.springframework.beans.factory.support.DefaultListableBeanFactory@346bc53f
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Creating instance of bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0' to allow for resolving potential circular references
Creating instance of bean '(inner bean)'
Creating shared instance of singleton bean 'transactionManager'
Creating instance of bean 'transactionManager'
Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
Returning cached instance of singleton bean 'entityManagerFactory'
Invoking afterPropertiesSet() on bean with name 'transactionManager'
Finished creating instance of bean 'transactionManager'
Creating instance of bean '(inner bean)'
Finished creating instance of bean '(inner bean)'
Invoking afterPropertiesSet() on bean with name '(inner bean)'
Finished creating instance of bean '(inner bean)'
Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Creating shared instance of singleton bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Creating instance of bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Eagerly caching bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Creating shared instance of singleton bean 'instrumentDao'
Creating instance of bean 'instrumentDao'
Eagerly caching bean 'instrumentDao' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'instrumentDao'
Creating shared instance of singleton bean 'portfolioDao'
Creating instance of bean 'portfolioDao'
Eagerly caching bean 'portfolioDao' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'portfolioDao'
Creating shared instance of singleton bean 'instrumentService'
Creating instance of bean 'instrumentService'
Registered injected element on class [com.inteltrader.service.InstrumentServiceImpl]: PersistenceElement for javax.persistence.EntityManagerFactory com.inteltrader.service.InstrumentServiceImpl.entityManagerFactory
Registered injected element on class [com.inteltrader.service.InstrumentServiceImpl]: AutowiredFieldElement for private com.inteltrader.dao.IInstrumentDao com.inteltrader.service.InstrumentServiceImpl.instrumentDao
Registered injected element on class [com.inteltrader.service.InstrumentServiceImpl]: AutowiredFieldElement for private com.inteltrader.service.PortfolioService com.inteltrader.service.InstrumentServiceImpl.portfolioService
Eagerly caching bean 'instrumentService' to allow for resolving potential circular references
Processing injected method of bean 'instrumentService': PersistenceElement for javax.persistence.EntityManagerFactory com.inteltrader.service.InstrumentServiceImpl.entityManagerFactory
Returning cached instance of singleton bean 'entityManagerFactory'
Processing injected method of bean 'instrumentService': AutowiredFieldElement for private com.inteltrader.dao.IInstrumentDao com.inteltrader.service.InstrumentServiceImpl.instrumentDao
Returning cached instance of singleton bean 'instrumentDao'
Autowiring by type from bean name 'instrumentService' to bean named 'instrumentDao'
Processing injected method of bean 'instrumentService': AutowiredFieldElement for private com.inteltrader.service.PortfolioService com.inteltrader.service.InstrumentServiceImpl.portfolioService
Creating shared instance of singleton bean 'portfolioService'
Creating instance of bean 'portfolioService'
Registered injected element on class [com.inteltrader.service.PortfolioServiceImpl]: PersistenceElement for private javax.persistence.EntityManagerFactory com.inteltrader.service.PortfolioServiceImpl.entityManagerFactory
Registered injected element on class [com.inteltrader.service.PortfolioServiceImpl]: AutowiredFieldElement for private com.inteltrader.dao.IPortfolioDao com.inteltrader.service.PortfolioServiceImpl.portfolioDao
Eagerly caching bean 'portfolioService' to allow for resolving potential circular references
Processing injected method of bean 'portfolioService': PersistenceElement for private javax.persistence.EntityManagerFactory com.inteltrader.service.PortfolioServiceImpl.entityManagerFactory
Returning cached instance of singleton bean 'entityManagerFactory'
Processing injected method of bean 'portfolioService': AutowiredFieldElement for private com.inteltrader.dao.IPortfolioDao com.inteltrader.service.PortfolioServiceImpl.portfolioDao
Returning cached instance of singleton bean 'portfolioDao'
Autowiring by type from bean name 'portfolioService' to bean named 'portfolioDao'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'portfolioService'
Autowiring by type from bean name 'instrumentService' to bean named 'portfolioService'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'instrumentService'
Returning cached instance of singleton bean 'portfolioService'
Returning cached instance of singleton bean 'entityManagerFactory'
Returning cached instance of singleton bean 'transactionManager'
Creating shared instance of singleton bean 'instrument'
Creating instance of bean 'instrument'
Eagerly caching bean 'instrument' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'instrument'
Creating shared instance of singleton bean 'investment'
Creating instance of bean 'investment'
Eagerly caching bean 'investment' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'investment'
Creating shared instance of singleton bean 'portfolio'
Creating instance of bean 'portfolio'
Eagerly caching bean 'portfolio' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'portfolio'
Creating shared instance of singleton bean 'instrumentServiceRest'
Creating instance of bean 'instrumentServiceRest'
Registered injected element on class [com.inteltrader.rest.InstrumentServiceRest]: AutowiredFieldElement for private com.inteltrader.service.InstrumentService com.inteltrader.rest.InstrumentServiceRest.instrumentService
Eagerly caching bean 'instrumentServiceRest' to allow for resolving potential circular references
Processing injected method of bean 'instrumentServiceRest': AutowiredFieldElement for private com.inteltrader.service.InstrumentService com.inteltrader.rest.InstrumentServiceRest.instrumentService
Returning cached instance of singleton bean 'instrumentService'
Autowiring by type from bean name 'instrumentServiceRest' to bean named 'instrumentService'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'instrumentServiceRest'
Creating shared instance of singleton bean 'portfolioServiceRest'
Creating instance of bean 'portfolioServiceRest'
Registered injected element on class [com.inteltrader.rest.PortfolioServiceRest]: AutowiredFieldElement for private com.inteltrader.service.PortfolioService com.inteltrader.rest.PortfolioServiceRest.portfolioService
Eagerly caching bean 'portfolioServiceRest' to allow for resolving potential circular references
Processing injected method of bean 'portfolioServiceRest': AutowiredFieldElement for private com.inteltrader.service.PortfolioService com.inteltrader.rest.PortfolioServiceRest.portfolioService
Returning cached instance of singleton bean 'portfolioService'
Autowiring by type from bean name 'portfolioServiceRest' to bean named 'portfolioService'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'portfolioServiceRest'
Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@4d19f40b]
Returning cached instance of singleton bean 'lifecycleProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Unable to locate MultipartResolver with name 'multipartResolver': no multipart request handling provided
Creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Unable to locate LocaleResolver with name 'localeResolver': using default [org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver@6230d2f8]
Creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Unable to locate ThemeResolver with name 'themeResolver': using default [org.springframework.web.servlet.theme.FixedThemeResolver@581cfec7]
Creating instance of bean 'org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping'
Looking for URL mappings in application context: WebApplicationContext for namespace 'appServlet-servlet': startup date [Fri Apr 19 17:12:43 IST 2013]; parent: Root WebApplicationContext
Rejected bean name 'org.springframework.context.annotation.internalAsyncAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalScheduledAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalRequiredAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalCommonAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.aop.config.internalAutoProxyCreator': no URL paths identified
Rejected bean name 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0': no URL paths identified
Rejected bean name 'org.springframework.web.servlet.view.InternalResourceViewResolver#0': no URL paths identified
Rejected bean name 'instrumentDao': no URL paths identified
Rejected bean name 'portfolioDao': no URL paths identified
Rejected bean name 'instrumentService': no URL paths identified
Rejected bean name 'portfolioService': no URL paths identified
Rejected bean name 'entityManagerFactory': no URL paths identified
Rejected bean name 'transactionManager': no URL paths identified
Rejected bean name 'instrument': no URL paths identified
Rejected bean name 'investment': no URL paths identified
Rejected bean name 'portfolio': no URL paths identified
Rejected bean name 'instrumentServiceRest': no URL paths identified
Rejected bean name 'portfolioServiceRest': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor': no URL paths identified
Rejected bean name 'environment': no URL paths identified
Rejected bean name 'systemProperties': no URL paths identified
Rejected bean name 'systemEnvironment': no URL paths identified
Rejected bean name 'servletConfig': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry': no URL paths identified
Rejected bean name 'messageSource': no URL paths identified
Rejected bean name 'applicationEventMulticaster': no URL paths identified
Rejected bean name 'lifecycleProcessor': no URL paths identified
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping'
Creating instance of bean 'org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping'
Looking for URL mappings in application context: WebApplicationContext for namespace 'appServlet-servlet': startup date [Fri Apr 19 17:12:43 IST 2013]; parent: Root WebApplicationContext
Rejected bean name 'org.springframework.context.annotation.internalAsyncAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalScheduledAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalRequiredAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalCommonAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.aop.config.internalAutoProxyCreator': no URL paths identified
Rejected bean name 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0': no URL paths identified
Rejected bean name 'org.springframework.web.servlet.view.InternalResourceViewResolver#0': no URL paths identified
Rejected bean name 'instrumentDao': no URL paths identified
Rejected bean name 'portfolioDao': no URL paths identified
Rejected bean name 'instrumentService': no URL paths identified
Rejected bean name 'portfolioService': no URL paths identified
Rejected bean name 'entityManagerFactory': no URL paths identified
Rejected bean name 'transactionManager': no URL paths identified
Rejected bean name 'instrument': no URL paths identified
Rejected bean name 'investment': no URL paths identified
Rejected bean name 'portfolio': no URL paths identified
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/create/{symbol}] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/create/{symbol}.*] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/create/{symbol}/] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/update/{portfolioName}] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/update/{portfolioName}.*] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/update/{portfolioName}/] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/load/{symbol}] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/load/{symbol}.*] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/load/{symbol}/] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/create/{portfolioName}] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/create/{portfolioName}.*] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/create/{portfolioName}/] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/load/{portfolioName}] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/load/{portfolioName}.*] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/load/{portfolioName}/] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/addInvestment/{portfolioName}/{symbolName}] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/addInvestment/{portfolioName}/{symbolName}.*] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/addInvestment/{portfolioName}/{symbolName}/] onto handler 'portfolioServiceRest'
Rejected bean name 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor': no URL paths identified
Rejected bean name 'environment': no URL paths identified
Rejected bean name 'systemProperties': no URL paths identified
Rejected bean name 'systemEnvironment': no URL paths identified
Rejected bean name 'servletConfig': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry': no URL paths identified
Rejected bean name 'messageSource': no URL paths identified
Rejected bean name 'applicationEventMulticaster': no URL paths identified
Rejected bean name 'lifecycleProcessor': no URL paths identified
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping'
No HandlerMappings found in servlet 'appServlet': using default
Creating instance of bean 'org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter'
Creating instance of bean 'org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter'
Creating instance of bean 'org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter'
No HandlerAdapters found in servlet 'appServlet': using default
Creating instance of bean 'org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerExceptionResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerExceptionResolver'
Creating instance of bean 'org.springframework.web.servlet.mvc.annotation.ResponseStatusExceptionResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.annotation.ResponseStatusExceptionResolver'
Creating instance of bean 'org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver'
No HandlerExceptionResolvers found in servlet 'appServlet': using default
Creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Unable to locate RequestToViewNameTranslator with name 'viewNameTranslator': using default [org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@3078ee0f]
Returning cached instance of singleton bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Returning cached instance of singleton bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Unable to locate FlashMapManager with name 'flashMapManager': using default [org.springframework.web.servlet.support.SessionFlashMapManager@2ccb1655]
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Searching for key 'spring.liveBeansView.mbeanDomain' in [servletConfigInitParams]
Searching for key 'spring.liveBeansView.mbeanDomain' in [servletContextInitParams]
Searching for key 'spring.liveBeansView.mbeanDomain' in [jndiProperties]
Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain]
Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException: Name [spring.liveBeansView.mbeanDomain] is not bound in this Context. Unable to find [spring.liveBeansView.mbeanDomain].
Looking up JNDI object with name [spring.liveBeansView.mbeanDomain]
JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: Name [spring.liveBeansView.mbeanDomain] is not bound in this Context. Unable to find [spring.liveBeansView.mbeanDomain].. Returning null.
Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
Published WebApplicationContext of servlet 'appServlet' as ServletContext attribute with name [org.springframework.web.servlet.FrameworkServlet.CONTEXT.appServlet]
FrameworkServlet 'appServlet': initialization completed in 553 ms
Servlet 'appServlet' configured successfully
DispatcherServlet with name 'appServlet' processing GET request for [/portfolio/load/MyFirstTime]
Matching patterns for request [/portfolio/load/MyFirstTime] are [/portfolio/load/{portfolioName}]
URI Template variables for request [/portfolio/load/MyFirstTime] are {portfolioName=MyFirstTime}
Mapping [/portfolio/load/MyFirstTime] to HandlerExecutionChain with handler [com.inteltrader.rest.PortfolioServiceRest@4268a357] and 2 interceptors
Last-Modified value for [/portfolio/load/MyFirstTime] is: -1
Invoking request handler method: public org.springframework.http.ResponseEntity com.inteltrader.rest.PortfolioServiceRest.loadInstrument(java.lang.String,javax.servlet.http.HttpServletRequest)
Loading entity: [com.inteltrader.entity.Portfolio#MyFirstTime]
Obtaining JDBC connection
Obtained JDBC connection
select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Result set row: 0
Result row: EntityKey[com.inteltrader.entity.Investment#1], EntityKey[com.inteltrader.entity.Portfolio#MyFirstTime]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Result set row: 1
Result row: EntityKey[com.inteltrader.entity.Investment#2], EntityKey[com.inteltrader.entity.Portfolio#MyFirstTime]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Result set row: 2
Result row: EntityKey[com.inteltrader.entity.Investment#3], EntityKey[com.inteltrader.entity.Portfolio#MyFirstTime]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Resolving associations for [com.inteltrader.entity.Investment#1]
Loading entity: [com.inteltrader.entity.Portfolio#myFirstTime]
select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Result set row: 0
Result row: EntityKey[com.inteltrader.entity.Investment#1], EntityKey[com.inteltrader.entity.Portfolio#myFirstTime]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Result set row: 1
Result row: EntityKey[com.inteltrader.entity.Investment#2], EntityKey[com.inteltrader.entity.Portfolio#myFirstTime]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Result set row: 2
Result row: EntityKey[com.inteltrader.entity.Investment#3], EntityKey[com.inteltrader.entity.Portfolio#myFirstTime]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Resolving associations for [com.inteltrader.entity.Portfolio#myFirstTime]
Done materializing entity [com.inteltrader.entity.Portfolio#myFirstTime]
No collections were found in result set for role: com.inteltrader.entity.Portfolio.investmentList
Done entity load
Done materializing entity [com.inteltrader.entity.Investment#1]
Resolving associations for [com.inteltrader.entity.Portfolio#MyFirstTime]
Done materializing entity [com.inteltrader.entity.Portfolio#MyFirstTime]
Resolving associations for [com.inteltrader.entity.Investment#2]
Done materializing entity [com.inteltrader.entity.Investment#2]
Resolving associations for [com.inteltrader.entity.Investment#3]
Done materializing entity [com.inteltrader.entity.Investment#3]
1 collections were found in result set for role: com.inteltrader.entity.Portfolio.investmentList
Collection fully initialized: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
1 collections initialized for role: com.inteltrader.entity.Portfolio.investmentList
Loading collection: [com.inteltrader.entity.Portfolio.investmentList#MyFirstTime]
select investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_1_, investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.associatedPortfolio_PORTFOLIO_NAME=?
Result set contains (possibly empty) collection: [com.inteltrader.entity.Portfolio.investmentList#MyFirstTime]
Result set row: 0
Result row: EntityKey[com.inteltrader.entity.Investment#1]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Result set row: 1
Result row: EntityKey[com.inteltrader.entity.Investment#2]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Result set row: 2
Result row: EntityKey[com.inteltrader.entity.Investment#3]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
1 collections were found in result set for role: com.inteltrader.entity.Portfolio.investmentList
Collection fully initialized: [com.inteltrader.entity.Portfolio.investmentList#MyFirstTime]
1 collections initialized for role: com.inteltrader.entity.Portfolio.investmentList
Done loading collection
Done entity load
Written [{"portfolioName":"MyFirstTime","investmentList":[]}] as "text/html" using [org.springframework.http.converter.StringHttpMessageConverter@282dc18d]
Null ModelAndView returned to DispatcherServlet with name 'appServlet': assuming HandlerAdapter completed request handling
Successfully completed request
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Initializing servlet 'appServlet'
Initializing new StandardServletEnvironment
Adding [servletConfigInitParams] PropertySource with lowest search precedence
Adding [servletContextInitParams] PropertySource with lowest search precedence
Adding [jndiProperties] PropertySource with lowest search precedence
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment]
FrameworkServlet 'appServlet': initialization started
Servlet with name 'appServlet' will try to create custom WebApplicationContext context of class 'org.springframework.web.context.support.XmlWebApplicationContext', using parent context [Root WebApplicationContext: startup date [Fri Apr 19 17:14:09 IST 2013]; root of context hierarchy]
Searching for key 'spring.profiles.active' in [servletConfigInitParams]
Searching for key 'spring.profiles.active' in [servletContextInitParams]
Searching for key 'spring.profiles.active' in [jndiProperties]
Looking up JNDI object with name [java:comp/env/spring.profiles.active]
Converted JNDI name [java:comp/env/spring.profiles.active] not found - trying original name [spring.profiles.active]. javax.naming.NameNotFoundException: Name [spring.profiles.active] is not bound in this Context. Unable to find [spring.profiles.active].
Looking up JNDI object with name [spring.profiles.active]
JNDI lookup for name [spring.profiles.active] threw NamingException with message: Name [spring.profiles.active] is not bound in this Context. Unable to find [spring.profiles.active].. Returning null.
Searching for key 'spring.profiles.active' in [systemProperties]
Searching for key 'spring.profiles.active' in [systemEnvironment]
Could not find key 'spring.profiles.active' in any property source. Returning [null]
Searching for key 'spring.profiles.default' in [servletConfigInitParams]
Searching for key 'spring.profiles.default' in [servletContextInitParams]
Searching for key 'spring.profiles.default' in [jndiProperties]
Looking up JNDI object with name [java:comp/env/spring.profiles.default]
Converted JNDI name [java:comp/env/spring.profiles.default] not found - trying original name [spring.profiles.default]. javax.naming.NameNotFoundException: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].
Looking up JNDI object with name [spring.profiles.default]
JNDI lookup for name [spring.profiles.default] threw NamingException with message: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].. Returning null.
Searching for key 'spring.profiles.default' in [systemProperties]
Searching for key 'spring.profiles.default' in [systemEnvironment]
Could not find key 'spring.profiles.default' in any property source. Returning [null]
Searching for key 'spring.profiles.default' in [servletConfigInitParams]
Searching for key 'spring.profiles.default' in [servletContextInitParams]
Searching for key 'spring.profiles.default' in [jndiProperties]
Looking up JNDI object with name [java:comp/env/spring.profiles.default]
Converted JNDI name [java:comp/env/spring.profiles.default] not found - trying original name [spring.profiles.default]. javax.naming.NameNotFoundException: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].
Looking up JNDI object with name [spring.profiles.default]
JNDI lookup for name [spring.profiles.default] threw NamingException with message: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].. Returning null.
Searching for key 'spring.profiles.default' in [systemProperties]
Searching for key 'spring.profiles.default' in [systemEnvironment]
Could not find key 'spring.profiles.default' in any property source. Returning [null]
Replacing [servletContextInitParams] PropertySource with [servletContextInitParams]
Replacing [servletConfigInitParams] PropertySource with [servletConfigInitParams]
Refreshing WebApplicationContext for namespace 'appServlet-servlet': startup date [Fri Apr 19 17:14:11 IST 2013]; parent: Root WebApplicationContext
Initializing new StandardEnvironment
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
Initializing new StandardEnvironment
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
Loading schema mappings from [META-INF/spring.schemas]
Loaded schema mappings: {http://www.springframework.org/schema/data/jpa/spring-jpa-1.2.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.2.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.1.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.1.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.5.xsd=org/springframework/data/repository/config/spring-repository-1.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.0.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.3.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.4.xsd=org/springframework/data/repository/config/spring-repository-1.4.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.3.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/data/repository/spring-repository.xsd=org/springframework/data/repository/config/spring-repository-1.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.0.xsd=org/springframework/data/repository/config/spring-repository-1.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.1.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.1.xsd
Found XML schema [http://www.springframework.org/schema/task/spring-task-3.0.xsd] in classpath: org/springframework/scheduling/config/spring-task-3.0.xsd
Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd
Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd
Found XML schema [http://www.springframework.org/schema/tx/spring-tx-3.1.xsd] in classpath: org/springframework/transaction/config/spring-tx-3.1.xsd
Loading bean definitions
Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/data/repository=org.springframework.data.repository.config.RepositoryNameSpaceHandler, http://www.springframework.org/schema/data/jpa=org.springframework.data.jpa.repository.config.JpaRepositoryNameSpaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
Neither XML 'id' nor 'name' specified - using generated bean name [org.springframework.web.servlet.view.InternalResourceViewResolver#0]
Neither XML 'id' nor 'name' specified - using generated bean name [org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver#6eca6c5d]
Initializing new StandardEnvironment
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
Looking for matching resources in directory tree [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Resolved location pattern [classpath*:com/inteltrader/**/*.class] to resources [file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\Advice.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\FIFOList.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\InstrumentVo.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\Strategies.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\Strategy.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\StrategyMACD.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao\IInstrumentDao.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao\InstrumentDao.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao\IPortfolioDao.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao\PortfolioDao.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Instrument.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Investment.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Portfolio.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Price.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Transactions.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest\InstrumentServiceRest.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest\PortfolioServiceRest.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\AnalyserService.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\CronService.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\InstrumentService.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\InstrumentServiceImpl.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\PortfolioService.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\PortfolioServiceImpl.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util\DownloadZip.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util\ExtractZipFile.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util\ReadPriceCsv.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util\RestCodes.class]]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Instrument.class]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Investment.class]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Portfolio.class]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest\InstrumentServiceRest.class]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest\PortfolioServiceRest.class]
Loaded 21 bean definitions from location pattern [/WEB-INF/applicationContext.xml]
Bean factory for WebApplicationContext for namespace 'appServlet-servlet': org.springframework.beans.factory.support.DefaultListableBeanFactory@2b90867e: defining beans [org.springframework.context.annotation.internalAsyncAnnotationProcessor,org.springframework.context.annotation.internalScheduledAnnotationProcessor,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0,org.springframework.web.servlet.view.InternalResourceViewResolver#0,instrumentDao,portfolioDao,instrumentService,portfolioService,entityManagerFactory,transactionManager,instrument,investment,portfolio,instrumentServiceRest,portfolioServiceRest]; parent: org.springframework.beans.factory.support.DefaultListableBeanFactory@5b843328
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@5cc638ef]
Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@59c4027e]
Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.DelegatingThemeSource@537fcc3c]
Creating shared instance of singleton bean 'entityManagerFactory'
Creating instance of bean 'entityManagerFactory'
Eagerly caching bean 'entityManagerFactory' to allow for resolving potential circular references
Creating instance of bean 'org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver#6eca6c5d'
Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Creating instance of bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0' to allow for resolving potential circular references
Creating instance of bean '(inner bean)'
Creating shared instance of singleton bean 'transactionManager'
Creating instance of bean 'transactionManager'
Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
Returning eagerly cached instance of singleton bean 'entityManagerFactory' that is not fully initialized yet - a consequence of a circular reference
Ignoring currently created advisor 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0': Error creating bean with name 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0': Cannot create inner bean '(inner bean)' of type [org.springframework.transaction.interceptor.TransactionInterceptor] while setting bean property 'transactionInterceptor'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)': Cannot resolve reference to bean 'transactionManager' while setting bean property 'transactionManager'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'transactionManager' defined in ServletContext resource [/WEB-INF/applicationContext.xml]: Cannot resolve reference to bean 'entityManagerFactory' while setting bean property 'entityManagerFactory'; nested exception is org.springframework.beans.factory.BeanCurrentlyInCreationException: Error creating bean with name 'entityManagerFactory': FactoryBean which is currently in creation returned null from getObject
Finished creating instance of bean 'org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver#6eca6c5d'
Invoking afterPropertiesSet() on bean with name 'entityManagerFactory'
Building JPA container EntityManagerFactory for persistence unit 'intelTrader'
Adding type registration boolean -> org.hibernate.type.BooleanType@44cbc8f
Adding type registration boolean -> org.hibernate.type.BooleanType@44cbc8f
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@44cbc8f
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@78bed8ba
Adding type registration true_false -> org.hibernate.type.TrueFalseType@51b99375
Adding type registration yes_no -> org.hibernate.type.YesNoType@332fce0c
Adding type registration byte -> org.hibernate.type.ByteType@306c3705
Adding type registration byte -> org.hibernate.type.ByteType@306c3705
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@306c3705
Adding type registration character -> org.hibernate.type.CharacterType@5283edc
Adding type registration char -> org.hibernate.type.CharacterType@5283edc
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5283edc
Adding type registration short -> org.hibernate.type.ShortType@78e2e186
Adding type registration short -> org.hibernate.type.ShortType@78e2e186
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@78e2e186
Adding type registration integer -> org.hibernate.type.IntegerType@29ca7e4c
Adding type registration int -> org.hibernate.type.IntegerType@29ca7e4c
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@29ca7e4c
Adding type registration long -> org.hibernate.type.LongType@2d322222
Adding type registration long -> org.hibernate.type.LongType@2d322222
Adding type registration java.lang.Long -> org.hibernate.type.LongType@2d322222
Adding type registration float -> org.hibernate.type.FloatType@67ea74f
Adding type registration float -> org.hibernate.type.FloatType@67ea74f
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@67ea74f
Adding type registration double -> org.hibernate.type.DoubleType@53c427e3
Adding type registration double -> org.hibernate.type.DoubleType@53c427e3
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@53c427e3
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3c900d00
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3c900d00
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3da736e7
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3da736e7
Adding type registration string -> org.hibernate.type.StringType@7498191
Adding type registration java.lang.String -> org.hibernate.type.StringType@7498191
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@490a390e
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@743479ce
Adding type registration url -> org.hibernate.type.UrlType@7216670f
Adding type registration java.net.URL -> org.hibernate.type.UrlType@7216670f
Adding type registration date -> org.hibernate.type.DateType@1bc7243a
Adding type registration java.sql.Date -> org.hibernate.type.DateType@1bc7243a
Adding type registration time -> org.hibernate.type.TimeType@50b3c021
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@50b3c021
Adding type registration timestamp -> org.hibernate.type.TimestampType@116b80a
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@116b80a
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@116b80a
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2f755cd
Adding type registration calendar -> org.hibernate.type.CalendarType@30c66e16
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@30c66e16
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@30c66e16
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@35a3feb8
Adding type registration locale -> org.hibernate.type.LocaleType@6b17ecf4
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6b17ecf4
Adding type registration currency -> org.hibernate.type.CurrencyType@7be8cc67
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7be8cc67
Adding type registration timezone -> org.hibernate.type.TimeZoneType@84305f4
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@84305f4
Adding type registration class -> org.hibernate.type.ClassType@55a266b2
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@55a266b2
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@a1beed4
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@a1beed4
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@28a8da71
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@6289cd44
Adding type registration binary -> org.hibernate.type.BinaryType@a6bf2c7
Adding type registration byte[] -> org.hibernate.type.BinaryType@a6bf2c7
Adding type registration [B -> org.hibernate.type.BinaryType@a6bf2c7
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4b52a2f3
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4b52a2f3
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4b52a2f3
Adding type registration image -> org.hibernate.type.ImageType@117a26fe
Adding type registration characters -> org.hibernate.type.CharArrayType@7c92e1e8
Adding type registration char[] -> org.hibernate.type.CharArrayType@7c92e1e8
Adding type registration [C -> org.hibernate.type.CharArrayType@7c92e1e8
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@29dfa03
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@29dfa03
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@29dfa03
Adding type registration text -> org.hibernate.type.TextType@52ca77d4
Adding type registration ntext -> org.hibernate.type.NTextType@2df7ac5d
Adding type registration blob -> org.hibernate.type.BlobType@1dc19b4f
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1dc19b4f
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@484fc066
Adding type registration clob -> org.hibernate.type.ClobType@524cd934
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@524cd934
Adding type registration nclob -> org.hibernate.type.NClobType@7d18d2ac
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7d18d2ac
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@ac5b61d
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@62df6d9a
Adding type registration serializable -> org.hibernate.type.SerializableType@3d2793db
Adding type registration object -> org.hibernate.type.ObjectType@1cfd5850
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1cfd5850
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6b39a1f7
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@14b89620
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@62881980
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@55425509
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@75dced99
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7b731442
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4037385f
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@695605e8
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Processing PersistenceUnitInfo [
	name: intelTrader
	persistence provider classname: org.hibernate.ejb.HibernatePersistence
	classloader: WebappClassLoader
  context: 
  delegate: false
  repositories:
    /WEB-INF/classes/
----------> Parent Classloader:
ClassRealm[plugin>org.apache.tomcat.maven:tomcat7-maven-plugin:2.0, parent: sun.misc.Launcher$AppClassLoader@1875303f]

	Temporary classloader: org.springframework.instrument.classloading.SimpleThrowawayClassLoader@e9df85f
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/vvarm1/IdeaProjects/intelTrader/src/main/webapp/WEB-INF/classes
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.inteltrader.entity.Instrument
		com.inteltrader.entity.Portfolio
		com.inteltrader.entity.Investment]
	Mapping files names []
	Properties [
		hibernate.connection.username: root
		hibernate.connection.password: root
		hibernate.dialect: org.hibernate.dialect.MySQLDialect
		hibernate.c3p0.min_size: 10
		hibernate.connection.url: jdbc:mysql://localhost:3306/TRADER_DB
		hibernate.show_sql: true
		hibernate.connection.driver_class: com.mysql.jdbc.Driver
		hibernate.hbm2ddl.auto: update]
Detect class: true; detect hbm: true
Detect class: true; detect hbm: true
Searching mapped entities in jar/par: file:/C:/Users/vvarm1/IdeaProjects/intelTrader/src/main/webapp/WEB-INF/classes
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.ejb.event.JpaIntegrator].
No JNDI name configured for binding Ejb3Configuration
Preparing to build session factory with filters : {}
Processing hbm.xml files
Process annotated classes
Binding entity from annotated class: com.inteltrader.entity.Instrument
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Instrument
Bind entity com.inteltrader.entity.Instrument on table INSTRUMENT
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=SYMBOL_NAME, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property symbolName with lazy=false
building SimpleValue for symbolName
Building property symbolName
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=priceList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=priceList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=priceList_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='priceList_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='SYMBOL_NAME', referencedColumn='', mappedBy=''}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Collection role: com.inteltrader.entity.Instrument.priceList
Building property priceList
Binding entity from annotated class: com.inteltrader.entity.Portfolio
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Portfolio
Bind entity com.inteltrader.entity.Portfolio on table PORTFOLIO
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=PORTFOLIO_NAME, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property portfolioName with lazy=false
building SimpleValue for portfolioName
Building property portfolioName
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='associatedPortfolio'}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=investmentList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=element, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=investmentList_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='investmentList_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='associatedPortfolio'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='associatedPortfolio'}
Collection role: com.inteltrader.entity.Portfolio.investmentList
Building property investmentList
Binding entity from annotated class: com.inteltrader.entity.Investment
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Investment
Bind entity com.inteltrader.entity.Investment on table INVESTMENT
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=INVESTMENT_ID, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property investmentId with lazy=false
building SimpleValue for investmentId
Building property investmentId
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=associatedPortfolio, insertable=true, updatable=true, unique=false}
Building property associatedPortfolio
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=currentPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property currentPrice with lazy=false
building SimpleValue for currentPrice
Building property currentPrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=quantity, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property quantity with lazy=false
building SimpleValue for quantity
Building property quantity
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=INVESTMENT_SYMBOL, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property symbolName with lazy=false
building SimpleValue for symbolName
Building property symbolName
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=transactionsList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=transactionsList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=transactionsList_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='transactionsList_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='INVESTMENT_ID', referencedColumn='', mappedBy=''}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Collection role: com.inteltrader.entity.Investment.transactionsList
Building property transactionsList
Setting SimpleValue typeName for symbolName
Setting SimpleValue typeName for portfolioName
Setting SimpleValue typeName for investmentId
Setting SimpleValue typeName for currentPrice
Setting SimpleValue typeName for quantity
Setting SimpleValue typeName for symbolName
Processing fk mappings (*ToOne and JoinedSubclass)
Processing extends queue
Processing extends queue
Processing collection mappings
Second pass for collection: com.inteltrader.entity.Investment.transactionsList
Binding a collection of element: com.inteltrader.entity.Investment.transactionsList
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT_TRANSACTION), mappingColumn=quantity, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property quantity with lazy=false
building SimpleValue for quantity
Setting SimpleValue typeName for quantity
Building property quantity
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT_TRANSACTION), mappingColumn=transactionId, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property transactionId with lazy=false
building SimpleValue for transactionId
Setting SimpleValue typeName for transactionId
Building property transactionId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT_TRANSACTION), mappingColumn=transactionPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property transactionPrice with lazy=false
building SimpleValue for transactionPrice
Setting SimpleValue typeName for transactionPrice
Building property transactionPrice
Mapped collection key: INVESTMENT_ID, element: quantity, transactionId, transactionPrice
Second pass for collection: com.inteltrader.entity.Instrument.priceList
Binding a collection of element: com.inteltrader.entity.Instrument.priceList
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=closePrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property closePrice with lazy=false
building SimpleValue for closePrice
Setting SimpleValue typeName for closePrice
Building property closePrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=highPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property highPrice with lazy=false
building SimpleValue for highPrice
Setting SimpleValue typeName for highPrice
Building property highPrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=lastClosePrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property lastClosePrice with lazy=false
building SimpleValue for lastClosePrice
Setting SimpleValue typeName for lastClosePrice
Building property lastClosePrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=lowPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property lowPrice with lazy=false
building SimpleValue for lowPrice
Setting SimpleValue typeName for lowPrice
Building property lowPrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=openPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property openPrice with lazy=false
building SimpleValue for openPrice
Setting SimpleValue typeName for openPrice
Building property openPrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=priceId, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property priceId with lazy=false
building SimpleValue for priceId
Setting SimpleValue typeName for priceId
Building property priceId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=timeStamp, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property timeStamp with lazy=false
building SimpleValue for timeStamp
Setting SimpleValue typeName for timeStamp
Building property timeStamp
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=totalTradedQuantity, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property totalTradedQuantity with lazy=false
building SimpleValue for totalTradedQuantity
Setting SimpleValue typeName for totalTradedQuantity
Building property totalTradedQuantity
Mapped collection key: SYMBOL_NAME, element: closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity
Second pass for collection: com.inteltrader.entity.Portfolio.investmentList
Binding a OneToMany: com.inteltrader.entity.Portfolio.investmentList through a foreign key
Mapping collection: com.inteltrader.entity.Portfolio.investmentList -> INVESTMENT
Retrieving property com.inteltrader.entity.Investment.associatedPortfolio
Mapped collection key: associatedPortfolio_PORTFOLIO_NAME, one-to-many: com.inteltrader.entity.Investment
Processing native query and ResultSetMapping mappings
Processing association property references
Creating tables' unique integer identifiers
Processing foreign key constraints
Resolving reference to class: com.inteltrader.entity.Instrument
Resolving reference to class: com.inteltrader.entity.Portfolio
Resolving reference to class: com.inteltrader.entity.Investment
HHH000022: c3p0 properties were encountered, but the org.hibernate.service.jdbc.connections.internal.C3P0ConnectionProvider provider class was not found on the classpath; these properties are going to be ignored.
HHH000402: Using Hibernate built-in connection pool (not for production use!)
HHH000115: Hibernate connection pool size: 20
HHH000006: Autocommit mode: true
HHH000401: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/TRADER_DB]
HHH000046: Connection properties: {user=root, password=root, autocommit=true, release_mode=auto}
Opening new JDBC connection
Created connection to: jdbc:mysql://localhost:3306/TRADER_DB, Isolation Level: 4
Database ->
       name : MySQL
    version : 5.6.10-log
      major : 5
      minor : 6
Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.9 ( Revision: ${svn.Revision} )
      major : 5
      minor : 1
JDBC version : 3.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: disabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
multi-tenancy strategy : NONE
Connection release mode: auto
HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
Maximum outer join fetch depth: 2
Default batch fetch size: 1
Generate SQL with comments: disabled
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
HHH000397: Using ASTQueryTranslatorFactory
Query language substitutions: {}
JPA-QL strict compliance: enabled
Second-level cache: enabled
Query cache: disabled
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
Optimize cache for minimal puts: disabled
Structured second-level cache entries: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Named query checking : enabled
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : : disabled
Building session factory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\vvarm1\IdeaProjects\intelTrader\target\tomcat, hibernate.connection.url=jdbc:mysql://localhost:3306/TRADER_DB, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.ejb.discard_pc_on_close=false, catalina.useNaming=true, hibernate.transaction.flush_before_completion=false, os.name=Windows 7, sun.boot.class.path=C:\Program Files\Java\jdk1.7.0_10\jre\lib\resources.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\rt.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\jce.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.7.0_10\jre\classes, java.util.logging.config.file=C:\Users\vvarm1\IdeaProjects\intelTrader\target\tomcat\conf\logging.properties, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.7.0_10-b18, hibernate.connection.autocommit=true, hibernate.c3p0.min_size=10, user.name=vvarm1, shared.loader=, guice.disable.misplaced.annotation.check=true, tomcat.util.buf.StringCache.byte.enabled=true, javax.persistence.validation.mode=AUTO, hibernate.connection.release_mode=auto, idea.launcher.bin.path=C:\Program Files (x86)\JetBrains\IntelliJ IDEA Community Edition 12.0.4\bin, user.language=en, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, sun.boot.library.path=C:\Program Files\Java\jdk1.7.0_10\jre\bin, classworlds.conf=C:\Program Files\Apache Software Foundation\apache-maven-3.0.5\bin\m2.conf, java.version=1.7.0_10, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, user.timezone=Asia/Calcutta, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.7.0_10\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, file.encoding.pkg=sun.io, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.tomcat.,org.apache.jasper., file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=51.0, user.country=US, java.home=C:\Program Files\Java\jdk1.7.0_10\jre, java.vm.info=mixed mode, os.version=6.1, hibernate.transaction.factory_class=org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory, hibernate.query.jpaql_strict_compliance=true, path.separator=;, java.vm.version=23.6-b04, hibernate.connection.password=root, user.variant=, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.scan.DefaultJarScanner.jarsToSkip=bootstrap.jar,commons-daemon.jar,tomcat-juli.jar,annotations-api.jar,el-api.jar,jsp-api.jar,servlet-api.jar,catalina.jar,catalina-ant.jar,catalina-ha.jar,catalina-tribes.jar,jasper.jar,jasper-el.jar,ecj-*.jar,tomcat-api.jar,tomcat-util.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-jni.jar,tomcat-spdy.jar,tomcat-i18n-en.jar,tomcat-i18n-es.jar,tomcat-i18n-fr.jar,tomcat-i18n-ja.jar,tomcat-juli-adapters.jar,catalina-jmx-remote.jar,catalina-ws.jar,tomcat-jdbc.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,jstl.jar,geronimo-spec-jaxrpc*.jar,wsdl4j*.jar,ant.jar,ant-junit*.jar,aspectj*.jar,jmx.jar,h2*.jar,hibernate*.jar,httpclient*.jar,jmx-tools.jar,jta*.jar,log4j*.jar,mail*.jar,slf4j*.jar,xercesImpl.jar,xmlParserAPIs.jar,xml-apis.jar,access-bridge-64.jar,dnsns.jar,jaccess.jar,ldapsec.jar,localedata.jar,sunjce_provider.jar,sunmscapi.jar,sunpkcs11.jar,jhall.jar,tools.jar,sunec.jar,zipfs.jar,gnome-java-bridge.jar,pulse-java.jar,apple_provider.jar,AppleScriptEngine.jar,CoreAudio.jar,dns_sd.jar,j3daudio.jar,j3dcore.jar,j3dutils.jar,jai_core.jar,jai_codec.jar,mlibwrapper_jai.jar,MRJToolkit.jar,vecmath.jar,junit.jar,junit-*.jar,ant-launcher.jar, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.tomcat.,org.apache.jasper., user.script=, java.naming.factory.url.pkgs=org.apache.naming, user.home=C:\Users\vvarm1, org.apache.catalina.startup.ContextConfig.jarsToSkip=, java.specification.vendor=Oracle Corporation, hibernate.hbm2ddl.auto=update, java.library.path=C:\Program Files\Java\jdk1.7.0_10\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\JetBrains\IntelliJ IDEA Community Edition 12.0.4\bin\..\.\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\ThinkPad\Bluetooth Software\;C:\Program Files\ThinkPad\Bluetooth Software\syswow64;c:\Program Files\Intel\WiFi\bin\;c:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files (x86)\Git\cmd;C:\Users\vvarm1\Documents\play-2.0.3;C:\Program Files\Java\jdk1.7.0_10\bin;C:\Program Files\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\QuickTime\QTSystem\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Java\jre6\bin;C:\Program Files\Apache Software Foundation\apache-maven-3.0.5\bin;c:\program files (x86)\jetbrains\intellij idea community edition 12.0.4\jre\jre\bin;., java.vendor.url=http://java.oracle.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, org.apache.catalina.startup.TldConfig.jarsToSkip=, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, common.loader=${catalina.base}/lib,${catalina.base}/lib/*.jar,${catalina.home}/lib,${catalina.home}/lib/*.jar, maven.home=C:\Program Files\Apache Software Foundation\apache-maven-3.0.5, java.runtime.name=Java(TM) SE Runtime Environment, java.class.path=C:\Program Files\Apache Software Foundation\apache-maven-3.0.5\boot\plexus-classworlds-2.4.jar;C:\Program Files (x86)\JetBrains\IntelliJ IDEA Community Edition 12.0.4\lib\idea_rt.jar, sun.java.command=com.intellij.rt.execution.application.AppMain org.codehaus.classworlds.Launcher --no-plugin-registry --fail-fast --strict-checksums --update-snapshots org.apache.tomcat.maven:tomcat7-maven-plugin:2.0:run, hibernate.bytecode.use_reflection_optimizer=false, idea.launcher.port=7534, java.vm.specification.name=Java Virtual Machine Specification, catalina.home=C:\Users\vvarm1\IdeaProjects\intelTrader\target\tomcat, java.vm.specification.version=1.7, sun.os.patch.level=Service Pack 1, sun.cpu.endian=little, java.io.tmpdir=C:\Users\vvarm1\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, server.loader=, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, java.ext.dirs=C:\Program Files\Java\jdk1.7.0_10\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=C:\Users\vvarm1\IdeaProjects\intelTrader, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding=UTF-8, hibernate.use_identifier_rollback=false, java.specification.version=1.7, hibernate.show_sql=true}
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Static SQL for entity: com.inteltrader.entity.Investment
 Version select: select INVESTMENT_ID from TRADER_DB.INVESTMENT where INVESTMENT_ID =?
 Snapshot select: select investment_.INVESTMENT_ID, investment_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_, investment_.currentPrice as currentP2_2_, investment_.quantity as quantity2_, investment_.INVESTMENT_SYMBOL as INVESTMENT4_2_ from TRADER_DB.INVESTMENT investment_ where investment_.INVESTMENT_ID=?
 Insert 0: insert into TRADER_DB.INVESTMENT (associatedPortfolio_PORTFOLIO_NAME, currentPrice, quantity, INVESTMENT_SYMBOL, INVESTMENT_ID) values (?, ?, ?, ?, ?)
 Update 0: update TRADER_DB.INVESTMENT set associatedPortfolio_PORTFOLIO_NAME=?, currentPrice=?, quantity=?, INVESTMENT_SYMBOL=? where INVESTMENT_ID=?
 Delete 0: delete from TRADER_DB.INVESTMENT where INVESTMENT_ID=?
 Identity insert: insert into TRADER_DB.INVESTMENT (associatedPortfolio_PORTFOLIO_NAME, currentPrice, quantity, INVESTMENT_SYMBOL) values (?, ?, ?, ?)
Static SQL for entity: com.inteltrader.entity.Instrument
 Version select: select SYMBOL_NAME from TRADER_DB.INSTRUMENT where SYMBOL_NAME =?
 Snapshot select: select instrument_.SYMBOL_NAME from TRADER_DB.INSTRUMENT instrument_ where instrument_.SYMBOL_NAME=?
 Insert 0: insert into TRADER_DB.INSTRUMENT (SYMBOL_NAME) values (?)
 Update 0: null
 Delete 0: delete from TRADER_DB.INSTRUMENT where SYMBOL_NAME=?
Static SQL for entity: com.inteltrader.entity.Portfolio
 Version select: select PORTFOLIO_NAME from TRADER_DB.PORTFOLIO where PORTFOLIO_NAME =?
 Snapshot select: select portfolio_.PORTFOLIO_NAME from TRADER_DB.PORTFOLIO portfolio_ where portfolio_.PORTFOLIO_NAME=?
 Insert 0: insert into TRADER_DB.PORTFOLIO (PORTFOLIO_NAME) values (?)
 Update 0: null
 Delete 0: delete from TRADER_DB.PORTFOLIO where PORTFOLIO_NAME=?
Static SQL for collection: com.inteltrader.entity.Instrument.priceList
 Row insert: insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
 Row update: update TRADER_DB.INSTRUMENT_PRICE set closePrice=?, highPrice=?, lastClosePrice=?, lowPrice=?, openPrice=?, priceId=?, timeStamp=?, totalTradedQuantity=? where SYMBOL_NAME=? and priceId=? and totalTradedQuantity=?
 Row delete: delete from TRADER_DB.INSTRUMENT_PRICE where SYMBOL_NAME=? and priceId=? and totalTradedQuantity=?
 One-shot delete: delete from TRADER_DB.INSTRUMENT_PRICE where SYMBOL_NAME=?
Static SQL for collection: com.inteltrader.entity.Investment.transactionsList
 Row insert: insert into TRADER_DB.INVESTMENT_TRANSACTION (INVESTMENT_ID, quantity, transactionId, transactionPrice) values (?, ?, ?, ?)
 Row update: update TRADER_DB.INVESTMENT_TRANSACTION set quantity=?, transactionId=?, transactionPrice=? where INVESTMENT_ID=? and quantity=? and transactionId=? and transactionPrice=?
 Row delete: delete from TRADER_DB.INVESTMENT_TRANSACTION where INVESTMENT_ID=? and quantity=? and transactionId=? and transactionPrice=?
 One-shot delete: delete from TRADER_DB.INVESTMENT_TRANSACTION where INVESTMENT_ID=?
Static SQL for collection: com.inteltrader.entity.Portfolio.investmentList
 Row insert: update TRADER_DB.INVESTMENT set associatedPortfolio_PORTFOLIO_NAME=? where INVESTMENT_ID=?
 Row delete: update TRADER_DB.INVESTMENT set associatedPortfolio_PORTFOLIO_NAME=null where associatedPortfolio_PORTFOLIO_NAME=? and INVESTMENT_ID=?
 One-shot delete: update TRADER_DB.INVESTMENT set associatedPortfolio_PORTFOLIO_NAME=null where associatedPortfolio_PORTFOLIO_NAME=?
Static select for entity com.inteltrader.entity.Instrument [NONE]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for entity com.inteltrader.entity.Instrument [READ]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for entity com.inteltrader.entity.Instrument [UPGRADE]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [UPGRADE_NOWAIT]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [FORCE]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [PESSIMISTIC_READ]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? lock in share mode
Static select for entity com.inteltrader.entity.Instrument [PESSIMISTIC_WRITE]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [PESSIMISTIC_FORCE_INCREMENT]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [OPTIMISTIC]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for entity com.inteltrader.entity.Instrument [OPTIMISTIC_FORCE_INCREMENT]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for action ACTION_MERGE on entity com.inteltrader.entity.Instrument: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for action ACTION_REFRESH on entity com.inteltrader.entity.Instrument: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for entity com.inteltrader.entity.Investment [NONE]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_1_, investment0_.currentPrice as currentP2_2_1_, investment0_.quantity as quantity2_1_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_1_, portfolio1_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.INVESTMENT investment0_ left outer join TRADER_DB.PORTFOLIO portfolio1_ on investment0_.associatedPortfolio_PORTFOLIO_NAME=portfolio1_.PORTFOLIO_NAME where investment0_.INVESTMENT_ID=?
Static select for entity com.inteltrader.entity.Investment [READ]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_1_, investment0_.currentPrice as currentP2_2_1_, investment0_.quantity as quantity2_1_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_1_, portfolio1_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.INVESTMENT investment0_ left outer join TRADER_DB.PORTFOLIO portfolio1_ on investment0_.associatedPortfolio_PORTFOLIO_NAME=portfolio1_.PORTFOLIO_NAME where investment0_.INVESTMENT_ID=?
Static select for entity com.inteltrader.entity.Investment [UPGRADE]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [UPGRADE_NOWAIT]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [FORCE]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [PESSIMISTIC_READ]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? lock in share mode
Static select for entity com.inteltrader.entity.Investment [PESSIMISTIC_WRITE]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [PESSIMISTIC_FORCE_INCREMENT]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [OPTIMISTIC]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=?
Static select for entity com.inteltrader.entity.Investment [OPTIMISTIC_FORCE_INCREMENT]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=?
Static select for action ACTION_MERGE on entity com.inteltrader.entity.Investment: select investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_1_, investment0_.currentPrice as currentP2_2_1_, investment0_.quantity as quantity2_1_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_1_, portfolio1_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.INVESTMENT investment0_ left outer join TRADER_DB.PORTFOLIO portfolio1_ on investment0_.associatedPortfolio_PORTFOLIO_NAME=portfolio1_.PORTFOLIO_NAME where investment0_.INVESTMENT_ID=?
Static select for action ACTION_REFRESH on entity com.inteltrader.entity.Investment: select investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_1_, investment0_.currentPrice as currentP2_2_1_, investment0_.quantity as quantity2_1_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_1_, portfolio1_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.INVESTMENT investment0_ left outer join TRADER_DB.PORTFOLIO portfolio1_ on investment0_.associatedPortfolio_PORTFOLIO_NAME=portfolio1_.PORTFOLIO_NAME where investment0_.INVESTMENT_ID=?
Static select for entity com.inteltrader.entity.Portfolio [NONE]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Static select for entity com.inteltrader.entity.Portfolio [READ]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Static select for entity com.inteltrader.entity.Portfolio [UPGRADE]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [UPGRADE_NOWAIT]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [FORCE]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [PESSIMISTIC_READ]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? lock in share mode
Static select for entity com.inteltrader.entity.Portfolio [PESSIMISTIC_WRITE]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [PESSIMISTIC_FORCE_INCREMENT]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [OPTIMISTIC]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=?
Static select for entity com.inteltrader.entity.Portfolio [OPTIMISTIC_FORCE_INCREMENT]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=?
Static select for action ACTION_MERGE on entity com.inteltrader.entity.Portfolio: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Static select for action ACTION_REFRESH on entity com.inteltrader.entity.Portfolio: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Static select for collection com.inteltrader.entity.Instrument.priceList: select pricelist0_.SYMBOL_NAME as SYMBOL1_0_0_, pricelist0_.closePrice as closePrice1_0_, pricelist0_.highPrice as highPrice1_0_, pricelist0_.lastClosePrice as lastClos4_1_0_, pricelist0_.lowPrice as lowPrice1_0_, pricelist0_.openPrice as openPrice1_0_, pricelist0_.priceId as priceId1_0_, pricelist0_.timeStamp as timeStamp1_0_, pricelist0_.totalTradedQuantity as totalTra9_1_0_ from TRADER_DB.INSTRUMENT_PRICE pricelist0_ where pricelist0_.SYMBOL_NAME=?
Static select for one-to-many com.inteltrader.entity.Portfolio.investmentList: select investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_1_, investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.associatedPortfolio_PORTFOLIO_NAME=?
Static select for collection com.inteltrader.entity.Investment.transactionsList: select transactio0_.INVESTMENT_ID as INVESTMENT1_2_0_, transactio0_.quantity as quantity3_0_, transactio0_.transactionId as transact3_3_0_, transactio0_.transactionPrice as transact4_3_0_ from TRADER_DB.INVESTMENT_TRANSACTION transactio0_ where transactio0_.INVESTMENT_ID=?
Registering SessionFactory: ed86067b-3330-4efd-9a90-80a9b89c6fc1 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Instantiated session factory
HHH000228: Running hbm2ddl schema update
HHH000102: Fetching database metadata
HHH000396: Updating schema
Processing hbm.xml files
Process annotated classes
Processing fk mappings (*ToOne and JoinedSubclass)
Processing extends queue
Processing extends queue
Processing collection mappings
Processing native query and ResultSetMapping mappings
Processing association property references
Creating tables' unique integer identifiers
Processing foreign key constraints
Resolving reference to class: com.inteltrader.entity.Instrument
Resolving reference to class: com.inteltrader.entity.Portfolio
Resolving reference to class: com.inteltrader.entity.Investment
HHH000261: Table found: TRADER_DB.instrument
HHH000037: Columns: [symbol_name]
HHH000108: Foreign keys: []
HHH000126: Indexes: [primary]
HHH000261: Table found: TRADER_DB.instrument_price
HHH000037: Columns: [totaltradedquantity, timestamp, priceid, lastcloseprice, highprice, symbol_name, openprice, closeprice, lowprice]
HHH000108: Foreign keys: [fk3189a2d153ed548d]
HHH000126: Indexes: [fk3189a2d153ed548d]
HHH000261: Table found: TRADER_DB.investment
HHH000037: Columns: [investment_id, associatedportfolio_portfolio_name, currentprice, quantity, investment_symbol]
HHH000108: Foreign keys: [fk8fe41ed3c804d4f3]
HHH000126: Indexes: [fk8fe41ed3c804d4f3, primary]
HHH000261: Table found: TRADER_DB.investment_transaction
HHH000037: Columns: [transactionprice, investment_id, transactionid, quantity]
HHH000108: Foreign keys: [fka5863f52914590ae]
HHH000126: Indexes: [fka5863f52914590ae]
HHH000261: Table found: TRADER_DB.portfolio
HHH000037: Columns: [portfolio_name]
HHH000108: Foreign keys: []
HHH000126: Indexes: [primary]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
HHH000232: Schema update complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Statistics initialized [enabled=false]
Registering EntityManagerFactory: intelTrader 
HHH000436: Entity manager factory name (intelTrader) is already registered.  If entity manager will be clustered or passivated, specify a unique value for property 'hibernate.ejb.entitymanager_factory_name'
Finished creating instance of bean 'entityManagerFactory'
Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@2b90867e: defining beans [org.springframework.context.annotation.internalAsyncAnnotationProcessor,org.springframework.context.annotation.internalScheduledAnnotationProcessor,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0,org.springframework.web.servlet.view.InternalResourceViewResolver#0,instrumentDao,portfolioDao,instrumentService,portfolioService,entityManagerFactory,transactionManager,instrument,investment,portfolio,instrumentServiceRest,portfolioServiceRest,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor]; parent: org.springframework.beans.factory.support.DefaultListableBeanFactory@5b843328
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Creating instance of bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0' to allow for resolving potential circular references
Creating instance of bean '(inner bean)'
Creating shared instance of singleton bean 'transactionManager'
Creating instance of bean 'transactionManager'
Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
Returning cached instance of singleton bean 'entityManagerFactory'
Invoking afterPropertiesSet() on bean with name 'transactionManager'
Finished creating instance of bean 'transactionManager'
Creating instance of bean '(inner bean)'
Finished creating instance of bean '(inner bean)'
Invoking afterPropertiesSet() on bean with name '(inner bean)'
Finished creating instance of bean '(inner bean)'
Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Creating shared instance of singleton bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Creating instance of bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Eagerly caching bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Creating shared instance of singleton bean 'instrumentDao'
Creating instance of bean 'instrumentDao'
Eagerly caching bean 'instrumentDao' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'instrumentDao'
Creating shared instance of singleton bean 'portfolioDao'
Creating instance of bean 'portfolioDao'
Eagerly caching bean 'portfolioDao' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'portfolioDao'
Creating shared instance of singleton bean 'instrumentService'
Creating instance of bean 'instrumentService'
Registered injected element on class [com.inteltrader.service.InstrumentServiceImpl]: PersistenceElement for javax.persistence.EntityManagerFactory com.inteltrader.service.InstrumentServiceImpl.entityManagerFactory
Registered injected element on class [com.inteltrader.service.InstrumentServiceImpl]: AutowiredFieldElement for private com.inteltrader.dao.IInstrumentDao com.inteltrader.service.InstrumentServiceImpl.instrumentDao
Registered injected element on class [com.inteltrader.service.InstrumentServiceImpl]: AutowiredFieldElement for private com.inteltrader.service.PortfolioService com.inteltrader.service.InstrumentServiceImpl.portfolioService
Eagerly caching bean 'instrumentService' to allow for resolving potential circular references
Processing injected method of bean 'instrumentService': PersistenceElement for javax.persistence.EntityManagerFactory com.inteltrader.service.InstrumentServiceImpl.entityManagerFactory
Returning cached instance of singleton bean 'entityManagerFactory'
Processing injected method of bean 'instrumentService': AutowiredFieldElement for private com.inteltrader.dao.IInstrumentDao com.inteltrader.service.InstrumentServiceImpl.instrumentDao
Returning cached instance of singleton bean 'instrumentDao'
Autowiring by type from bean name 'instrumentService' to bean named 'instrumentDao'
Processing injected method of bean 'instrumentService': AutowiredFieldElement for private com.inteltrader.service.PortfolioService com.inteltrader.service.InstrumentServiceImpl.portfolioService
Creating shared instance of singleton bean 'portfolioService'
Creating instance of bean 'portfolioService'
Registered injected element on class [com.inteltrader.service.PortfolioServiceImpl]: PersistenceElement for private javax.persistence.EntityManagerFactory com.inteltrader.service.PortfolioServiceImpl.entityManagerFactory
Registered injected element on class [com.inteltrader.service.PortfolioServiceImpl]: AutowiredFieldElement for private com.inteltrader.dao.IPortfolioDao com.inteltrader.service.PortfolioServiceImpl.portfolioDao
Eagerly caching bean 'portfolioService' to allow for resolving potential circular references
Processing injected method of bean 'portfolioService': PersistenceElement for private javax.persistence.EntityManagerFactory com.inteltrader.service.PortfolioServiceImpl.entityManagerFactory
Returning cached instance of singleton bean 'entityManagerFactory'
Processing injected method of bean 'portfolioService': AutowiredFieldElement for private com.inteltrader.dao.IPortfolioDao com.inteltrader.service.PortfolioServiceImpl.portfolioDao
Returning cached instance of singleton bean 'portfolioDao'
Autowiring by type from bean name 'portfolioService' to bean named 'portfolioDao'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'portfolioService'
Autowiring by type from bean name 'instrumentService' to bean named 'portfolioService'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'instrumentService'
Returning cached instance of singleton bean 'portfolioService'
Returning cached instance of singleton bean 'entityManagerFactory'
Returning cached instance of singleton bean 'transactionManager'
Creating shared instance of singleton bean 'instrument'
Creating instance of bean 'instrument'
Eagerly caching bean 'instrument' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'instrument'
Creating shared instance of singleton bean 'investment'
Creating instance of bean 'investment'
Eagerly caching bean 'investment' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'investment'
Creating shared instance of singleton bean 'portfolio'
Creating instance of bean 'portfolio'
Eagerly caching bean 'portfolio' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'portfolio'
Creating shared instance of singleton bean 'instrumentServiceRest'
Creating instance of bean 'instrumentServiceRest'
Registered injected element on class [com.inteltrader.rest.InstrumentServiceRest]: AutowiredFieldElement for private com.inteltrader.service.InstrumentService com.inteltrader.rest.InstrumentServiceRest.instrumentService
Eagerly caching bean 'instrumentServiceRest' to allow for resolving potential circular references
Processing injected method of bean 'instrumentServiceRest': AutowiredFieldElement for private com.inteltrader.service.InstrumentService com.inteltrader.rest.InstrumentServiceRest.instrumentService
Returning cached instance of singleton bean 'instrumentService'
Autowiring by type from bean name 'instrumentServiceRest' to bean named 'instrumentService'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'instrumentServiceRest'
Creating shared instance of singleton bean 'portfolioServiceRest'
Creating instance of bean 'portfolioServiceRest'
Registered injected element on class [com.inteltrader.rest.PortfolioServiceRest]: AutowiredFieldElement for private com.inteltrader.service.PortfolioService com.inteltrader.rest.PortfolioServiceRest.portfolioService
Eagerly caching bean 'portfolioServiceRest' to allow for resolving potential circular references
Processing injected method of bean 'portfolioServiceRest': AutowiredFieldElement for private com.inteltrader.service.PortfolioService com.inteltrader.rest.PortfolioServiceRest.portfolioService
Returning cached instance of singleton bean 'portfolioService'
Autowiring by type from bean name 'portfolioServiceRest' to bean named 'portfolioService'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'portfolioServiceRest'
Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@606423e2]
Returning cached instance of singleton bean 'lifecycleProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Unable to locate MultipartResolver with name 'multipartResolver': no multipart request handling provided
Creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Unable to locate LocaleResolver with name 'localeResolver': using default [org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver@2d26d80c]
Creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Unable to locate ThemeResolver with name 'themeResolver': using default [org.springframework.web.servlet.theme.FixedThemeResolver@5da6e5b7]
Creating instance of bean 'org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping'
Looking for URL mappings in application context: WebApplicationContext for namespace 'appServlet-servlet': startup date [Fri Apr 19 17:14:11 IST 2013]; parent: Root WebApplicationContext
Rejected bean name 'org.springframework.context.annotation.internalAsyncAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalScheduledAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalRequiredAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalCommonAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.aop.config.internalAutoProxyCreator': no URL paths identified
Rejected bean name 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0': no URL paths identified
Rejected bean name 'org.springframework.web.servlet.view.InternalResourceViewResolver#0': no URL paths identified
Rejected bean name 'instrumentDao': no URL paths identified
Rejected bean name 'portfolioDao': no URL paths identified
Rejected bean name 'instrumentService': no URL paths identified
Rejected bean name 'portfolioService': no URL paths identified
Rejected bean name 'entityManagerFactory': no URL paths identified
Rejected bean name 'transactionManager': no URL paths identified
Rejected bean name 'instrument': no URL paths identified
Rejected bean name 'investment': no URL paths identified
Rejected bean name 'portfolio': no URL paths identified
Rejected bean name 'instrumentServiceRest': no URL paths identified
Rejected bean name 'portfolioServiceRest': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor': no URL paths identified
Rejected bean name 'environment': no URL paths identified
Rejected bean name 'systemProperties': no URL paths identified
Rejected bean name 'systemEnvironment': no URL paths identified
Rejected bean name 'servletConfig': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry': no URL paths identified
Rejected bean name 'messageSource': no URL paths identified
Rejected bean name 'applicationEventMulticaster': no URL paths identified
Rejected bean name 'lifecycleProcessor': no URL paths identified
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping'
Creating instance of bean 'org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping'
Looking for URL mappings in application context: WebApplicationContext for namespace 'appServlet-servlet': startup date [Fri Apr 19 17:14:11 IST 2013]; parent: Root WebApplicationContext
Rejected bean name 'org.springframework.context.annotation.internalAsyncAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalScheduledAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalRequiredAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalCommonAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.aop.config.internalAutoProxyCreator': no URL paths identified
Rejected bean name 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0': no URL paths identified
Rejected bean name 'org.springframework.web.servlet.view.InternalResourceViewResolver#0': no URL paths identified
Rejected bean name 'instrumentDao': no URL paths identified
Rejected bean name 'portfolioDao': no URL paths identified
Rejected bean name 'instrumentService': no URL paths identified
Rejected bean name 'portfolioService': no URL paths identified
Rejected bean name 'entityManagerFactory': no URL paths identified
Rejected bean name 'transactionManager': no URL paths identified
Rejected bean name 'instrument': no URL paths identified
Rejected bean name 'investment': no URL paths identified
Rejected bean name 'portfolio': no URL paths identified
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/create/{symbol}] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/create/{symbol}.*] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/create/{symbol}/] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/update/{portfolioName}] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/update/{portfolioName}.*] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/update/{portfolioName}/] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/load/{symbol}] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/load/{symbol}.*] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/load/{symbol}/] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/create/{portfolioName}] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/create/{portfolioName}.*] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/create/{portfolioName}/] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/load/{portfolioName}] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/load/{portfolioName}.*] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/load/{portfolioName}/] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/addInvestment/{portfolioName}/{symbolName}] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/addInvestment/{portfolioName}/{symbolName}.*] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/addInvestment/{portfolioName}/{symbolName}/] onto handler 'portfolioServiceRest'
Rejected bean name 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor': no URL paths identified
Rejected bean name 'environment': no URL paths identified
Rejected bean name 'systemProperties': no URL paths identified
Rejected bean name 'systemEnvironment': no URL paths identified
Rejected bean name 'servletConfig': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry': no URL paths identified
Rejected bean name 'messageSource': no URL paths identified
Rejected bean name 'applicationEventMulticaster': no URL paths identified
Rejected bean name 'lifecycleProcessor': no URL paths identified
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping'
No HandlerMappings found in servlet 'appServlet': using default
Creating instance of bean 'org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter'
Creating instance of bean 'org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter'
Creating instance of bean 'org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter'
No HandlerAdapters found in servlet 'appServlet': using default
Creating instance of bean 'org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerExceptionResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerExceptionResolver'
Creating instance of bean 'org.springframework.web.servlet.mvc.annotation.ResponseStatusExceptionResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.annotation.ResponseStatusExceptionResolver'
Creating instance of bean 'org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver'
No HandlerExceptionResolvers found in servlet 'appServlet': using default
Creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Unable to locate RequestToViewNameTranslator with name 'viewNameTranslator': using default [org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@39dfea6f]
Returning cached instance of singleton bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Returning cached instance of singleton bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Unable to locate FlashMapManager with name 'flashMapManager': using default [org.springframework.web.servlet.support.SessionFlashMapManager@3c0873f9]
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Searching for key 'spring.liveBeansView.mbeanDomain' in [servletConfigInitParams]
Searching for key 'spring.liveBeansView.mbeanDomain' in [servletContextInitParams]
Searching for key 'spring.liveBeansView.mbeanDomain' in [jndiProperties]
Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain]
Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException: Name [spring.liveBeansView.mbeanDomain] is not bound in this Context. Unable to find [spring.liveBeansView.mbeanDomain].
Looking up JNDI object with name [spring.liveBeansView.mbeanDomain]
JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: Name [spring.liveBeansView.mbeanDomain] is not bound in this Context. Unable to find [spring.liveBeansView.mbeanDomain].. Returning null.
Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
Published WebApplicationContext of servlet 'appServlet' as ServletContext attribute with name [org.springframework.web.servlet.FrameworkServlet.CONTEXT.appServlet]
FrameworkServlet 'appServlet': initialization completed in 492 ms
Servlet 'appServlet' configured successfully
DispatcherServlet with name 'appServlet' processing GET request for [/portfolio/load/MyFirstTime]
Matching patterns for request [/portfolio/load/MyFirstTime] are [/portfolio/load/{portfolioName}]
URI Template variables for request [/portfolio/load/MyFirstTime] are {portfolioName=MyFirstTime}
Mapping [/portfolio/load/MyFirstTime] to HandlerExecutionChain with handler [com.inteltrader.rest.PortfolioServiceRest@4b8d3448] and 2 interceptors
Last-Modified value for [/portfolio/load/MyFirstTime] is: -1
Invoking request handler method: public org.springframework.http.ResponseEntity com.inteltrader.rest.PortfolioServiceRest.loadInstrument(java.lang.String,javax.servlet.http.HttpServletRequest)
Loading entity: [com.inteltrader.entity.Portfolio#MyFirstTime]
Obtaining JDBC connection
Obtained JDBC connection
select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Result set row: 0
Result row: EntityKey[com.inteltrader.entity.Investment#1], EntityKey[com.inteltrader.entity.Portfolio#MyFirstTime]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Result set row: 1
Result row: EntityKey[com.inteltrader.entity.Investment#2], EntityKey[com.inteltrader.entity.Portfolio#MyFirstTime]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Result set row: 2
Result row: EntityKey[com.inteltrader.entity.Investment#3], EntityKey[com.inteltrader.entity.Portfolio#MyFirstTime]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Resolving associations for [com.inteltrader.entity.Investment#1]
Loading entity: [com.inteltrader.entity.Portfolio#myFirstTime]
select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Result set row: 0
Result row: EntityKey[com.inteltrader.entity.Investment#1], EntityKey[com.inteltrader.entity.Portfolio#myFirstTime]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Result set row: 1
Result row: EntityKey[com.inteltrader.entity.Investment#2], EntityKey[com.inteltrader.entity.Portfolio#myFirstTime]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Result set row: 2
Result row: EntityKey[com.inteltrader.entity.Investment#3], EntityKey[com.inteltrader.entity.Portfolio#myFirstTime]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Resolving associations for [com.inteltrader.entity.Portfolio#myFirstTime]
Done materializing entity [com.inteltrader.entity.Portfolio#myFirstTime]
No collections were found in result set for role: com.inteltrader.entity.Portfolio.investmentList
Done entity load
Done materializing entity [com.inteltrader.entity.Investment#1]
Resolving associations for [com.inteltrader.entity.Portfolio#MyFirstTime]
Done materializing entity [com.inteltrader.entity.Portfolio#MyFirstTime]
Resolving associations for [com.inteltrader.entity.Investment#2]
Done materializing entity [com.inteltrader.entity.Investment#2]
Resolving associations for [com.inteltrader.entity.Investment#3]
Done materializing entity [com.inteltrader.entity.Investment#3]
1 collections were found in result set for role: com.inteltrader.entity.Portfolio.investmentList
Collection fully initialized: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
1 collections initialized for role: com.inteltrader.entity.Portfolio.investmentList
Loading collection: [com.inteltrader.entity.Portfolio.investmentList#MyFirstTime]
select investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_1_, investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.associatedPortfolio_PORTFOLIO_NAME=?
Result set contains (possibly empty) collection: [com.inteltrader.entity.Portfolio.investmentList#MyFirstTime]
Result set row: 0
Result row: EntityKey[com.inteltrader.entity.Investment#1]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Result set row: 1
Result row: EntityKey[com.inteltrader.entity.Investment#2]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Result set row: 2
Result row: EntityKey[com.inteltrader.entity.Investment#3]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
1 collections were found in result set for role: com.inteltrader.entity.Portfolio.investmentList
Collection fully initialized: [com.inteltrader.entity.Portfolio.investmentList#MyFirstTime]
1 collections initialized for role: com.inteltrader.entity.Portfolio.investmentList
Done loading collection
Done entity load
Written [{"portfolioName":"MyFirstTime","investmentList":[]}] as "text/html" using [org.springframework.http.converter.StringHttpMessageConverter@714a97d8]
Null ModelAndView returned to DispatcherServlet with name 'appServlet': assuming HandlerAdapter completed request handling
Successfully completed request
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
DispatcherServlet with name 'appServlet' processing GET request for [/portfolio/load/MyFirstTime]
Matching patterns for request [/portfolio/load/MyFirstTime] are [/portfolio/load/{portfolioName}]
URI Template variables for request [/portfolio/load/MyFirstTime] are {portfolioName=MyFirstTime}
Mapping [/portfolio/load/MyFirstTime] to HandlerExecutionChain with handler [com.inteltrader.rest.PortfolioServiceRest@4b8d3448] and 2 interceptors
Last-Modified value for [/portfolio/load/MyFirstTime] is: -1
Invoking request handler method: public org.springframework.http.ResponseEntity com.inteltrader.rest.PortfolioServiceRest.loadInstrument(java.lang.String,javax.servlet.http.HttpServletRequest)
Loading entity: [com.inteltrader.entity.Portfolio#MyFirstTime]
Obtaining JDBC connection
Opening new JDBC connection
Created connection to: jdbc:mysql://localhost:3306/TRADER_DB, Isolation Level: 4
Obtained JDBC connection
select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Result set row: 0
Result row: EntityKey[com.inteltrader.entity.Investment#1], EntityKey[com.inteltrader.entity.Portfolio#MyFirstTime]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Result set row: 1
Result row: EntityKey[com.inteltrader.entity.Investment#2], EntityKey[com.inteltrader.entity.Portfolio#MyFirstTime]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Result set row: 2
Result row: EntityKey[com.inteltrader.entity.Investment#3], EntityKey[com.inteltrader.entity.Portfolio#MyFirstTime]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Resolving associations for [com.inteltrader.entity.Investment#1]
Loading entity: [com.inteltrader.entity.Portfolio#myFirstTime]
select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Result set row: 0
Result row: EntityKey[com.inteltrader.entity.Investment#1], EntityKey[com.inteltrader.entity.Portfolio#myFirstTime]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Result set row: 1
Result row: EntityKey[com.inteltrader.entity.Investment#2], EntityKey[com.inteltrader.entity.Portfolio#myFirstTime]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Result set row: 2
Result row: EntityKey[com.inteltrader.entity.Investment#3], EntityKey[com.inteltrader.entity.Portfolio#myFirstTime]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Resolving associations for [com.inteltrader.entity.Portfolio#myFirstTime]
Done materializing entity [com.inteltrader.entity.Portfolio#myFirstTime]
No collections were found in result set for role: com.inteltrader.entity.Portfolio.investmentList
Done entity load
Done materializing entity [com.inteltrader.entity.Investment#1]
Resolving associations for [com.inteltrader.entity.Portfolio#MyFirstTime]
Done materializing entity [com.inteltrader.entity.Portfolio#MyFirstTime]
Resolving associations for [com.inteltrader.entity.Investment#2]
Done materializing entity [com.inteltrader.entity.Investment#2]
Resolving associations for [com.inteltrader.entity.Investment#3]
Done materializing entity [com.inteltrader.entity.Investment#3]
1 collections were found in result set for role: com.inteltrader.entity.Portfolio.investmentList
Collection fully initialized: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
1 collections initialized for role: com.inteltrader.entity.Portfolio.investmentList
Loading collection: [com.inteltrader.entity.Portfolio.investmentList#MyFirstTime]
select investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_1_, investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.associatedPortfolio_PORTFOLIO_NAME=?
Result set contains (possibly empty) collection: [com.inteltrader.entity.Portfolio.investmentList#MyFirstTime]
Result set row: 0
Result row: EntityKey[com.inteltrader.entity.Investment#1]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Result set row: 1
Result row: EntityKey[com.inteltrader.entity.Investment#2]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Result set row: 2
Result row: EntityKey[com.inteltrader.entity.Investment#3]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
1 collections were found in result set for role: com.inteltrader.entity.Portfolio.investmentList
Collection fully initialized: [com.inteltrader.entity.Portfolio.investmentList#MyFirstTime]
1 collections initialized for role: com.inteltrader.entity.Portfolio.investmentList
Done loading collection
Done entity load
Written [{"portfolioName":"MyFirstTime","investmentList":[]}] as "text/html" using [org.springframework.http.converter.StringHttpMessageConverter@714a97d8]
Null ModelAndView returned to DispatcherServlet with name 'appServlet': assuming HandlerAdapter completed request handling
Successfully completed request
Initializing servlet 'appServlet'
Initializing new StandardServletEnvironment
Adding [servletConfigInitParams] PropertySource with lowest search precedence
Adding [servletContextInitParams] PropertySource with lowest search precedence
Adding [jndiProperties] PropertySource with lowest search precedence
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment]
FrameworkServlet 'appServlet': initialization started
Servlet with name 'appServlet' will try to create custom WebApplicationContext context of class 'org.springframework.web.context.support.XmlWebApplicationContext', using parent context [Root WebApplicationContext: startup date [Fri Apr 19 17:19:38 IST 2013]; root of context hierarchy]
Searching for key 'spring.profiles.active' in [servletConfigInitParams]
Searching for key 'spring.profiles.active' in [servletContextInitParams]
Searching for key 'spring.profiles.active' in [jndiProperties]
Looking up JNDI object with name [java:comp/env/spring.profiles.active]
Converted JNDI name [java:comp/env/spring.profiles.active] not found - trying original name [spring.profiles.active]. javax.naming.NameNotFoundException: Name [spring.profiles.active] is not bound in this Context. Unable to find [spring.profiles.active].
Looking up JNDI object with name [spring.profiles.active]
JNDI lookup for name [spring.profiles.active] threw NamingException with message: Name [spring.profiles.active] is not bound in this Context. Unable to find [spring.profiles.active].. Returning null.
Searching for key 'spring.profiles.active' in [systemProperties]
Searching for key 'spring.profiles.active' in [systemEnvironment]
Could not find key 'spring.profiles.active' in any property source. Returning [null]
Searching for key 'spring.profiles.default' in [servletConfigInitParams]
Searching for key 'spring.profiles.default' in [servletContextInitParams]
Searching for key 'spring.profiles.default' in [jndiProperties]
Looking up JNDI object with name [java:comp/env/spring.profiles.default]
Converted JNDI name [java:comp/env/spring.profiles.default] not found - trying original name [spring.profiles.default]. javax.naming.NameNotFoundException: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].
Looking up JNDI object with name [spring.profiles.default]
JNDI lookup for name [spring.profiles.default] threw NamingException with message: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].. Returning null.
Searching for key 'spring.profiles.default' in [systemProperties]
Searching for key 'spring.profiles.default' in [systemEnvironment]
Could not find key 'spring.profiles.default' in any property source. Returning [null]
Searching for key 'spring.profiles.default' in [servletConfigInitParams]
Searching for key 'spring.profiles.default' in [servletContextInitParams]
Searching for key 'spring.profiles.default' in [jndiProperties]
Looking up JNDI object with name [java:comp/env/spring.profiles.default]
Converted JNDI name [java:comp/env/spring.profiles.default] not found - trying original name [spring.profiles.default]. javax.naming.NameNotFoundException: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].
Looking up JNDI object with name [spring.profiles.default]
JNDI lookup for name [spring.profiles.default] threw NamingException with message: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].. Returning null.
Searching for key 'spring.profiles.default' in [systemProperties]
Searching for key 'spring.profiles.default' in [systemEnvironment]
Could not find key 'spring.profiles.default' in any property source. Returning [null]
Replacing [servletContextInitParams] PropertySource with [servletContextInitParams]
Replacing [servletConfigInitParams] PropertySource with [servletConfigInitParams]
Refreshing WebApplicationContext for namespace 'appServlet-servlet': startup date [Fri Apr 19 17:19:43 IST 2013]; parent: Root WebApplicationContext
Initializing new StandardEnvironment
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
Initializing new StandardEnvironment
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
Loading schema mappings from [META-INF/spring.schemas]
Loaded schema mappings: {http://www.springframework.org/schema/data/jpa/spring-jpa-1.2.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.2.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.1.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.1.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.5.xsd=org/springframework/data/repository/config/spring-repository-1.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.0.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.3.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.4.xsd=org/springframework/data/repository/config/spring-repository-1.4.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.3.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/data/repository/spring-repository.xsd=org/springframework/data/repository/config/spring-repository-1.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.0.xsd=org/springframework/data/repository/config/spring-repository-1.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.1.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.1.xsd
Found XML schema [http://www.springframework.org/schema/task/spring-task-3.0.xsd] in classpath: org/springframework/scheduling/config/spring-task-3.0.xsd
Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd
Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd
Found XML schema [http://www.springframework.org/schema/tx/spring-tx-3.1.xsd] in classpath: org/springframework/transaction/config/spring-tx-3.1.xsd
Loading bean definitions
Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/data/repository=org.springframework.data.repository.config.RepositoryNameSpaceHandler, http://www.springframework.org/schema/data/jpa=org.springframework.data.jpa.repository.config.JpaRepositoryNameSpaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
Neither XML 'id' nor 'name' specified - using generated bean name [org.springframework.web.servlet.view.InternalResourceViewResolver#0]
Neither XML 'id' nor 'name' specified - using generated bean name [org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver#5d980bd8]
Initializing new StandardEnvironment
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
Looking for matching resources in directory tree [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Resolved location pattern [classpath*:com/inteltrader/**/*.class] to resources [file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\Advice.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\FIFOList.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\InstrumentVo.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\Strategies.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\Strategy.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\StrategyMACD.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao\IInstrumentDao.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao\InstrumentDao.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao\IPortfolioDao.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao\PortfolioDao.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Instrument.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Investment.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Portfolio.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Price.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Transactions.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest\InstrumentServiceRest.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest\PortfolioServiceRest.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\AnalyserService.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\CronService.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\InstrumentService.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\InstrumentServiceImpl.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\PortfolioService.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\PortfolioServiceImpl.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util\DownloadZip.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util\ExtractZipFile.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util\ReadPriceCsv.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util\RestCodes.class]]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Instrument.class]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Investment.class]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Portfolio.class]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest\InstrumentServiceRest.class]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest\PortfolioServiceRest.class]
Loaded 21 bean definitions from location pattern [/WEB-INF/applicationContext.xml]
Bean factory for WebApplicationContext for namespace 'appServlet-servlet': org.springframework.beans.factory.support.DefaultListableBeanFactory@2931c1e9: defining beans [org.springframework.context.annotation.internalAsyncAnnotationProcessor,org.springframework.context.annotation.internalScheduledAnnotationProcessor,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0,org.springframework.web.servlet.view.InternalResourceViewResolver#0,instrumentDao,portfolioDao,instrumentService,portfolioService,entityManagerFactory,transactionManager,instrument,investment,portfolio,instrumentServiceRest,portfolioServiceRest]; parent: org.springframework.beans.factory.support.DefaultListableBeanFactory@678b3c06
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@3682f487]
Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@4f83e706]
Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.DelegatingThemeSource@5cb463b2]
Creating shared instance of singleton bean 'entityManagerFactory'
Creating instance of bean 'entityManagerFactory'
Eagerly caching bean 'entityManagerFactory' to allow for resolving potential circular references
Creating instance of bean 'org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver#5d980bd8'
Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Creating instance of bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0' to allow for resolving potential circular references
Creating instance of bean '(inner bean)'
Creating shared instance of singleton bean 'transactionManager'
Creating instance of bean 'transactionManager'
Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
Returning eagerly cached instance of singleton bean 'entityManagerFactory' that is not fully initialized yet - a consequence of a circular reference
Ignoring currently created advisor 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0': Error creating bean with name 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0': Cannot create inner bean '(inner bean)' of type [org.springframework.transaction.interceptor.TransactionInterceptor] while setting bean property 'transactionInterceptor'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)': Cannot resolve reference to bean 'transactionManager' while setting bean property 'transactionManager'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'transactionManager' defined in ServletContext resource [/WEB-INF/applicationContext.xml]: Cannot resolve reference to bean 'entityManagerFactory' while setting bean property 'entityManagerFactory'; nested exception is org.springframework.beans.factory.BeanCurrentlyInCreationException: Error creating bean with name 'entityManagerFactory': FactoryBean which is currently in creation returned null from getObject
Finished creating instance of bean 'org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver#5d980bd8'
Invoking afterPropertiesSet() on bean with name 'entityManagerFactory'
Building JPA container EntityManagerFactory for persistence unit 'intelTrader'
Adding type registration boolean -> org.hibernate.type.BooleanType@5fa61e4f
Adding type registration boolean -> org.hibernate.type.BooleanType@5fa61e4f
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5fa61e4f
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5283edc
Adding type registration true_false -> org.hibernate.type.TrueFalseType@703c3276
Adding type registration yes_no -> org.hibernate.type.YesNoType@215715e2
Adding type registration byte -> org.hibernate.type.ByteType@6bec451e
Adding type registration byte -> org.hibernate.type.ByteType@6bec451e
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6bec451e
Adding type registration character -> org.hibernate.type.CharacterType@64fa7ecd
Adding type registration char -> org.hibernate.type.CharacterType@64fa7ecd
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@64fa7ecd
Adding type registration short -> org.hibernate.type.ShortType@657971ff
Adding type registration short -> org.hibernate.type.ShortType@657971ff
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@657971ff
Adding type registration integer -> org.hibernate.type.IntegerType@2dc61522
Adding type registration int -> org.hibernate.type.IntegerType@2dc61522
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2dc61522
Adding type registration long -> org.hibernate.type.LongType@29403193
Adding type registration long -> org.hibernate.type.LongType@29403193
Adding type registration java.lang.Long -> org.hibernate.type.LongType@29403193
Adding type registration float -> org.hibernate.type.FloatType@65553762
Adding type registration float -> org.hibernate.type.FloatType@65553762
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@65553762
Adding type registration double -> org.hibernate.type.DoubleType@5d34f270
Adding type registration double -> org.hibernate.type.DoubleType@5d34f270
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5d34f270
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@643c83d
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@643c83d
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@65b34581
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@65b34581
Adding type registration string -> org.hibernate.type.StringType@24302c03
Adding type registration java.lang.String -> org.hibernate.type.StringType@24302c03
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6997c55
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@11bae008
Adding type registration url -> org.hibernate.type.UrlType@284dd974
Adding type registration java.net.URL -> org.hibernate.type.UrlType@284dd974
Adding type registration date -> org.hibernate.type.DateType@1b565e71
Adding type registration java.sql.Date -> org.hibernate.type.DateType@1b565e71
Adding type registration time -> org.hibernate.type.TimeType@5c6ff75
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5c6ff75
Adding type registration timestamp -> org.hibernate.type.TimestampType@70c3bdbe
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@70c3bdbe
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@70c3bdbe
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2f044b73
Adding type registration calendar -> org.hibernate.type.CalendarType@4220bde8
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4220bde8
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4220bde8
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@55a266b2
Adding type registration locale -> org.hibernate.type.LocaleType@7507cc0b
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7507cc0b
Adding type registration currency -> org.hibernate.type.CurrencyType@1fa547d1
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1fa547d1
Adding type registration timezone -> org.hibernate.type.TimeZoneType@3fe5e925
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3fe5e925
Adding type registration class -> org.hibernate.type.ClassType@2154661c
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2154661c
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@218d1bb7
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@218d1bb7
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6a95f6a8
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@58f4648a
Adding type registration binary -> org.hibernate.type.BinaryType@292fd265
Adding type registration byte[] -> org.hibernate.type.BinaryType@292fd265
Adding type registration [B -> org.hibernate.type.BinaryType@292fd265
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4f003a57
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4f003a57
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4f003a57
Adding type registration image -> org.hibernate.type.ImageType@5e8e595a
Adding type registration characters -> org.hibernate.type.CharArrayType@4bb5249a
Adding type registration char[] -> org.hibernate.type.CharArrayType@4bb5249a
Adding type registration [C -> org.hibernate.type.CharArrayType@4bb5249a
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6b005765
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6b005765
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6b005765
Adding type registration text -> org.hibernate.type.TextType@42f4aaa
Adding type registration ntext -> org.hibernate.type.NTextType@5e357147
Adding type registration blob -> org.hibernate.type.BlobType@421a58d5
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@421a58d5
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1ede0b36
Adding type registration clob -> org.hibernate.type.ClobType@1fe8c96d
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1fe8c96d
Adding type registration nclob -> org.hibernate.type.NClobType@52d2d53a
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@52d2d53a
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@29b6ea2e
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@11512d98
Adding type registration serializable -> org.hibernate.type.SerializableType@5852f7de
Adding type registration object -> org.hibernate.type.ObjectType@356ed135
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@356ed135
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@46fd6aaa
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2765e34f
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@122e6bbe
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@25a39045
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1554b551
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6c4be3c7
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6a57555c
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@ba5418f
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Processing PersistenceUnitInfo [
	name: intelTrader
	persistence provider classname: org.hibernate.ejb.HibernatePersistence
	classloader: WebappClassLoader
  context: 
  delegate: false
  repositories:
    /WEB-INF/classes/
----------> Parent Classloader:
ClassRealm[plugin>org.apache.tomcat.maven:tomcat7-maven-plugin:2.0, parent: sun.misc.Launcher$AppClassLoader@1875303f]

	Temporary classloader: org.springframework.instrument.classloading.SimpleThrowawayClassLoader@e731942
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/vvarm1/IdeaProjects/intelTrader/src/main/webapp/WEB-INF/classes
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.inteltrader.entity.Instrument
		com.inteltrader.entity.Portfolio
		com.inteltrader.entity.Investment]
	Mapping files names []
	Properties [
		hibernate.connection.username: root
		hibernate.connection.password: root
		hibernate.dialect: org.hibernate.dialect.MySQLDialect
		hibernate.c3p0.min_size: 10
		hibernate.connection.url: jdbc:mysql://localhost:3306/TRADER_DB
		hibernate.show_sql: true
		hibernate.connection.driver_class: com.mysql.jdbc.Driver
		hibernate.hbm2ddl.auto: update]
Detect class: true; detect hbm: true
Detect class: true; detect hbm: true
Searching mapped entities in jar/par: file:/C:/Users/vvarm1/IdeaProjects/intelTrader/src/main/webapp/WEB-INF/classes
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.ejb.event.JpaIntegrator].
No JNDI name configured for binding Ejb3Configuration
Preparing to build session factory with filters : {}
Processing hbm.xml files
Process annotated classes
Binding entity from annotated class: com.inteltrader.entity.Instrument
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Instrument
Bind entity com.inteltrader.entity.Instrument on table INSTRUMENT
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=SYMBOL_NAME, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property symbolName with lazy=false
building SimpleValue for symbolName
Building property symbolName
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=priceList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=priceList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=priceList_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='priceList_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='SYMBOL_NAME', referencedColumn='', mappedBy=''}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Collection role: com.inteltrader.entity.Instrument.priceList
Building property priceList
Binding entity from annotated class: com.inteltrader.entity.Portfolio
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Portfolio
Bind entity com.inteltrader.entity.Portfolio on table PORTFOLIO
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=PORTFOLIO_NAME, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property portfolioName with lazy=false
building SimpleValue for portfolioName
Building property portfolioName
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='associatedPortfolio'}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=investmentList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=element, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=investmentList_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='investmentList_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='associatedPortfolio'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='associatedPortfolio'}
Collection role: com.inteltrader.entity.Portfolio.investmentList
Building property investmentList
Binding entity from annotated class: com.inteltrader.entity.Investment
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Investment
Bind entity com.inteltrader.entity.Investment on table INVESTMENT
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=INVESTMENT_ID, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property investmentId with lazy=false
building SimpleValue for investmentId
Building property investmentId
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=associatedPortfolio, insertable=true, updatable=true, unique=false}
Building property associatedPortfolio
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=currentPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property currentPrice with lazy=false
building SimpleValue for currentPrice
Building property currentPrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=quantity, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property quantity with lazy=false
building SimpleValue for quantity
Building property quantity
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=INVESTMENT_SYMBOL, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property symbolName with lazy=false
building SimpleValue for symbolName
Building property symbolName
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=transactionsList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=transactionsList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=transactionsList_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='transactionsList_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='INVESTMENT_ID', referencedColumn='', mappedBy=''}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Collection role: com.inteltrader.entity.Investment.transactionsList
Building property transactionsList
Setting SimpleValue typeName for symbolName
Setting SimpleValue typeName for portfolioName
Setting SimpleValue typeName for investmentId
Setting SimpleValue typeName for currentPrice
Setting SimpleValue typeName for quantity
Setting SimpleValue typeName for symbolName
Processing fk mappings (*ToOne and JoinedSubclass)
Processing extends queue
Processing extends queue
Processing collection mappings
Second pass for collection: com.inteltrader.entity.Investment.transactionsList
Binding a collection of element: com.inteltrader.entity.Investment.transactionsList
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT_TRANSACTION), mappingColumn=quantity, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property quantity with lazy=false
building SimpleValue for quantity
Setting SimpleValue typeName for quantity
Building property quantity
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT_TRANSACTION), mappingColumn=transactionId, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property transactionId with lazy=false
building SimpleValue for transactionId
Setting SimpleValue typeName for transactionId
Building property transactionId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT_TRANSACTION), mappingColumn=transactionPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property transactionPrice with lazy=false
building SimpleValue for transactionPrice
Setting SimpleValue typeName for transactionPrice
Building property transactionPrice
Mapped collection key: INVESTMENT_ID, element: quantity, transactionId, transactionPrice
Second pass for collection: com.inteltrader.entity.Instrument.priceList
Binding a collection of element: com.inteltrader.entity.Instrument.priceList
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=closePrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property closePrice with lazy=false
building SimpleValue for closePrice
Setting SimpleValue typeName for closePrice
Building property closePrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=highPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property highPrice with lazy=false
building SimpleValue for highPrice
Setting SimpleValue typeName for highPrice
Building property highPrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=lastClosePrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property lastClosePrice with lazy=false
building SimpleValue for lastClosePrice
Setting SimpleValue typeName for lastClosePrice
Building property lastClosePrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=lowPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property lowPrice with lazy=false
building SimpleValue for lowPrice
Setting SimpleValue typeName for lowPrice
Building property lowPrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=openPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property openPrice with lazy=false
building SimpleValue for openPrice
Setting SimpleValue typeName for openPrice
Building property openPrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=priceId, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property priceId with lazy=false
building SimpleValue for priceId
Setting SimpleValue typeName for priceId
Building property priceId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=timeStamp, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property timeStamp with lazy=false
building SimpleValue for timeStamp
Setting SimpleValue typeName for timeStamp
Building property timeStamp
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=totalTradedQuantity, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property totalTradedQuantity with lazy=false
building SimpleValue for totalTradedQuantity
Setting SimpleValue typeName for totalTradedQuantity
Building property totalTradedQuantity
Mapped collection key: SYMBOL_NAME, element: closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity
Second pass for collection: com.inteltrader.entity.Portfolio.investmentList
Binding a OneToMany: com.inteltrader.entity.Portfolio.investmentList through a foreign key
Mapping collection: com.inteltrader.entity.Portfolio.investmentList -> INVESTMENT
Retrieving property com.inteltrader.entity.Investment.associatedPortfolio
Mapped collection key: associatedPortfolio_PORTFOLIO_NAME, one-to-many: com.inteltrader.entity.Investment
Processing native query and ResultSetMapping mappings
Processing association property references
Creating tables' unique integer identifiers
Processing foreign key constraints
Resolving reference to class: com.inteltrader.entity.Instrument
Resolving reference to class: com.inteltrader.entity.Portfolio
Resolving reference to class: com.inteltrader.entity.Investment
HHH000022: c3p0 properties were encountered, but the org.hibernate.service.jdbc.connections.internal.C3P0ConnectionProvider provider class was not found on the classpath; these properties are going to be ignored.
HHH000402: Using Hibernate built-in connection pool (not for production use!)
HHH000115: Hibernate connection pool size: 20
HHH000006: Autocommit mode: true
HHH000401: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/TRADER_DB]
HHH000046: Connection properties: {user=root, password=root, autocommit=true, release_mode=auto}
Opening new JDBC connection
Created connection to: jdbc:mysql://localhost:3306/TRADER_DB, Isolation Level: 4
Database ->
       name : MySQL
    version : 5.6.10-log
      major : 5
      minor : 6
Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.9 ( Revision: ${svn.Revision} )
      major : 5
      minor : 1
JDBC version : 3.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: disabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
multi-tenancy strategy : NONE
Connection release mode: auto
HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
Maximum outer join fetch depth: 2
Default batch fetch size: 1
Generate SQL with comments: disabled
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
HHH000397: Using ASTQueryTranslatorFactory
Query language substitutions: {}
JPA-QL strict compliance: enabled
Second-level cache: enabled
Query cache: disabled
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
Optimize cache for minimal puts: disabled
Structured second-level cache entries: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Named query checking : enabled
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : : disabled
Building session factory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\vvarm1\IdeaProjects\intelTrader\target\tomcat, hibernate.connection.url=jdbc:mysql://localhost:3306/TRADER_DB, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.ejb.discard_pc_on_close=false, catalina.useNaming=true, hibernate.transaction.flush_before_completion=false, os.name=Windows 7, sun.boot.class.path=C:\Program Files\Java\jdk1.7.0_10\jre\lib\resources.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\rt.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\jce.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.7.0_10\jre\classes, java.util.logging.config.file=C:\Users\vvarm1\IdeaProjects\intelTrader\target\tomcat\conf\logging.properties, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.7.0_10-b18, hibernate.connection.autocommit=true, hibernate.c3p0.min_size=10, user.name=vvarm1, shared.loader=, guice.disable.misplaced.annotation.check=true, tomcat.util.buf.StringCache.byte.enabled=true, javax.persistence.validation.mode=AUTO, hibernate.connection.release_mode=auto, idea.launcher.bin.path=C:\Program Files (x86)\JetBrains\IntelliJ IDEA Community Edition 12.0.4\bin, user.language=en, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, sun.boot.library.path=C:\Program Files\Java\jdk1.7.0_10\jre\bin, classworlds.conf=C:\Program Files\Apache Software Foundation\apache-maven-3.0.5\bin\m2.conf, java.version=1.7.0_10, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, user.timezone=Asia/Calcutta, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.7.0_10\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, file.encoding.pkg=sun.io, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.tomcat.,org.apache.jasper., file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=51.0, user.country=US, java.home=C:\Program Files\Java\jdk1.7.0_10\jre, java.vm.info=mixed mode, os.version=6.1, hibernate.transaction.factory_class=org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory, hibernate.query.jpaql_strict_compliance=true, path.separator=;, java.vm.version=23.6-b04, hibernate.connection.password=root, user.variant=, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.scan.DefaultJarScanner.jarsToSkip=bootstrap.jar,commons-daemon.jar,tomcat-juli.jar,annotations-api.jar,el-api.jar,jsp-api.jar,servlet-api.jar,catalina.jar,catalina-ant.jar,catalina-ha.jar,catalina-tribes.jar,jasper.jar,jasper-el.jar,ecj-*.jar,tomcat-api.jar,tomcat-util.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-jni.jar,tomcat-spdy.jar,tomcat-i18n-en.jar,tomcat-i18n-es.jar,tomcat-i18n-fr.jar,tomcat-i18n-ja.jar,tomcat-juli-adapters.jar,catalina-jmx-remote.jar,catalina-ws.jar,tomcat-jdbc.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,jstl.jar,geronimo-spec-jaxrpc*.jar,wsdl4j*.jar,ant.jar,ant-junit*.jar,aspectj*.jar,jmx.jar,h2*.jar,hibernate*.jar,httpclient*.jar,jmx-tools.jar,jta*.jar,log4j*.jar,mail*.jar,slf4j*.jar,xercesImpl.jar,xmlParserAPIs.jar,xml-apis.jar,access-bridge-64.jar,dnsns.jar,jaccess.jar,ldapsec.jar,localedata.jar,sunjce_provider.jar,sunmscapi.jar,sunpkcs11.jar,jhall.jar,tools.jar,sunec.jar,zipfs.jar,gnome-java-bridge.jar,pulse-java.jar,apple_provider.jar,AppleScriptEngine.jar,CoreAudio.jar,dns_sd.jar,j3daudio.jar,j3dcore.jar,j3dutils.jar,jai_core.jar,jai_codec.jar,mlibwrapper_jai.jar,MRJToolkit.jar,vecmath.jar,junit.jar,junit-*.jar,ant-launcher.jar, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.tomcat.,org.apache.jasper., user.script=, java.naming.factory.url.pkgs=org.apache.naming, user.home=C:\Users\vvarm1, org.apache.catalina.startup.ContextConfig.jarsToSkip=, java.specification.vendor=Oracle Corporation, hibernate.hbm2ddl.auto=update, java.library.path=C:\Program Files\Java\jdk1.7.0_10\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\JetBrains\IntelliJ IDEA Community Edition 12.0.4\bin\..\.\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\ThinkPad\Bluetooth Software\;C:\Program Files\ThinkPad\Bluetooth Software\syswow64;c:\Program Files\Intel\WiFi\bin\;c:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files (x86)\Git\cmd;C:\Users\vvarm1\Documents\play-2.0.3;C:\Program Files\Java\jdk1.7.0_10\bin;C:\Program Files\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\QuickTime\QTSystem\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Java\jre6\bin;C:\Program Files\Apache Software Foundation\apache-maven-3.0.5\bin;c:\program files (x86)\jetbrains\intellij idea community edition 12.0.4\jre\jre\bin;., java.vendor.url=http://java.oracle.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, org.apache.catalina.startup.TldConfig.jarsToSkip=, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, common.loader=${catalina.base}/lib,${catalina.base}/lib/*.jar,${catalina.home}/lib,${catalina.home}/lib/*.jar, maven.home=C:\Program Files\Apache Software Foundation\apache-maven-3.0.5, java.runtime.name=Java(TM) SE Runtime Environment, java.class.path=C:\Program Files\Apache Software Foundation\apache-maven-3.0.5\boot\plexus-classworlds-2.4.jar;C:\Program Files (x86)\JetBrains\IntelliJ IDEA Community Edition 12.0.4\lib\idea_rt.jar, sun.java.command=com.intellij.rt.execution.application.AppMain org.codehaus.classworlds.Launcher --no-plugin-registry --fail-fast --strict-checksums --update-snapshots org.apache.tomcat.maven:tomcat7-maven-plugin:2.0:run, hibernate.bytecode.use_reflection_optimizer=false, idea.launcher.port=7535, java.vm.specification.name=Java Virtual Machine Specification, catalina.home=C:\Users\vvarm1\IdeaProjects\intelTrader\target\tomcat, java.vm.specification.version=1.7, sun.os.patch.level=Service Pack 1, sun.cpu.endian=little, java.io.tmpdir=C:\Users\vvarm1\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, server.loader=, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, java.ext.dirs=C:\Program Files\Java\jdk1.7.0_10\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=C:\Users\vvarm1\IdeaProjects\intelTrader, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding=UTF-8, hibernate.use_identifier_rollback=false, java.specification.version=1.7, hibernate.show_sql=true}
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Static SQL for entity: com.inteltrader.entity.Investment
 Version select: select INVESTMENT_ID from TRADER_DB.INVESTMENT where INVESTMENT_ID =?
 Snapshot select: select investment_.INVESTMENT_ID, investment_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_, investment_.currentPrice as currentP2_2_, investment_.quantity as quantity2_, investment_.INVESTMENT_SYMBOL as INVESTMENT4_2_ from TRADER_DB.INVESTMENT investment_ where investment_.INVESTMENT_ID=?
 Insert 0: insert into TRADER_DB.INVESTMENT (associatedPortfolio_PORTFOLIO_NAME, currentPrice, quantity, INVESTMENT_SYMBOL, INVESTMENT_ID) values (?, ?, ?, ?, ?)
 Update 0: update TRADER_DB.INVESTMENT set associatedPortfolio_PORTFOLIO_NAME=?, currentPrice=?, quantity=?, INVESTMENT_SYMBOL=? where INVESTMENT_ID=?
 Delete 0: delete from TRADER_DB.INVESTMENT where INVESTMENT_ID=?
 Identity insert: insert into TRADER_DB.INVESTMENT (associatedPortfolio_PORTFOLIO_NAME, currentPrice, quantity, INVESTMENT_SYMBOL) values (?, ?, ?, ?)
Static SQL for entity: com.inteltrader.entity.Instrument
 Version select: select SYMBOL_NAME from TRADER_DB.INSTRUMENT where SYMBOL_NAME =?
 Snapshot select: select instrument_.SYMBOL_NAME from TRADER_DB.INSTRUMENT instrument_ where instrument_.SYMBOL_NAME=?
 Insert 0: insert into TRADER_DB.INSTRUMENT (SYMBOL_NAME) values (?)
 Update 0: null
 Delete 0: delete from TRADER_DB.INSTRUMENT where SYMBOL_NAME=?
Static SQL for entity: com.inteltrader.entity.Portfolio
 Version select: select PORTFOLIO_NAME from TRADER_DB.PORTFOLIO where PORTFOLIO_NAME =?
 Snapshot select: select portfolio_.PORTFOLIO_NAME from TRADER_DB.PORTFOLIO portfolio_ where portfolio_.PORTFOLIO_NAME=?
 Insert 0: insert into TRADER_DB.PORTFOLIO (PORTFOLIO_NAME) values (?)
 Update 0: null
 Delete 0: delete from TRADER_DB.PORTFOLIO where PORTFOLIO_NAME=?
Static SQL for collection: com.inteltrader.entity.Instrument.priceList
 Row insert: insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
 Row update: update TRADER_DB.INSTRUMENT_PRICE set closePrice=?, highPrice=?, lastClosePrice=?, lowPrice=?, openPrice=?, priceId=?, timeStamp=?, totalTradedQuantity=? where SYMBOL_NAME=? and priceId=? and totalTradedQuantity=?
 Row delete: delete from TRADER_DB.INSTRUMENT_PRICE where SYMBOL_NAME=? and priceId=? and totalTradedQuantity=?
 One-shot delete: delete from TRADER_DB.INSTRUMENT_PRICE where SYMBOL_NAME=?
Static SQL for collection: com.inteltrader.entity.Investment.transactionsList
 Row insert: insert into TRADER_DB.INVESTMENT_TRANSACTION (INVESTMENT_ID, quantity, transactionId, transactionPrice) values (?, ?, ?, ?)
 Row update: update TRADER_DB.INVESTMENT_TRANSACTION set quantity=?, transactionId=?, transactionPrice=? where INVESTMENT_ID=? and quantity=? and transactionId=? and transactionPrice=?
 Row delete: delete from TRADER_DB.INVESTMENT_TRANSACTION where INVESTMENT_ID=? and quantity=? and transactionId=? and transactionPrice=?
 One-shot delete: delete from TRADER_DB.INVESTMENT_TRANSACTION where INVESTMENT_ID=?
Static SQL for collection: com.inteltrader.entity.Portfolio.investmentList
 Row insert: update TRADER_DB.INVESTMENT set associatedPortfolio_PORTFOLIO_NAME=? where INVESTMENT_ID=?
 Row delete: update TRADER_DB.INVESTMENT set associatedPortfolio_PORTFOLIO_NAME=null where associatedPortfolio_PORTFOLIO_NAME=? and INVESTMENT_ID=?
 One-shot delete: update TRADER_DB.INVESTMENT set associatedPortfolio_PORTFOLIO_NAME=null where associatedPortfolio_PORTFOLIO_NAME=?
Static select for entity com.inteltrader.entity.Instrument [NONE]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for entity com.inteltrader.entity.Instrument [READ]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for entity com.inteltrader.entity.Instrument [UPGRADE]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [UPGRADE_NOWAIT]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [FORCE]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [PESSIMISTIC_READ]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? lock in share mode
Static select for entity com.inteltrader.entity.Instrument [PESSIMISTIC_WRITE]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [PESSIMISTIC_FORCE_INCREMENT]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [OPTIMISTIC]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for entity com.inteltrader.entity.Instrument [OPTIMISTIC_FORCE_INCREMENT]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for action ACTION_MERGE on entity com.inteltrader.entity.Instrument: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for action ACTION_REFRESH on entity com.inteltrader.entity.Instrument: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for entity com.inteltrader.entity.Investment [NONE]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_1_, investment0_.currentPrice as currentP2_2_1_, investment0_.quantity as quantity2_1_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_1_, portfolio1_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.INVESTMENT investment0_ left outer join TRADER_DB.PORTFOLIO portfolio1_ on investment0_.associatedPortfolio_PORTFOLIO_NAME=portfolio1_.PORTFOLIO_NAME where investment0_.INVESTMENT_ID=?
Static select for entity com.inteltrader.entity.Investment [READ]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_1_, investment0_.currentPrice as currentP2_2_1_, investment0_.quantity as quantity2_1_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_1_, portfolio1_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.INVESTMENT investment0_ left outer join TRADER_DB.PORTFOLIO portfolio1_ on investment0_.associatedPortfolio_PORTFOLIO_NAME=portfolio1_.PORTFOLIO_NAME where investment0_.INVESTMENT_ID=?
Static select for entity com.inteltrader.entity.Investment [UPGRADE]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [UPGRADE_NOWAIT]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [FORCE]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [PESSIMISTIC_READ]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? lock in share mode
Static select for entity com.inteltrader.entity.Investment [PESSIMISTIC_WRITE]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [PESSIMISTIC_FORCE_INCREMENT]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [OPTIMISTIC]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=?
Static select for entity com.inteltrader.entity.Investment [OPTIMISTIC_FORCE_INCREMENT]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=?
Static select for action ACTION_MERGE on entity com.inteltrader.entity.Investment: select investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_1_, investment0_.currentPrice as currentP2_2_1_, investment0_.quantity as quantity2_1_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_1_, portfolio1_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.INVESTMENT investment0_ left outer join TRADER_DB.PORTFOLIO portfolio1_ on investment0_.associatedPortfolio_PORTFOLIO_NAME=portfolio1_.PORTFOLIO_NAME where investment0_.INVESTMENT_ID=?
Static select for action ACTION_REFRESH on entity com.inteltrader.entity.Investment: select investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_1_, investment0_.currentPrice as currentP2_2_1_, investment0_.quantity as quantity2_1_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_1_, portfolio1_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.INVESTMENT investment0_ left outer join TRADER_DB.PORTFOLIO portfolio1_ on investment0_.associatedPortfolio_PORTFOLIO_NAME=portfolio1_.PORTFOLIO_NAME where investment0_.INVESTMENT_ID=?
Static select for entity com.inteltrader.entity.Portfolio [NONE]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Static select for entity com.inteltrader.entity.Portfolio [READ]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Static select for entity com.inteltrader.entity.Portfolio [UPGRADE]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [UPGRADE_NOWAIT]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [FORCE]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [PESSIMISTIC_READ]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? lock in share mode
Static select for entity com.inteltrader.entity.Portfolio [PESSIMISTIC_WRITE]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [PESSIMISTIC_FORCE_INCREMENT]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [OPTIMISTIC]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=?
Static select for entity com.inteltrader.entity.Portfolio [OPTIMISTIC_FORCE_INCREMENT]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=?
Static select for action ACTION_MERGE on entity com.inteltrader.entity.Portfolio: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Static select for action ACTION_REFRESH on entity com.inteltrader.entity.Portfolio: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Static select for collection com.inteltrader.entity.Instrument.priceList: select pricelist0_.SYMBOL_NAME as SYMBOL1_0_0_, pricelist0_.closePrice as closePrice1_0_, pricelist0_.highPrice as highPrice1_0_, pricelist0_.lastClosePrice as lastClos4_1_0_, pricelist0_.lowPrice as lowPrice1_0_, pricelist0_.openPrice as openPrice1_0_, pricelist0_.priceId as priceId1_0_, pricelist0_.timeStamp as timeStamp1_0_, pricelist0_.totalTradedQuantity as totalTra9_1_0_ from TRADER_DB.INSTRUMENT_PRICE pricelist0_ where pricelist0_.SYMBOL_NAME=?
Static select for one-to-many com.inteltrader.entity.Portfolio.investmentList: select investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_1_, investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.associatedPortfolio_PORTFOLIO_NAME=?
Static select for collection com.inteltrader.entity.Investment.transactionsList: select transactio0_.INVESTMENT_ID as INVESTMENT1_2_0_, transactio0_.quantity as quantity3_0_, transactio0_.transactionId as transact3_3_0_, transactio0_.transactionPrice as transact4_3_0_ from TRADER_DB.INVESTMENT_TRANSACTION transactio0_ where transactio0_.INVESTMENT_ID=?
Registering SessionFactory: 29106c42-ef33-40a4-8b32-7857eccfe154 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Instantiated session factory
HHH000228: Running hbm2ddl schema update
HHH000102: Fetching database metadata
HHH000396: Updating schema
Processing hbm.xml files
Process annotated classes
Processing fk mappings (*ToOne and JoinedSubclass)
Processing extends queue
Processing extends queue
Processing collection mappings
Processing native query and ResultSetMapping mappings
Processing association property references
Creating tables' unique integer identifiers
Processing foreign key constraints
Resolving reference to class: com.inteltrader.entity.Instrument
Resolving reference to class: com.inteltrader.entity.Portfolio
Resolving reference to class: com.inteltrader.entity.Investment
HHH000261: Table found: TRADER_DB.instrument
HHH000037: Columns: [symbol_name]
HHH000108: Foreign keys: []
HHH000126: Indexes: [primary]
HHH000261: Table found: TRADER_DB.instrument_price
HHH000037: Columns: [totaltradedquantity, timestamp, priceid, lastcloseprice, highprice, symbol_name, openprice, closeprice, lowprice]
HHH000108: Foreign keys: [fk3189a2d153ed548d]
HHH000126: Indexes: [fk3189a2d153ed548d]
HHH000261: Table found: TRADER_DB.investment
HHH000037: Columns: [investment_id, associatedportfolio_portfolio_name, currentprice, quantity, investment_symbol]
HHH000108: Foreign keys: [fk8fe41ed3c804d4f3]
HHH000126: Indexes: [fk8fe41ed3c804d4f3, primary]
HHH000261: Table found: TRADER_DB.investment_transaction
HHH000037: Columns: [transactionprice, investment_id, transactionid, quantity]
HHH000108: Foreign keys: [fka5863f52914590ae]
HHH000126: Indexes: [fka5863f52914590ae]
HHH000261: Table found: TRADER_DB.portfolio
HHH000037: Columns: [portfolio_name]
HHH000108: Foreign keys: []
HHH000126: Indexes: [primary]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
HHH000232: Schema update complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Statistics initialized [enabled=false]
Registering EntityManagerFactory: intelTrader 
HHH000436: Entity manager factory name (intelTrader) is already registered.  If entity manager will be clustered or passivated, specify a unique value for property 'hibernate.ejb.entitymanager_factory_name'
Finished creating instance of bean 'entityManagerFactory'
Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@2931c1e9: defining beans [org.springframework.context.annotation.internalAsyncAnnotationProcessor,org.springframework.context.annotation.internalScheduledAnnotationProcessor,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0,org.springframework.web.servlet.view.InternalResourceViewResolver#0,instrumentDao,portfolioDao,instrumentService,portfolioService,entityManagerFactory,transactionManager,instrument,investment,portfolio,instrumentServiceRest,portfolioServiceRest,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor]; parent: org.springframework.beans.factory.support.DefaultListableBeanFactory@678b3c06
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Creating instance of bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0' to allow for resolving potential circular references
Creating instance of bean '(inner bean)'
Creating shared instance of singleton bean 'transactionManager'
Creating instance of bean 'transactionManager'
Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
Returning cached instance of singleton bean 'entityManagerFactory'
Invoking afterPropertiesSet() on bean with name 'transactionManager'
Finished creating instance of bean 'transactionManager'
Creating instance of bean '(inner bean)'
Finished creating instance of bean '(inner bean)'
Invoking afterPropertiesSet() on bean with name '(inner bean)'
Finished creating instance of bean '(inner bean)'
Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Creating shared instance of singleton bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Creating instance of bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Eagerly caching bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Creating shared instance of singleton bean 'instrumentDao'
Creating instance of bean 'instrumentDao'
Eagerly caching bean 'instrumentDao' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'instrumentDao'
Creating shared instance of singleton bean 'portfolioDao'
Creating instance of bean 'portfolioDao'
Eagerly caching bean 'portfolioDao' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'portfolioDao'
Creating shared instance of singleton bean 'instrumentService'
Creating instance of bean 'instrumentService'
Registered injected element on class [com.inteltrader.service.InstrumentServiceImpl]: PersistenceElement for javax.persistence.EntityManagerFactory com.inteltrader.service.InstrumentServiceImpl.entityManagerFactory
Registered injected element on class [com.inteltrader.service.InstrumentServiceImpl]: AutowiredFieldElement for private com.inteltrader.dao.IInstrumentDao com.inteltrader.service.InstrumentServiceImpl.instrumentDao
Registered injected element on class [com.inteltrader.service.InstrumentServiceImpl]: AutowiredFieldElement for private com.inteltrader.service.PortfolioService com.inteltrader.service.InstrumentServiceImpl.portfolioService
Eagerly caching bean 'instrumentService' to allow for resolving potential circular references
Processing injected method of bean 'instrumentService': PersistenceElement for javax.persistence.EntityManagerFactory com.inteltrader.service.InstrumentServiceImpl.entityManagerFactory
Returning cached instance of singleton bean 'entityManagerFactory'
Processing injected method of bean 'instrumentService': AutowiredFieldElement for private com.inteltrader.dao.IInstrumentDao com.inteltrader.service.InstrumentServiceImpl.instrumentDao
Returning cached instance of singleton bean 'instrumentDao'
Autowiring by type from bean name 'instrumentService' to bean named 'instrumentDao'
Processing injected method of bean 'instrumentService': AutowiredFieldElement for private com.inteltrader.service.PortfolioService com.inteltrader.service.InstrumentServiceImpl.portfolioService
Creating shared instance of singleton bean 'portfolioService'
Creating instance of bean 'portfolioService'
Registered injected element on class [com.inteltrader.service.PortfolioServiceImpl]: PersistenceElement for private javax.persistence.EntityManagerFactory com.inteltrader.service.PortfolioServiceImpl.entityManagerFactory
Registered injected element on class [com.inteltrader.service.PortfolioServiceImpl]: AutowiredFieldElement for private com.inteltrader.dao.IPortfolioDao com.inteltrader.service.PortfolioServiceImpl.portfolioDao
Eagerly caching bean 'portfolioService' to allow for resolving potential circular references
Processing injected method of bean 'portfolioService': PersistenceElement for private javax.persistence.EntityManagerFactory com.inteltrader.service.PortfolioServiceImpl.entityManagerFactory
Returning cached instance of singleton bean 'entityManagerFactory'
Processing injected method of bean 'portfolioService': AutowiredFieldElement for private com.inteltrader.dao.IPortfolioDao com.inteltrader.service.PortfolioServiceImpl.portfolioDao
Returning cached instance of singleton bean 'portfolioDao'
Autowiring by type from bean name 'portfolioService' to bean named 'portfolioDao'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'portfolioService'
Autowiring by type from bean name 'instrumentService' to bean named 'portfolioService'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'instrumentService'
Returning cached instance of singleton bean 'portfolioService'
Returning cached instance of singleton bean 'entityManagerFactory'
Returning cached instance of singleton bean 'transactionManager'
Creating shared instance of singleton bean 'instrument'
Creating instance of bean 'instrument'
Eagerly caching bean 'instrument' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'instrument'
Creating shared instance of singleton bean 'investment'
Creating instance of bean 'investment'
Eagerly caching bean 'investment' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'investment'
Creating shared instance of singleton bean 'portfolio'
Creating instance of bean 'portfolio'
Eagerly caching bean 'portfolio' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'portfolio'
Creating shared instance of singleton bean 'instrumentServiceRest'
Creating instance of bean 'instrumentServiceRest'
Registered injected element on class [com.inteltrader.rest.InstrumentServiceRest]: AutowiredFieldElement for private com.inteltrader.service.InstrumentService com.inteltrader.rest.InstrumentServiceRest.instrumentService
Eagerly caching bean 'instrumentServiceRest' to allow for resolving potential circular references
Processing injected method of bean 'instrumentServiceRest': AutowiredFieldElement for private com.inteltrader.service.InstrumentService com.inteltrader.rest.InstrumentServiceRest.instrumentService
Returning cached instance of singleton bean 'instrumentService'
Autowiring by type from bean name 'instrumentServiceRest' to bean named 'instrumentService'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'instrumentServiceRest'
Creating shared instance of singleton bean 'portfolioServiceRest'
Creating instance of bean 'portfolioServiceRest'
Registered injected element on class [com.inteltrader.rest.PortfolioServiceRest]: AutowiredFieldElement for private com.inteltrader.service.PortfolioService com.inteltrader.rest.PortfolioServiceRest.portfolioService
Eagerly caching bean 'portfolioServiceRest' to allow for resolving potential circular references
Processing injected method of bean 'portfolioServiceRest': AutowiredFieldElement for private com.inteltrader.service.PortfolioService com.inteltrader.rest.PortfolioServiceRest.portfolioService
Returning cached instance of singleton bean 'portfolioService'
Autowiring by type from bean name 'portfolioServiceRest' to bean named 'portfolioService'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'portfolioServiceRest'
Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@5c1163dc]
Returning cached instance of singleton bean 'lifecycleProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Unable to locate MultipartResolver with name 'multipartResolver': no multipart request handling provided
Creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Unable to locate LocaleResolver with name 'localeResolver': using default [org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver@51d4d399]
Creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Unable to locate ThemeResolver with name 'themeResolver': using default [org.springframework.web.servlet.theme.FixedThemeResolver@6dc2367e]
Creating instance of bean 'org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping'
Looking for URL mappings in application context: WebApplicationContext for namespace 'appServlet-servlet': startup date [Fri Apr 19 17:19:43 IST 2013]; parent: Root WebApplicationContext
Rejected bean name 'org.springframework.context.annotation.internalAsyncAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalScheduledAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalRequiredAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalCommonAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.aop.config.internalAutoProxyCreator': no URL paths identified
Rejected bean name 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0': no URL paths identified
Rejected bean name 'org.springframework.web.servlet.view.InternalResourceViewResolver#0': no URL paths identified
Rejected bean name 'instrumentDao': no URL paths identified
Rejected bean name 'portfolioDao': no URL paths identified
Rejected bean name 'instrumentService': no URL paths identified
Rejected bean name 'portfolioService': no URL paths identified
Rejected bean name 'entityManagerFactory': no URL paths identified
Rejected bean name 'transactionManager': no URL paths identified
Rejected bean name 'instrument': no URL paths identified
Rejected bean name 'investment': no URL paths identified
Rejected bean name 'portfolio': no URL paths identified
Rejected bean name 'instrumentServiceRest': no URL paths identified
Rejected bean name 'portfolioServiceRest': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor': no URL paths identified
Rejected bean name 'environment': no URL paths identified
Rejected bean name 'systemProperties': no URL paths identified
Rejected bean name 'systemEnvironment': no URL paths identified
Rejected bean name 'servletConfig': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry': no URL paths identified
Rejected bean name 'messageSource': no URL paths identified
Rejected bean name 'applicationEventMulticaster': no URL paths identified
Rejected bean name 'lifecycleProcessor': no URL paths identified
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping'
Creating instance of bean 'org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping'
Looking for URL mappings in application context: WebApplicationContext for namespace 'appServlet-servlet': startup date [Fri Apr 19 17:19:43 IST 2013]; parent: Root WebApplicationContext
Rejected bean name 'org.springframework.context.annotation.internalAsyncAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalScheduledAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalRequiredAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalCommonAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.aop.config.internalAutoProxyCreator': no URL paths identified
Rejected bean name 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0': no URL paths identified
Rejected bean name 'org.springframework.web.servlet.view.InternalResourceViewResolver#0': no URL paths identified
Rejected bean name 'instrumentDao': no URL paths identified
Rejected bean name 'portfolioDao': no URL paths identified
Rejected bean name 'instrumentService': no URL paths identified
Rejected bean name 'portfolioService': no URL paths identified
Rejected bean name 'entityManagerFactory': no URL paths identified
Rejected bean name 'transactionManager': no URL paths identified
Rejected bean name 'instrument': no URL paths identified
Rejected bean name 'investment': no URL paths identified
Rejected bean name 'portfolio': no URL paths identified
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/create/{symbol}] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/create/{symbol}.*] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/create/{symbol}/] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/update/{portfolioName}] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/update/{portfolioName}.*] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/update/{portfolioName}/] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/load/{symbol}] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/load/{symbol}.*] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/load/{symbol}/] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/create/{portfolioName}] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/create/{portfolioName}.*] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/create/{portfolioName}/] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/load/{portfolioName}] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/load/{portfolioName}.*] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/load/{portfolioName}/] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/addInvestment/{portfolioName}/{symbolName}] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/addInvestment/{portfolioName}/{symbolName}.*] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/addInvestment/{portfolioName}/{symbolName}/] onto handler 'portfolioServiceRest'
Rejected bean name 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor': no URL paths identified
Rejected bean name 'environment': no URL paths identified
Rejected bean name 'systemProperties': no URL paths identified
Rejected bean name 'systemEnvironment': no URL paths identified
Rejected bean name 'servletConfig': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry': no URL paths identified
Rejected bean name 'messageSource': no URL paths identified
Rejected bean name 'applicationEventMulticaster': no URL paths identified
Rejected bean name 'lifecycleProcessor': no URL paths identified
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping'
No HandlerMappings found in servlet 'appServlet': using default
Creating instance of bean 'org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter'
Creating instance of bean 'org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter'
Creating instance of bean 'org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter'
No HandlerAdapters found in servlet 'appServlet': using default
Creating instance of bean 'org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerExceptionResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerExceptionResolver'
Creating instance of bean 'org.springframework.web.servlet.mvc.annotation.ResponseStatusExceptionResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.annotation.ResponseStatusExceptionResolver'
Creating instance of bean 'org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver'
No HandlerExceptionResolvers found in servlet 'appServlet': using default
Creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Unable to locate RequestToViewNameTranslator with name 'viewNameTranslator': using default [org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@16639bd7]
Returning cached instance of singleton bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Returning cached instance of singleton bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Unable to locate FlashMapManager with name 'flashMapManager': using default [org.springframework.web.servlet.support.SessionFlashMapManager@1865fa55]
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Searching for key 'spring.liveBeansView.mbeanDomain' in [servletConfigInitParams]
Searching for key 'spring.liveBeansView.mbeanDomain' in [servletContextInitParams]
Searching for key 'spring.liveBeansView.mbeanDomain' in [jndiProperties]
Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain]
Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException: Name [spring.liveBeansView.mbeanDomain] is not bound in this Context. Unable to find [spring.liveBeansView.mbeanDomain].
Looking up JNDI object with name [spring.liveBeansView.mbeanDomain]
JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: Name [spring.liveBeansView.mbeanDomain] is not bound in this Context. Unable to find [spring.liveBeansView.mbeanDomain].. Returning null.
Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
Published WebApplicationContext of servlet 'appServlet' as ServletContext attribute with name [org.springframework.web.servlet.FrameworkServlet.CONTEXT.appServlet]
FrameworkServlet 'appServlet': initialization completed in 598 ms
Servlet 'appServlet' configured successfully
DispatcherServlet with name 'appServlet' processing GET request for [/portfolio/create/myFirstTime]
Matching patterns for request [/portfolio/create/myFirstTime] are [/portfolio/create/{portfolioName}]
URI Template variables for request [/portfolio/create/myFirstTime] are {portfolioName=myFirstTime}
Mapping [/portfolio/create/myFirstTime] to HandlerExecutionChain with handler [com.inteltrader.rest.PortfolioServiceRest@2bb4f963] and 2 interceptors
Last-Modified value for [/portfolio/create/myFirstTime] is: -1
Invoking request handler method: public org.springframework.http.ResponseEntity com.inteltrader.rest.PortfolioServiceRest.createPortfolio(java.lang.String,javax.servlet.http.HttpServletRequest)
begin
Obtaining JDBC connection
Obtained JDBC connection
initial autocommit status: true
disabling autocommit
Generated identifier: myFirstTime, using strategy: org.hibernate.id.Assigned
committing
Processing flush-time cascades
Dirty checking collections
Collection found: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime], was: [<unreferenced>] (initialized)
Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
Listing entities:
com.inteltrader.entity.Portfolio{portfolioName=myFirstTime, investmentList=[]}
insert into TRADER_DB.PORTFOLIO (PORTFOLIO_NAME) values (?)
committed JDBC Connection
re-enabling autocommit
Written [SUCCESS] as "text/html" using [org.springframework.http.converter.StringHttpMessageConverter@4626b3e8]
Null ModelAndView returned to DispatcherServlet with name 'appServlet': assuming HandlerAdapter completed request handling
Successfully completed request
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
DispatcherServlet with name 'appServlet' processing GET request for [/portfolio/addInvestment/myFirstTime/AMTEKAUTO]
Matching patterns for request [/portfolio/addInvestment/myFirstTime/AMTEKAUTO] are [/portfolio/addInvestment/{portfolioName}/{symbolName}]
URI Template variables for request [/portfolio/addInvestment/myFirstTime/AMTEKAUTO] are {portfolioName=myFirstTime, symbolName=AMTEKAUTO}
Mapping [/portfolio/addInvestment/myFirstTime/AMTEKAUTO] to HandlerExecutionChain with handler [com.inteltrader.rest.PortfolioServiceRest@2bb4f963] and 2 interceptors
Last-Modified value for [/portfolio/addInvestment/myFirstTime/AMTEKAUTO] is: -1
Invoking request handler method: public org.springframework.http.ResponseEntity com.inteltrader.rest.PortfolioServiceRest.addInvestment(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
begin
Obtaining JDBC connection
Opening new JDBC connection
Created connection to: jdbc:mysql://localhost:3306/TRADER_DB, Isolation Level: 4
Obtained JDBC connection
initial autocommit status: true
disabling autocommit
Loading entity: [com.inteltrader.entity.Portfolio#myFirstTime]
select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Result set row: 0
Result row: null, EntityKey[com.inteltrader.entity.Portfolio#myFirstTime]
Result set contains (possibly empty) collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Resolving associations for [com.inteltrader.entity.Portfolio#myFirstTime]
Done materializing entity [com.inteltrader.entity.Portfolio#myFirstTime]
1 collections were found in result set for role: com.inteltrader.entity.Portfolio.investmentList
Collection fully initialized: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
1 collections initialized for role: com.inteltrader.entity.Portfolio.investmentList
Done entity load
committing
Processing flush-time cascades
Executing identity-insert immediately
insert into TRADER_DB.INVESTMENT (associatedPortfolio_PORTFOLIO_NAME, currentPrice, quantity, INVESTMENT_SYMBOL) values (?, ?, ?, ?)
Natively generated identity: 1
Dirty checking collections
Collection dirty: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Collection found: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime], was: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime] (initialized)
Collection found: [com.inteltrader.entity.Investment.transactionsList#1], was: [<unreferenced>] (initialized)
Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
Flushed: 1 (re)creations, 1 updates, 0 removals to 2 collections
Listing entities:
com.inteltrader.entity.Investment{investmentId=1, quantity=null, currentPrice=null, symbolName=AMTEKAUTO, associatedPortfolio=com.inteltrader.entity.Portfolio#myFirstTime, transactionsList=[]}
com.inteltrader.entity.Portfolio{portfolioName=myFirstTime, investmentList=[com.inteltrader.entity.Investment#1]}
Inserting collection: [com.inteltrader.entity.Investment.transactionsList#1]
Collection was empty
committed JDBC Connection
re-enabling autocommit
Written [SUCCESS] as "text/html" using [org.springframework.http.converter.StringHttpMessageConverter@4626b3e8]
Null ModelAndView returned to DispatcherServlet with name 'appServlet': assuming HandlerAdapter completed request handling
Successfully completed request
DispatcherServlet with name 'appServlet' processing GET request for [/portfolio/addInvestment/myFirstTime/CIPLA]
Matching patterns for request [/portfolio/addInvestment/myFirstTime/CIPLA] are [/portfolio/addInvestment/{portfolioName}/{symbolName}]
URI Template variables for request [/portfolio/addInvestment/myFirstTime/CIPLA] are {portfolioName=myFirstTime, symbolName=CIPLA}
Mapping [/portfolio/addInvestment/myFirstTime/CIPLA] to HandlerExecutionChain with handler [com.inteltrader.rest.PortfolioServiceRest@2bb4f963] and 2 interceptors
Last-Modified value for [/portfolio/addInvestment/myFirstTime/CIPLA] is: -1
Invoking request handler method: public org.springframework.http.ResponseEntity com.inteltrader.rest.PortfolioServiceRest.addInvestment(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
begin
Obtaining JDBC connection
Opening new JDBC connection
Created connection to: jdbc:mysql://localhost:3306/TRADER_DB, Isolation Level: 4
Obtained JDBC connection
initial autocommit status: true
disabling autocommit
Loading entity: [com.inteltrader.entity.Portfolio#myFirstTime]
select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Result set row: 0
Result row: EntityKey[com.inteltrader.entity.Investment#1], EntityKey[com.inteltrader.entity.Portfolio#myFirstTime]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Resolving associations for [com.inteltrader.entity.Investment#1]
Done materializing entity [com.inteltrader.entity.Investment#1]
Resolving associations for [com.inteltrader.entity.Portfolio#myFirstTime]
Done materializing entity [com.inteltrader.entity.Portfolio#myFirstTime]
1 collections were found in result set for role: com.inteltrader.entity.Portfolio.investmentList
Collection fully initialized: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
1 collections initialized for role: com.inteltrader.entity.Portfolio.investmentList
Done entity load
Loading collection: [com.inteltrader.entity.Investment.transactionsList#1]
select transactio0_.INVESTMENT_ID as INVESTMENT1_2_0_, transactio0_.quantity as quantity3_0_, transactio0_.transactionId as transact3_3_0_, transactio0_.transactionPrice as transact4_3_0_ from TRADER_DB.INVESTMENT_TRANSACTION transactio0_ where transactio0_.INVESTMENT_ID=?
Result set contains (possibly empty) collection: [com.inteltrader.entity.Investment.transactionsList#1]
1 collections were found in result set for role: com.inteltrader.entity.Investment.transactionsList
Collection fully initialized: [com.inteltrader.entity.Investment.transactionsList#1]
1 collections initialized for role: com.inteltrader.entity.Investment.transactionsList
Done loading collection
committing
Processing flush-time cascades
Executing identity-insert immediately
insert into TRADER_DB.INVESTMENT (associatedPortfolio_PORTFOLIO_NAME, currentPrice, quantity, INVESTMENT_SYMBOL) values (?, ?, ?, ?)
Natively generated identity: 2
Dirty checking collections
Collection dirty: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Collection found: [com.inteltrader.entity.Investment.transactionsList#1], was: [com.inteltrader.entity.Investment.transactionsList#1] (initialized)
Collection found: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime], was: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime] (initialized)
Collection found: [com.inteltrader.entity.Investment.transactionsList#2], was: [<unreferenced>] (initialized)
Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
Flushed: 1 (re)creations, 1 updates, 0 removals to 3 collections
Listing entities:
com.inteltrader.entity.Investment{investmentId=2, quantity=null, currentPrice=null, symbolName=CIPLA, associatedPortfolio=com.inteltrader.entity.Portfolio#myFirstTime, transactionsList=[]}
com.inteltrader.entity.Investment{investmentId=1, quantity=null, currentPrice=null, symbolName=AMTEKAUTO, associatedPortfolio=com.inteltrader.entity.Portfolio#myFirstTime, transactionsList=[]}
com.inteltrader.entity.Portfolio{portfolioName=myFirstTime, investmentList=[com.inteltrader.entity.Investment#1, com.inteltrader.entity.Investment#2]}
Inserting collection: [com.inteltrader.entity.Investment.transactionsList#2]
Collection was empty
committed JDBC Connection
re-enabling autocommit
Written [SUCCESS] as "text/html" using [org.springframework.http.converter.StringHttpMessageConverter@4626b3e8]
Null ModelAndView returned to DispatcherServlet with name 'appServlet': assuming HandlerAdapter completed request handling
Successfully completed request
DispatcherServlet with name 'appServlet' processing GET request for [/portfolio/load/MyFirstTime]
Matching patterns for request [/portfolio/load/MyFirstTime] are [/portfolio/load/{portfolioName}]
URI Template variables for request [/portfolio/load/MyFirstTime] are {portfolioName=MyFirstTime}
Mapping [/portfolio/load/MyFirstTime] to HandlerExecutionChain with handler [com.inteltrader.rest.PortfolioServiceRest@2bb4f963] and 2 interceptors
Last-Modified value for [/portfolio/load/MyFirstTime] is: -1
Invoking request handler method: public org.springframework.http.ResponseEntity com.inteltrader.rest.PortfolioServiceRest.loadInstrument(java.lang.String,javax.servlet.http.HttpServletRequest)
Loading entity: [com.inteltrader.entity.Portfolio#MyFirstTime]
Obtaining JDBC connection
Opening new JDBC connection
Created connection to: jdbc:mysql://localhost:3306/TRADER_DB, Isolation Level: 4
Obtained JDBC connection
select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Result set row: 0
Result row: EntityKey[com.inteltrader.entity.Investment#1], EntityKey[com.inteltrader.entity.Portfolio#MyFirstTime]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Result set row: 1
Result row: EntityKey[com.inteltrader.entity.Investment#2], EntityKey[com.inteltrader.entity.Portfolio#MyFirstTime]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Resolving associations for [com.inteltrader.entity.Investment#1]
Loading entity: [com.inteltrader.entity.Portfolio#myFirstTime]
select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Result set row: 0
Result row: EntityKey[com.inteltrader.entity.Investment#1], EntityKey[com.inteltrader.entity.Portfolio#myFirstTime]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Result set row: 1
Result row: EntityKey[com.inteltrader.entity.Investment#2], EntityKey[com.inteltrader.entity.Portfolio#myFirstTime]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Resolving associations for [com.inteltrader.entity.Portfolio#myFirstTime]
Done materializing entity [com.inteltrader.entity.Portfolio#myFirstTime]
No collections were found in result set for role: com.inteltrader.entity.Portfolio.investmentList
Done entity load
Done materializing entity [com.inteltrader.entity.Investment#1]
Resolving associations for [com.inteltrader.entity.Portfolio#MyFirstTime]
Done materializing entity [com.inteltrader.entity.Portfolio#MyFirstTime]
Resolving associations for [com.inteltrader.entity.Investment#2]
Done materializing entity [com.inteltrader.entity.Investment#2]
1 collections were found in result set for role: com.inteltrader.entity.Portfolio.investmentList
Collection fully initialized: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
1 collections initialized for role: com.inteltrader.entity.Portfolio.investmentList
Loading collection: [com.inteltrader.entity.Portfolio.investmentList#MyFirstTime]
select investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_1_, investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.associatedPortfolio_PORTFOLIO_NAME=?
Result set contains (possibly empty) collection: [com.inteltrader.entity.Portfolio.investmentList#MyFirstTime]
Result set row: 0
Result row: EntityKey[com.inteltrader.entity.Investment#1]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Result set row: 1
Result row: EntityKey[com.inteltrader.entity.Investment#2]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
1 collections were found in result set for role: com.inteltrader.entity.Portfolio.investmentList
Collection fully initialized: [com.inteltrader.entity.Portfolio.investmentList#MyFirstTime]
1 collections initialized for role: com.inteltrader.entity.Portfolio.investmentList
Done loading collection
Done entity load
Written [{"portfolioName":"MyFirstTime","investmentList":[]}] as "text/html" using [org.springframework.http.converter.StringHttpMessageConverter@4626b3e8]
Null ModelAndView returned to DispatcherServlet with name 'appServlet': assuming HandlerAdapter completed request handling
Successfully completed request
Initializing servlet 'appServlet'
Initializing new StandardServletEnvironment
Adding [servletConfigInitParams] PropertySource with lowest search precedence
Adding [servletContextInitParams] PropertySource with lowest search precedence
Adding [jndiProperties] PropertySource with lowest search precedence
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment]
FrameworkServlet 'appServlet': initialization started
Servlet with name 'appServlet' will try to create custom WebApplicationContext context of class 'org.springframework.web.context.support.XmlWebApplicationContext', using parent context [Root WebApplicationContext: startup date [Fri Apr 19 17:23:28 IST 2013]; root of context hierarchy]
Searching for key 'spring.profiles.active' in [servletConfigInitParams]
Searching for key 'spring.profiles.active' in [servletContextInitParams]
Searching for key 'spring.profiles.active' in [jndiProperties]
Looking up JNDI object with name [java:comp/env/spring.profiles.active]
Converted JNDI name [java:comp/env/spring.profiles.active] not found - trying original name [spring.profiles.active]. javax.naming.NameNotFoundException: Name [spring.profiles.active] is not bound in this Context. Unable to find [spring.profiles.active].
Looking up JNDI object with name [spring.profiles.active]
JNDI lookup for name [spring.profiles.active] threw NamingException with message: Name [spring.profiles.active] is not bound in this Context. Unable to find [spring.profiles.active].. Returning null.
Searching for key 'spring.profiles.active' in [systemProperties]
Searching for key 'spring.profiles.active' in [systemEnvironment]
Could not find key 'spring.profiles.active' in any property source. Returning [null]
Searching for key 'spring.profiles.default' in [servletConfigInitParams]
Searching for key 'spring.profiles.default' in [servletContextInitParams]
Searching for key 'spring.profiles.default' in [jndiProperties]
Looking up JNDI object with name [java:comp/env/spring.profiles.default]
Converted JNDI name [java:comp/env/spring.profiles.default] not found - trying original name [spring.profiles.default]. javax.naming.NameNotFoundException: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].
Looking up JNDI object with name [spring.profiles.default]
JNDI lookup for name [spring.profiles.default] threw NamingException with message: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].. Returning null.
Searching for key 'spring.profiles.default' in [systemProperties]
Searching for key 'spring.profiles.default' in [systemEnvironment]
Could not find key 'spring.profiles.default' in any property source. Returning [null]
Searching for key 'spring.profiles.default' in [servletConfigInitParams]
Searching for key 'spring.profiles.default' in [servletContextInitParams]
Searching for key 'spring.profiles.default' in [jndiProperties]
Looking up JNDI object with name [java:comp/env/spring.profiles.default]
Converted JNDI name [java:comp/env/spring.profiles.default] not found - trying original name [spring.profiles.default]. javax.naming.NameNotFoundException: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].
Looking up JNDI object with name [spring.profiles.default]
JNDI lookup for name [spring.profiles.default] threw NamingException with message: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].. Returning null.
Searching for key 'spring.profiles.default' in [systemProperties]
Searching for key 'spring.profiles.default' in [systemEnvironment]
Could not find key 'spring.profiles.default' in any property source. Returning [null]
Replacing [servletContextInitParams] PropertySource with [servletContextInitParams]
Replacing [servletConfigInitParams] PropertySource with [servletConfigInitParams]
Refreshing WebApplicationContext for namespace 'appServlet-servlet': startup date [Fri Apr 19 17:23:34 IST 2013]; parent: Root WebApplicationContext
Initializing new StandardEnvironment
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
Initializing new StandardEnvironment
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
Loading schema mappings from [META-INF/spring.schemas]
Loaded schema mappings: {http://www.springframework.org/schema/data/jpa/spring-jpa-1.2.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.2.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.1.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.1.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.5.xsd=org/springframework/data/repository/config/spring-repository-1.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.0.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.3.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.4.xsd=org/springframework/data/repository/config/spring-repository-1.4.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.3.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/data/repository/spring-repository.xsd=org/springframework/data/repository/config/spring-repository-1.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.0.xsd=org/springframework/data/repository/config/spring-repository-1.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.1.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.1.xsd
Found XML schema [http://www.springframework.org/schema/task/spring-task-3.0.xsd] in classpath: org/springframework/scheduling/config/spring-task-3.0.xsd
Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd
Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd
Found XML schema [http://www.springframework.org/schema/tx/spring-tx-3.1.xsd] in classpath: org/springframework/transaction/config/spring-tx-3.1.xsd
Loading bean definitions
Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/data/repository=org.springframework.data.repository.config.RepositoryNameSpaceHandler, http://www.springframework.org/schema/data/jpa=org.springframework.data.jpa.repository.config.JpaRepositoryNameSpaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
Neither XML 'id' nor 'name' specified - using generated bean name [org.springframework.web.servlet.view.InternalResourceViewResolver#0]
Neither XML 'id' nor 'name' specified - using generated bean name [org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver#1c445b1c]
Initializing new StandardEnvironment
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
Looking for matching resources in directory tree [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Resolved location pattern [classpath*:com/inteltrader/**/*.class] to resources [file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\Advice.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\FIFOList.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\InstrumentVo.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\Strategies.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\Strategy.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\StrategyMACD.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao\IInstrumentDao.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao\InstrumentDao.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao\IPortfolioDao.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao\PortfolioDao.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Instrument.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Investment.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Portfolio.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Price.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Transactions.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest\InstrumentServiceRest.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest\PortfolioServiceRest.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\AnalyserService.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\CronService.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\InstrumentService.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\InstrumentServiceImpl.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\PortfolioService.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\PortfolioServiceImpl.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util\DownloadZip.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util\ExtractZipFile.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util\ReadPriceCsv.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util\RestCodes.class]]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Instrument.class]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Investment.class]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Portfolio.class]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest\InstrumentServiceRest.class]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest\PortfolioServiceRest.class]
Loaded 21 bean definitions from location pattern [/WEB-INF/applicationContext.xml]
Bean factory for WebApplicationContext for namespace 'appServlet-servlet': org.springframework.beans.factory.support.DefaultListableBeanFactory@4bb999c3: defining beans [org.springframework.context.annotation.internalAsyncAnnotationProcessor,org.springframework.context.annotation.internalScheduledAnnotationProcessor,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0,org.springframework.web.servlet.view.InternalResourceViewResolver#0,instrumentDao,portfolioDao,instrumentService,portfolioService,entityManagerFactory,transactionManager,instrument,investment,portfolio,instrumentServiceRest,portfolioServiceRest]; parent: org.springframework.beans.factory.support.DefaultListableBeanFactory@693a9769
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@2edd7aed]
Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@4eb175a4]
Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.DelegatingThemeSource@64a28a58]
Creating shared instance of singleton bean 'entityManagerFactory'
Creating instance of bean 'entityManagerFactory'
Eagerly caching bean 'entityManagerFactory' to allow for resolving potential circular references
Creating instance of bean 'org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver#1c445b1c'
Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Creating instance of bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0' to allow for resolving potential circular references
Creating instance of bean '(inner bean)'
Creating shared instance of singleton bean 'transactionManager'
Creating instance of bean 'transactionManager'
Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
Returning eagerly cached instance of singleton bean 'entityManagerFactory' that is not fully initialized yet - a consequence of a circular reference
Ignoring currently created advisor 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0': Error creating bean with name 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0': Cannot create inner bean '(inner bean)' of type [org.springframework.transaction.interceptor.TransactionInterceptor] while setting bean property 'transactionInterceptor'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)': Cannot resolve reference to bean 'transactionManager' while setting bean property 'transactionManager'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'transactionManager' defined in ServletContext resource [/WEB-INF/applicationContext.xml]: Cannot resolve reference to bean 'entityManagerFactory' while setting bean property 'entityManagerFactory'; nested exception is org.springframework.beans.factory.BeanCurrentlyInCreationException: Error creating bean with name 'entityManagerFactory': FactoryBean which is currently in creation returned null from getObject
Finished creating instance of bean 'org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver#1c445b1c'
Invoking afterPropertiesSet() on bean with name 'entityManagerFactory'
Building JPA container EntityManagerFactory for persistence unit 'intelTrader'
Adding type registration boolean -> org.hibernate.type.BooleanType@2e97d63b
Adding type registration boolean -> org.hibernate.type.BooleanType@2e97d63b
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2e97d63b
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@103fecbf
Adding type registration true_false -> org.hibernate.type.TrueFalseType@5b7f3dcb
Adding type registration yes_no -> org.hibernate.type.YesNoType@10d1e077
Adding type registration byte -> org.hibernate.type.ByteType@661ece2a
Adding type registration byte -> org.hibernate.type.ByteType@661ece2a
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@661ece2a
Adding type registration character -> org.hibernate.type.CharacterType@57b5a6e0
Adding type registration char -> org.hibernate.type.CharacterType@57b5a6e0
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@57b5a6e0
Adding type registration short -> org.hibernate.type.ShortType@1eaf7b69
Adding type registration short -> org.hibernate.type.ShortType@1eaf7b69
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1eaf7b69
Adding type registration integer -> org.hibernate.type.IntegerType@30c12b86
Adding type registration int -> org.hibernate.type.IntegerType@30c12b86
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@30c12b86
Adding type registration long -> org.hibernate.type.LongType@39bf3c7e
Adding type registration long -> org.hibernate.type.LongType@39bf3c7e
Adding type registration java.lang.Long -> org.hibernate.type.LongType@39bf3c7e
Adding type registration float -> org.hibernate.type.FloatType@3151cb34
Adding type registration float -> org.hibernate.type.FloatType@3151cb34
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3151cb34
Adding type registration double -> org.hibernate.type.DoubleType@46b1b3d5
Adding type registration double -> org.hibernate.type.DoubleType@46b1b3d5
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@46b1b3d5
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@22a75c03
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@22a75c03
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2f755cd
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2f755cd
Adding type registration string -> org.hibernate.type.StringType@21a7fd8b
Adding type registration java.lang.String -> org.hibernate.type.StringType@21a7fd8b
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7d2904e9
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@32aaa169
Adding type registration url -> org.hibernate.type.UrlType@14103aa8
Adding type registration java.net.URL -> org.hibernate.type.UrlType@14103aa8
Adding type registration date -> org.hibernate.type.DateType@253feb82
Adding type registration java.sql.Date -> org.hibernate.type.DateType@253feb82
Adding type registration time -> org.hibernate.type.TimeType@27babfa0
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@27babfa0
Adding type registration timestamp -> org.hibernate.type.TimestampType@63c1ab8d
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@63c1ab8d
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@63c1ab8d
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@22c96eab
Adding type registration calendar -> org.hibernate.type.CalendarType@1ddebd83
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1ddebd83
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1ddebd83
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@10bf692c
Adding type registration locale -> org.hibernate.type.LocaleType@4b52a2f3
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4b52a2f3
Adding type registration currency -> org.hibernate.type.CurrencyType@387a466a
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@387a466a
Adding type registration timezone -> org.hibernate.type.TimeZoneType@2f0e19fc
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2f0e19fc
Adding type registration class -> org.hibernate.type.ClassType@70372b65
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@70372b65
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4065d457
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4065d457
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@46dfd34
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@2f866ead
Adding type registration binary -> org.hibernate.type.BinaryType@397551c5
Adding type registration byte[] -> org.hibernate.type.BinaryType@397551c5
Adding type registration [B -> org.hibernate.type.BinaryType@397551c5
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4f8f3fb1
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4f8f3fb1
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4f8f3fb1
Adding type registration image -> org.hibernate.type.ImageType@9d60baa
Adding type registration characters -> org.hibernate.type.CharArrayType@157de25d
Adding type registration char[] -> org.hibernate.type.CharArrayType@157de25d
Adding type registration [C -> org.hibernate.type.CharArrayType@157de25d
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@225e7d1c
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@225e7d1c
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@225e7d1c
Adding type registration text -> org.hibernate.type.TextType@1a6ff3f4
Adding type registration ntext -> org.hibernate.type.NTextType@822585
Adding type registration blob -> org.hibernate.type.BlobType@737640dc
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@737640dc
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4209defa
Adding type registration clob -> org.hibernate.type.ClobType@189156e2
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@189156e2
Adding type registration nclob -> org.hibernate.type.NClobType@5dcd5df
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5dcd5df
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5d59cce
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@681aa20c
Adding type registration serializable -> org.hibernate.type.SerializableType@2c1af6aa
Adding type registration object -> org.hibernate.type.ObjectType@71fc2ff6
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@71fc2ff6
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6b28cb05
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4328ec39
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@33acb4a1
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@f86d088
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5be498ae
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7ce3f6a3
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5a558763
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@252ba2ea
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Processing PersistenceUnitInfo [
	name: intelTrader
	persistence provider classname: org.hibernate.ejb.HibernatePersistence
	classloader: WebappClassLoader
  context: 
  delegate: false
  repositories:
    /WEB-INF/classes/
----------> Parent Classloader:
ClassRealm[plugin>org.apache.tomcat.maven:tomcat7-maven-plugin:2.0, parent: sun.misc.Launcher$AppClassLoader@35b284a4]

	Temporary classloader: org.springframework.instrument.classloading.SimpleThrowawayClassLoader@53d4c3b6
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/vvarm1/IdeaProjects/intelTrader/src/main/webapp/WEB-INF/classes
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.inteltrader.entity.Instrument
		com.inteltrader.entity.Portfolio
		com.inteltrader.entity.Investment]
	Mapping files names []
	Properties [
		hibernate.connection.username: root
		hibernate.connection.password: root
		hibernate.dialect: org.hibernate.dialect.MySQLDialect
		hibernate.c3p0.min_size: 10
		hibernate.connection.url: jdbc:mysql://localhost:3306/TRADER_DB
		hibernate.show_sql: true
		hibernate.connection.driver_class: com.mysql.jdbc.Driver
		hibernate.hbm2ddl.auto: update]
Detect class: true; detect hbm: true
Detect class: true; detect hbm: true
Searching mapped entities in jar/par: file:/C:/Users/vvarm1/IdeaProjects/intelTrader/src/main/webapp/WEB-INF/classes
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.ejb.event.JpaIntegrator].
No JNDI name configured for binding Ejb3Configuration
Preparing to build session factory with filters : {}
Processing hbm.xml files
Process annotated classes
Binding entity from annotated class: com.inteltrader.entity.Instrument
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Instrument
Bind entity com.inteltrader.entity.Instrument on table INSTRUMENT
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=SYMBOL_NAME, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property symbolName with lazy=false
building SimpleValue for symbolName
Building property symbolName
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=priceList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=priceList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=priceList_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='priceList_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='SYMBOL_NAME', referencedColumn='', mappedBy=''}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Collection role: com.inteltrader.entity.Instrument.priceList
Building property priceList
Binding entity from annotated class: com.inteltrader.entity.Portfolio
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Portfolio
Bind entity com.inteltrader.entity.Portfolio on table PORTFOLIO
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=portfolioId, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property portfolioId with lazy=false
building SimpleValue for portfolioId
Building property portfolioId
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='associatedPortfolio'}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=investmentList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=element, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=investmentList_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='investmentList_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='associatedPortfolio'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='associatedPortfolio'}
Collection role: com.inteltrader.entity.Portfolio.investmentList
Building property investmentList
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=PORTFOLIO_NAME, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property portfolioName with lazy=false
building SimpleValue for portfolioName
Building property portfolioName
Binding entity from annotated class: com.inteltrader.entity.Investment
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Investment
Bind entity com.inteltrader.entity.Investment on table INVESTMENT
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=INVESTMENT_ID, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property investmentId with lazy=false
building SimpleValue for investmentId
Building property investmentId
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=associatedPortfolio, insertable=true, updatable=true, unique=false}
Building property associatedPortfolio
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=currentPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property currentPrice with lazy=false
building SimpleValue for currentPrice
Building property currentPrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=quantity, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property quantity with lazy=false
building SimpleValue for quantity
Building property quantity
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=INVESTMENT_SYMBOL, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property symbolName with lazy=false
building SimpleValue for symbolName
Building property symbolName
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=transactionsList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=transactionsList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=transactionsList_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='transactionsList_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='INVESTMENT_ID', referencedColumn='', mappedBy=''}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Collection role: com.inteltrader.entity.Investment.transactionsList
Building property transactionsList
Setting SimpleValue typeName for symbolName
Setting SimpleValue typeName for portfolioId
Setting SimpleValue typeName for portfolioName
Setting SimpleValue typeName for investmentId
Setting SimpleValue typeName for currentPrice
Setting SimpleValue typeName for quantity
Setting SimpleValue typeName for symbolName
Processing fk mappings (*ToOne and JoinedSubclass)
Processing extends queue
Processing extends queue
Processing collection mappings
Second pass for collection: com.inteltrader.entity.Investment.transactionsList
Binding a collection of element: com.inteltrader.entity.Investment.transactionsList
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT_TRANSACTION), mappingColumn=quantity, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property quantity with lazy=false
building SimpleValue for quantity
Setting SimpleValue typeName for quantity
Building property quantity
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT_TRANSACTION), mappingColumn=transactionId, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property transactionId with lazy=false
building SimpleValue for transactionId
Setting SimpleValue typeName for transactionId
Building property transactionId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT_TRANSACTION), mappingColumn=transactionPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property transactionPrice with lazy=false
building SimpleValue for transactionPrice
Setting SimpleValue typeName for transactionPrice
Building property transactionPrice
Mapped collection key: INVESTMENT_ID, element: quantity, transactionId, transactionPrice
Second pass for collection: com.inteltrader.entity.Instrument.priceList
Binding a collection of element: com.inteltrader.entity.Instrument.priceList
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=closePrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property closePrice with lazy=false
building SimpleValue for closePrice
Setting SimpleValue typeName for closePrice
Building property closePrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=highPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property highPrice with lazy=false
building SimpleValue for highPrice
Setting SimpleValue typeName for highPrice
Building property highPrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=lastClosePrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property lastClosePrice with lazy=false
building SimpleValue for lastClosePrice
Setting SimpleValue typeName for lastClosePrice
Building property lastClosePrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=lowPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property lowPrice with lazy=false
building SimpleValue for lowPrice
Setting SimpleValue typeName for lowPrice
Building property lowPrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=openPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property openPrice with lazy=false
building SimpleValue for openPrice
Setting SimpleValue typeName for openPrice
Building property openPrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=priceId, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property priceId with lazy=false
building SimpleValue for priceId
Setting SimpleValue typeName for priceId
Building property priceId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=timeStamp, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property timeStamp with lazy=false
building SimpleValue for timeStamp
Setting SimpleValue typeName for timeStamp
Building property timeStamp
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=totalTradedQuantity, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property totalTradedQuantity with lazy=false
building SimpleValue for totalTradedQuantity
Setting SimpleValue typeName for totalTradedQuantity
Building property totalTradedQuantity
Mapped collection key: SYMBOL_NAME, element: closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity
Second pass for collection: com.inteltrader.entity.Portfolio.investmentList
Binding a OneToMany: com.inteltrader.entity.Portfolio.investmentList through a foreign key
Mapping collection: com.inteltrader.entity.Portfolio.investmentList -> INVESTMENT
Retrieving property com.inteltrader.entity.Investment.associatedPortfolio
Mapped collection key: associatedPortfolio_portfolioId, one-to-many: com.inteltrader.entity.Investment
Processing native query and ResultSetMapping mappings
Processing association property references
Creating tables' unique integer identifiers
Processing foreign key constraints
Resolving reference to class: com.inteltrader.entity.Instrument
Resolving reference to class: com.inteltrader.entity.Portfolio
Resolving reference to class: com.inteltrader.entity.Investment
HHH000022: c3p0 properties were encountered, but the org.hibernate.service.jdbc.connections.internal.C3P0ConnectionProvider provider class was not found on the classpath; these properties are going to be ignored.
HHH000402: Using Hibernate built-in connection pool (not for production use!)
HHH000115: Hibernate connection pool size: 20
HHH000006: Autocommit mode: true
HHH000401: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/TRADER_DB]
HHH000046: Connection properties: {user=root, password=root, autocommit=true, release_mode=auto}
Opening new JDBC connection
Created connection to: jdbc:mysql://localhost:3306/TRADER_DB, Isolation Level: 4
Database ->
       name : MySQL
    version : 5.6.10-log
      major : 5
      minor : 6
Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.9 ( Revision: ${svn.Revision} )
      major : 5
      minor : 1
JDBC version : 3.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: disabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
multi-tenancy strategy : NONE
Connection release mode: auto
HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
Maximum outer join fetch depth: 2
Default batch fetch size: 1
Generate SQL with comments: disabled
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
HHH000397: Using ASTQueryTranslatorFactory
Query language substitutions: {}
JPA-QL strict compliance: enabled
Second-level cache: enabled
Query cache: disabled
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
Optimize cache for minimal puts: disabled
Structured second-level cache entries: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Named query checking : enabled
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : : disabled
Building session factory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\vvarm1\IdeaProjects\intelTrader\target\tomcat, hibernate.connection.url=jdbc:mysql://localhost:3306/TRADER_DB, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.ejb.discard_pc_on_close=false, catalina.useNaming=true, hibernate.transaction.flush_before_completion=false, os.name=Windows 7, sun.boot.class.path=C:\Program Files\Java\jdk1.7.0_10\jre\lib\resources.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\rt.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\jce.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.7.0_10\jre\classes, java.util.logging.config.file=C:\Users\vvarm1\IdeaProjects\intelTrader\target\tomcat\conf\logging.properties, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.7.0_10-b18, hibernate.connection.autocommit=true, hibernate.c3p0.min_size=10, user.name=vvarm1, shared.loader=, guice.disable.misplaced.annotation.check=true, tomcat.util.buf.StringCache.byte.enabled=true, javax.persistence.validation.mode=AUTO, hibernate.connection.release_mode=auto, idea.launcher.bin.path=C:\Program Files (x86)\JetBrains\IntelliJ IDEA Community Edition 12.0.4\bin, user.language=en, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, sun.boot.library.path=C:\Program Files\Java\jdk1.7.0_10\jre\bin, classworlds.conf=C:\Program Files\Apache Software Foundation\apache-maven-3.0.5\bin\m2.conf, java.version=1.7.0_10, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, user.timezone=Asia/Calcutta, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.7.0_10\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, file.encoding.pkg=sun.io, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.tomcat.,org.apache.jasper., file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=51.0, user.country=US, java.home=C:\Program Files\Java\jdk1.7.0_10\jre, java.vm.info=mixed mode, os.version=6.1, hibernate.transaction.factory_class=org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory, hibernate.query.jpaql_strict_compliance=true, path.separator=;, java.vm.version=23.6-b04, hibernate.connection.password=root, user.variant=, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.scan.DefaultJarScanner.jarsToSkip=bootstrap.jar,commons-daemon.jar,tomcat-juli.jar,annotations-api.jar,el-api.jar,jsp-api.jar,servlet-api.jar,catalina.jar,catalina-ant.jar,catalina-ha.jar,catalina-tribes.jar,jasper.jar,jasper-el.jar,ecj-*.jar,tomcat-api.jar,tomcat-util.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-jni.jar,tomcat-spdy.jar,tomcat-i18n-en.jar,tomcat-i18n-es.jar,tomcat-i18n-fr.jar,tomcat-i18n-ja.jar,tomcat-juli-adapters.jar,catalina-jmx-remote.jar,catalina-ws.jar,tomcat-jdbc.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,jstl.jar,geronimo-spec-jaxrpc*.jar,wsdl4j*.jar,ant.jar,ant-junit*.jar,aspectj*.jar,jmx.jar,h2*.jar,hibernate*.jar,httpclient*.jar,jmx-tools.jar,jta*.jar,log4j*.jar,mail*.jar,slf4j*.jar,xercesImpl.jar,xmlParserAPIs.jar,xml-apis.jar,access-bridge-64.jar,dnsns.jar,jaccess.jar,ldapsec.jar,localedata.jar,sunjce_provider.jar,sunmscapi.jar,sunpkcs11.jar,jhall.jar,tools.jar,sunec.jar,zipfs.jar,gnome-java-bridge.jar,pulse-java.jar,apple_provider.jar,AppleScriptEngine.jar,CoreAudio.jar,dns_sd.jar,j3daudio.jar,j3dcore.jar,j3dutils.jar,jai_core.jar,jai_codec.jar,mlibwrapper_jai.jar,MRJToolkit.jar,vecmath.jar,junit.jar,junit-*.jar,ant-launcher.jar, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.tomcat.,org.apache.jasper., user.script=, java.naming.factory.url.pkgs=org.apache.naming, user.home=C:\Users\vvarm1, org.apache.catalina.startup.ContextConfig.jarsToSkip=, java.specification.vendor=Oracle Corporation, hibernate.hbm2ddl.auto=update, java.library.path=C:\Program Files\Java\jdk1.7.0_10\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\JetBrains\IntelliJ IDEA Community Edition 12.0.4\bin\..\.\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\ThinkPad\Bluetooth Software\;C:\Program Files\ThinkPad\Bluetooth Software\syswow64;c:\Program Files\Intel\WiFi\bin\;c:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files (x86)\Git\cmd;C:\Users\vvarm1\Documents\play-2.0.3;C:\Program Files\Java\jdk1.7.0_10\bin;C:\Program Files\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\QuickTime\QTSystem\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Java\jre6\bin;C:\Program Files\Apache Software Foundation\apache-maven-3.0.5\bin;c:\program files (x86)\jetbrains\intellij idea community edition 12.0.4\jre\jre\bin;., java.vendor.url=http://java.oracle.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, org.apache.catalina.startup.TldConfig.jarsToSkip=, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, common.loader=${catalina.base}/lib,${catalina.base}/lib/*.jar,${catalina.home}/lib,${catalina.home}/lib/*.jar, maven.home=C:\Program Files\Apache Software Foundation\apache-maven-3.0.5, java.runtime.name=Java(TM) SE Runtime Environment, java.class.path=C:\Program Files\Apache Software Foundation\apache-maven-3.0.5\boot\plexus-classworlds-2.4.jar;C:\Program Files (x86)\JetBrains\IntelliJ IDEA Community Edition 12.0.4\lib\idea_rt.jar, sun.java.command=com.intellij.rt.execution.application.AppMain org.codehaus.classworlds.Launcher --no-plugin-registry --fail-fast --strict-checksums --update-snapshots org.apache.tomcat.maven:tomcat7-maven-plugin:2.0:run, hibernate.bytecode.use_reflection_optimizer=false, idea.launcher.port=7539, java.vm.specification.name=Java Virtual Machine Specification, catalina.home=C:\Users\vvarm1\IdeaProjects\intelTrader\target\tomcat, java.vm.specification.version=1.7, sun.os.patch.level=Service Pack 1, sun.cpu.endian=little, java.io.tmpdir=C:\Users\vvarm1\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, server.loader=, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, java.ext.dirs=C:\Program Files\Java\jdk1.7.0_10\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=C:\Users\vvarm1\IdeaProjects\intelTrader, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding=UTF-8, hibernate.use_identifier_rollback=false, java.specification.version=1.7, hibernate.show_sql=true}
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Static SQL for entity: com.inteltrader.entity.Investment
 Version select: select INVESTMENT_ID from TRADER_DB.INVESTMENT where INVESTMENT_ID =?
 Snapshot select: select investment_.INVESTMENT_ID, investment_.associatedPortfolio_portfolioId as associat5_2_, investment_.currentPrice as currentP2_2_, investment_.quantity as quantity2_, investment_.INVESTMENT_SYMBOL as INVESTMENT4_2_ from TRADER_DB.INVESTMENT investment_ where investment_.INVESTMENT_ID=?
 Insert 0: insert into TRADER_DB.INVESTMENT (associatedPortfolio_portfolioId, currentPrice, quantity, INVESTMENT_SYMBOL, INVESTMENT_ID) values (?, ?, ?, ?, ?)
 Update 0: update TRADER_DB.INVESTMENT set associatedPortfolio_portfolioId=?, currentPrice=?, quantity=?, INVESTMENT_SYMBOL=? where INVESTMENT_ID=?
 Delete 0: delete from TRADER_DB.INVESTMENT where INVESTMENT_ID=?
 Identity insert: insert into TRADER_DB.INVESTMENT (associatedPortfolio_portfolioId, currentPrice, quantity, INVESTMENT_SYMBOL) values (?, ?, ?, ?)
Static SQL for entity: com.inteltrader.entity.Instrument
 Version select: select SYMBOL_NAME from TRADER_DB.INSTRUMENT where SYMBOL_NAME =?
 Snapshot select: select instrument_.SYMBOL_NAME from TRADER_DB.INSTRUMENT instrument_ where instrument_.SYMBOL_NAME=?
 Insert 0: insert into TRADER_DB.INSTRUMENT (SYMBOL_NAME) values (?)
 Update 0: null
 Delete 0: delete from TRADER_DB.INSTRUMENT where SYMBOL_NAME=?
Static SQL for entity: com.inteltrader.entity.Portfolio
 Version select: select portfolioId from TRADER_DB.PORTFOLIO where portfolioId =?
 Snapshot select: select portfolio_.portfolioId, portfolio_.PORTFOLIO_NAME as PORTFOLIO2_4_ from TRADER_DB.PORTFOLIO portfolio_ where portfolio_.portfolioId=?
 Insert 0: insert into TRADER_DB.PORTFOLIO (PORTFOLIO_NAME, portfolioId) values (?, ?)
 Update 0: update TRADER_DB.PORTFOLIO set PORTFOLIO_NAME=? where portfolioId=?
 Delete 0: delete from TRADER_DB.PORTFOLIO where portfolioId=?
 Identity insert: insert into TRADER_DB.PORTFOLIO (PORTFOLIO_NAME) values (?)
Static SQL for collection: com.inteltrader.entity.Instrument.priceList
 Row insert: insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
 Row update: update TRADER_DB.INSTRUMENT_PRICE set closePrice=?, highPrice=?, lastClosePrice=?, lowPrice=?, openPrice=?, priceId=?, timeStamp=?, totalTradedQuantity=? where SYMBOL_NAME=? and priceId=? and totalTradedQuantity=?
 Row delete: delete from TRADER_DB.INSTRUMENT_PRICE where SYMBOL_NAME=? and priceId=? and totalTradedQuantity=?
 One-shot delete: delete from TRADER_DB.INSTRUMENT_PRICE where SYMBOL_NAME=?
Static SQL for collection: com.inteltrader.entity.Investment.transactionsList
 Row insert: insert into TRADER_DB.INVESTMENT_TRANSACTION (INVESTMENT_ID, quantity, transactionId, transactionPrice) values (?, ?, ?, ?)
 Row update: update TRADER_DB.INVESTMENT_TRANSACTION set quantity=?, transactionId=?, transactionPrice=? where INVESTMENT_ID=? and quantity=? and transactionId=? and transactionPrice=?
 Row delete: delete from TRADER_DB.INVESTMENT_TRANSACTION where INVESTMENT_ID=? and quantity=? and transactionId=? and transactionPrice=?
 One-shot delete: delete from TRADER_DB.INVESTMENT_TRANSACTION where INVESTMENT_ID=?
Static SQL for collection: com.inteltrader.entity.Portfolio.investmentList
 Row insert: update TRADER_DB.INVESTMENT set associatedPortfolio_portfolioId=? where INVESTMENT_ID=?
 Row delete: update TRADER_DB.INVESTMENT set associatedPortfolio_portfolioId=null where associatedPortfolio_portfolioId=? and INVESTMENT_ID=?
 One-shot delete: update TRADER_DB.INVESTMENT set associatedPortfolio_portfolioId=null where associatedPortfolio_portfolioId=?
Static select for entity com.inteltrader.entity.Instrument [NONE]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for entity com.inteltrader.entity.Instrument [READ]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for entity com.inteltrader.entity.Instrument [UPGRADE]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [UPGRADE_NOWAIT]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [FORCE]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [PESSIMISTIC_READ]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? lock in share mode
Static select for entity com.inteltrader.entity.Instrument [PESSIMISTIC_WRITE]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [PESSIMISTIC_FORCE_INCREMENT]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [OPTIMISTIC]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for entity com.inteltrader.entity.Instrument [OPTIMISTIC_FORCE_INCREMENT]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for action ACTION_MERGE on entity com.inteltrader.entity.Instrument: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for action ACTION_REFRESH on entity com.inteltrader.entity.Instrument: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for entity com.inteltrader.entity.Investment [NONE]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.associatedPortfolio_portfolioId as associat5_2_1_, investment0_.currentPrice as currentP2_2_1_, investment0_.quantity as quantity2_1_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_1_, portfolio1_.portfolioId as portfoli1_4_0_, portfolio1_.PORTFOLIO_NAME as PORTFOLIO2_4_0_ from TRADER_DB.INVESTMENT investment0_ left outer join TRADER_DB.PORTFOLIO portfolio1_ on investment0_.associatedPortfolio_portfolioId=portfolio1_.portfolioId where investment0_.INVESTMENT_ID=?
Static select for entity com.inteltrader.entity.Investment [READ]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.associatedPortfolio_portfolioId as associat5_2_1_, investment0_.currentPrice as currentP2_2_1_, investment0_.quantity as quantity2_1_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_1_, portfolio1_.portfolioId as portfoli1_4_0_, portfolio1_.PORTFOLIO_NAME as PORTFOLIO2_4_0_ from TRADER_DB.INVESTMENT investment0_ left outer join TRADER_DB.PORTFOLIO portfolio1_ on investment0_.associatedPortfolio_portfolioId=portfolio1_.portfolioId where investment0_.INVESTMENT_ID=?
Static select for entity com.inteltrader.entity.Investment [UPGRADE]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_portfolioId as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [UPGRADE_NOWAIT]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_portfolioId as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [FORCE]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_portfolioId as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [PESSIMISTIC_READ]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_portfolioId as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? lock in share mode
Static select for entity com.inteltrader.entity.Investment [PESSIMISTIC_WRITE]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_portfolioId as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [PESSIMISTIC_FORCE_INCREMENT]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_portfolioId as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [OPTIMISTIC]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_portfolioId as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=?
Static select for entity com.inteltrader.entity.Investment [OPTIMISTIC_FORCE_INCREMENT]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_portfolioId as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=?
Static select for action ACTION_MERGE on entity com.inteltrader.entity.Investment: select investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.associatedPortfolio_portfolioId as associat5_2_1_, investment0_.currentPrice as currentP2_2_1_, investment0_.quantity as quantity2_1_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_1_, portfolio1_.portfolioId as portfoli1_4_0_, portfolio1_.PORTFOLIO_NAME as PORTFOLIO2_4_0_ from TRADER_DB.INVESTMENT investment0_ left outer join TRADER_DB.PORTFOLIO portfolio1_ on investment0_.associatedPortfolio_portfolioId=portfolio1_.portfolioId where investment0_.INVESTMENT_ID=?
Static select for action ACTION_REFRESH on entity com.inteltrader.entity.Investment: select investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.associatedPortfolio_portfolioId as associat5_2_1_, investment0_.currentPrice as currentP2_2_1_, investment0_.quantity as quantity2_1_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_1_, portfolio1_.portfolioId as portfoli1_4_0_, portfolio1_.PORTFOLIO_NAME as PORTFOLIO2_4_0_ from TRADER_DB.INVESTMENT investment0_ left outer join TRADER_DB.PORTFOLIO portfolio1_ on investment0_.associatedPortfolio_portfolioId=portfolio1_.portfolioId where investment0_.INVESTMENT_ID=?
Static select for entity com.inteltrader.entity.Portfolio [NONE]: select portfolio0_.portfolioId as portfoli1_4_1_, portfolio0_.PORTFOLIO_NAME as PORTFOLIO2_4_1_, investment1_.associatedPortfolio_portfolioId as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_portfolioId as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.portfolioId=investment1_.associatedPortfolio_portfolioId where portfolio0_.portfolioId=?
Static select for entity com.inteltrader.entity.Portfolio [READ]: select portfolio0_.portfolioId as portfoli1_4_1_, portfolio0_.PORTFOLIO_NAME as PORTFOLIO2_4_1_, investment1_.associatedPortfolio_portfolioId as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_portfolioId as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.portfolioId=investment1_.associatedPortfolio_portfolioId where portfolio0_.portfolioId=?
Static select for entity com.inteltrader.entity.Portfolio [UPGRADE]: select portfolio0_.portfolioId as portfoli1_4_0_, portfolio0_.PORTFOLIO_NAME as PORTFOLIO2_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.portfolioId=? for update
Static select for entity com.inteltrader.entity.Portfolio [UPGRADE_NOWAIT]: select portfolio0_.portfolioId as portfoli1_4_0_, portfolio0_.PORTFOLIO_NAME as PORTFOLIO2_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.portfolioId=? for update
Static select for entity com.inteltrader.entity.Portfolio [FORCE]: select portfolio0_.portfolioId as portfoli1_4_0_, portfolio0_.PORTFOLIO_NAME as PORTFOLIO2_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.portfolioId=? for update
Static select for entity com.inteltrader.entity.Portfolio [PESSIMISTIC_READ]: select portfolio0_.portfolioId as portfoli1_4_0_, portfolio0_.PORTFOLIO_NAME as PORTFOLIO2_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.portfolioId=? lock in share mode
Static select for entity com.inteltrader.entity.Portfolio [PESSIMISTIC_WRITE]: select portfolio0_.portfolioId as portfoli1_4_0_, portfolio0_.PORTFOLIO_NAME as PORTFOLIO2_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.portfolioId=? for update
Static select for entity com.inteltrader.entity.Portfolio [PESSIMISTIC_FORCE_INCREMENT]: select portfolio0_.portfolioId as portfoli1_4_0_, portfolio0_.PORTFOLIO_NAME as PORTFOLIO2_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.portfolioId=? for update
Static select for entity com.inteltrader.entity.Portfolio [OPTIMISTIC]: select portfolio0_.portfolioId as portfoli1_4_0_, portfolio0_.PORTFOLIO_NAME as PORTFOLIO2_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.portfolioId=?
Static select for entity com.inteltrader.entity.Portfolio [OPTIMISTIC_FORCE_INCREMENT]: select portfolio0_.portfolioId as portfoli1_4_0_, portfolio0_.PORTFOLIO_NAME as PORTFOLIO2_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.portfolioId=?
Static select for action ACTION_MERGE on entity com.inteltrader.entity.Portfolio: select portfolio0_.portfolioId as portfoli1_4_1_, portfolio0_.PORTFOLIO_NAME as PORTFOLIO2_4_1_, investment1_.associatedPortfolio_portfolioId as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_portfolioId as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.portfolioId=investment1_.associatedPortfolio_portfolioId where portfolio0_.portfolioId=?
Static select for action ACTION_REFRESH on entity com.inteltrader.entity.Portfolio: select portfolio0_.portfolioId as portfoli1_4_1_, portfolio0_.PORTFOLIO_NAME as PORTFOLIO2_4_1_, investment1_.associatedPortfolio_portfolioId as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_portfolioId as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.portfolioId=investment1_.associatedPortfolio_portfolioId where portfolio0_.portfolioId=?
Static select for collection com.inteltrader.entity.Instrument.priceList: select pricelist0_.SYMBOL_NAME as SYMBOL1_0_0_, pricelist0_.closePrice as closePrice1_0_, pricelist0_.highPrice as highPrice1_0_, pricelist0_.lastClosePrice as lastClos4_1_0_, pricelist0_.lowPrice as lowPrice1_0_, pricelist0_.openPrice as openPrice1_0_, pricelist0_.priceId as priceId1_0_, pricelist0_.timeStamp as timeStamp1_0_, pricelist0_.totalTradedQuantity as totalTra9_1_0_ from TRADER_DB.INSTRUMENT_PRICE pricelist0_ where pricelist0_.SYMBOL_NAME=?
Static select for one-to-many com.inteltrader.entity.Portfolio.investmentList: select investment0_.associatedPortfolio_portfolioId as associat5_4_1_, investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_portfolioId as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.associatedPortfolio_portfolioId=?
Static select for collection com.inteltrader.entity.Investment.transactionsList: select transactio0_.INVESTMENT_ID as INVESTMENT1_2_0_, transactio0_.quantity as quantity3_0_, transactio0_.transactionId as transact3_3_0_, transactio0_.transactionPrice as transact4_3_0_ from TRADER_DB.INVESTMENT_TRANSACTION transactio0_ where transactio0_.INVESTMENT_ID=?
Registering SessionFactory: 8fa200c4-1789-4237-832f-d0aab6f3903a (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Instantiated session factory
HHH000228: Running hbm2ddl schema update
HHH000102: Fetching database metadata
HHH000396: Updating schema
Processing hbm.xml files
Process annotated classes
Processing fk mappings (*ToOne and JoinedSubclass)
Processing extends queue
Processing extends queue
Processing collection mappings
Processing native query and ResultSetMapping mappings
Processing association property references
Creating tables' unique integer identifiers
Processing foreign key constraints
Resolving reference to class: com.inteltrader.entity.Instrument
Resolving reference to class: com.inteltrader.entity.Portfolio
Resolving reference to class: com.inteltrader.entity.Investment
HHH000261: Table found: TRADER_DB.instrument
HHH000037: Columns: [symbol_name]
HHH000108: Foreign keys: []
HHH000126: Indexes: [primary]
HHH000261: Table found: TRADER_DB.instrument_price
HHH000037: Columns: [totaltradedquantity, timestamp, priceid, lastcloseprice, highprice, symbol_name, openprice, closeprice, lowprice]
HHH000108: Foreign keys: [fk3189a2d153ed548d]
HHH000126: Indexes: [fk3189a2d153ed548d]
HHH000261: Table found: TRADER_DB.investment
HHH000037: Columns: [investment_id, currentprice, quantity, associatedportfolio_portfolioid, investment_symbol]
HHH000108: Foreign keys: [fk8fe41ed3f2d8099a]
HHH000126: Indexes: [fk8fe41ed3f2d8099a, primary]
HHH000261: Table found: TRADER_DB.investment_transaction
HHH000037: Columns: [transactionprice, investment_id, transactionid, quantity]
HHH000108: Foreign keys: [fka5863f52914590ae]
HHH000126: Indexes: [fka5863f52914590ae]
HHH000261: Table found: TRADER_DB.portfolio
HHH000037: Columns: [portfolioid, portfolio_name]
HHH000108: Foreign keys: []
HHH000126: Indexes: [primary]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
HHH000232: Schema update complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Statistics initialized [enabled=false]
Registering EntityManagerFactory: intelTrader 
HHH000436: Entity manager factory name (intelTrader) is already registered.  If entity manager will be clustered or passivated, specify a unique value for property 'hibernate.ejb.entitymanager_factory_name'
Finished creating instance of bean 'entityManagerFactory'
Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@4bb999c3: defining beans [org.springframework.context.annotation.internalAsyncAnnotationProcessor,org.springframework.context.annotation.internalScheduledAnnotationProcessor,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0,org.springframework.web.servlet.view.InternalResourceViewResolver#0,instrumentDao,portfolioDao,instrumentService,portfolioService,entityManagerFactory,transactionManager,instrument,investment,portfolio,instrumentServiceRest,portfolioServiceRest,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor]; parent: org.springframework.beans.factory.support.DefaultListableBeanFactory@693a9769
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Creating instance of bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0' to allow for resolving potential circular references
Creating instance of bean '(inner bean)'
Creating shared instance of singleton bean 'transactionManager'
Creating instance of bean 'transactionManager'
Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
Returning cached instance of singleton bean 'entityManagerFactory'
Invoking afterPropertiesSet() on bean with name 'transactionManager'
Finished creating instance of bean 'transactionManager'
Creating instance of bean '(inner bean)'
Finished creating instance of bean '(inner bean)'
Invoking afterPropertiesSet() on bean with name '(inner bean)'
Finished creating instance of bean '(inner bean)'
Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Creating shared instance of singleton bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Creating instance of bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Eagerly caching bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Creating shared instance of singleton bean 'instrumentDao'
Creating instance of bean 'instrumentDao'
Eagerly caching bean 'instrumentDao' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'instrumentDao'
Creating shared instance of singleton bean 'portfolioDao'
Creating instance of bean 'portfolioDao'
Eagerly caching bean 'portfolioDao' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'portfolioDao'
Creating shared instance of singleton bean 'instrumentService'
Creating instance of bean 'instrumentService'
Registered injected element on class [com.inteltrader.service.InstrumentServiceImpl]: PersistenceElement for javax.persistence.EntityManagerFactory com.inteltrader.service.InstrumentServiceImpl.entityManagerFactory
Registered injected element on class [com.inteltrader.service.InstrumentServiceImpl]: AutowiredFieldElement for private com.inteltrader.dao.IInstrumentDao com.inteltrader.service.InstrumentServiceImpl.instrumentDao
Registered injected element on class [com.inteltrader.service.InstrumentServiceImpl]: AutowiredFieldElement for private com.inteltrader.service.PortfolioService com.inteltrader.service.InstrumentServiceImpl.portfolioService
Eagerly caching bean 'instrumentService' to allow for resolving potential circular references
Processing injected method of bean 'instrumentService': PersistenceElement for javax.persistence.EntityManagerFactory com.inteltrader.service.InstrumentServiceImpl.entityManagerFactory
Returning cached instance of singleton bean 'entityManagerFactory'
Processing injected method of bean 'instrumentService': AutowiredFieldElement for private com.inteltrader.dao.IInstrumentDao com.inteltrader.service.InstrumentServiceImpl.instrumentDao
Returning cached instance of singleton bean 'instrumentDao'
Autowiring by type from bean name 'instrumentService' to bean named 'instrumentDao'
Processing injected method of bean 'instrumentService': AutowiredFieldElement for private com.inteltrader.service.PortfolioService com.inteltrader.service.InstrumentServiceImpl.portfolioService
Creating shared instance of singleton bean 'portfolioService'
Creating instance of bean 'portfolioService'
Registered injected element on class [com.inteltrader.service.PortfolioServiceImpl]: PersistenceElement for private javax.persistence.EntityManagerFactory com.inteltrader.service.PortfolioServiceImpl.entityManagerFactory
Registered injected element on class [com.inteltrader.service.PortfolioServiceImpl]: AutowiredFieldElement for private com.inteltrader.dao.IPortfolioDao com.inteltrader.service.PortfolioServiceImpl.portfolioDao
Eagerly caching bean 'portfolioService' to allow for resolving potential circular references
Processing injected method of bean 'portfolioService': PersistenceElement for private javax.persistence.EntityManagerFactory com.inteltrader.service.PortfolioServiceImpl.entityManagerFactory
Returning cached instance of singleton bean 'entityManagerFactory'
Processing injected method of bean 'portfolioService': AutowiredFieldElement for private com.inteltrader.dao.IPortfolioDao com.inteltrader.service.PortfolioServiceImpl.portfolioDao
Returning cached instance of singleton bean 'portfolioDao'
Autowiring by type from bean name 'portfolioService' to bean named 'portfolioDao'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'portfolioService'
Autowiring by type from bean name 'instrumentService' to bean named 'portfolioService'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'instrumentService'
Returning cached instance of singleton bean 'portfolioService'
Returning cached instance of singleton bean 'entityManagerFactory'
Returning cached instance of singleton bean 'transactionManager'
Creating shared instance of singleton bean 'instrument'
Creating instance of bean 'instrument'
Eagerly caching bean 'instrument' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'instrument'
Creating shared instance of singleton bean 'investment'
Creating instance of bean 'investment'
Eagerly caching bean 'investment' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'investment'
Creating shared instance of singleton bean 'portfolio'
Creating instance of bean 'portfolio'
Eagerly caching bean 'portfolio' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'portfolio'
Creating shared instance of singleton bean 'instrumentServiceRest'
Creating instance of bean 'instrumentServiceRest'
Registered injected element on class [com.inteltrader.rest.InstrumentServiceRest]: AutowiredFieldElement for private com.inteltrader.service.InstrumentService com.inteltrader.rest.InstrumentServiceRest.instrumentService
Eagerly caching bean 'instrumentServiceRest' to allow for resolving potential circular references
Processing injected method of bean 'instrumentServiceRest': AutowiredFieldElement for private com.inteltrader.service.InstrumentService com.inteltrader.rest.InstrumentServiceRest.instrumentService
Returning cached instance of singleton bean 'instrumentService'
Autowiring by type from bean name 'instrumentServiceRest' to bean named 'instrumentService'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'instrumentServiceRest'
Creating shared instance of singleton bean 'portfolioServiceRest'
Creating instance of bean 'portfolioServiceRest'
Registered injected element on class [com.inteltrader.rest.PortfolioServiceRest]: AutowiredFieldElement for private com.inteltrader.service.PortfolioService com.inteltrader.rest.PortfolioServiceRest.portfolioService
Eagerly caching bean 'portfolioServiceRest' to allow for resolving potential circular references
Processing injected method of bean 'portfolioServiceRest': AutowiredFieldElement for private com.inteltrader.service.PortfolioService com.inteltrader.rest.PortfolioServiceRest.portfolioService
Returning cached instance of singleton bean 'portfolioService'
Autowiring by type from bean name 'portfolioServiceRest' to bean named 'portfolioService'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'portfolioServiceRest'
Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@1679f1fb]
Returning cached instance of singleton bean 'lifecycleProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Unable to locate MultipartResolver with name 'multipartResolver': no multipart request handling provided
Creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Unable to locate LocaleResolver with name 'localeResolver': using default [org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver@1f455b6b]
Creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Unable to locate ThemeResolver with name 'themeResolver': using default [org.springframework.web.servlet.theme.FixedThemeResolver@688dbbb4]
Creating instance of bean 'org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping'
Looking for URL mappings in application context: WebApplicationContext for namespace 'appServlet-servlet': startup date [Fri Apr 19 17:23:34 IST 2013]; parent: Root WebApplicationContext
Rejected bean name 'org.springframework.context.annotation.internalAsyncAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalScheduledAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalRequiredAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalCommonAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.aop.config.internalAutoProxyCreator': no URL paths identified
Rejected bean name 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0': no URL paths identified
Rejected bean name 'org.springframework.web.servlet.view.InternalResourceViewResolver#0': no URL paths identified
Rejected bean name 'instrumentDao': no URL paths identified
Rejected bean name 'portfolioDao': no URL paths identified
Rejected bean name 'instrumentService': no URL paths identified
Rejected bean name 'portfolioService': no URL paths identified
Rejected bean name 'entityManagerFactory': no URL paths identified
Rejected bean name 'transactionManager': no URL paths identified
Rejected bean name 'instrument': no URL paths identified
Rejected bean name 'investment': no URL paths identified
Rejected bean name 'portfolio': no URL paths identified
Rejected bean name 'instrumentServiceRest': no URL paths identified
Rejected bean name 'portfolioServiceRest': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor': no URL paths identified
Rejected bean name 'environment': no URL paths identified
Rejected bean name 'systemProperties': no URL paths identified
Rejected bean name 'systemEnvironment': no URL paths identified
Rejected bean name 'servletConfig': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry': no URL paths identified
Rejected bean name 'messageSource': no URL paths identified
Rejected bean name 'applicationEventMulticaster': no URL paths identified
Rejected bean name 'lifecycleProcessor': no URL paths identified
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping'
Creating instance of bean 'org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping'
Looking for URL mappings in application context: WebApplicationContext for namespace 'appServlet-servlet': startup date [Fri Apr 19 17:23:34 IST 2013]; parent: Root WebApplicationContext
Rejected bean name 'org.springframework.context.annotation.internalAsyncAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalScheduledAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalRequiredAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalCommonAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.aop.config.internalAutoProxyCreator': no URL paths identified
Rejected bean name 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0': no URL paths identified
Rejected bean name 'org.springframework.web.servlet.view.InternalResourceViewResolver#0': no URL paths identified
Rejected bean name 'instrumentDao': no URL paths identified
Rejected bean name 'portfolioDao': no URL paths identified
Rejected bean name 'instrumentService': no URL paths identified
Rejected bean name 'portfolioService': no URL paths identified
Rejected bean name 'entityManagerFactory': no URL paths identified
Rejected bean name 'transactionManager': no URL paths identified
Rejected bean name 'instrument': no URL paths identified
Rejected bean name 'investment': no URL paths identified
Rejected bean name 'portfolio': no URL paths identified
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/create/{symbol}] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/create/{symbol}.*] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/create/{symbol}/] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/update/{portfolioName}] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/update/{portfolioName}.*] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/update/{portfolioName}/] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/load/{symbol}] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/load/{symbol}.*] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/load/{symbol}/] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/create/{portfolioName}] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/create/{portfolioName}.*] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/create/{portfolioName}/] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/load/{portfolioName}] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/load/{portfolioName}.*] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/load/{portfolioName}/] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/addInvestment/{portfolioName}/{symbolName}] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/addInvestment/{portfolioName}/{symbolName}.*] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/addInvestment/{portfolioName}/{symbolName}/] onto handler 'portfolioServiceRest'
Rejected bean name 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor': no URL paths identified
Rejected bean name 'environment': no URL paths identified
Rejected bean name 'systemProperties': no URL paths identified
Rejected bean name 'systemEnvironment': no URL paths identified
Rejected bean name 'servletConfig': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry': no URL paths identified
Rejected bean name 'messageSource': no URL paths identified
Rejected bean name 'applicationEventMulticaster': no URL paths identified
Rejected bean name 'lifecycleProcessor': no URL paths identified
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping'
No HandlerMappings found in servlet 'appServlet': using default
Creating instance of bean 'org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter'
Creating instance of bean 'org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter'
Creating instance of bean 'org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter'
No HandlerAdapters found in servlet 'appServlet': using default
Creating instance of bean 'org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerExceptionResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerExceptionResolver'
Creating instance of bean 'org.springframework.web.servlet.mvc.annotation.ResponseStatusExceptionResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.annotation.ResponseStatusExceptionResolver'
Creating instance of bean 'org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver'
No HandlerExceptionResolvers found in servlet 'appServlet': using default
Creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Unable to locate RequestToViewNameTranslator with name 'viewNameTranslator': using default [org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@132b9848]
Returning cached instance of singleton bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Returning cached instance of singleton bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Unable to locate FlashMapManager with name 'flashMapManager': using default [org.springframework.web.servlet.support.SessionFlashMapManager@6025734e]
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Searching for key 'spring.liveBeansView.mbeanDomain' in [servletConfigInitParams]
Searching for key 'spring.liveBeansView.mbeanDomain' in [servletContextInitParams]
Searching for key 'spring.liveBeansView.mbeanDomain' in [jndiProperties]
Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain]
Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException: Name [spring.liveBeansView.mbeanDomain] is not bound in this Context. Unable to find [spring.liveBeansView.mbeanDomain].
Looking up JNDI object with name [spring.liveBeansView.mbeanDomain]
JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: Name [spring.liveBeansView.mbeanDomain] is not bound in this Context. Unable to find [spring.liveBeansView.mbeanDomain].. Returning null.
Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
Published WebApplicationContext of servlet 'appServlet' as ServletContext attribute with name [org.springframework.web.servlet.FrameworkServlet.CONTEXT.appServlet]
FrameworkServlet 'appServlet': initialization completed in 510 ms
Servlet 'appServlet' configured successfully
DispatcherServlet with name 'appServlet' processing GET request for [/portfolio/create/myFirstTime]
Matching patterns for request [/portfolio/create/myFirstTime] are [/portfolio/create/{portfolioName}]
URI Template variables for request [/portfolio/create/myFirstTime] are {portfolioName=myFirstTime}
Mapping [/portfolio/create/myFirstTime] to HandlerExecutionChain with handler [com.inteltrader.rest.PortfolioServiceRest@7849e7e6] and 2 interceptors
Last-Modified value for [/portfolio/create/myFirstTime] is: -1
Invoking request handler method: public org.springframework.http.ResponseEntity com.inteltrader.rest.PortfolioServiceRest.createPortfolio(java.lang.String,javax.servlet.http.HttpServletRequest)
begin
Obtaining JDBC connection
Obtained JDBC connection
initial autocommit status: true
disabling autocommit
Executing identity-insert immediately
insert into TRADER_DB.PORTFOLIO (PORTFOLIO_NAME) values (?)
Natively generated identity: 1
committing
Processing flush-time cascades
Dirty checking collections
Collection found: [com.inteltrader.entity.Portfolio.investmentList#1], was: [<unreferenced>] (initialized)
Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
Listing entities:
com.inteltrader.entity.Portfolio{portfolioName=myFirstTime, portfolioId=1, investmentList=[]}
committed JDBC Connection
re-enabling autocommit
Written [SUCCESS] as "text/html" using [org.springframework.http.converter.StringHttpMessageConverter@198485c7]
Null ModelAndView returned to DispatcherServlet with name 'appServlet': assuming HandlerAdapter completed request handling
Successfully completed request
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
DispatcherServlet with name 'appServlet' processing GET request for [/portfolio/addInvestment/myFirstTime/AMTEKAUTO]
Matching patterns for request [/portfolio/addInvestment/myFirstTime/AMTEKAUTO] are [/portfolio/addInvestment/{portfolioName}/{symbolName}]
URI Template variables for request [/portfolio/addInvestment/myFirstTime/AMTEKAUTO] are {portfolioName=myFirstTime, symbolName=AMTEKAUTO}
Mapping [/portfolio/addInvestment/myFirstTime/AMTEKAUTO] to HandlerExecutionChain with handler [com.inteltrader.rest.PortfolioServiceRest@7849e7e6] and 2 interceptors
Last-Modified value for [/portfolio/addInvestment/myFirstTime/AMTEKAUTO] is: -1
Invoking request handler method: public org.springframework.http.ResponseEntity com.inteltrader.rest.PortfolioServiceRest.addInvestment(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
begin
Obtaining JDBC connection
Opening new JDBC connection
Created connection to: jdbc:mysql://localhost:3306/TRADER_DB, Isolation Level: 4
Obtained JDBC connection
initial autocommit status: true
disabling autocommit
Written [FAILURE] as "text/html" using [org.springframework.http.converter.StringHttpMessageConverter@198485c7]
Null ModelAndView returned to DispatcherServlet with name 'appServlet': assuming HandlerAdapter completed request handling
Successfully completed request
Initializing servlet 'appServlet'
Initializing new StandardServletEnvironment
Adding [servletConfigInitParams] PropertySource with lowest search precedence
Adding [servletContextInitParams] PropertySource with lowest search precedence
Adding [jndiProperties] PropertySource with lowest search precedence
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment]
FrameworkServlet 'appServlet': initialization started
Servlet with name 'appServlet' will try to create custom WebApplicationContext context of class 'org.springframework.web.context.support.XmlWebApplicationContext', using parent context [Root WebApplicationContext: startup date [Fri Apr 19 17:29:29 IST 2013]; root of context hierarchy]
Searching for key 'spring.profiles.active' in [servletConfigInitParams]
Searching for key 'spring.profiles.active' in [servletContextInitParams]
Searching for key 'spring.profiles.active' in [jndiProperties]
Looking up JNDI object with name [java:comp/env/spring.profiles.active]
Converted JNDI name [java:comp/env/spring.profiles.active] not found - trying original name [spring.profiles.active]. javax.naming.NameNotFoundException: Name [spring.profiles.active] is not bound in this Context. Unable to find [spring.profiles.active].
Looking up JNDI object with name [spring.profiles.active]
JNDI lookup for name [spring.profiles.active] threw NamingException with message: Name [spring.profiles.active] is not bound in this Context. Unable to find [spring.profiles.active].. Returning null.
Searching for key 'spring.profiles.active' in [systemProperties]
Searching for key 'spring.profiles.active' in [systemEnvironment]
Could not find key 'spring.profiles.active' in any property source. Returning [null]
Searching for key 'spring.profiles.default' in [servletConfigInitParams]
Searching for key 'spring.profiles.default' in [servletContextInitParams]
Searching for key 'spring.profiles.default' in [jndiProperties]
Looking up JNDI object with name [java:comp/env/spring.profiles.default]
Converted JNDI name [java:comp/env/spring.profiles.default] not found - trying original name [spring.profiles.default]. javax.naming.NameNotFoundException: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].
Looking up JNDI object with name [spring.profiles.default]
JNDI lookup for name [spring.profiles.default] threw NamingException with message: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].. Returning null.
Searching for key 'spring.profiles.default' in [systemProperties]
Searching for key 'spring.profiles.default' in [systemEnvironment]
Could not find key 'spring.profiles.default' in any property source. Returning [null]
Searching for key 'spring.profiles.default' in [servletConfigInitParams]
Searching for key 'spring.profiles.default' in [servletContextInitParams]
Searching for key 'spring.profiles.default' in [jndiProperties]
Looking up JNDI object with name [java:comp/env/spring.profiles.default]
Converted JNDI name [java:comp/env/spring.profiles.default] not found - trying original name [spring.profiles.default]. javax.naming.NameNotFoundException: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].
Looking up JNDI object with name [spring.profiles.default]
JNDI lookup for name [spring.profiles.default] threw NamingException with message: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].. Returning null.
Searching for key 'spring.profiles.default' in [systemProperties]
Searching for key 'spring.profiles.default' in [systemEnvironment]
Could not find key 'spring.profiles.default' in any property source. Returning [null]
Replacing [servletContextInitParams] PropertySource with [servletContextInitParams]
Replacing [servletConfigInitParams] PropertySource with [servletConfigInitParams]
Refreshing WebApplicationContext for namespace 'appServlet-servlet': startup date [Fri Apr 19 17:29:37 IST 2013]; parent: Root WebApplicationContext
Initializing new StandardEnvironment
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
Initializing new StandardEnvironment
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
Loading schema mappings from [META-INF/spring.schemas]
Loaded schema mappings: {http://www.springframework.org/schema/data/jpa/spring-jpa-1.2.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.2.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.1.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.1.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.5.xsd=org/springframework/data/repository/config/spring-repository-1.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.0.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.3.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.4.xsd=org/springframework/data/repository/config/spring-repository-1.4.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.3.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/data/repository/spring-repository.xsd=org/springframework/data/repository/config/spring-repository-1.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.0.xsd=org/springframework/data/repository/config/spring-repository-1.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.1.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.1.xsd
Found XML schema [http://www.springframework.org/schema/task/spring-task-3.0.xsd] in classpath: org/springframework/scheduling/config/spring-task-3.0.xsd
Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd
Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd
Found XML schema [http://www.springframework.org/schema/tx/spring-tx-3.1.xsd] in classpath: org/springframework/transaction/config/spring-tx-3.1.xsd
Loading bean definitions
Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/data/repository=org.springframework.data.repository.config.RepositoryNameSpaceHandler, http://www.springframework.org/schema/data/jpa=org.springframework.data.jpa.repository.config.JpaRepositoryNameSpaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
Neither XML 'id' nor 'name' specified - using generated bean name [org.springframework.web.servlet.view.InternalResourceViewResolver#0]
Neither XML 'id' nor 'name' specified - using generated bean name [org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver#2ebc1316]
Initializing new StandardEnvironment
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
Looking for matching resources in directory tree [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Resolved location pattern [classpath*:com/inteltrader/**/*.class] to resources [file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\Advice.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\FIFOList.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\InstrumentVo.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\Strategies.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\Strategy.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\StrategyMACD.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao\IInstrumentDao.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao\InstrumentDao.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao\IPortfolioDao.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao\PortfolioDao.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Instrument.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Investment.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Portfolio.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Price.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Transactions.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest\InstrumentServiceRest.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest\PortfolioServiceRest.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\AnalyserService.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\CronService.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\InstrumentService.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\InstrumentServiceImpl.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\PortfolioService.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\PortfolioServiceImpl.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util\DownloadZip.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util\ExtractZipFile.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util\ReadPriceCsv.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util\RestCodes.class]]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Instrument.class]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Investment.class]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Portfolio.class]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest\InstrumentServiceRest.class]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest\PortfolioServiceRest.class]
Loaded 21 bean definitions from location pattern [/WEB-INF/applicationContext.xml]
Bean factory for WebApplicationContext for namespace 'appServlet-servlet': org.springframework.beans.factory.support.DefaultListableBeanFactory@3d892152: defining beans [org.springframework.context.annotation.internalAsyncAnnotationProcessor,org.springframework.context.annotation.internalScheduledAnnotationProcessor,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0,org.springframework.web.servlet.view.InternalResourceViewResolver#0,instrumentDao,portfolioDao,instrumentService,portfolioService,entityManagerFactory,transactionManager,instrument,investment,portfolio,instrumentServiceRest,portfolioServiceRest]; parent: org.springframework.beans.factory.support.DefaultListableBeanFactory@62b585b9
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@425ba1d7]
Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@dde4c4a]
Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.DelegatingThemeSource@7d629562]
Creating shared instance of singleton bean 'entityManagerFactory'
Creating instance of bean 'entityManagerFactory'
Eagerly caching bean 'entityManagerFactory' to allow for resolving potential circular references
Creating instance of bean 'org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver#2ebc1316'
Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Creating instance of bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0' to allow for resolving potential circular references
Creating instance of bean '(inner bean)'
Creating shared instance of singleton bean 'transactionManager'
Creating instance of bean 'transactionManager'
Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
Returning eagerly cached instance of singleton bean 'entityManagerFactory' that is not fully initialized yet - a consequence of a circular reference
Ignoring currently created advisor 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0': Error creating bean with name 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0': Cannot create inner bean '(inner bean)' of type [org.springframework.transaction.interceptor.TransactionInterceptor] while setting bean property 'transactionInterceptor'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)': Cannot resolve reference to bean 'transactionManager' while setting bean property 'transactionManager'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'transactionManager' defined in ServletContext resource [/WEB-INF/applicationContext.xml]: Cannot resolve reference to bean 'entityManagerFactory' while setting bean property 'entityManagerFactory'; nested exception is org.springframework.beans.factory.BeanCurrentlyInCreationException: Error creating bean with name 'entityManagerFactory': FactoryBean which is currently in creation returned null from getObject
Finished creating instance of bean 'org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver#2ebc1316'
Invoking afterPropertiesSet() on bean with name 'entityManagerFactory'
Building JPA container EntityManagerFactory for persistence unit 'intelTrader'
Adding type registration boolean -> org.hibernate.type.BooleanType@aacc49a
Adding type registration boolean -> org.hibernate.type.BooleanType@aacc49a
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@aacc49a
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@351f2e1a
Adding type registration true_false -> org.hibernate.type.TrueFalseType@53c75a1d
Adding type registration yes_no -> org.hibernate.type.YesNoType@118130e9
Adding type registration byte -> org.hibernate.type.ByteType@27fd76f7
Adding type registration byte -> org.hibernate.type.ByteType@27fd76f7
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@27fd76f7
Adding type registration character -> org.hibernate.type.CharacterType@22ab38d1
Adding type registration char -> org.hibernate.type.CharacterType@22ab38d1
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@22ab38d1
Adding type registration short -> org.hibernate.type.ShortType@513a6c34
Adding type registration short -> org.hibernate.type.ShortType@513a6c34
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@513a6c34
Adding type registration integer -> org.hibernate.type.IntegerType@561cc317
Adding type registration int -> org.hibernate.type.IntegerType@561cc317
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@561cc317
Adding type registration long -> org.hibernate.type.LongType@3614ad23
Adding type registration long -> org.hibernate.type.LongType@3614ad23
Adding type registration java.lang.Long -> org.hibernate.type.LongType@3614ad23
Adding type registration float -> org.hibernate.type.FloatType@53eaf4b3
Adding type registration float -> org.hibernate.type.FloatType@53eaf4b3
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@53eaf4b3
Adding type registration double -> org.hibernate.type.DoubleType@2a507f30
Adding type registration double -> org.hibernate.type.DoubleType@2a507f30
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2a507f30
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1766cb62
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1766cb62
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@15335f10
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@15335f10
Adding type registration string -> org.hibernate.type.StringType@704b56ff
Adding type registration java.lang.String -> org.hibernate.type.StringType@704b56ff
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@43448c82
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7df837d1
Adding type registration url -> org.hibernate.type.UrlType@565c0697
Adding type registration java.net.URL -> org.hibernate.type.UrlType@565c0697
Adding type registration date -> org.hibernate.type.DateType@103fecbf
Adding type registration java.sql.Date -> org.hibernate.type.DateType@103fecbf
Adding type registration time -> org.hibernate.type.TimeType@5a8434b1
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5a8434b1
Adding type registration timestamp -> org.hibernate.type.TimestampType@23f3c60c
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@23f3c60c
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@23f3c60c
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@47f92044
Adding type registration calendar -> org.hibernate.type.CalendarType@30627bfc
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@30627bfc
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@30627bfc
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@65553762
Adding type registration locale -> org.hibernate.type.LocaleType@5be31634
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5be31634
Adding type registration currency -> org.hibernate.type.CurrencyType@722413fe
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@722413fe
Adding type registration timezone -> org.hibernate.type.TimeZoneType@74fe48a9
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@74fe48a9
Adding type registration class -> org.hibernate.type.ClassType@3c7021ae
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3c7021ae
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@46b1b3d5
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@46b1b3d5
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3c2c47fb
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@4b766fc4
Adding type registration binary -> org.hibernate.type.BinaryType@2d97191b
Adding type registration byte[] -> org.hibernate.type.BinaryType@2d97191b
Adding type registration [B -> org.hibernate.type.BinaryType@2d97191b
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@45903ccf
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@45903ccf
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@45903ccf
Adding type registration image -> org.hibernate.type.ImageType@1bf6c1f0
Adding type registration characters -> org.hibernate.type.CharArrayType@789e7511
Adding type registration char[] -> org.hibernate.type.CharArrayType@789e7511
Adding type registration [C -> org.hibernate.type.CharArrayType@789e7511
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1ba4e3dc
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1ba4e3dc
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1ba4e3dc
Adding type registration text -> org.hibernate.type.TextType@3aeeb134
Adding type registration ntext -> org.hibernate.type.NTextType@5cf58930
Adding type registration blob -> org.hibernate.type.BlobType@f8466ca
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@f8466ca
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@63a4f61d
Adding type registration clob -> org.hibernate.type.ClobType@2f866ead
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2f866ead
Adding type registration nclob -> org.hibernate.type.NClobType@1136914f
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1136914f
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@14dfefe1
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6761ba58
Adding type registration serializable -> org.hibernate.type.SerializableType@65719564
Adding type registration object -> org.hibernate.type.ObjectType@53a06fe7
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@53a06fe7
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@533d953d
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7011027c
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6cba545e
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3cf91f16
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@767fca0
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3bfa702c
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@36da7777
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@40d941c3
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Processing PersistenceUnitInfo [
	name: intelTrader
	persistence provider classname: org.hibernate.ejb.HibernatePersistence
	classloader: WebappClassLoader
  context: 
  delegate: false
  repositories:
    /WEB-INF/classes/
----------> Parent Classloader:
ClassRealm[plugin>org.apache.tomcat.maven:tomcat7-maven-plugin:2.0, parent: sun.misc.Launcher$AppClassLoader@1875303f]

	Temporary classloader: org.springframework.instrument.classloading.SimpleThrowawayClassLoader@776c8a77
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/vvarm1/IdeaProjects/intelTrader/src/main/webapp/WEB-INF/classes
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.inteltrader.entity.Instrument
		com.inteltrader.entity.Portfolio
		com.inteltrader.entity.Investment]
	Mapping files names []
	Properties [
		hibernate.connection.username: root
		hibernate.connection.password: root
		hibernate.dialect: org.hibernate.dialect.MySQLDialect
		hibernate.c3p0.min_size: 10
		hibernate.connection.url: jdbc:mysql://localhost:3306/TRADER_DB
		hibernate.show_sql: true
		hibernate.connection.driver_class: com.mysql.jdbc.Driver
		hibernate.hbm2ddl.auto: update]
Detect class: true; detect hbm: true
Detect class: true; detect hbm: true
Searching mapped entities in jar/par: file:/C:/Users/vvarm1/IdeaProjects/intelTrader/src/main/webapp/WEB-INF/classes
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.ejb.event.JpaIntegrator].
No JNDI name configured for binding Ejb3Configuration
Preparing to build session factory with filters : {}
Processing hbm.xml files
Process annotated classes
Binding entity from annotated class: com.inteltrader.entity.Instrument
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Instrument
Bind entity com.inteltrader.entity.Instrument on table INSTRUMENT
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=SYMBOL_NAME, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property symbolName with lazy=false
building SimpleValue for symbolName
Building property symbolName
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=priceList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=priceList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=priceList_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='priceList_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='SYMBOL_NAME', referencedColumn='', mappedBy=''}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Collection role: com.inteltrader.entity.Instrument.priceList
Building property priceList
Binding entity from annotated class: com.inteltrader.entity.Portfolio
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Portfolio
Bind entity com.inteltrader.entity.Portfolio on table PORTFOLIO
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=PORTFOLIO_NAME, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property portfolioName with lazy=false
building SimpleValue for portfolioName
Building property portfolioName
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='associatedPortfolio'}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=investmentList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=element, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=investmentList_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='investmentList_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='associatedPortfolio'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='associatedPortfolio'}
Collection role: com.inteltrader.entity.Portfolio.investmentList
Building property investmentList
Binding entity from annotated class: com.inteltrader.entity.Investment
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Investment
Bind entity com.inteltrader.entity.Investment on table INVESTMENT
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=INVESTMENT_ID, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property investmentId with lazy=false
building SimpleValue for investmentId
Building property investmentId
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=associatedPortfolio, insertable=true, updatable=true, unique=false}
Building property associatedPortfolio
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=currentPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property currentPrice with lazy=false
building SimpleValue for currentPrice
Building property currentPrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=quantity, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property quantity with lazy=false
building SimpleValue for quantity
Building property quantity
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=INVESTMENT_SYMBOL, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property symbolName with lazy=false
building SimpleValue for symbolName
Building property symbolName
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=transactionsList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=transactionsList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=transactionsList_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='transactionsList_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='INVESTMENT_ID', referencedColumn='', mappedBy=''}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Collection role: com.inteltrader.entity.Investment.transactionsList
Building property transactionsList
Setting SimpleValue typeName for symbolName
Setting SimpleValue typeName for portfolioName
Setting SimpleValue typeName for investmentId
Setting SimpleValue typeName for currentPrice
Setting SimpleValue typeName for quantity
Setting SimpleValue typeName for symbolName
Processing fk mappings (*ToOne and JoinedSubclass)
Processing extends queue
Processing extends queue
Processing collection mappings
Second pass for collection: com.inteltrader.entity.Investment.transactionsList
Binding a collection of element: com.inteltrader.entity.Investment.transactionsList
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT_TRANSACTION), mappingColumn=quantity, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property quantity with lazy=false
building SimpleValue for quantity
Setting SimpleValue typeName for quantity
Building property quantity
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT_TRANSACTION), mappingColumn=transactionId, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property transactionId with lazy=false
building SimpleValue for transactionId
Setting SimpleValue typeName for transactionId
Building property transactionId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT_TRANSACTION), mappingColumn=transactionPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property transactionPrice with lazy=false
building SimpleValue for transactionPrice
Setting SimpleValue typeName for transactionPrice
Building property transactionPrice
Mapped collection key: INVESTMENT_ID, element: quantity, transactionId, transactionPrice
Second pass for collection: com.inteltrader.entity.Instrument.priceList
Binding a collection of element: com.inteltrader.entity.Instrument.priceList
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=closePrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property closePrice with lazy=false
building SimpleValue for closePrice
Setting SimpleValue typeName for closePrice
Building property closePrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=highPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property highPrice with lazy=false
building SimpleValue for highPrice
Setting SimpleValue typeName for highPrice
Building property highPrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=lastClosePrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property lastClosePrice with lazy=false
building SimpleValue for lastClosePrice
Setting SimpleValue typeName for lastClosePrice
Building property lastClosePrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=lowPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property lowPrice with lazy=false
building SimpleValue for lowPrice
Setting SimpleValue typeName for lowPrice
Building property lowPrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=openPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property openPrice with lazy=false
building SimpleValue for openPrice
Setting SimpleValue typeName for openPrice
Building property openPrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=priceId, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property priceId with lazy=false
building SimpleValue for priceId
Setting SimpleValue typeName for priceId
Building property priceId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=timeStamp, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property timeStamp with lazy=false
building SimpleValue for timeStamp
Setting SimpleValue typeName for timeStamp
Building property timeStamp
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=totalTradedQuantity, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property totalTradedQuantity with lazy=false
building SimpleValue for totalTradedQuantity
Setting SimpleValue typeName for totalTradedQuantity
Building property totalTradedQuantity
Mapped collection key: SYMBOL_NAME, element: closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity
Second pass for collection: com.inteltrader.entity.Portfolio.investmentList
Binding a OneToMany: com.inteltrader.entity.Portfolio.investmentList through a foreign key
Mapping collection: com.inteltrader.entity.Portfolio.investmentList -> INVESTMENT
Retrieving property com.inteltrader.entity.Investment.associatedPortfolio
Mapped collection key: associatedPortfolio_PORTFOLIO_NAME, one-to-many: com.inteltrader.entity.Investment
Processing native query and ResultSetMapping mappings
Processing association property references
Creating tables' unique integer identifiers
Processing foreign key constraints
Resolving reference to class: com.inteltrader.entity.Instrument
Resolving reference to class: com.inteltrader.entity.Portfolio
Resolving reference to class: com.inteltrader.entity.Investment
HHH000022: c3p0 properties were encountered, but the org.hibernate.service.jdbc.connections.internal.C3P0ConnectionProvider provider class was not found on the classpath; these properties are going to be ignored.
HHH000402: Using Hibernate built-in connection pool (not for production use!)
HHH000115: Hibernate connection pool size: 20
HHH000006: Autocommit mode: true
HHH000401: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/TRADER_DB]
HHH000046: Connection properties: {user=root, password=root, autocommit=true, release_mode=auto}
Opening new JDBC connection
Created connection to: jdbc:mysql://localhost:3306/TRADER_DB, Isolation Level: 4
Database ->
       name : MySQL
    version : 5.6.10-log
      major : 5
      minor : 6
Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.9 ( Revision: ${svn.Revision} )
      major : 5
      minor : 1
JDBC version : 3.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: disabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
multi-tenancy strategy : NONE
Connection release mode: auto
HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
Maximum outer join fetch depth: 2
Default batch fetch size: 1
Generate SQL with comments: disabled
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
HHH000397: Using ASTQueryTranslatorFactory
Query language substitutions: {}
JPA-QL strict compliance: enabled
Second-level cache: enabled
Query cache: disabled
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
Optimize cache for minimal puts: disabled
Structured second-level cache entries: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Named query checking : enabled
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : : disabled
Building session factory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\vvarm1\IdeaProjects\intelTrader\target\tomcat, hibernate.connection.url=jdbc:mysql://localhost:3306/TRADER_DB, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.ejb.discard_pc_on_close=false, catalina.useNaming=true, hibernate.transaction.flush_before_completion=false, os.name=Windows 7, sun.boot.class.path=C:\Program Files\Java\jdk1.7.0_10\jre\lib\resources.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\rt.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\jce.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.7.0_10\jre\classes, java.util.logging.config.file=C:\Users\vvarm1\IdeaProjects\intelTrader\target\tomcat\conf\logging.properties, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.7.0_10-b18, hibernate.connection.autocommit=true, hibernate.c3p0.min_size=10, user.name=vvarm1, shared.loader=, guice.disable.misplaced.annotation.check=true, tomcat.util.buf.StringCache.byte.enabled=true, javax.persistence.validation.mode=AUTO, hibernate.connection.release_mode=auto, idea.launcher.bin.path=C:\Program Files (x86)\JetBrains\IntelliJ IDEA Community Edition 12.0.4\bin, user.language=en, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, sun.boot.library.path=C:\Program Files\Java\jdk1.7.0_10\jre\bin, classworlds.conf=C:\Program Files\Apache Software Foundation\apache-maven-3.0.5\bin\m2.conf, java.version=1.7.0_10, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, user.timezone=Asia/Calcutta, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.7.0_10\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, file.encoding.pkg=sun.io, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.tomcat.,org.apache.jasper., file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=51.0, user.country=US, java.home=C:\Program Files\Java\jdk1.7.0_10\jre, java.vm.info=mixed mode, os.version=6.1, hibernate.transaction.factory_class=org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory, hibernate.query.jpaql_strict_compliance=true, path.separator=;, java.vm.version=23.6-b04, hibernate.connection.password=root, user.variant=, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.scan.DefaultJarScanner.jarsToSkip=bootstrap.jar,commons-daemon.jar,tomcat-juli.jar,annotations-api.jar,el-api.jar,jsp-api.jar,servlet-api.jar,catalina.jar,catalina-ant.jar,catalina-ha.jar,catalina-tribes.jar,jasper.jar,jasper-el.jar,ecj-*.jar,tomcat-api.jar,tomcat-util.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-jni.jar,tomcat-spdy.jar,tomcat-i18n-en.jar,tomcat-i18n-es.jar,tomcat-i18n-fr.jar,tomcat-i18n-ja.jar,tomcat-juli-adapters.jar,catalina-jmx-remote.jar,catalina-ws.jar,tomcat-jdbc.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,jstl.jar,geronimo-spec-jaxrpc*.jar,wsdl4j*.jar,ant.jar,ant-junit*.jar,aspectj*.jar,jmx.jar,h2*.jar,hibernate*.jar,httpclient*.jar,jmx-tools.jar,jta*.jar,log4j*.jar,mail*.jar,slf4j*.jar,xercesImpl.jar,xmlParserAPIs.jar,xml-apis.jar,access-bridge-64.jar,dnsns.jar,jaccess.jar,ldapsec.jar,localedata.jar,sunjce_provider.jar,sunmscapi.jar,sunpkcs11.jar,jhall.jar,tools.jar,sunec.jar,zipfs.jar,gnome-java-bridge.jar,pulse-java.jar,apple_provider.jar,AppleScriptEngine.jar,CoreAudio.jar,dns_sd.jar,j3daudio.jar,j3dcore.jar,j3dutils.jar,jai_core.jar,jai_codec.jar,mlibwrapper_jai.jar,MRJToolkit.jar,vecmath.jar,junit.jar,junit-*.jar,ant-launcher.jar, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.tomcat.,org.apache.jasper., user.script=, java.naming.factory.url.pkgs=org.apache.naming, user.home=C:\Users\vvarm1, org.apache.catalina.startup.ContextConfig.jarsToSkip=, java.specification.vendor=Oracle Corporation, hibernate.hbm2ddl.auto=update, java.library.path=C:\Program Files\Java\jdk1.7.0_10\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\JetBrains\IntelliJ IDEA Community Edition 12.0.4\bin\..\.\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\ThinkPad\Bluetooth Software\;C:\Program Files\ThinkPad\Bluetooth Software\syswow64;c:\Program Files\Intel\WiFi\bin\;c:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files (x86)\Git\cmd;C:\Users\vvarm1\Documents\play-2.0.3;C:\Program Files\Java\jdk1.7.0_10\bin;C:\Program Files\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\QuickTime\QTSystem\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Java\jre6\bin;C:\Program Files\Apache Software Foundation\apache-maven-3.0.5\bin;c:\program files (x86)\jetbrains\intellij idea community edition 12.0.4\jre\jre\bin;., java.vendor.url=http://java.oracle.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, org.apache.catalina.startup.TldConfig.jarsToSkip=, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, common.loader=${catalina.base}/lib,${catalina.base}/lib/*.jar,${catalina.home}/lib,${catalina.home}/lib/*.jar, maven.home=C:\Program Files\Apache Software Foundation\apache-maven-3.0.5, java.runtime.name=Java(TM) SE Runtime Environment, java.class.path=C:\Program Files\Apache Software Foundation\apache-maven-3.0.5\boot\plexus-classworlds-2.4.jar;C:\Program Files (x86)\JetBrains\IntelliJ IDEA Community Edition 12.0.4\lib\idea_rt.jar, sun.java.command=com.intellij.rt.execution.application.AppMain org.codehaus.classworlds.Launcher --no-plugin-registry --fail-fast --strict-checksums --update-snapshots org.apache.tomcat.maven:tomcat7-maven-plugin:2.0:run, hibernate.bytecode.use_reflection_optimizer=false, idea.launcher.port=7533, java.vm.specification.name=Java Virtual Machine Specification, catalina.home=C:\Users\vvarm1\IdeaProjects\intelTrader\target\tomcat, java.vm.specification.version=1.7, sun.os.patch.level=Service Pack 1, sun.cpu.endian=little, java.io.tmpdir=C:\Users\vvarm1\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, server.loader=, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, java.ext.dirs=C:\Program Files\Java\jdk1.7.0_10\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=C:\Users\vvarm1\IdeaProjects\intelTrader, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding=UTF-8, hibernate.use_identifier_rollback=false, java.specification.version=1.7, hibernate.show_sql=true}
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Static SQL for entity: com.inteltrader.entity.Investment
 Version select: select INVESTMENT_ID from TRADER_DB.INVESTMENT where INVESTMENT_ID =?
 Snapshot select: select investment_.INVESTMENT_ID, investment_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_, investment_.currentPrice as currentP2_2_, investment_.quantity as quantity2_, investment_.INVESTMENT_SYMBOL as INVESTMENT4_2_ from TRADER_DB.INVESTMENT investment_ where investment_.INVESTMENT_ID=?
 Insert 0: insert into TRADER_DB.INVESTMENT (associatedPortfolio_PORTFOLIO_NAME, currentPrice, quantity, INVESTMENT_SYMBOL, INVESTMENT_ID) values (?, ?, ?, ?, ?)
 Update 0: update TRADER_DB.INVESTMENT set associatedPortfolio_PORTFOLIO_NAME=?, currentPrice=?, quantity=?, INVESTMENT_SYMBOL=? where INVESTMENT_ID=?
 Delete 0: delete from TRADER_DB.INVESTMENT where INVESTMENT_ID=?
 Identity insert: insert into TRADER_DB.INVESTMENT (associatedPortfolio_PORTFOLIO_NAME, currentPrice, quantity, INVESTMENT_SYMBOL) values (?, ?, ?, ?)
Static SQL for entity: com.inteltrader.entity.Instrument
 Version select: select SYMBOL_NAME from TRADER_DB.INSTRUMENT where SYMBOL_NAME =?
 Snapshot select: select instrument_.SYMBOL_NAME from TRADER_DB.INSTRUMENT instrument_ where instrument_.SYMBOL_NAME=?
 Insert 0: insert into TRADER_DB.INSTRUMENT (SYMBOL_NAME) values (?)
 Update 0: null
 Delete 0: delete from TRADER_DB.INSTRUMENT where SYMBOL_NAME=?
Static SQL for entity: com.inteltrader.entity.Portfolio
 Version select: select PORTFOLIO_NAME from TRADER_DB.PORTFOLIO where PORTFOLIO_NAME =?
 Snapshot select: select portfolio_.PORTFOLIO_NAME from TRADER_DB.PORTFOLIO portfolio_ where portfolio_.PORTFOLIO_NAME=?
 Insert 0: insert into TRADER_DB.PORTFOLIO (PORTFOLIO_NAME) values (?)
 Update 0: null
 Delete 0: delete from TRADER_DB.PORTFOLIO where PORTFOLIO_NAME=?
Static SQL for collection: com.inteltrader.entity.Instrument.priceList
 Row insert: insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
 Row update: update TRADER_DB.INSTRUMENT_PRICE set closePrice=?, highPrice=?, lastClosePrice=?, lowPrice=?, openPrice=?, priceId=?, timeStamp=?, totalTradedQuantity=? where SYMBOL_NAME=? and priceId=? and totalTradedQuantity=?
 Row delete: delete from TRADER_DB.INSTRUMENT_PRICE where SYMBOL_NAME=? and priceId=? and totalTradedQuantity=?
 One-shot delete: delete from TRADER_DB.INSTRUMENT_PRICE where SYMBOL_NAME=?
Static SQL for collection: com.inteltrader.entity.Investment.transactionsList
 Row insert: insert into TRADER_DB.INVESTMENT_TRANSACTION (INVESTMENT_ID, quantity, transactionId, transactionPrice) values (?, ?, ?, ?)
 Row update: update TRADER_DB.INVESTMENT_TRANSACTION set quantity=?, transactionId=?, transactionPrice=? where INVESTMENT_ID=? and quantity=? and transactionId=? and transactionPrice=?
 Row delete: delete from TRADER_DB.INVESTMENT_TRANSACTION where INVESTMENT_ID=? and quantity=? and transactionId=? and transactionPrice=?
 One-shot delete: delete from TRADER_DB.INVESTMENT_TRANSACTION where INVESTMENT_ID=?
Static SQL for collection: com.inteltrader.entity.Portfolio.investmentList
 Row insert: update TRADER_DB.INVESTMENT set associatedPortfolio_PORTFOLIO_NAME=? where INVESTMENT_ID=?
 Row delete: update TRADER_DB.INVESTMENT set associatedPortfolio_PORTFOLIO_NAME=null where associatedPortfolio_PORTFOLIO_NAME=? and INVESTMENT_ID=?
 One-shot delete: update TRADER_DB.INVESTMENT set associatedPortfolio_PORTFOLIO_NAME=null where associatedPortfolio_PORTFOLIO_NAME=?
Static select for entity com.inteltrader.entity.Instrument [NONE]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for entity com.inteltrader.entity.Instrument [READ]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for entity com.inteltrader.entity.Instrument [UPGRADE]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [UPGRADE_NOWAIT]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [FORCE]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [PESSIMISTIC_READ]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? lock in share mode
Static select for entity com.inteltrader.entity.Instrument [PESSIMISTIC_WRITE]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [PESSIMISTIC_FORCE_INCREMENT]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [OPTIMISTIC]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for entity com.inteltrader.entity.Instrument [OPTIMISTIC_FORCE_INCREMENT]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for action ACTION_MERGE on entity com.inteltrader.entity.Instrument: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for action ACTION_REFRESH on entity com.inteltrader.entity.Instrument: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for entity com.inteltrader.entity.Investment [NONE]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_1_, investment0_.currentPrice as currentP2_2_1_, investment0_.quantity as quantity2_1_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_1_, portfolio1_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.INVESTMENT investment0_ left outer join TRADER_DB.PORTFOLIO portfolio1_ on investment0_.associatedPortfolio_PORTFOLIO_NAME=portfolio1_.PORTFOLIO_NAME where investment0_.INVESTMENT_ID=?
Static select for entity com.inteltrader.entity.Investment [READ]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_1_, investment0_.currentPrice as currentP2_2_1_, investment0_.quantity as quantity2_1_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_1_, portfolio1_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.INVESTMENT investment0_ left outer join TRADER_DB.PORTFOLIO portfolio1_ on investment0_.associatedPortfolio_PORTFOLIO_NAME=portfolio1_.PORTFOLIO_NAME where investment0_.INVESTMENT_ID=?
Static select for entity com.inteltrader.entity.Investment [UPGRADE]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [UPGRADE_NOWAIT]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [FORCE]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [PESSIMISTIC_READ]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? lock in share mode
Static select for entity com.inteltrader.entity.Investment [PESSIMISTIC_WRITE]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [PESSIMISTIC_FORCE_INCREMENT]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [OPTIMISTIC]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=?
Static select for entity com.inteltrader.entity.Investment [OPTIMISTIC_FORCE_INCREMENT]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=?
Static select for action ACTION_MERGE on entity com.inteltrader.entity.Investment: select investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_1_, investment0_.currentPrice as currentP2_2_1_, investment0_.quantity as quantity2_1_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_1_, portfolio1_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.INVESTMENT investment0_ left outer join TRADER_DB.PORTFOLIO portfolio1_ on investment0_.associatedPortfolio_PORTFOLIO_NAME=portfolio1_.PORTFOLIO_NAME where investment0_.INVESTMENT_ID=?
Static select for action ACTION_REFRESH on entity com.inteltrader.entity.Investment: select investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_1_, investment0_.currentPrice as currentP2_2_1_, investment0_.quantity as quantity2_1_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_1_, portfolio1_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.INVESTMENT investment0_ left outer join TRADER_DB.PORTFOLIO portfolio1_ on investment0_.associatedPortfolio_PORTFOLIO_NAME=portfolio1_.PORTFOLIO_NAME where investment0_.INVESTMENT_ID=?
Static select for entity com.inteltrader.entity.Portfolio [NONE]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Static select for entity com.inteltrader.entity.Portfolio [READ]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Static select for entity com.inteltrader.entity.Portfolio [UPGRADE]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [UPGRADE_NOWAIT]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [FORCE]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [PESSIMISTIC_READ]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? lock in share mode
Static select for entity com.inteltrader.entity.Portfolio [PESSIMISTIC_WRITE]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [PESSIMISTIC_FORCE_INCREMENT]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [OPTIMISTIC]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=?
Static select for entity com.inteltrader.entity.Portfolio [OPTIMISTIC_FORCE_INCREMENT]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=?
Static select for action ACTION_MERGE on entity com.inteltrader.entity.Portfolio: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Static select for action ACTION_REFRESH on entity com.inteltrader.entity.Portfolio: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Static select for collection com.inteltrader.entity.Instrument.priceList: select pricelist0_.SYMBOL_NAME as SYMBOL1_0_0_, pricelist0_.closePrice as closePrice1_0_, pricelist0_.highPrice as highPrice1_0_, pricelist0_.lastClosePrice as lastClos4_1_0_, pricelist0_.lowPrice as lowPrice1_0_, pricelist0_.openPrice as openPrice1_0_, pricelist0_.priceId as priceId1_0_, pricelist0_.timeStamp as timeStamp1_0_, pricelist0_.totalTradedQuantity as totalTra9_1_0_ from TRADER_DB.INSTRUMENT_PRICE pricelist0_ where pricelist0_.SYMBOL_NAME=?
Static select for one-to-many com.inteltrader.entity.Portfolio.investmentList: select investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_1_, investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.associatedPortfolio_PORTFOLIO_NAME=?
Static select for collection com.inteltrader.entity.Investment.transactionsList: select transactio0_.INVESTMENT_ID as INVESTMENT1_2_0_, transactio0_.quantity as quantity3_0_, transactio0_.transactionId as transact3_3_0_, transactio0_.transactionPrice as transact4_3_0_ from TRADER_DB.INVESTMENT_TRANSACTION transactio0_ where transactio0_.INVESTMENT_ID=?
Registering SessionFactory: e5082f21-5cf6-4282-b50b-12e291d54e8d (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Instantiated session factory
HHH000228: Running hbm2ddl schema update
HHH000102: Fetching database metadata
HHH000396: Updating schema
Processing hbm.xml files
Process annotated classes
Processing fk mappings (*ToOne and JoinedSubclass)
Processing extends queue
Processing extends queue
Processing collection mappings
Processing native query and ResultSetMapping mappings
Processing association property references
Creating tables' unique integer identifiers
Processing foreign key constraints
Resolving reference to class: com.inteltrader.entity.Instrument
Resolving reference to class: com.inteltrader.entity.Portfolio
Resolving reference to class: com.inteltrader.entity.Investment
HHH000261: Table found: TRADER_DB.instrument
HHH000037: Columns: [symbol_name]
HHH000108: Foreign keys: []
HHH000126: Indexes: [primary]
HHH000261: Table found: TRADER_DB.instrument_price
HHH000037: Columns: [totaltradedquantity, timestamp, priceid, lastcloseprice, highprice, symbol_name, openprice, closeprice, lowprice]
HHH000108: Foreign keys: [fk3189a2d153ed548d]
HHH000126: Indexes: [fk3189a2d153ed548d]
HHH000261: Table found: TRADER_DB.investment
HHH000037: Columns: [investment_id, associatedportfolio_portfolio_name, currentprice, quantity, investment_symbol]
HHH000108: Foreign keys: [fk8fe41ed3c804d4f3]
HHH000126: Indexes: [fk8fe41ed3c804d4f3, primary]
HHH000261: Table found: TRADER_DB.investment_transaction
HHH000037: Columns: [transactionprice, investment_id, transactionid, quantity]
HHH000108: Foreign keys: [fka5863f52914590ae]
HHH000126: Indexes: [fka5863f52914590ae]
HHH000261: Table found: TRADER_DB.portfolio
HHH000037: Columns: [portfolio_name]
HHH000108: Foreign keys: []
HHH000126: Indexes: [primary]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
HHH000232: Schema update complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Statistics initialized [enabled=false]
Registering EntityManagerFactory: intelTrader 
HHH000436: Entity manager factory name (intelTrader) is already registered.  If entity manager will be clustered or passivated, specify a unique value for property 'hibernate.ejb.entitymanager_factory_name'
Finished creating instance of bean 'entityManagerFactory'
Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@3d892152: defining beans [org.springframework.context.annotation.internalAsyncAnnotationProcessor,org.springframework.context.annotation.internalScheduledAnnotationProcessor,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0,org.springframework.web.servlet.view.InternalResourceViewResolver#0,instrumentDao,portfolioDao,instrumentService,portfolioService,entityManagerFactory,transactionManager,instrument,investment,portfolio,instrumentServiceRest,portfolioServiceRest,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor]; parent: org.springframework.beans.factory.support.DefaultListableBeanFactory@62b585b9
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Creating instance of bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0' to allow for resolving potential circular references
Creating instance of bean '(inner bean)'
Creating shared instance of singleton bean 'transactionManager'
Creating instance of bean 'transactionManager'
Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
Returning cached instance of singleton bean 'entityManagerFactory'
Invoking afterPropertiesSet() on bean with name 'transactionManager'
Finished creating instance of bean 'transactionManager'
Creating instance of bean '(inner bean)'
Finished creating instance of bean '(inner bean)'
Invoking afterPropertiesSet() on bean with name '(inner bean)'
Finished creating instance of bean '(inner bean)'
Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Creating shared instance of singleton bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Creating instance of bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Eagerly caching bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Creating shared instance of singleton bean 'instrumentDao'
Creating instance of bean 'instrumentDao'
Eagerly caching bean 'instrumentDao' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'instrumentDao'
Creating shared instance of singleton bean 'portfolioDao'
Creating instance of bean 'portfolioDao'
Eagerly caching bean 'portfolioDao' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'portfolioDao'
Creating shared instance of singleton bean 'instrumentService'
Creating instance of bean 'instrumentService'
Registered injected element on class [com.inteltrader.service.InstrumentServiceImpl]: PersistenceElement for javax.persistence.EntityManagerFactory com.inteltrader.service.InstrumentServiceImpl.entityManagerFactory
Registered injected element on class [com.inteltrader.service.InstrumentServiceImpl]: AutowiredFieldElement for private com.inteltrader.dao.IInstrumentDao com.inteltrader.service.InstrumentServiceImpl.instrumentDao
Registered injected element on class [com.inteltrader.service.InstrumentServiceImpl]: AutowiredFieldElement for private com.inteltrader.service.PortfolioService com.inteltrader.service.InstrumentServiceImpl.portfolioService
Eagerly caching bean 'instrumentService' to allow for resolving potential circular references
Processing injected method of bean 'instrumentService': PersistenceElement for javax.persistence.EntityManagerFactory com.inteltrader.service.InstrumentServiceImpl.entityManagerFactory
Returning cached instance of singleton bean 'entityManagerFactory'
Processing injected method of bean 'instrumentService': AutowiredFieldElement for private com.inteltrader.dao.IInstrumentDao com.inteltrader.service.InstrumentServiceImpl.instrumentDao
Returning cached instance of singleton bean 'instrumentDao'
Autowiring by type from bean name 'instrumentService' to bean named 'instrumentDao'
Processing injected method of bean 'instrumentService': AutowiredFieldElement for private com.inteltrader.service.PortfolioService com.inteltrader.service.InstrumentServiceImpl.portfolioService
Creating shared instance of singleton bean 'portfolioService'
Creating instance of bean 'portfolioService'
Registered injected element on class [com.inteltrader.service.PortfolioServiceImpl]: PersistenceElement for private javax.persistence.EntityManagerFactory com.inteltrader.service.PortfolioServiceImpl.entityManagerFactory
Registered injected element on class [com.inteltrader.service.PortfolioServiceImpl]: AutowiredFieldElement for private com.inteltrader.dao.IPortfolioDao com.inteltrader.service.PortfolioServiceImpl.portfolioDao
Eagerly caching bean 'portfolioService' to allow for resolving potential circular references
Processing injected method of bean 'portfolioService': PersistenceElement for private javax.persistence.EntityManagerFactory com.inteltrader.service.PortfolioServiceImpl.entityManagerFactory
Returning cached instance of singleton bean 'entityManagerFactory'
Processing injected method of bean 'portfolioService': AutowiredFieldElement for private com.inteltrader.dao.IPortfolioDao com.inteltrader.service.PortfolioServiceImpl.portfolioDao
Returning cached instance of singleton bean 'portfolioDao'
Autowiring by type from bean name 'portfolioService' to bean named 'portfolioDao'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'portfolioService'
Autowiring by type from bean name 'instrumentService' to bean named 'portfolioService'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'instrumentService'
Returning cached instance of singleton bean 'portfolioService'
Returning cached instance of singleton bean 'entityManagerFactory'
Returning cached instance of singleton bean 'transactionManager'
Creating shared instance of singleton bean 'instrument'
Creating instance of bean 'instrument'
Eagerly caching bean 'instrument' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'instrument'
Creating shared instance of singleton bean 'investment'
Creating instance of bean 'investment'
Eagerly caching bean 'investment' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'investment'
Creating shared instance of singleton bean 'portfolio'
Creating instance of bean 'portfolio'
Eagerly caching bean 'portfolio' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'portfolio'
Creating shared instance of singleton bean 'instrumentServiceRest'
Creating instance of bean 'instrumentServiceRest'
Registered injected element on class [com.inteltrader.rest.InstrumentServiceRest]: AutowiredFieldElement for private com.inteltrader.service.InstrumentService com.inteltrader.rest.InstrumentServiceRest.instrumentService
Eagerly caching bean 'instrumentServiceRest' to allow for resolving potential circular references
Processing injected method of bean 'instrumentServiceRest': AutowiredFieldElement for private com.inteltrader.service.InstrumentService com.inteltrader.rest.InstrumentServiceRest.instrumentService
Returning cached instance of singleton bean 'instrumentService'
Autowiring by type from bean name 'instrumentServiceRest' to bean named 'instrumentService'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'instrumentServiceRest'
Creating shared instance of singleton bean 'portfolioServiceRest'
Creating instance of bean 'portfolioServiceRest'
Registered injected element on class [com.inteltrader.rest.PortfolioServiceRest]: AutowiredFieldElement for private com.inteltrader.service.PortfolioService com.inteltrader.rest.PortfolioServiceRest.portfolioService
Eagerly caching bean 'portfolioServiceRest' to allow for resolving potential circular references
Processing injected method of bean 'portfolioServiceRest': AutowiredFieldElement for private com.inteltrader.service.PortfolioService com.inteltrader.rest.PortfolioServiceRest.portfolioService
Returning cached instance of singleton bean 'portfolioService'
Autowiring by type from bean name 'portfolioServiceRest' to bean named 'portfolioService'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'portfolioServiceRest'
Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@1417f17e]
Returning cached instance of singleton bean 'lifecycleProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Unable to locate MultipartResolver with name 'multipartResolver': no multipart request handling provided
Creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Unable to locate LocaleResolver with name 'localeResolver': using default [org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver@c22e954]
Creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Unable to locate ThemeResolver with name 'themeResolver': using default [org.springframework.web.servlet.theme.FixedThemeResolver@757c21b8]
Creating instance of bean 'org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping'
Looking for URL mappings in application context: WebApplicationContext for namespace 'appServlet-servlet': startup date [Fri Apr 19 17:29:37 IST 2013]; parent: Root WebApplicationContext
Rejected bean name 'org.springframework.context.annotation.internalAsyncAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalScheduledAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalRequiredAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalCommonAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.aop.config.internalAutoProxyCreator': no URL paths identified
Rejected bean name 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0': no URL paths identified
Rejected bean name 'org.springframework.web.servlet.view.InternalResourceViewResolver#0': no URL paths identified
Rejected bean name 'instrumentDao': no URL paths identified
Rejected bean name 'portfolioDao': no URL paths identified
Rejected bean name 'instrumentService': no URL paths identified
Rejected bean name 'portfolioService': no URL paths identified
Rejected bean name 'entityManagerFactory': no URL paths identified
Rejected bean name 'transactionManager': no URL paths identified
Rejected bean name 'instrument': no URL paths identified
Rejected bean name 'investment': no URL paths identified
Rejected bean name 'portfolio': no URL paths identified
Rejected bean name 'instrumentServiceRest': no URL paths identified
Rejected bean name 'portfolioServiceRest': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor': no URL paths identified
Rejected bean name 'environment': no URL paths identified
Rejected bean name 'systemProperties': no URL paths identified
Rejected bean name 'systemEnvironment': no URL paths identified
Rejected bean name 'servletConfig': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry': no URL paths identified
Rejected bean name 'messageSource': no URL paths identified
Rejected bean name 'applicationEventMulticaster': no URL paths identified
Rejected bean name 'lifecycleProcessor': no URL paths identified
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping'
Creating instance of bean 'org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping'
Looking for URL mappings in application context: WebApplicationContext for namespace 'appServlet-servlet': startup date [Fri Apr 19 17:29:37 IST 2013]; parent: Root WebApplicationContext
Rejected bean name 'org.springframework.context.annotation.internalAsyncAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalScheduledAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalRequiredAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalCommonAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.aop.config.internalAutoProxyCreator': no URL paths identified
Rejected bean name 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0': no URL paths identified
Rejected bean name 'org.springframework.web.servlet.view.InternalResourceViewResolver#0': no URL paths identified
Rejected bean name 'instrumentDao': no URL paths identified
Rejected bean name 'portfolioDao': no URL paths identified
Rejected bean name 'instrumentService': no URL paths identified
Rejected bean name 'portfolioService': no URL paths identified
Rejected bean name 'entityManagerFactory': no URL paths identified
Rejected bean name 'transactionManager': no URL paths identified
Rejected bean name 'instrument': no URL paths identified
Rejected bean name 'investment': no URL paths identified
Rejected bean name 'portfolio': no URL paths identified
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/create/{symbol}] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/create/{symbol}.*] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/create/{symbol}/] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/update/{portfolioName}] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/update/{portfolioName}.*] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/update/{portfolioName}/] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/load/{symbol}] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/load/{symbol}.*] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/load/{symbol}/] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/create/{portfolioName}] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/create/{portfolioName}.*] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/create/{portfolioName}/] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/load/{portfolioName}] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/load/{portfolioName}.*] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/load/{portfolioName}/] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/addInvestment/{portfolioName}/{symbolName}] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/addInvestment/{portfolioName}/{symbolName}.*] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/addInvestment/{portfolioName}/{symbolName}/] onto handler 'portfolioServiceRest'
Rejected bean name 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor': no URL paths identified
Rejected bean name 'environment': no URL paths identified
Rejected bean name 'systemProperties': no URL paths identified
Rejected bean name 'systemEnvironment': no URL paths identified
Rejected bean name 'servletConfig': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry': no URL paths identified
Rejected bean name 'messageSource': no URL paths identified
Rejected bean name 'applicationEventMulticaster': no URL paths identified
Rejected bean name 'lifecycleProcessor': no URL paths identified
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping'
No HandlerMappings found in servlet 'appServlet': using default
Creating instance of bean 'org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter'
Creating instance of bean 'org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter'
Creating instance of bean 'org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter'
No HandlerAdapters found in servlet 'appServlet': using default
Creating instance of bean 'org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerExceptionResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerExceptionResolver'
Creating instance of bean 'org.springframework.web.servlet.mvc.annotation.ResponseStatusExceptionResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.annotation.ResponseStatusExceptionResolver'
Creating instance of bean 'org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver'
No HandlerExceptionResolvers found in servlet 'appServlet': using default
Creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Unable to locate RequestToViewNameTranslator with name 'viewNameTranslator': using default [org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@4b62f99b]
Returning cached instance of singleton bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Returning cached instance of singleton bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Unable to locate FlashMapManager with name 'flashMapManager': using default [org.springframework.web.servlet.support.SessionFlashMapManager@15f3b8c9]
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Searching for key 'spring.liveBeansView.mbeanDomain' in [servletConfigInitParams]
Searching for key 'spring.liveBeansView.mbeanDomain' in [servletContextInitParams]
Searching for key 'spring.liveBeansView.mbeanDomain' in [jndiProperties]
Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain]
Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException: Name [spring.liveBeansView.mbeanDomain] is not bound in this Context. Unable to find [spring.liveBeansView.mbeanDomain].
Looking up JNDI object with name [spring.liveBeansView.mbeanDomain]
JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: Name [spring.liveBeansView.mbeanDomain] is not bound in this Context. Unable to find [spring.liveBeansView.mbeanDomain].. Returning null.
Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
Published WebApplicationContext of servlet 'appServlet' as ServletContext attribute with name [org.springframework.web.servlet.FrameworkServlet.CONTEXT.appServlet]
FrameworkServlet 'appServlet': initialization completed in 534 ms
Servlet 'appServlet' configured successfully
DispatcherServlet with name 'appServlet' processing GET request for [/portfolio/create/myFirstTime]
Matching patterns for request [/portfolio/create/myFirstTime] are [/portfolio/create/{portfolioName}]
URI Template variables for request [/portfolio/create/myFirstTime] are {portfolioName=myFirstTime}
Mapping [/portfolio/create/myFirstTime] to HandlerExecutionChain with handler [com.inteltrader.rest.PortfolioServiceRest@6b750c84] and 2 interceptors
Last-Modified value for [/portfolio/create/myFirstTime] is: -1
Invoking request handler method: public org.springframework.http.ResponseEntity com.inteltrader.rest.PortfolioServiceRest.createPortfolio(java.lang.String,javax.servlet.http.HttpServletRequest)
begin
Obtaining JDBC connection
Obtained JDBC connection
initial autocommit status: true
disabling autocommit
Generated identifier: myFirstTime, using strategy: org.hibernate.id.Assigned
committing
Processing flush-time cascades
Dirty checking collections
Collection found: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime], was: [<unreferenced>] (initialized)
Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
Listing entities:
com.inteltrader.entity.Portfolio{portfolioName=myFirstTime, investmentList=[]}
insert into TRADER_DB.PORTFOLIO (PORTFOLIO_NAME) values (?)
committed JDBC Connection
re-enabling autocommit
Written [SUCCESS] as "text/html" using [org.springframework.http.converter.StringHttpMessageConverter@50316960]
Null ModelAndView returned to DispatcherServlet with name 'appServlet': assuming HandlerAdapter completed request handling
Successfully completed request
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
DispatcherServlet with name 'appServlet' processing GET request for [/portfolio/addInvestment/myFirstTime/AMTEKAUTO]
Matching patterns for request [/portfolio/addInvestment/myFirstTime/AMTEKAUTO] are [/portfolio/addInvestment/{portfolioName}/{symbolName}]
URI Template variables for request [/portfolio/addInvestment/myFirstTime/AMTEKAUTO] are {portfolioName=myFirstTime, symbolName=AMTEKAUTO}
Mapping [/portfolio/addInvestment/myFirstTime/AMTEKAUTO] to HandlerExecutionChain with handler [com.inteltrader.rest.PortfolioServiceRest@6b750c84] and 2 interceptors
Last-Modified value for [/portfolio/addInvestment/myFirstTime/AMTEKAUTO] is: -1
Invoking request handler method: public org.springframework.http.ResponseEntity com.inteltrader.rest.PortfolioServiceRest.addInvestment(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
begin
Obtaining JDBC connection
Opening new JDBC connection
Created connection to: jdbc:mysql://localhost:3306/TRADER_DB, Isolation Level: 4
Obtained JDBC connection
initial autocommit status: true
disabling autocommit
Loading entity: [com.inteltrader.entity.Portfolio#myFirstTime]
select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Result set row: 0
Result row: null, EntityKey[com.inteltrader.entity.Portfolio#myFirstTime]
Result set contains (possibly empty) collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Resolving associations for [com.inteltrader.entity.Portfolio#myFirstTime]
Done materializing entity [com.inteltrader.entity.Portfolio#myFirstTime]
1 collections were found in result set for role: com.inteltrader.entity.Portfolio.investmentList
Collection fully initialized: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
1 collections initialized for role: com.inteltrader.entity.Portfolio.investmentList
Done entity load
Executing identity-insert immediately
insert into TRADER_DB.INVESTMENT (associatedPortfolio_PORTFOLIO_NAME, currentPrice, quantity, INVESTMENT_SYMBOL) values (?, ?, ?, ?)
Natively generated identity: 1
committing
Processing flush-time cascades
Dirty checking collections
Collection dirty: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Collection found: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime], was: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime] (initialized)
Collection found: [com.inteltrader.entity.Investment.transactionsList#1], was: [<unreferenced>] (initialized)
Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
Flushed: 1 (re)creations, 1 updates, 0 removals to 2 collections
Listing entities:
com.inteltrader.entity.Investment{investmentId=1, quantity=null, currentPrice=null, symbolName=AMTEKAUTO, associatedPortfolio=com.inteltrader.entity.Portfolio#myFirstTime, transactionsList=[]}
com.inteltrader.entity.Portfolio{portfolioName=myFirstTime, investmentList=[com.inteltrader.entity.Investment#1]}
Inserting collection: [com.inteltrader.entity.Investment.transactionsList#1]
Collection was empty
committed JDBC Connection
re-enabling autocommit
Written [SUCCESS] as "text/html" using [org.springframework.http.converter.StringHttpMessageConverter@50316960]
Null ModelAndView returned to DispatcherServlet with name 'appServlet': assuming HandlerAdapter completed request handling
Successfully completed request
DispatcherServlet with name 'appServlet' processing GET request for [/portfolio/load/MyFirstTime]
Matching patterns for request [/portfolio/load/MyFirstTime] are [/portfolio/load/{portfolioName}]
URI Template variables for request [/portfolio/load/MyFirstTime] are {portfolioName=MyFirstTime}
Mapping [/portfolio/load/MyFirstTime] to HandlerExecutionChain with handler [com.inteltrader.rest.PortfolioServiceRest@6b750c84] and 2 interceptors
Last-Modified value for [/portfolio/load/MyFirstTime] is: -1
Invoking request handler method: public org.springframework.http.ResponseEntity com.inteltrader.rest.PortfolioServiceRest.loadInstrument(java.lang.String,javax.servlet.http.HttpServletRequest)
Loading entity: [com.inteltrader.entity.Portfolio#MyFirstTime]
Obtaining JDBC connection
Opening new JDBC connection
Created connection to: jdbc:mysql://localhost:3306/TRADER_DB, Isolation Level: 4
Obtained JDBC connection
select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Result set row: 0
Result row: EntityKey[com.inteltrader.entity.Investment#1], EntityKey[com.inteltrader.entity.Portfolio#MyFirstTime]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Resolving associations for [com.inteltrader.entity.Investment#1]
Loading entity: [com.inteltrader.entity.Portfolio#myFirstTime]
select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_4_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Result set row: 0
Result row: EntityKey[com.inteltrader.entity.Investment#1], EntityKey[com.inteltrader.entity.Portfolio#myFirstTime]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Resolving associations for [com.inteltrader.entity.Portfolio#myFirstTime]
Done materializing entity [com.inteltrader.entity.Portfolio#myFirstTime]
No collections were found in result set for role: com.inteltrader.entity.Portfolio.investmentList
Done entity load
Done materializing entity [com.inteltrader.entity.Investment#1]
Resolving associations for [com.inteltrader.entity.Portfolio#MyFirstTime]
Done materializing entity [com.inteltrader.entity.Portfolio#MyFirstTime]
1 collections were found in result set for role: com.inteltrader.entity.Portfolio.investmentList
Collection fully initialized: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
1 collections initialized for role: com.inteltrader.entity.Portfolio.investmentList
Loading collection: [com.inteltrader.entity.Portfolio.investmentList#MyFirstTime]
select investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_4_1_, investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.associatedPortfolio_PORTFOLIO_NAME=?
Result set contains (possibly empty) collection: [com.inteltrader.entity.Portfolio.investmentList#MyFirstTime]
Result set row: 0
Result row: EntityKey[com.inteltrader.entity.Investment#1]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
1 collections were found in result set for role: com.inteltrader.entity.Portfolio.investmentList
Collection fully initialized: [com.inteltrader.entity.Portfolio.investmentList#MyFirstTime]
1 collections initialized for role: com.inteltrader.entity.Portfolio.investmentList
Done loading collection
Done entity load
Written [{"portfolioName":"MyFirstTime","investmentList":[]}] as "text/html" using [org.springframework.http.converter.StringHttpMessageConverter@50316960]
Null ModelAndView returned to DispatcherServlet with name 'appServlet': assuming HandlerAdapter completed request handling
Successfully completed request
Initializing servlet 'appServlet'
Initializing new StandardServletEnvironment
Adding [servletConfigInitParams] PropertySource with lowest search precedence
Adding [servletContextInitParams] PropertySource with lowest search precedence
Adding [jndiProperties] PropertySource with lowest search precedence
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment]
FrameworkServlet 'appServlet': initialization started
Servlet with name 'appServlet' will try to create custom WebApplicationContext context of class 'org.springframework.web.context.support.XmlWebApplicationContext', using parent context [Root WebApplicationContext: startup date [Fri Apr 19 17:35:28 IST 2013]; root of context hierarchy]
Searching for key 'spring.profiles.active' in [servletConfigInitParams]
Searching for key 'spring.profiles.active' in [servletContextInitParams]
Searching for key 'spring.profiles.active' in [jndiProperties]
Looking up JNDI object with name [java:comp/env/spring.profiles.active]
Converted JNDI name [java:comp/env/spring.profiles.active] not found - trying original name [spring.profiles.active]. javax.naming.NameNotFoundException: Name [spring.profiles.active] is not bound in this Context. Unable to find [spring.profiles.active].
Looking up JNDI object with name [spring.profiles.active]
JNDI lookup for name [spring.profiles.active] threw NamingException with message: Name [spring.profiles.active] is not bound in this Context. Unable to find [spring.profiles.active].. Returning null.
Searching for key 'spring.profiles.active' in [systemProperties]
Searching for key 'spring.profiles.active' in [systemEnvironment]
Could not find key 'spring.profiles.active' in any property source. Returning [null]
Searching for key 'spring.profiles.default' in [servletConfigInitParams]
Searching for key 'spring.profiles.default' in [servletContextInitParams]
Searching for key 'spring.profiles.default' in [jndiProperties]
Looking up JNDI object with name [java:comp/env/spring.profiles.default]
Converted JNDI name [java:comp/env/spring.profiles.default] not found - trying original name [spring.profiles.default]. javax.naming.NameNotFoundException: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].
Looking up JNDI object with name [spring.profiles.default]
JNDI lookup for name [spring.profiles.default] threw NamingException with message: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].. Returning null.
Searching for key 'spring.profiles.default' in [systemProperties]
Searching for key 'spring.profiles.default' in [systemEnvironment]
Could not find key 'spring.profiles.default' in any property source. Returning [null]
Searching for key 'spring.profiles.default' in [servletConfigInitParams]
Searching for key 'spring.profiles.default' in [servletContextInitParams]
Searching for key 'spring.profiles.default' in [jndiProperties]
Looking up JNDI object with name [java:comp/env/spring.profiles.default]
Converted JNDI name [java:comp/env/spring.profiles.default] not found - trying original name [spring.profiles.default]. javax.naming.NameNotFoundException: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].
Looking up JNDI object with name [spring.profiles.default]
JNDI lookup for name [spring.profiles.default] threw NamingException with message: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].. Returning null.
Searching for key 'spring.profiles.default' in [systemProperties]
Searching for key 'spring.profiles.default' in [systemEnvironment]
Could not find key 'spring.profiles.default' in any property source. Returning [null]
Replacing [servletContextInitParams] PropertySource with [servletContextInitParams]
Replacing [servletConfigInitParams] PropertySource with [servletConfigInitParams]
Refreshing WebApplicationContext for namespace 'appServlet-servlet': startup date [Fri Apr 19 17:35:33 IST 2013]; parent: Root WebApplicationContext
Initializing new StandardEnvironment
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
Initializing new StandardEnvironment
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
Loading schema mappings from [META-INF/spring.schemas]
Loaded schema mappings: {http://www.springframework.org/schema/data/jpa/spring-jpa-1.2.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.2.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.1.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.1.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.5.xsd=org/springframework/data/repository/config/spring-repository-1.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.0.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.3.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.4.xsd=org/springframework/data/repository/config/spring-repository-1.4.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.3.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/data/repository/spring-repository.xsd=org/springframework/data/repository/config/spring-repository-1.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.0.xsd=org/springframework/data/repository/config/spring-repository-1.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.1.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.1.xsd
Found XML schema [http://www.springframework.org/schema/task/spring-task-3.0.xsd] in classpath: org/springframework/scheduling/config/spring-task-3.0.xsd
Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd
Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd
Found XML schema [http://www.springframework.org/schema/tx/spring-tx-3.1.xsd] in classpath: org/springframework/transaction/config/spring-tx-3.1.xsd
Loading bean definitions
Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/data/repository=org.springframework.data.repository.config.RepositoryNameSpaceHandler, http://www.springframework.org/schema/data/jpa=org.springframework.data.jpa.repository.config.JpaRepositoryNameSpaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
Neither XML 'id' nor 'name' specified - using generated bean name [org.springframework.web.servlet.view.InternalResourceViewResolver#0]
Neither XML 'id' nor 'name' specified - using generated bean name [org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver#57172439]
Initializing new StandardEnvironment
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
Looking for matching resources in directory tree [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Resolved location pattern [classpath*:com/inteltrader/**/*.class] to resources [file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\Advice.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\FIFOList.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\InstrumentVo.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\Strategies.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\Strategy.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\StrategyMACD.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao\IInstrumentDao.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao\InstrumentDao.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao\IPortfolioDao.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao\PortfolioDao.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Instrument.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Investment.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Portfolio.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Price.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Transactions.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest\InstrumentServiceRest.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest\PortfolioServiceRest.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\AnalyserService.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\CronService.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\InstrumentService.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\InstrumentServiceImpl.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\PortfolioService.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\PortfolioServiceImpl.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util\DownloadZip.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util\ExtractZipFile.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util\ReadPriceCsv.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util\RestCodes.class]]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Instrument.class]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Investment.class]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Portfolio.class]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest\InstrumentServiceRest.class]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest\PortfolioServiceRest.class]
Loaded 21 bean definitions from location pattern [/WEB-INF/applicationContext.xml]
Bean factory for WebApplicationContext for namespace 'appServlet-servlet': org.springframework.beans.factory.support.DefaultListableBeanFactory@1e18aafb: defining beans [org.springframework.context.annotation.internalAsyncAnnotationProcessor,org.springframework.context.annotation.internalScheduledAnnotationProcessor,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0,org.springframework.web.servlet.view.InternalResourceViewResolver#0,instrumentDao,portfolioDao,instrumentService,portfolioService,entityManagerFactory,transactionManager,instrument,investment,portfolio,instrumentServiceRest,portfolioServiceRest]; parent: org.springframework.beans.factory.support.DefaultListableBeanFactory@3700da8e
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@50e2e88f]
Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@61122dc5]
Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.DelegatingThemeSource@707b124c]
Creating shared instance of singleton bean 'entityManagerFactory'
Creating instance of bean 'entityManagerFactory'
Eagerly caching bean 'entityManagerFactory' to allow for resolving potential circular references
Creating instance of bean 'org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver#57172439'
Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Creating instance of bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0' to allow for resolving potential circular references
Creating instance of bean '(inner bean)'
Creating shared instance of singleton bean 'transactionManager'
Creating instance of bean 'transactionManager'
Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
Returning eagerly cached instance of singleton bean 'entityManagerFactory' that is not fully initialized yet - a consequence of a circular reference
Ignoring currently created advisor 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0': Error creating bean with name 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0': Cannot create inner bean '(inner bean)' of type [org.springframework.transaction.interceptor.TransactionInterceptor] while setting bean property 'transactionInterceptor'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)': Cannot resolve reference to bean 'transactionManager' while setting bean property 'transactionManager'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'transactionManager' defined in ServletContext resource [/WEB-INF/applicationContext.xml]: Cannot resolve reference to bean 'entityManagerFactory' while setting bean property 'entityManagerFactory'; nested exception is org.springframework.beans.factory.BeanCurrentlyInCreationException: Error creating bean with name 'entityManagerFactory': FactoryBean which is currently in creation returned null from getObject
Finished creating instance of bean 'org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver#57172439'
Invoking afterPropertiesSet() on bean with name 'entityManagerFactory'
Building JPA container EntityManagerFactory for persistence unit 'intelTrader'
Adding type registration boolean -> org.hibernate.type.BooleanType@21f279b6
Adding type registration boolean -> org.hibernate.type.BooleanType@21f279b6
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@21f279b6
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4c7cd76a
Adding type registration true_false -> org.hibernate.type.TrueFalseType@53eaf4b3
Adding type registration yes_no -> org.hibernate.type.YesNoType@6817dd2
Adding type registration byte -> org.hibernate.type.ByteType@19aa4d78
Adding type registration byte -> org.hibernate.type.ByteType@19aa4d78
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@19aa4d78
Adding type registration character -> org.hibernate.type.CharacterType@1766cb62
Adding type registration char -> org.hibernate.type.CharacterType@1766cb62
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1766cb62
Adding type registration short -> org.hibernate.type.ShortType@1800c4b9
Adding type registration short -> org.hibernate.type.ShortType@1800c4b9
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1800c4b9
Adding type registration integer -> org.hibernate.type.IntegerType@623cb8f1
Adding type registration int -> org.hibernate.type.IntegerType@623cb8f1
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@623cb8f1
Adding type registration long -> org.hibernate.type.LongType@feea070
Adding type registration long -> org.hibernate.type.LongType@feea070
Adding type registration java.lang.Long -> org.hibernate.type.LongType@feea070
Adding type registration float -> org.hibernate.type.FloatType@1716f81a
Adding type registration float -> org.hibernate.type.FloatType@1716f81a
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1716f81a
Adding type registration double -> org.hibernate.type.DoubleType@5a14be8c
Adding type registration double -> org.hibernate.type.DoubleType@5a14be8c
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5a14be8c
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@36abf67f
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@36abf67f
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@22405dd6
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@22405dd6
Adding type registration string -> org.hibernate.type.StringType@30627bfc
Adding type registration java.lang.String -> org.hibernate.type.StringType@30627bfc
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6d54430d
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@18e8cce2
Adding type registration url -> org.hibernate.type.UrlType@722413fe
Adding type registration java.net.URL -> org.hibernate.type.UrlType@722413fe
Adding type registration date -> org.hibernate.type.DateType@65b34581
Adding type registration java.sql.Date -> org.hibernate.type.DateType@65b34581
Adding type registration time -> org.hibernate.type.TimeType@19fed8d0
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@19fed8d0
Adding type registration timestamp -> org.hibernate.type.TimestampType@11bae008
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@11bae008
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@11bae008
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@56ad57ee
Adding type registration calendar -> org.hibernate.type.CalendarType@3c14ea1f
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3c14ea1f
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3c14ea1f
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7fe15274
Adding type registration locale -> org.hibernate.type.LocaleType@1b565e71
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1b565e71
Adding type registration currency -> org.hibernate.type.CurrencyType@5d8a989a
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5d8a989a
Adding type registration timezone -> org.hibernate.type.TimeZoneType@604b0e7b
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@604b0e7b
Adding type registration class -> org.hibernate.type.ClassType@516e1c7c
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@516e1c7c
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@238661f8
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@238661f8
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3f3e10bc
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@13f7c0ee
Adding type registration binary -> org.hibernate.type.BinaryType@63c1ab8d
Adding type registration byte[] -> org.hibernate.type.BinaryType@63c1ab8d
Adding type registration [B -> org.hibernate.type.BinaryType@63c1ab8d
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@64d7dd22
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@64d7dd22
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@64d7dd22
Adding type registration image -> org.hibernate.type.ImageType@a6bf2c7
Adding type registration characters -> org.hibernate.type.CharArrayType@1717b667
Adding type registration char[] -> org.hibernate.type.CharArrayType@1717b667
Adding type registration [C -> org.hibernate.type.CharArrayType@1717b667
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@631a1d06
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@631a1d06
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@631a1d06
Adding type registration text -> org.hibernate.type.TextType@75c81693
Adding type registration ntext -> org.hibernate.type.NTextType@46cc0786
Adding type registration blob -> org.hibernate.type.BlobType@1eb605e7
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1eb605e7
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@443ac126
Adding type registration clob -> org.hibernate.type.ClobType@52732e26
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@52732e26
Adding type registration nclob -> org.hibernate.type.NClobType@6b0fdacd
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6b0fdacd
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@41bca8e6
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4d95f0fd
Adding type registration serializable -> org.hibernate.type.SerializableType@7d0bc192
Adding type registration object -> org.hibernate.type.ObjectType@1ed99a37
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1ed99a37
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1fee7545
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@60551563
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@71ef47fd
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@145f6d7b
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@50cb0b0
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@423f567
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@54c43f50
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2018c8aa
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Processing PersistenceUnitInfo [
	name: intelTrader
	persistence provider classname: org.hibernate.ejb.HibernatePersistence
	classloader: WebappClassLoader
  context: 
  delegate: false
  repositories:
    /WEB-INF/classes/
----------> Parent Classloader:
ClassRealm[plugin>org.apache.tomcat.maven:tomcat7-maven-plugin:2.0, parent: sun.misc.Launcher$AppClassLoader@1875303f]

	Temporary classloader: org.springframework.instrument.classloading.SimpleThrowawayClassLoader@3b1e215c
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/vvarm1/IdeaProjects/intelTrader/src/main/webapp/WEB-INF/classes
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.inteltrader.entity.Instrument
		com.inteltrader.entity.Portfolio
		com.inteltrader.entity.Investment]
	Mapping files names []
	Properties [
		hibernate.connection.username: root
		hibernate.connection.password: root
		hibernate.dialect: org.hibernate.dialect.MySQLDialect
		hibernate.c3p0.min_size: 10
		hibernate.connection.url: jdbc:mysql://localhost:3306/TRADER_DB
		hibernate.show_sql: true
		hibernate.connection.driver_class: com.mysql.jdbc.Driver
		hibernate.hbm2ddl.auto: update]
Detect class: true; detect hbm: true
Detect class: true; detect hbm: true
Searching mapped entities in jar/par: file:/C:/Users/vvarm1/IdeaProjects/intelTrader/src/main/webapp/WEB-INF/classes
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.ejb.event.JpaIntegrator].
No JNDI name configured for binding Ejb3Configuration
Preparing to build session factory with filters : {}
Processing hbm.xml files
Process annotated classes
Binding entity from annotated class: com.inteltrader.entity.Instrument
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Instrument
Bind entity com.inteltrader.entity.Instrument on table INSTRUMENT
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=SYMBOL_NAME, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property symbolName with lazy=false
building SimpleValue for symbolName
Building property symbolName
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=priceList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=priceList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=priceList_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='priceList_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='SYMBOL_NAME', referencedColumn='', mappedBy=''}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Collection role: com.inteltrader.entity.Instrument.priceList
Building property priceList
Binding entity from annotated class: com.inteltrader.entity.Portfolio
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Portfolio
Bind entity com.inteltrader.entity.Portfolio on table PORTFOLIO
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=PORTFOLIO_NAME, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property portfolioName with lazy=false
building SimpleValue for portfolioName
Building property portfolioName
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='associatedPortfolio'}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=investmentList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=element, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=investmentList_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='investmentList_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='associatedPortfolio'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='associatedPortfolio'}
Collection role: com.inteltrader.entity.Portfolio.investmentList
Building property investmentList
Binding entity from annotated class: com.inteltrader.entity.Investment
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Investment
Bind entity com.inteltrader.entity.Investment on table INVESTMENT
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=INVESTMENT_ID, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property investmentId with lazy=false
building SimpleValue for investmentId
Building property investmentId
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=associatedPortfolio, insertable=true, updatable=true, unique=false}
Building property associatedPortfolio
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=currentPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property currentPrice with lazy=false
building SimpleValue for currentPrice
Building property currentPrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=quantity, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property quantity with lazy=false
building SimpleValue for quantity
Building property quantity
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=INVESTMENT_SYMBOL, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property symbolName with lazy=false
building SimpleValue for symbolName
Building property symbolName
Setting SimpleValue typeName for symbolName
Setting SimpleValue typeName for portfolioName
Setting SimpleValue typeName for investmentId
Setting SimpleValue typeName for currentPrice
Setting SimpleValue typeName for quantity
Setting SimpleValue typeName for symbolName
Processing fk mappings (*ToOne and JoinedSubclass)
Processing extends queue
Processing extends queue
Processing collection mappings
Second pass for collection: com.inteltrader.entity.Instrument.priceList
Binding a collection of element: com.inteltrader.entity.Instrument.priceList
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=closePrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property closePrice with lazy=false
building SimpleValue for closePrice
Setting SimpleValue typeName for closePrice
Building property closePrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=highPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property highPrice with lazy=false
building SimpleValue for highPrice
Setting SimpleValue typeName for highPrice
Building property highPrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=lastClosePrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property lastClosePrice with lazy=false
building SimpleValue for lastClosePrice
Setting SimpleValue typeName for lastClosePrice
Building property lastClosePrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=lowPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property lowPrice with lazy=false
building SimpleValue for lowPrice
Setting SimpleValue typeName for lowPrice
Building property lowPrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=openPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property openPrice with lazy=false
building SimpleValue for openPrice
Setting SimpleValue typeName for openPrice
Building property openPrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=priceId, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property priceId with lazy=false
building SimpleValue for priceId
Setting SimpleValue typeName for priceId
Building property priceId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=timeStamp, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property timeStamp with lazy=false
building SimpleValue for timeStamp
Setting SimpleValue typeName for timeStamp
Building property timeStamp
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=totalTradedQuantity, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property totalTradedQuantity with lazy=false
building SimpleValue for totalTradedQuantity
Setting SimpleValue typeName for totalTradedQuantity
Building property totalTradedQuantity
Mapped collection key: SYMBOL_NAME, element: closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity
Second pass for collection: com.inteltrader.entity.Portfolio.investmentList
Binding a OneToMany: com.inteltrader.entity.Portfolio.investmentList through a foreign key
Mapping collection: com.inteltrader.entity.Portfolio.investmentList -> INVESTMENT
Retrieving property com.inteltrader.entity.Investment.associatedPortfolio
Mapped collection key: associatedPortfolio_PORTFOLIO_NAME, one-to-many: com.inteltrader.entity.Investment
Processing native query and ResultSetMapping mappings
Processing association property references
Creating tables' unique integer identifiers
Processing foreign key constraints
Resolving reference to class: com.inteltrader.entity.Instrument
Resolving reference to class: com.inteltrader.entity.Portfolio
HHH000022: c3p0 properties were encountered, but the org.hibernate.service.jdbc.connections.internal.C3P0ConnectionProvider provider class was not found on the classpath; these properties are going to be ignored.
HHH000402: Using Hibernate built-in connection pool (not for production use!)
HHH000115: Hibernate connection pool size: 20
HHH000006: Autocommit mode: true
HHH000401: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/TRADER_DB]
HHH000046: Connection properties: {user=root, password=root, autocommit=true, release_mode=auto}
Opening new JDBC connection
Created connection to: jdbc:mysql://localhost:3306/TRADER_DB, Isolation Level: 4
Database ->
       name : MySQL
    version : 5.6.10-log
      major : 5
      minor : 6
Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.9 ( Revision: ${svn.Revision} )
      major : 5
      minor : 1
JDBC version : 3.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: disabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
multi-tenancy strategy : NONE
Connection release mode: auto
HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
Maximum outer join fetch depth: 2
Default batch fetch size: 1
Generate SQL with comments: disabled
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
HHH000397: Using ASTQueryTranslatorFactory
Query language substitutions: {}
JPA-QL strict compliance: enabled
Second-level cache: enabled
Query cache: disabled
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
Optimize cache for minimal puts: disabled
Structured second-level cache entries: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Named query checking : enabled
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : : disabled
Building session factory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\vvarm1\IdeaProjects\intelTrader\target\tomcat, hibernate.connection.url=jdbc:mysql://localhost:3306/TRADER_DB, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.ejb.discard_pc_on_close=false, catalina.useNaming=true, hibernate.transaction.flush_before_completion=false, os.name=Windows 7, sun.boot.class.path=C:\Program Files\Java\jdk1.7.0_10\jre\lib\resources.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\rt.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\jce.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.7.0_10\jre\classes, java.util.logging.config.file=C:\Users\vvarm1\IdeaProjects\intelTrader\target\tomcat\conf\logging.properties, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.7.0_10-b18, hibernate.connection.autocommit=true, hibernate.c3p0.min_size=10, user.name=vvarm1, shared.loader=, guice.disable.misplaced.annotation.check=true, tomcat.util.buf.StringCache.byte.enabled=true, javax.persistence.validation.mode=AUTO, hibernate.connection.release_mode=auto, idea.launcher.bin.path=C:\Program Files (x86)\JetBrains\IntelliJ IDEA Community Edition 12.0.4\bin, user.language=en, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, sun.boot.library.path=C:\Program Files\Java\jdk1.7.0_10\jre\bin, classworlds.conf=C:\Program Files\Apache Software Foundation\apache-maven-3.0.5\bin\m2.conf, java.version=1.7.0_10, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, user.timezone=Asia/Calcutta, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.7.0_10\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, file.encoding.pkg=sun.io, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.tomcat.,org.apache.jasper., file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=51.0, user.country=US, java.home=C:\Program Files\Java\jdk1.7.0_10\jre, java.vm.info=mixed mode, os.version=6.1, hibernate.transaction.factory_class=org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory, hibernate.query.jpaql_strict_compliance=true, path.separator=;, java.vm.version=23.6-b04, hibernate.connection.password=root, user.variant=, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.scan.DefaultJarScanner.jarsToSkip=bootstrap.jar,commons-daemon.jar,tomcat-juli.jar,annotations-api.jar,el-api.jar,jsp-api.jar,servlet-api.jar,catalina.jar,catalina-ant.jar,catalina-ha.jar,catalina-tribes.jar,jasper.jar,jasper-el.jar,ecj-*.jar,tomcat-api.jar,tomcat-util.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-jni.jar,tomcat-spdy.jar,tomcat-i18n-en.jar,tomcat-i18n-es.jar,tomcat-i18n-fr.jar,tomcat-i18n-ja.jar,tomcat-juli-adapters.jar,catalina-jmx-remote.jar,catalina-ws.jar,tomcat-jdbc.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,jstl.jar,geronimo-spec-jaxrpc*.jar,wsdl4j*.jar,ant.jar,ant-junit*.jar,aspectj*.jar,jmx.jar,h2*.jar,hibernate*.jar,httpclient*.jar,jmx-tools.jar,jta*.jar,log4j*.jar,mail*.jar,slf4j*.jar,xercesImpl.jar,xmlParserAPIs.jar,xml-apis.jar,access-bridge-64.jar,dnsns.jar,jaccess.jar,ldapsec.jar,localedata.jar,sunjce_provider.jar,sunmscapi.jar,sunpkcs11.jar,jhall.jar,tools.jar,sunec.jar,zipfs.jar,gnome-java-bridge.jar,pulse-java.jar,apple_provider.jar,AppleScriptEngine.jar,CoreAudio.jar,dns_sd.jar,j3daudio.jar,j3dcore.jar,j3dutils.jar,jai_core.jar,jai_codec.jar,mlibwrapper_jai.jar,MRJToolkit.jar,vecmath.jar,junit.jar,junit-*.jar,ant-launcher.jar, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.tomcat.,org.apache.jasper., user.script=, java.naming.factory.url.pkgs=org.apache.naming, user.home=C:\Users\vvarm1, org.apache.catalina.startup.ContextConfig.jarsToSkip=, java.specification.vendor=Oracle Corporation, hibernate.hbm2ddl.auto=update, java.library.path=C:\Program Files\Java\jdk1.7.0_10\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\JetBrains\IntelliJ IDEA Community Edition 12.0.4\bin\..\.\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\ThinkPad\Bluetooth Software\;C:\Program Files\ThinkPad\Bluetooth Software\syswow64;c:\Program Files\Intel\WiFi\bin\;c:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files (x86)\Git\cmd;C:\Users\vvarm1\Documents\play-2.0.3;C:\Program Files\Java\jdk1.7.0_10\bin;C:\Program Files\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\QuickTime\QTSystem\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Java\jre6\bin;C:\Program Files\Apache Software Foundation\apache-maven-3.0.5\bin;c:\program files (x86)\jetbrains\intellij idea community edition 12.0.4\jre\jre\bin;., java.vendor.url=http://java.oracle.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, org.apache.catalina.startup.TldConfig.jarsToSkip=, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, common.loader=${catalina.base}/lib,${catalina.base}/lib/*.jar,${catalina.home}/lib,${catalina.home}/lib/*.jar, maven.home=C:\Program Files\Apache Software Foundation\apache-maven-3.0.5, java.runtime.name=Java(TM) SE Runtime Environment, java.class.path=C:\Program Files\Apache Software Foundation\apache-maven-3.0.5\boot\plexus-classworlds-2.4.jar;C:\Program Files (x86)\JetBrains\IntelliJ IDEA Community Edition 12.0.4\lib\idea_rt.jar, sun.java.command=com.intellij.rt.execution.application.AppMain org.codehaus.classworlds.Launcher --no-plugin-registry --fail-fast --strict-checksums --update-snapshots org.apache.tomcat.maven:tomcat7-maven-plugin:2.0:run, hibernate.bytecode.use_reflection_optimizer=false, idea.launcher.port=7535, java.vm.specification.name=Java Virtual Machine Specification, catalina.home=C:\Users\vvarm1\IdeaProjects\intelTrader\target\tomcat, java.vm.specification.version=1.7, sun.os.patch.level=Service Pack 1, sun.cpu.endian=little, java.io.tmpdir=C:\Users\vvarm1\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, server.loader=, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, java.ext.dirs=C:\Program Files\Java\jdk1.7.0_10\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=C:\Users\vvarm1\IdeaProjects\intelTrader, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding=UTF-8, hibernate.use_identifier_rollback=false, java.specification.version=1.7, hibernate.show_sql=true}
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Static SQL for entity: com.inteltrader.entity.Investment
 Version select: select INVESTMENT_ID from TRADER_DB.INVESTMENT where INVESTMENT_ID =?
 Snapshot select: select investment_.INVESTMENT_ID, investment_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_, investment_.currentPrice as currentP2_2_, investment_.quantity as quantity2_, investment_.INVESTMENT_SYMBOL as INVESTMENT4_2_ from TRADER_DB.INVESTMENT investment_ where investment_.INVESTMENT_ID=?
 Insert 0: insert into TRADER_DB.INVESTMENT (associatedPortfolio_PORTFOLIO_NAME, currentPrice, quantity, INVESTMENT_SYMBOL, INVESTMENT_ID) values (?, ?, ?, ?, ?)
 Update 0: update TRADER_DB.INVESTMENT set associatedPortfolio_PORTFOLIO_NAME=?, currentPrice=?, quantity=?, INVESTMENT_SYMBOL=? where INVESTMENT_ID=?
 Delete 0: delete from TRADER_DB.INVESTMENT where INVESTMENT_ID=?
 Identity insert: insert into TRADER_DB.INVESTMENT (associatedPortfolio_PORTFOLIO_NAME, currentPrice, quantity, INVESTMENT_SYMBOL) values (?, ?, ?, ?)
Static SQL for entity: com.inteltrader.entity.Instrument
 Version select: select SYMBOL_NAME from TRADER_DB.INSTRUMENT where SYMBOL_NAME =?
 Snapshot select: select instrument_.SYMBOL_NAME from TRADER_DB.INSTRUMENT instrument_ where instrument_.SYMBOL_NAME=?
 Insert 0: insert into TRADER_DB.INSTRUMENT (SYMBOL_NAME) values (?)
 Update 0: null
 Delete 0: delete from TRADER_DB.INSTRUMENT where SYMBOL_NAME=?
Static SQL for entity: com.inteltrader.entity.Portfolio
 Version select: select PORTFOLIO_NAME from TRADER_DB.PORTFOLIO where PORTFOLIO_NAME =?
 Snapshot select: select portfolio_.PORTFOLIO_NAME from TRADER_DB.PORTFOLIO portfolio_ where portfolio_.PORTFOLIO_NAME=?
 Insert 0: insert into TRADER_DB.PORTFOLIO (PORTFOLIO_NAME) values (?)
 Update 0: null
 Delete 0: delete from TRADER_DB.PORTFOLIO where PORTFOLIO_NAME=?
Static SQL for collection: com.inteltrader.entity.Instrument.priceList
 Row insert: insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
 Row update: update TRADER_DB.INSTRUMENT_PRICE set closePrice=?, highPrice=?, lastClosePrice=?, lowPrice=?, openPrice=?, priceId=?, timeStamp=?, totalTradedQuantity=? where SYMBOL_NAME=? and priceId=? and totalTradedQuantity=?
 Row delete: delete from TRADER_DB.INSTRUMENT_PRICE where SYMBOL_NAME=? and priceId=? and totalTradedQuantity=?
 One-shot delete: delete from TRADER_DB.INSTRUMENT_PRICE where SYMBOL_NAME=?
Static SQL for collection: com.inteltrader.entity.Portfolio.investmentList
 Row insert: update TRADER_DB.INVESTMENT set associatedPortfolio_PORTFOLIO_NAME=? where INVESTMENT_ID=?
 Row delete: update TRADER_DB.INVESTMENT set associatedPortfolio_PORTFOLIO_NAME=null where associatedPortfolio_PORTFOLIO_NAME=? and INVESTMENT_ID=?
 One-shot delete: update TRADER_DB.INVESTMENT set associatedPortfolio_PORTFOLIO_NAME=null where associatedPortfolio_PORTFOLIO_NAME=?
Static select for entity com.inteltrader.entity.Instrument [NONE]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for entity com.inteltrader.entity.Instrument [READ]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for entity com.inteltrader.entity.Instrument [UPGRADE]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [UPGRADE_NOWAIT]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [FORCE]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [PESSIMISTIC_READ]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? lock in share mode
Static select for entity com.inteltrader.entity.Instrument [PESSIMISTIC_WRITE]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [PESSIMISTIC_FORCE_INCREMENT]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [OPTIMISTIC]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for entity com.inteltrader.entity.Instrument [OPTIMISTIC_FORCE_INCREMENT]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for action ACTION_MERGE on entity com.inteltrader.entity.Instrument: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for action ACTION_REFRESH on entity com.inteltrader.entity.Instrument: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for entity com.inteltrader.entity.Investment [NONE]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_1_, investment0_.currentPrice as currentP2_2_1_, investment0_.quantity as quantity2_1_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_1_, portfolio1_.PORTFOLIO_NAME as PORTFOLIO1_3_0_ from TRADER_DB.INVESTMENT investment0_ left outer join TRADER_DB.PORTFOLIO portfolio1_ on investment0_.associatedPortfolio_PORTFOLIO_NAME=portfolio1_.PORTFOLIO_NAME where investment0_.INVESTMENT_ID=?
Static select for entity com.inteltrader.entity.Investment [READ]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_1_, investment0_.currentPrice as currentP2_2_1_, investment0_.quantity as quantity2_1_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_1_, portfolio1_.PORTFOLIO_NAME as PORTFOLIO1_3_0_ from TRADER_DB.INVESTMENT investment0_ left outer join TRADER_DB.PORTFOLIO portfolio1_ on investment0_.associatedPortfolio_PORTFOLIO_NAME=portfolio1_.PORTFOLIO_NAME where investment0_.INVESTMENT_ID=?
Static select for entity com.inteltrader.entity.Investment [UPGRADE]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [UPGRADE_NOWAIT]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [FORCE]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [PESSIMISTIC_READ]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? lock in share mode
Static select for entity com.inteltrader.entity.Investment [PESSIMISTIC_WRITE]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [PESSIMISTIC_FORCE_INCREMENT]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [OPTIMISTIC]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=?
Static select for entity com.inteltrader.entity.Investment [OPTIMISTIC_FORCE_INCREMENT]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=?
Static select for action ACTION_MERGE on entity com.inteltrader.entity.Investment: select investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_1_, investment0_.currentPrice as currentP2_2_1_, investment0_.quantity as quantity2_1_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_1_, portfolio1_.PORTFOLIO_NAME as PORTFOLIO1_3_0_ from TRADER_DB.INVESTMENT investment0_ left outer join TRADER_DB.PORTFOLIO portfolio1_ on investment0_.associatedPortfolio_PORTFOLIO_NAME=portfolio1_.PORTFOLIO_NAME where investment0_.INVESTMENT_ID=?
Static select for action ACTION_REFRESH on entity com.inteltrader.entity.Investment: select investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_1_, investment0_.currentPrice as currentP2_2_1_, investment0_.quantity as quantity2_1_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_1_, portfolio1_.PORTFOLIO_NAME as PORTFOLIO1_3_0_ from TRADER_DB.INVESTMENT investment0_ left outer join TRADER_DB.PORTFOLIO portfolio1_ on investment0_.associatedPortfolio_PORTFOLIO_NAME=portfolio1_.PORTFOLIO_NAME where investment0_.INVESTMENT_ID=?
Static select for entity com.inteltrader.entity.Portfolio [NONE]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_3_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_3_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Static select for entity com.inteltrader.entity.Portfolio [READ]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_3_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_3_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Static select for entity com.inteltrader.entity.Portfolio [UPGRADE]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_3_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [UPGRADE_NOWAIT]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_3_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [FORCE]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_3_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [PESSIMISTIC_READ]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_3_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? lock in share mode
Static select for entity com.inteltrader.entity.Portfolio [PESSIMISTIC_WRITE]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_3_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [PESSIMISTIC_FORCE_INCREMENT]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_3_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [OPTIMISTIC]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_3_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=?
Static select for entity com.inteltrader.entity.Portfolio [OPTIMISTIC_FORCE_INCREMENT]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_3_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=?
Static select for action ACTION_MERGE on entity com.inteltrader.entity.Portfolio: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_3_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_3_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Static select for action ACTION_REFRESH on entity com.inteltrader.entity.Portfolio: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_3_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_3_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Static select for collection com.inteltrader.entity.Instrument.priceList: select pricelist0_.SYMBOL_NAME as SYMBOL1_0_0_, pricelist0_.closePrice as closePrice1_0_, pricelist0_.highPrice as highPrice1_0_, pricelist0_.lastClosePrice as lastClos4_1_0_, pricelist0_.lowPrice as lowPrice1_0_, pricelist0_.openPrice as openPrice1_0_, pricelist0_.priceId as priceId1_0_, pricelist0_.timeStamp as timeStamp1_0_, pricelist0_.totalTradedQuantity as totalTra9_1_0_ from TRADER_DB.INSTRUMENT_PRICE pricelist0_ where pricelist0_.SYMBOL_NAME=?
Static select for one-to-many com.inteltrader.entity.Portfolio.investmentList: select investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_3_1_, investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.associatedPortfolio_PORTFOLIO_NAME=?
Registering SessionFactory: eb5e7742-493c-4779-a82b-12a3b69b7cd0 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Instantiated session factory
HHH000228: Running hbm2ddl schema update
HHH000102: Fetching database metadata
HHH000396: Updating schema
Processing hbm.xml files
Process annotated classes
Processing fk mappings (*ToOne and JoinedSubclass)
Processing extends queue
Processing extends queue
Processing collection mappings
Processing native query and ResultSetMapping mappings
Processing association property references
Creating tables' unique integer identifiers
Processing foreign key constraints
Resolving reference to class: com.inteltrader.entity.Instrument
Resolving reference to class: com.inteltrader.entity.Portfolio
HHH000261: Table found: TRADER_DB.instrument
HHH000037: Columns: [symbol_name]
HHH000108: Foreign keys: []
HHH000126: Indexes: [primary]
HHH000261: Table found: TRADER_DB.instrument_price
HHH000037: Columns: [totaltradedquantity, timestamp, priceid, lastcloseprice, highprice, symbol_name, openprice, closeprice, lowprice]
HHH000108: Foreign keys: [fk3189a2d153ed548d]
HHH000126: Indexes: [fk3189a2d153ed548d]
HHH000261: Table found: TRADER_DB.investment
HHH000037: Columns: [investment_id, associatedportfolio_portfolio_name, currentprice, quantity, investment_symbol]
HHH000108: Foreign keys: [fk8fe41ed3c804d4f3]
HHH000126: Indexes: [fk8fe41ed3c804d4f3, primary]
HHH000261: Table found: TRADER_DB.portfolio
HHH000037: Columns: [portfolio_name]
HHH000108: Foreign keys: []
HHH000126: Indexes: [primary]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
HHH000232: Schema update complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Statistics initialized [enabled=false]
Registering EntityManagerFactory: intelTrader 
HHH000436: Entity manager factory name (intelTrader) is already registered.  If entity manager will be clustered or passivated, specify a unique value for property 'hibernate.ejb.entitymanager_factory_name'
Finished creating instance of bean 'entityManagerFactory'
Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1e18aafb: defining beans [org.springframework.context.annotation.internalAsyncAnnotationProcessor,org.springframework.context.annotation.internalScheduledAnnotationProcessor,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0,org.springframework.web.servlet.view.InternalResourceViewResolver#0,instrumentDao,portfolioDao,instrumentService,portfolioService,entityManagerFactory,transactionManager,instrument,investment,portfolio,instrumentServiceRest,portfolioServiceRest,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor]; parent: org.springframework.beans.factory.support.DefaultListableBeanFactory@3700da8e
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Creating instance of bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0' to allow for resolving potential circular references
Creating instance of bean '(inner bean)'
Creating shared instance of singleton bean 'transactionManager'
Creating instance of bean 'transactionManager'
Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
Returning cached instance of singleton bean 'entityManagerFactory'
Invoking afterPropertiesSet() on bean with name 'transactionManager'
Finished creating instance of bean 'transactionManager'
Creating instance of bean '(inner bean)'
Finished creating instance of bean '(inner bean)'
Invoking afterPropertiesSet() on bean with name '(inner bean)'
Finished creating instance of bean '(inner bean)'
Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Creating shared instance of singleton bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Creating instance of bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Eagerly caching bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Creating shared instance of singleton bean 'instrumentDao'
Creating instance of bean 'instrumentDao'
Eagerly caching bean 'instrumentDao' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'instrumentDao'
Creating shared instance of singleton bean 'portfolioDao'
Creating instance of bean 'portfolioDao'
Eagerly caching bean 'portfolioDao' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'portfolioDao'
Creating shared instance of singleton bean 'instrumentService'
Creating instance of bean 'instrumentService'
Registered injected element on class [com.inteltrader.service.InstrumentServiceImpl]: PersistenceElement for javax.persistence.EntityManagerFactory com.inteltrader.service.InstrumentServiceImpl.entityManagerFactory
Registered injected element on class [com.inteltrader.service.InstrumentServiceImpl]: AutowiredFieldElement for private com.inteltrader.dao.IInstrumentDao com.inteltrader.service.InstrumentServiceImpl.instrumentDao
Registered injected element on class [com.inteltrader.service.InstrumentServiceImpl]: AutowiredFieldElement for private com.inteltrader.service.PortfolioService com.inteltrader.service.InstrumentServiceImpl.portfolioService
Eagerly caching bean 'instrumentService' to allow for resolving potential circular references
Processing injected method of bean 'instrumentService': PersistenceElement for javax.persistence.EntityManagerFactory com.inteltrader.service.InstrumentServiceImpl.entityManagerFactory
Returning cached instance of singleton bean 'entityManagerFactory'
Processing injected method of bean 'instrumentService': AutowiredFieldElement for private com.inteltrader.dao.IInstrumentDao com.inteltrader.service.InstrumentServiceImpl.instrumentDao
Returning cached instance of singleton bean 'instrumentDao'
Autowiring by type from bean name 'instrumentService' to bean named 'instrumentDao'
Processing injected method of bean 'instrumentService': AutowiredFieldElement for private com.inteltrader.service.PortfolioService com.inteltrader.service.InstrumentServiceImpl.portfolioService
Creating shared instance of singleton bean 'portfolioService'
Creating instance of bean 'portfolioService'
Registered injected element on class [com.inteltrader.service.PortfolioServiceImpl]: PersistenceElement for private javax.persistence.EntityManagerFactory com.inteltrader.service.PortfolioServiceImpl.entityManagerFactory
Registered injected element on class [com.inteltrader.service.PortfolioServiceImpl]: AutowiredFieldElement for private com.inteltrader.dao.IPortfolioDao com.inteltrader.service.PortfolioServiceImpl.portfolioDao
Eagerly caching bean 'portfolioService' to allow for resolving potential circular references
Processing injected method of bean 'portfolioService': PersistenceElement for private javax.persistence.EntityManagerFactory com.inteltrader.service.PortfolioServiceImpl.entityManagerFactory
Returning cached instance of singleton bean 'entityManagerFactory'
Processing injected method of bean 'portfolioService': AutowiredFieldElement for private com.inteltrader.dao.IPortfolioDao com.inteltrader.service.PortfolioServiceImpl.portfolioDao
Returning cached instance of singleton bean 'portfolioDao'
Autowiring by type from bean name 'portfolioService' to bean named 'portfolioDao'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'portfolioService'
Autowiring by type from bean name 'instrumentService' to bean named 'portfolioService'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'instrumentService'
Returning cached instance of singleton bean 'portfolioService'
Returning cached instance of singleton bean 'entityManagerFactory'
Returning cached instance of singleton bean 'transactionManager'
Creating shared instance of singleton bean 'instrument'
Creating instance of bean 'instrument'
Eagerly caching bean 'instrument' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'instrument'
Creating shared instance of singleton bean 'investment'
Creating instance of bean 'investment'
Eagerly caching bean 'investment' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'investment'
Creating shared instance of singleton bean 'portfolio'
Creating instance of bean 'portfolio'
Eagerly caching bean 'portfolio' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'portfolio'
Creating shared instance of singleton bean 'instrumentServiceRest'
Creating instance of bean 'instrumentServiceRest'
Registered injected element on class [com.inteltrader.rest.InstrumentServiceRest]: AutowiredFieldElement for private com.inteltrader.service.InstrumentService com.inteltrader.rest.InstrumentServiceRest.instrumentService
Eagerly caching bean 'instrumentServiceRest' to allow for resolving potential circular references
Processing injected method of bean 'instrumentServiceRest': AutowiredFieldElement for private com.inteltrader.service.InstrumentService com.inteltrader.rest.InstrumentServiceRest.instrumentService
Returning cached instance of singleton bean 'instrumentService'
Autowiring by type from bean name 'instrumentServiceRest' to bean named 'instrumentService'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'instrumentServiceRest'
Creating shared instance of singleton bean 'portfolioServiceRest'
Creating instance of bean 'portfolioServiceRest'
Registered injected element on class [com.inteltrader.rest.PortfolioServiceRest]: AutowiredFieldElement for private com.inteltrader.service.PortfolioService com.inteltrader.rest.PortfolioServiceRest.portfolioService
Eagerly caching bean 'portfolioServiceRest' to allow for resolving potential circular references
Processing injected method of bean 'portfolioServiceRest': AutowiredFieldElement for private com.inteltrader.service.PortfolioService com.inteltrader.rest.PortfolioServiceRest.portfolioService
Returning cached instance of singleton bean 'portfolioService'
Autowiring by type from bean name 'portfolioServiceRest' to bean named 'portfolioService'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'portfolioServiceRest'
Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@537635fb]
Returning cached instance of singleton bean 'lifecycleProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Unable to locate MultipartResolver with name 'multipartResolver': no multipart request handling provided
Creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Unable to locate LocaleResolver with name 'localeResolver': using default [org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver@71d4b607]
Creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Unable to locate ThemeResolver with name 'themeResolver': using default [org.springframework.web.servlet.theme.FixedThemeResolver@738eefe1]
Creating instance of bean 'org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping'
Looking for URL mappings in application context: WebApplicationContext for namespace 'appServlet-servlet': startup date [Fri Apr 19 17:35:33 IST 2013]; parent: Root WebApplicationContext
Rejected bean name 'org.springframework.context.annotation.internalAsyncAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalScheduledAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalRequiredAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalCommonAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.aop.config.internalAutoProxyCreator': no URL paths identified
Rejected bean name 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0': no URL paths identified
Rejected bean name 'org.springframework.web.servlet.view.InternalResourceViewResolver#0': no URL paths identified
Rejected bean name 'instrumentDao': no URL paths identified
Rejected bean name 'portfolioDao': no URL paths identified
Rejected bean name 'instrumentService': no URL paths identified
Rejected bean name 'portfolioService': no URL paths identified
Rejected bean name 'entityManagerFactory': no URL paths identified
Rejected bean name 'transactionManager': no URL paths identified
Rejected bean name 'instrument': no URL paths identified
Rejected bean name 'investment': no URL paths identified
Rejected bean name 'portfolio': no URL paths identified
Rejected bean name 'instrumentServiceRest': no URL paths identified
Rejected bean name 'portfolioServiceRest': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor': no URL paths identified
Rejected bean name 'environment': no URL paths identified
Rejected bean name 'systemProperties': no URL paths identified
Rejected bean name 'systemEnvironment': no URL paths identified
Rejected bean name 'servletConfig': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry': no URL paths identified
Rejected bean name 'messageSource': no URL paths identified
Rejected bean name 'applicationEventMulticaster': no URL paths identified
Rejected bean name 'lifecycleProcessor': no URL paths identified
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping'
Creating instance of bean 'org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping'
Looking for URL mappings in application context: WebApplicationContext for namespace 'appServlet-servlet': startup date [Fri Apr 19 17:35:33 IST 2013]; parent: Root WebApplicationContext
Rejected bean name 'org.springframework.context.annotation.internalAsyncAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalScheduledAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalRequiredAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalCommonAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.aop.config.internalAutoProxyCreator': no URL paths identified
Rejected bean name 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0': no URL paths identified
Rejected bean name 'org.springframework.web.servlet.view.InternalResourceViewResolver#0': no URL paths identified
Rejected bean name 'instrumentDao': no URL paths identified
Rejected bean name 'portfolioDao': no URL paths identified
Rejected bean name 'instrumentService': no URL paths identified
Rejected bean name 'portfolioService': no URL paths identified
Rejected bean name 'entityManagerFactory': no URL paths identified
Rejected bean name 'transactionManager': no URL paths identified
Rejected bean name 'instrument': no URL paths identified
Rejected bean name 'investment': no URL paths identified
Rejected bean name 'portfolio': no URL paths identified
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/create/{symbol}] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/create/{symbol}.*] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/create/{symbol}/] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/update/{portfolioName}] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/update/{portfolioName}.*] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/update/{portfolioName}/] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/load/{symbol}] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/load/{symbol}.*] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/load/{symbol}/] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/create/{portfolioName}] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/create/{portfolioName}.*] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/create/{portfolioName}/] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/load/{portfolioName}] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/load/{portfolioName}.*] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/load/{portfolioName}/] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/addInvestment/{portfolioName}/{symbolName}] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/addInvestment/{portfolioName}/{symbolName}.*] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/addInvestment/{portfolioName}/{symbolName}/] onto handler 'portfolioServiceRest'
Rejected bean name 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor': no URL paths identified
Rejected bean name 'environment': no URL paths identified
Rejected bean name 'systemProperties': no URL paths identified
Rejected bean name 'systemEnvironment': no URL paths identified
Rejected bean name 'servletConfig': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry': no URL paths identified
Rejected bean name 'messageSource': no URL paths identified
Rejected bean name 'applicationEventMulticaster': no URL paths identified
Rejected bean name 'lifecycleProcessor': no URL paths identified
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping'
No HandlerMappings found in servlet 'appServlet': using default
Creating instance of bean 'org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter'
Creating instance of bean 'org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter'
Creating instance of bean 'org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter'
No HandlerAdapters found in servlet 'appServlet': using default
Creating instance of bean 'org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerExceptionResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerExceptionResolver'
Creating instance of bean 'org.springframework.web.servlet.mvc.annotation.ResponseStatusExceptionResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.annotation.ResponseStatusExceptionResolver'
Creating instance of bean 'org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver'
No HandlerExceptionResolvers found in servlet 'appServlet': using default
Creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Unable to locate RequestToViewNameTranslator with name 'viewNameTranslator': using default [org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@79a96eb8]
Returning cached instance of singleton bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Returning cached instance of singleton bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Unable to locate FlashMapManager with name 'flashMapManager': using default [org.springframework.web.servlet.support.SessionFlashMapManager@3a615460]
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Searching for key 'spring.liveBeansView.mbeanDomain' in [servletConfigInitParams]
Searching for key 'spring.liveBeansView.mbeanDomain' in [servletContextInitParams]
Searching for key 'spring.liveBeansView.mbeanDomain' in [jndiProperties]
Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain]
Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException: Name [spring.liveBeansView.mbeanDomain] is not bound in this Context. Unable to find [spring.liveBeansView.mbeanDomain].
Looking up JNDI object with name [spring.liveBeansView.mbeanDomain]
JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: Name [spring.liveBeansView.mbeanDomain] is not bound in this Context. Unable to find [spring.liveBeansView.mbeanDomain].. Returning null.
Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
Published WebApplicationContext of servlet 'appServlet' as ServletContext attribute with name [org.springframework.web.servlet.FrameworkServlet.CONTEXT.appServlet]
FrameworkServlet 'appServlet': initialization completed in 544 ms
Servlet 'appServlet' configured successfully
DispatcherServlet with name 'appServlet' processing GET request for [/portfolio/create/myFirstTime]
Matching patterns for request [/portfolio/create/myFirstTime] are [/portfolio/create/{portfolioName}]
URI Template variables for request [/portfolio/create/myFirstTime] are {portfolioName=myFirstTime}
Mapping [/portfolio/create/myFirstTime] to HandlerExecutionChain with handler [com.inteltrader.rest.PortfolioServiceRest@163f71b4] and 2 interceptors
Last-Modified value for [/portfolio/create/myFirstTime] is: -1
Invoking request handler method: public org.springframework.http.ResponseEntity com.inteltrader.rest.PortfolioServiceRest.createPortfolio(java.lang.String,javax.servlet.http.HttpServletRequest)
begin
Obtaining JDBC connection
Obtained JDBC connection
initial autocommit status: true
disabling autocommit
Generated identifier: myFirstTime, using strategy: org.hibernate.id.Assigned
committing
Processing flush-time cascades
Dirty checking collections
Collection found: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime], was: [<unreferenced>] (initialized)
Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
Listing entities:
com.inteltrader.entity.Portfolio{portfolioName=myFirstTime, investmentList=[]}
insert into TRADER_DB.PORTFOLIO (PORTFOLIO_NAME) values (?)
committed JDBC Connection
re-enabling autocommit
Written [SUCCESS] as "text/html" using [org.springframework.http.converter.StringHttpMessageConverter@1d8c1103]
Null ModelAndView returned to DispatcherServlet with name 'appServlet': assuming HandlerAdapter completed request handling
Successfully completed request
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
DispatcherServlet with name 'appServlet' processing GET request for [/portfolio/addInvestment/myFirstTime/AMTEKAUTO]
Matching patterns for request [/portfolio/addInvestment/myFirstTime/AMTEKAUTO] are [/portfolio/addInvestment/{portfolioName}/{symbolName}]
URI Template variables for request [/portfolio/addInvestment/myFirstTime/AMTEKAUTO] are {portfolioName=myFirstTime, symbolName=AMTEKAUTO}
Mapping [/portfolio/addInvestment/myFirstTime/AMTEKAUTO] to HandlerExecutionChain with handler [com.inteltrader.rest.PortfolioServiceRest@163f71b4] and 2 interceptors
Last-Modified value for [/portfolio/addInvestment/myFirstTime/AMTEKAUTO] is: -1
Invoking request handler method: public org.springframework.http.ResponseEntity com.inteltrader.rest.PortfolioServiceRest.addInvestment(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
begin
Obtaining JDBC connection
Opening new JDBC connection
Created connection to: jdbc:mysql://localhost:3306/TRADER_DB, Isolation Level: 4
Obtained JDBC connection
initial autocommit status: true
disabling autocommit
Loading entity: [com.inteltrader.entity.Portfolio#myFirstTime]
select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_3_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_3_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Result set row: 0
Result row: null, EntityKey[com.inteltrader.entity.Portfolio#myFirstTime]
Result set contains (possibly empty) collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Resolving associations for [com.inteltrader.entity.Portfolio#myFirstTime]
Done materializing entity [com.inteltrader.entity.Portfolio#myFirstTime]
1 collections were found in result set for role: com.inteltrader.entity.Portfolio.investmentList
Collection fully initialized: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
1 collections initialized for role: com.inteltrader.entity.Portfolio.investmentList
Done entity load
Executing identity-insert immediately
insert into TRADER_DB.INVESTMENT (associatedPortfolio_PORTFOLIO_NAME, currentPrice, quantity, INVESTMENT_SYMBOL) values (?, ?, ?, ?)
Natively generated identity: 1
committing
Processing flush-time cascades
Dirty checking collections
Collection dirty: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Collection found: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime], was: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime] (initialized)
Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
Flushed: 0 (re)creations, 1 updates, 0 removals to 1 collections
Listing entities:
com.inteltrader.entity.Investment{investmentId=1, quantity=null, currentPrice=null, symbolName=AMTEKAUTO, associatedPortfolio=com.inteltrader.entity.Portfolio#myFirstTime}
com.inteltrader.entity.Portfolio{portfolioName=myFirstTime, investmentList=[com.inteltrader.entity.Investment#1]}
committed JDBC Connection
re-enabling autocommit
Written [SUCCESS] as "text/html" using [org.springframework.http.converter.StringHttpMessageConverter@1d8c1103]
Null ModelAndView returned to DispatcherServlet with name 'appServlet': assuming HandlerAdapter completed request handling
Successfully completed request
DispatcherServlet with name 'appServlet' processing GET request for [/portfolio/load/MyFirstTime]
Matching patterns for request [/portfolio/load/MyFirstTime] are [/portfolio/load/{portfolioName}]
URI Template variables for request [/portfolio/load/MyFirstTime] are {portfolioName=MyFirstTime}
Mapping [/portfolio/load/MyFirstTime] to HandlerExecutionChain with handler [com.inteltrader.rest.PortfolioServiceRest@163f71b4] and 2 interceptors
Last-Modified value for [/portfolio/load/MyFirstTime] is: -1
Invoking request handler method: public org.springframework.http.ResponseEntity com.inteltrader.rest.PortfolioServiceRest.loadInstrument(java.lang.String,javax.servlet.http.HttpServletRequest)
Loading entity: [com.inteltrader.entity.Portfolio#MyFirstTime]
Obtaining JDBC connection
Opening new JDBC connection
Created connection to: jdbc:mysql://localhost:3306/TRADER_DB, Isolation Level: 4
Obtained JDBC connection
select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_3_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_3_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Result set row: 0
Result row: EntityKey[com.inteltrader.entity.Investment#1], EntityKey[com.inteltrader.entity.Portfolio#MyFirstTime]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Resolving associations for [com.inteltrader.entity.Investment#1]
Loading entity: [com.inteltrader.entity.Portfolio#myFirstTime]
select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_3_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_3_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Result set row: 0
Result row: EntityKey[com.inteltrader.entity.Investment#1], EntityKey[com.inteltrader.entity.Portfolio#myFirstTime]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Resolving associations for [com.inteltrader.entity.Portfolio#myFirstTime]
Done materializing entity [com.inteltrader.entity.Portfolio#myFirstTime]
No collections were found in result set for role: com.inteltrader.entity.Portfolio.investmentList
Done entity load
Done materializing entity [com.inteltrader.entity.Investment#1]
Resolving associations for [com.inteltrader.entity.Portfolio#MyFirstTime]
Done materializing entity [com.inteltrader.entity.Portfolio#MyFirstTime]
1 collections were found in result set for role: com.inteltrader.entity.Portfolio.investmentList
Collection fully initialized: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
1 collections initialized for role: com.inteltrader.entity.Portfolio.investmentList
Loading collection: [com.inteltrader.entity.Portfolio.investmentList#MyFirstTime]
select investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_3_1_, investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.associatedPortfolio_PORTFOLIO_NAME=?
Result set contains (possibly empty) collection: [com.inteltrader.entity.Portfolio.investmentList#MyFirstTime]
Result set row: 0
Result row: EntityKey[com.inteltrader.entity.Investment#1]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
1 collections were found in result set for role: com.inteltrader.entity.Portfolio.investmentList
Collection fully initialized: [com.inteltrader.entity.Portfolio.investmentList#MyFirstTime]
1 collections initialized for role: com.inteltrader.entity.Portfolio.investmentList
Done loading collection
Done entity load
Written [{"portfolioName":"MyFirstTime","investmentList":[]}] as "text/html" using [org.springframework.http.converter.StringHttpMessageConverter@1d8c1103]
Null ModelAndView returned to DispatcherServlet with name 'appServlet': assuming HandlerAdapter completed request handling
Successfully completed request
Initializing servlet 'appServlet'
Initializing new StandardServletEnvironment
Adding [servletConfigInitParams] PropertySource with lowest search precedence
Adding [servletContextInitParams] PropertySource with lowest search precedence
Adding [jndiProperties] PropertySource with lowest search precedence
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment]
FrameworkServlet 'appServlet': initialization started
Servlet with name 'appServlet' will try to create custom WebApplicationContext context of class 'org.springframework.web.context.support.XmlWebApplicationContext', using parent context [Root WebApplicationContext: startup date [Fri Apr 19 17:41:29 IST 2013]; root of context hierarchy]
Searching for key 'spring.profiles.active' in [servletConfigInitParams]
Searching for key 'spring.profiles.active' in [servletContextInitParams]
Searching for key 'spring.profiles.active' in [jndiProperties]
Looking up JNDI object with name [java:comp/env/spring.profiles.active]
Converted JNDI name [java:comp/env/spring.profiles.active] not found - trying original name [spring.profiles.active]. javax.naming.NameNotFoundException: Name [spring.profiles.active] is not bound in this Context. Unable to find [spring.profiles.active].
Looking up JNDI object with name [spring.profiles.active]
JNDI lookup for name [spring.profiles.active] threw NamingException with message: Name [spring.profiles.active] is not bound in this Context. Unable to find [spring.profiles.active].. Returning null.
Searching for key 'spring.profiles.active' in [systemProperties]
Searching for key 'spring.profiles.active' in [systemEnvironment]
Could not find key 'spring.profiles.active' in any property source. Returning [null]
Searching for key 'spring.profiles.default' in [servletConfigInitParams]
Searching for key 'spring.profiles.default' in [servletContextInitParams]
Searching for key 'spring.profiles.default' in [jndiProperties]
Looking up JNDI object with name [java:comp/env/spring.profiles.default]
Converted JNDI name [java:comp/env/spring.profiles.default] not found - trying original name [spring.profiles.default]. javax.naming.NameNotFoundException: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].
Looking up JNDI object with name [spring.profiles.default]
JNDI lookup for name [spring.profiles.default] threw NamingException with message: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].. Returning null.
Searching for key 'spring.profiles.default' in [systemProperties]
Searching for key 'spring.profiles.default' in [systemEnvironment]
Could not find key 'spring.profiles.default' in any property source. Returning [null]
Searching for key 'spring.profiles.default' in [servletConfigInitParams]
Searching for key 'spring.profiles.default' in [servletContextInitParams]
Searching for key 'spring.profiles.default' in [jndiProperties]
Looking up JNDI object with name [java:comp/env/spring.profiles.default]
Converted JNDI name [java:comp/env/spring.profiles.default] not found - trying original name [spring.profiles.default]. javax.naming.NameNotFoundException: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].
Looking up JNDI object with name [spring.profiles.default]
JNDI lookup for name [spring.profiles.default] threw NamingException with message: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].. Returning null.
Searching for key 'spring.profiles.default' in [systemProperties]
Searching for key 'spring.profiles.default' in [systemEnvironment]
Could not find key 'spring.profiles.default' in any property source. Returning [null]
Replacing [servletContextInitParams] PropertySource with [servletContextInitParams]
Replacing [servletConfigInitParams] PropertySource with [servletConfigInitParams]
Refreshing WebApplicationContext for namespace 'appServlet-servlet': startup date [Fri Apr 19 17:41:33 IST 2013]; parent: Root WebApplicationContext
Initializing new StandardEnvironment
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
Initializing new StandardEnvironment
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
Loading schema mappings from [META-INF/spring.schemas]
Loaded schema mappings: {http://www.springframework.org/schema/data/jpa/spring-jpa-1.2.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.2.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.1.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.1.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.5.xsd=org/springframework/data/repository/config/spring-repository-1.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.0.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.3.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.4.xsd=org/springframework/data/repository/config/spring-repository-1.4.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.3.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/data/repository/spring-repository.xsd=org/springframework/data/repository/config/spring-repository-1.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.0.xsd=org/springframework/data/repository/config/spring-repository-1.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.1.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.1.xsd
Found XML schema [http://www.springframework.org/schema/task/spring-task-3.0.xsd] in classpath: org/springframework/scheduling/config/spring-task-3.0.xsd
Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd
Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd
Found XML schema [http://www.springframework.org/schema/tx/spring-tx-3.1.xsd] in classpath: org/springframework/transaction/config/spring-tx-3.1.xsd
Loading bean definitions
Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/data/repository=org.springframework.data.repository.config.RepositoryNameSpaceHandler, http://www.springframework.org/schema/data/jpa=org.springframework.data.jpa.repository.config.JpaRepositoryNameSpaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
Neither XML 'id' nor 'name' specified - using generated bean name [org.springframework.web.servlet.view.InternalResourceViewResolver#0]
Neither XML 'id' nor 'name' specified - using generated bean name [org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver#30178dcd]
Initializing new StandardEnvironment
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
Looking for matching resources in directory tree [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Resolved location pattern [classpath*:com/inteltrader/**/*.class] to resources [file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\Advice.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\FIFOList.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\InstrumentVo.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\Strategies.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\Strategy.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\StrategyMACD.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao\IInstrumentDao.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao\InstrumentDao.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao\IPortfolioDao.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao\PortfolioDao.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Instrument.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Investment.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Portfolio.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Price.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Transactions.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest\InstrumentServiceRest.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest\PortfolioServiceRest.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\AnalyserService.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\CronService.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\InstrumentService.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\InstrumentServiceImpl.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\PortfolioService.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\PortfolioServiceImpl.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util\DownloadZip.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util\ExtractZipFile.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util\ReadPriceCsv.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util\RestCodes.class]]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Instrument.class]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Investment.class]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Portfolio.class]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest\InstrumentServiceRest.class]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest\PortfolioServiceRest.class]
Loaded 21 bean definitions from location pattern [/WEB-INF/applicationContext.xml]
Bean factory for WebApplicationContext for namespace 'appServlet-servlet': org.springframework.beans.factory.support.DefaultListableBeanFactory@5a5ea665: defining beans [org.springframework.context.annotation.internalAsyncAnnotationProcessor,org.springframework.context.annotation.internalScheduledAnnotationProcessor,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0,org.springframework.web.servlet.view.InternalResourceViewResolver#0,instrumentDao,portfolioDao,instrumentService,portfolioService,entityManagerFactory,transactionManager,instrument,investment,portfolio,instrumentServiceRest,portfolioServiceRest]; parent: org.springframework.beans.factory.support.DefaultListableBeanFactory@4ca20429
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@5f0e797d]
Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@2f4a2e4c]
Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.DelegatingThemeSource@2f2597d5]
Creating shared instance of singleton bean 'entityManagerFactory'
Creating instance of bean 'entityManagerFactory'
Eagerly caching bean 'entityManagerFactory' to allow for resolving potential circular references
Creating instance of bean 'org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver#30178dcd'
Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Creating instance of bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0' to allow for resolving potential circular references
Creating instance of bean '(inner bean)'
Creating shared instance of singleton bean 'transactionManager'
Creating instance of bean 'transactionManager'
Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
Returning eagerly cached instance of singleton bean 'entityManagerFactory' that is not fully initialized yet - a consequence of a circular reference
Ignoring currently created advisor 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0': Error creating bean with name 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0': Cannot create inner bean '(inner bean)' of type [org.springframework.transaction.interceptor.TransactionInterceptor] while setting bean property 'transactionInterceptor'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)': Cannot resolve reference to bean 'transactionManager' while setting bean property 'transactionManager'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'transactionManager' defined in ServletContext resource [/WEB-INF/applicationContext.xml]: Cannot resolve reference to bean 'entityManagerFactory' while setting bean property 'entityManagerFactory'; nested exception is org.springframework.beans.factory.BeanCurrentlyInCreationException: Error creating bean with name 'entityManagerFactory': FactoryBean which is currently in creation returned null from getObject
Finished creating instance of bean 'org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver#30178dcd'
Invoking afterPropertiesSet() on bean with name 'entityManagerFactory'
Building JPA container EntityManagerFactory for persistence unit 'intelTrader'
Adding type registration boolean -> org.hibernate.type.BooleanType@1783715b
Adding type registration boolean -> org.hibernate.type.BooleanType@1783715b
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1783715b
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@973568c
Adding type registration true_false -> org.hibernate.type.TrueFalseType@1b84eb2c
Adding type registration yes_no -> org.hibernate.type.YesNoType@929bf16
Adding type registration byte -> org.hibernate.type.ByteType@5e3a91e9
Adding type registration byte -> org.hibernate.type.ByteType@5e3a91e9
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5e3a91e9
Adding type registration character -> org.hibernate.type.CharacterType@d3f7d71
Adding type registration char -> org.hibernate.type.CharacterType@d3f7d71
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@d3f7d71
Adding type registration short -> org.hibernate.type.ShortType@565c0697
Adding type registration short -> org.hibernate.type.ShortType@565c0697
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@565c0697
Adding type registration integer -> org.hibernate.type.IntegerType@64fa7ecd
Adding type registration int -> org.hibernate.type.IntegerType@64fa7ecd
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@64fa7ecd
Adding type registration long -> org.hibernate.type.LongType@6b88d968
Adding type registration long -> org.hibernate.type.LongType@6b88d968
Adding type registration java.lang.Long -> org.hibernate.type.LongType@6b88d968
Adding type registration float -> org.hibernate.type.FloatType@5f79b234
Adding type registration float -> org.hibernate.type.FloatType@5f79b234
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5f79b234
Adding type registration double -> org.hibernate.type.DoubleType@2ad82934
Adding type registration double -> org.hibernate.type.DoubleType@2ad82934
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2ad82934
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@44f3f8d0
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@44f3f8d0
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@29423654
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@29423654
Adding type registration string -> org.hibernate.type.StringType@6c61c2ea
Adding type registration java.lang.String -> org.hibernate.type.StringType@6c61c2ea
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@323cd01e
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3b7fa1d
Adding type registration url -> org.hibernate.type.UrlType@2a4c4d05
Adding type registration java.net.URL -> org.hibernate.type.UrlType@2a4c4d05
Adding type registration date -> org.hibernate.type.DateType@4c7bd82c
Adding type registration java.sql.Date -> org.hibernate.type.DateType@4c7bd82c
Adding type registration time -> org.hibernate.type.TimeType@36cc3d27
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@36cc3d27
Adding type registration timestamp -> org.hibernate.type.TimestampType@2b18fb03
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2b18fb03
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2b18fb03
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@40bee8c5
Adding type registration calendar -> org.hibernate.type.CalendarType@1f4394a3
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1f4394a3
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1f4394a3
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5fa3dea0
Adding type registration locale -> org.hibernate.type.LocaleType@1f653aff
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1f653aff
Adding type registration currency -> org.hibernate.type.CurrencyType@13654292
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@13654292
Adding type registration timezone -> org.hibernate.type.TimeZoneType@238661f8
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@238661f8
Adding type registration class -> org.hibernate.type.ClassType@27babfa0
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@27babfa0
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@299fb0e9
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@299fb0e9
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1f60cd93
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1ddebd83
Adding type registration binary -> org.hibernate.type.BinaryType@3326740d
Adding type registration byte[] -> org.hibernate.type.BinaryType@3326740d
Adding type registration [B -> org.hibernate.type.BinaryType@3326740d
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@53e95809
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@53e95809
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@53e95809
Adding type registration image -> org.hibernate.type.ImageType@45c21458
Adding type registration characters -> org.hibernate.type.CharArrayType@5188dc4c
Adding type registration char[] -> org.hibernate.type.CharArrayType@5188dc4c
Adding type registration [C -> org.hibernate.type.CharArrayType@5188dc4c
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@12847e8a
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@12847e8a
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@12847e8a
Adding type registration text -> org.hibernate.type.TextType@6b8b1f87
Adding type registration ntext -> org.hibernate.type.NTextType@5d57bcc8
Adding type registration blob -> org.hibernate.type.BlobType@4070c44
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4070c44
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@822585
Adding type registration clob -> org.hibernate.type.ClobType@629c5f19
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@629c5f19
Adding type registration nclob -> org.hibernate.type.NClobType@3334f39d
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3334f39d
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4b5df5d4
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@762c9245
Adding type registration serializable -> org.hibernate.type.SerializableType@1489226c
Adding type registration object -> org.hibernate.type.ObjectType@28be9be
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@28be9be
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4d133921
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@290bcd0f
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@45c3a8d6
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@30819d62
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@d83a5cf
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3dfabff7
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@195110eb
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@192dc149
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Processing PersistenceUnitInfo [
	name: intelTrader
	persistence provider classname: org.hibernate.ejb.HibernatePersistence
	classloader: WebappClassLoader
  context: 
  delegate: false
  repositories:
    /WEB-INF/classes/
----------> Parent Classloader:
ClassRealm[plugin>org.apache.tomcat.maven:tomcat7-maven-plugin:2.0, parent: sun.misc.Launcher$AppClassLoader@35b284a4]

	Temporary classloader: org.springframework.instrument.classloading.SimpleThrowawayClassLoader@aecac89
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/vvarm1/IdeaProjects/intelTrader/src/main/webapp/WEB-INF/classes
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.inteltrader.entity.Instrument
		com.inteltrader.entity.Portfolio
		com.inteltrader.entity.Investment]
	Mapping files names []
	Properties [
		hibernate.connection.username: root
		hibernate.connection.password: root
		hibernate.dialect: org.hibernate.dialect.MySQLDialect
		hibernate.c3p0.min_size: 10
		hibernate.connection.url: jdbc:mysql://localhost:3306/TRADER_DB
		hibernate.show_sql: true
		hibernate.connection.driver_class: com.mysql.jdbc.Driver
		hibernate.hbm2ddl.auto: update]
Detect class: true; detect hbm: true
Detect class: true; detect hbm: true
Searching mapped entities in jar/par: file:/C:/Users/vvarm1/IdeaProjects/intelTrader/src/main/webapp/WEB-INF/classes
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.ejb.event.JpaIntegrator].
No JNDI name configured for binding Ejb3Configuration
Preparing to build session factory with filters : {}
Processing hbm.xml files
Process annotated classes
Binding entity from annotated class: com.inteltrader.entity.Instrument
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Instrument
Bind entity com.inteltrader.entity.Instrument on table INSTRUMENT
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=SYMBOL_NAME, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property symbolName with lazy=false
building SimpleValue for symbolName
Building property symbolName
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=priceList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=priceList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=priceList_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='priceList_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='SYMBOL_NAME', referencedColumn='', mappedBy=''}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Collection role: com.inteltrader.entity.Instrument.priceList
Building property priceList
Binding entity from annotated class: com.inteltrader.entity.Portfolio
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Portfolio
Bind entity com.inteltrader.entity.Portfolio on table PORTFOLIO
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=PORTFOLIO_NAME, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property portfolioName with lazy=false
building SimpleValue for portfolioName
Building property portfolioName
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='associatedPortfolio'}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=investmentList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=element, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=investmentList_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='investmentList_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='associatedPortfolio'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='associatedPortfolio'}
Collection role: com.inteltrader.entity.Portfolio.investmentList
Building property investmentList
Binding entity from annotated class: com.inteltrader.entity.Investment
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Investment
Bind entity com.inteltrader.entity.Investment on table INVESTMENT
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=INVESTMENT_ID, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property investmentId with lazy=false
building SimpleValue for investmentId
Building property investmentId
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=associatedPortfolio, insertable=true, updatable=true, unique=false}
Building property associatedPortfolio
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=currentPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property currentPrice with lazy=false
building SimpleValue for currentPrice
Building property currentPrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=quantity, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property quantity with lazy=false
building SimpleValue for quantity
Building property quantity
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=INVESTMENT_SYMBOL, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property symbolName with lazy=false
building SimpleValue for symbolName
Building property symbolName
Setting SimpleValue typeName for symbolName
Setting SimpleValue typeName for portfolioName
Setting SimpleValue typeName for investmentId
Setting SimpleValue typeName for currentPrice
Setting SimpleValue typeName for quantity
Setting SimpleValue typeName for symbolName
Processing fk mappings (*ToOne and JoinedSubclass)
Processing extends queue
Processing extends queue
Processing collection mappings
Second pass for collection: com.inteltrader.entity.Instrument.priceList
Binding a collection of element: com.inteltrader.entity.Instrument.priceList
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=closePrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property closePrice with lazy=false
building SimpleValue for closePrice
Setting SimpleValue typeName for closePrice
Building property closePrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=highPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property highPrice with lazy=false
building SimpleValue for highPrice
Setting SimpleValue typeName for highPrice
Building property highPrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=lastClosePrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property lastClosePrice with lazy=false
building SimpleValue for lastClosePrice
Setting SimpleValue typeName for lastClosePrice
Building property lastClosePrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=lowPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property lowPrice with lazy=false
building SimpleValue for lowPrice
Setting SimpleValue typeName for lowPrice
Building property lowPrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=openPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property openPrice with lazy=false
building SimpleValue for openPrice
Setting SimpleValue typeName for openPrice
Building property openPrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=priceId, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property priceId with lazy=false
building SimpleValue for priceId
Setting SimpleValue typeName for priceId
Building property priceId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=timeStamp, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property timeStamp with lazy=false
building SimpleValue for timeStamp
Setting SimpleValue typeName for timeStamp
Building property timeStamp
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=totalTradedQuantity, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property totalTradedQuantity with lazy=false
building SimpleValue for totalTradedQuantity
Setting SimpleValue typeName for totalTradedQuantity
Building property totalTradedQuantity
Mapped collection key: SYMBOL_NAME, element: closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity
Second pass for collection: com.inteltrader.entity.Portfolio.investmentList
Binding a OneToMany: com.inteltrader.entity.Portfolio.investmentList through a foreign key
Mapping collection: com.inteltrader.entity.Portfolio.investmentList -> INVESTMENT
Retrieving property com.inteltrader.entity.Investment.associatedPortfolio
Mapped collection key: associatedPortfolio_PORTFOLIO_NAME, one-to-many: com.inteltrader.entity.Investment
Processing native query and ResultSetMapping mappings
Processing association property references
Creating tables' unique integer identifiers
Processing foreign key constraints
Resolving reference to class: com.inteltrader.entity.Instrument
Resolving reference to class: com.inteltrader.entity.Portfolio
HHH000022: c3p0 properties were encountered, but the org.hibernate.service.jdbc.connections.internal.C3P0ConnectionProvider provider class was not found on the classpath; these properties are going to be ignored.
HHH000402: Using Hibernate built-in connection pool (not for production use!)
HHH000115: Hibernate connection pool size: 20
HHH000006: Autocommit mode: true
HHH000401: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/TRADER_DB]
HHH000046: Connection properties: {user=root, password=root, autocommit=true, release_mode=auto}
Opening new JDBC connection
Created connection to: jdbc:mysql://localhost:3306/TRADER_DB, Isolation Level: 4
Database ->
       name : MySQL
    version : 5.6.10-log
      major : 5
      minor : 6
Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.9 ( Revision: ${svn.Revision} )
      major : 5
      minor : 1
JDBC version : 3.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: disabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
multi-tenancy strategy : NONE
Connection release mode: auto
HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
Maximum outer join fetch depth: 2
Default batch fetch size: 1
Generate SQL with comments: disabled
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
HHH000397: Using ASTQueryTranslatorFactory
Query language substitutions: {}
JPA-QL strict compliance: enabled
Second-level cache: enabled
Query cache: disabled
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
Optimize cache for minimal puts: disabled
Structured second-level cache entries: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Named query checking : enabled
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : : disabled
Building session factory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\vvarm1\IdeaProjects\intelTrader\target\tomcat, hibernate.connection.url=jdbc:mysql://localhost:3306/TRADER_DB, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.ejb.discard_pc_on_close=false, catalina.useNaming=true, hibernate.transaction.flush_before_completion=false, os.name=Windows 7, sun.boot.class.path=C:\Program Files\Java\jdk1.7.0_10\jre\lib\resources.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\rt.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\jce.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.7.0_10\jre\classes, java.util.logging.config.file=C:\Users\vvarm1\IdeaProjects\intelTrader\target\tomcat\conf\logging.properties, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.7.0_10-b18, hibernate.connection.autocommit=true, hibernate.c3p0.min_size=10, user.name=vvarm1, shared.loader=, guice.disable.misplaced.annotation.check=true, tomcat.util.buf.StringCache.byte.enabled=true, javax.persistence.validation.mode=AUTO, hibernate.connection.release_mode=auto, idea.launcher.bin.path=C:\Program Files (x86)\JetBrains\IntelliJ IDEA Community Edition 12.0.4\bin, user.language=en, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, sun.boot.library.path=C:\Program Files\Java\jdk1.7.0_10\jre\bin, classworlds.conf=C:\Program Files\Apache Software Foundation\apache-maven-3.0.5\bin\m2.conf, java.version=1.7.0_10, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, user.timezone=Asia/Calcutta, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.7.0_10\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, file.encoding.pkg=sun.io, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.tomcat.,org.apache.jasper., file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=51.0, user.country=US, java.home=C:\Program Files\Java\jdk1.7.0_10\jre, java.vm.info=mixed mode, os.version=6.1, hibernate.transaction.factory_class=org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory, hibernate.query.jpaql_strict_compliance=true, path.separator=;, java.vm.version=23.6-b04, hibernate.connection.password=root, user.variant=, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.scan.DefaultJarScanner.jarsToSkip=bootstrap.jar,commons-daemon.jar,tomcat-juli.jar,annotations-api.jar,el-api.jar,jsp-api.jar,servlet-api.jar,catalina.jar,catalina-ant.jar,catalina-ha.jar,catalina-tribes.jar,jasper.jar,jasper-el.jar,ecj-*.jar,tomcat-api.jar,tomcat-util.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-jni.jar,tomcat-spdy.jar,tomcat-i18n-en.jar,tomcat-i18n-es.jar,tomcat-i18n-fr.jar,tomcat-i18n-ja.jar,tomcat-juli-adapters.jar,catalina-jmx-remote.jar,catalina-ws.jar,tomcat-jdbc.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,jstl.jar,geronimo-spec-jaxrpc*.jar,wsdl4j*.jar,ant.jar,ant-junit*.jar,aspectj*.jar,jmx.jar,h2*.jar,hibernate*.jar,httpclient*.jar,jmx-tools.jar,jta*.jar,log4j*.jar,mail*.jar,slf4j*.jar,xercesImpl.jar,xmlParserAPIs.jar,xml-apis.jar,access-bridge-64.jar,dnsns.jar,jaccess.jar,ldapsec.jar,localedata.jar,sunjce_provider.jar,sunmscapi.jar,sunpkcs11.jar,jhall.jar,tools.jar,sunec.jar,zipfs.jar,gnome-java-bridge.jar,pulse-java.jar,apple_provider.jar,AppleScriptEngine.jar,CoreAudio.jar,dns_sd.jar,j3daudio.jar,j3dcore.jar,j3dutils.jar,jai_core.jar,jai_codec.jar,mlibwrapper_jai.jar,MRJToolkit.jar,vecmath.jar,junit.jar,junit-*.jar,ant-launcher.jar, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.tomcat.,org.apache.jasper., user.script=, java.naming.factory.url.pkgs=org.apache.naming, user.home=C:\Users\vvarm1, org.apache.catalina.startup.ContextConfig.jarsToSkip=, java.specification.vendor=Oracle Corporation, hibernate.hbm2ddl.auto=update, java.library.path=C:\Program Files\Java\jdk1.7.0_10\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\JetBrains\IntelliJ IDEA Community Edition 12.0.4\bin\..\.\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\ThinkPad\Bluetooth Software\;C:\Program Files\ThinkPad\Bluetooth Software\syswow64;c:\Program Files\Intel\WiFi\bin\;c:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files (x86)\Git\cmd;C:\Users\vvarm1\Documents\play-2.0.3;C:\Program Files\Java\jdk1.7.0_10\bin;C:\Program Files\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\QuickTime\QTSystem\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Java\jre6\bin;C:\Program Files\Apache Software Foundation\apache-maven-3.0.5\bin;c:\program files (x86)\jetbrains\intellij idea community edition 12.0.4\jre\jre\bin;., java.vendor.url=http://java.oracle.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, org.apache.catalina.startup.TldConfig.jarsToSkip=, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, common.loader=${catalina.base}/lib,${catalina.base}/lib/*.jar,${catalina.home}/lib,${catalina.home}/lib/*.jar, maven.home=C:\Program Files\Apache Software Foundation\apache-maven-3.0.5, java.runtime.name=Java(TM) SE Runtime Environment, java.class.path=C:\Program Files\Apache Software Foundation\apache-maven-3.0.5\boot\plexus-classworlds-2.4.jar;C:\Program Files (x86)\JetBrains\IntelliJ IDEA Community Edition 12.0.4\lib\idea_rt.jar, sun.java.command=com.intellij.rt.execution.application.AppMain org.codehaus.classworlds.Launcher --no-plugin-registry --fail-fast --strict-checksums --update-snapshots org.apache.tomcat.maven:tomcat7-maven-plugin:2.0:run, hibernate.bytecode.use_reflection_optimizer=false, idea.launcher.port=7537, java.vm.specification.name=Java Virtual Machine Specification, catalina.home=C:\Users\vvarm1\IdeaProjects\intelTrader\target\tomcat, java.vm.specification.version=1.7, sun.os.patch.level=Service Pack 1, sun.cpu.endian=little, java.io.tmpdir=C:\Users\vvarm1\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, server.loader=, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, java.ext.dirs=C:\Program Files\Java\jdk1.7.0_10\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=C:\Users\vvarm1\IdeaProjects\intelTrader, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding=UTF-8, hibernate.use_identifier_rollback=false, java.specification.version=1.7, hibernate.show_sql=true}
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Static SQL for entity: com.inteltrader.entity.Investment
 Version select: select INVESTMENT_ID from TRADER_DB.INVESTMENT where INVESTMENT_ID =?
 Snapshot select: select investment_.INVESTMENT_ID, investment_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_, investment_.currentPrice as currentP2_2_, investment_.quantity as quantity2_, investment_.INVESTMENT_SYMBOL as INVESTMENT4_2_ from TRADER_DB.INVESTMENT investment_ where investment_.INVESTMENT_ID=?
 Insert 0: insert into TRADER_DB.INVESTMENT (associatedPortfolio_PORTFOLIO_NAME, currentPrice, quantity, INVESTMENT_SYMBOL, INVESTMENT_ID) values (?, ?, ?, ?, ?)
 Update 0: update TRADER_DB.INVESTMENT set associatedPortfolio_PORTFOLIO_NAME=?, currentPrice=?, quantity=?, INVESTMENT_SYMBOL=? where INVESTMENT_ID=?
 Delete 0: delete from TRADER_DB.INVESTMENT where INVESTMENT_ID=?
 Identity insert: insert into TRADER_DB.INVESTMENT (associatedPortfolio_PORTFOLIO_NAME, currentPrice, quantity, INVESTMENT_SYMBOL) values (?, ?, ?, ?)
Static SQL for entity: com.inteltrader.entity.Instrument
 Version select: select SYMBOL_NAME from TRADER_DB.INSTRUMENT where SYMBOL_NAME =?
 Snapshot select: select instrument_.SYMBOL_NAME from TRADER_DB.INSTRUMENT instrument_ where instrument_.SYMBOL_NAME=?
 Insert 0: insert into TRADER_DB.INSTRUMENT (SYMBOL_NAME) values (?)
 Update 0: null
 Delete 0: delete from TRADER_DB.INSTRUMENT where SYMBOL_NAME=?
Static SQL for entity: com.inteltrader.entity.Portfolio
 Version select: select PORTFOLIO_NAME from TRADER_DB.PORTFOLIO where PORTFOLIO_NAME =?
 Snapshot select: select portfolio_.PORTFOLIO_NAME from TRADER_DB.PORTFOLIO portfolio_ where portfolio_.PORTFOLIO_NAME=?
 Insert 0: insert into TRADER_DB.PORTFOLIO (PORTFOLIO_NAME) values (?)
 Update 0: null
 Delete 0: delete from TRADER_DB.PORTFOLIO where PORTFOLIO_NAME=?
Static SQL for collection: com.inteltrader.entity.Instrument.priceList
 Row insert: insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
 Row update: update TRADER_DB.INSTRUMENT_PRICE set closePrice=?, highPrice=?, lastClosePrice=?, lowPrice=?, openPrice=?, priceId=?, timeStamp=?, totalTradedQuantity=? where SYMBOL_NAME=? and priceId=? and totalTradedQuantity=?
 Row delete: delete from TRADER_DB.INSTRUMENT_PRICE where SYMBOL_NAME=? and priceId=? and totalTradedQuantity=?
 One-shot delete: delete from TRADER_DB.INSTRUMENT_PRICE where SYMBOL_NAME=?
Static SQL for collection: com.inteltrader.entity.Portfolio.investmentList
 Row insert: update TRADER_DB.INVESTMENT set associatedPortfolio_PORTFOLIO_NAME=? where INVESTMENT_ID=?
 Row delete: update TRADER_DB.INVESTMENT set associatedPortfolio_PORTFOLIO_NAME=null where associatedPortfolio_PORTFOLIO_NAME=? and INVESTMENT_ID=?
 One-shot delete: update TRADER_DB.INVESTMENT set associatedPortfolio_PORTFOLIO_NAME=null where associatedPortfolio_PORTFOLIO_NAME=?
Static select for entity com.inteltrader.entity.Instrument [NONE]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for entity com.inteltrader.entity.Instrument [READ]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for entity com.inteltrader.entity.Instrument [UPGRADE]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [UPGRADE_NOWAIT]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [FORCE]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [PESSIMISTIC_READ]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? lock in share mode
Static select for entity com.inteltrader.entity.Instrument [PESSIMISTIC_WRITE]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [PESSIMISTIC_FORCE_INCREMENT]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [OPTIMISTIC]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for entity com.inteltrader.entity.Instrument [OPTIMISTIC_FORCE_INCREMENT]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for action ACTION_MERGE on entity com.inteltrader.entity.Instrument: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for action ACTION_REFRESH on entity com.inteltrader.entity.Instrument: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for entity com.inteltrader.entity.Investment [NONE]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_1_, investment0_.currentPrice as currentP2_2_1_, investment0_.quantity as quantity2_1_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_1_, portfolio1_.PORTFOLIO_NAME as PORTFOLIO1_3_0_ from TRADER_DB.INVESTMENT investment0_ left outer join TRADER_DB.PORTFOLIO portfolio1_ on investment0_.associatedPortfolio_PORTFOLIO_NAME=portfolio1_.PORTFOLIO_NAME where investment0_.INVESTMENT_ID=?
Static select for entity com.inteltrader.entity.Investment [READ]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_1_, investment0_.currentPrice as currentP2_2_1_, investment0_.quantity as quantity2_1_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_1_, portfolio1_.PORTFOLIO_NAME as PORTFOLIO1_3_0_ from TRADER_DB.INVESTMENT investment0_ left outer join TRADER_DB.PORTFOLIO portfolio1_ on investment0_.associatedPortfolio_PORTFOLIO_NAME=portfolio1_.PORTFOLIO_NAME where investment0_.INVESTMENT_ID=?
Static select for entity com.inteltrader.entity.Investment [UPGRADE]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [UPGRADE_NOWAIT]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [FORCE]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [PESSIMISTIC_READ]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? lock in share mode
Static select for entity com.inteltrader.entity.Investment [PESSIMISTIC_WRITE]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [PESSIMISTIC_FORCE_INCREMENT]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [OPTIMISTIC]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=?
Static select for entity com.inteltrader.entity.Investment [OPTIMISTIC_FORCE_INCREMENT]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=?
Static select for action ACTION_MERGE on entity com.inteltrader.entity.Investment: select investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_1_, investment0_.currentPrice as currentP2_2_1_, investment0_.quantity as quantity2_1_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_1_, portfolio1_.PORTFOLIO_NAME as PORTFOLIO1_3_0_ from TRADER_DB.INVESTMENT investment0_ left outer join TRADER_DB.PORTFOLIO portfolio1_ on investment0_.associatedPortfolio_PORTFOLIO_NAME=portfolio1_.PORTFOLIO_NAME where investment0_.INVESTMENT_ID=?
Static select for action ACTION_REFRESH on entity com.inteltrader.entity.Investment: select investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_1_, investment0_.currentPrice as currentP2_2_1_, investment0_.quantity as quantity2_1_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_1_, portfolio1_.PORTFOLIO_NAME as PORTFOLIO1_3_0_ from TRADER_DB.INVESTMENT investment0_ left outer join TRADER_DB.PORTFOLIO portfolio1_ on investment0_.associatedPortfolio_PORTFOLIO_NAME=portfolio1_.PORTFOLIO_NAME where investment0_.INVESTMENT_ID=?
Static select for entity com.inteltrader.entity.Portfolio [NONE]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_3_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_3_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Static select for entity com.inteltrader.entity.Portfolio [READ]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_3_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_3_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Static select for entity com.inteltrader.entity.Portfolio [UPGRADE]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_3_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [UPGRADE_NOWAIT]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_3_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [FORCE]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_3_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [PESSIMISTIC_READ]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_3_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? lock in share mode
Static select for entity com.inteltrader.entity.Portfolio [PESSIMISTIC_WRITE]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_3_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [PESSIMISTIC_FORCE_INCREMENT]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_3_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [OPTIMISTIC]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_3_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=?
Static select for entity com.inteltrader.entity.Portfolio [OPTIMISTIC_FORCE_INCREMENT]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_3_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=?
Static select for action ACTION_MERGE on entity com.inteltrader.entity.Portfolio: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_3_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_3_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Static select for action ACTION_REFRESH on entity com.inteltrader.entity.Portfolio: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_3_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_3_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Static select for collection com.inteltrader.entity.Instrument.priceList: select pricelist0_.SYMBOL_NAME as SYMBOL1_0_0_, pricelist0_.closePrice as closePrice1_0_, pricelist0_.highPrice as highPrice1_0_, pricelist0_.lastClosePrice as lastClos4_1_0_, pricelist0_.lowPrice as lowPrice1_0_, pricelist0_.openPrice as openPrice1_0_, pricelist0_.priceId as priceId1_0_, pricelist0_.timeStamp as timeStamp1_0_, pricelist0_.totalTradedQuantity as totalTra9_1_0_ from TRADER_DB.INSTRUMENT_PRICE pricelist0_ where pricelist0_.SYMBOL_NAME=?
Static select for one-to-many com.inteltrader.entity.Portfolio.investmentList: select investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_3_1_, investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.associatedPortfolio_PORTFOLIO_NAME=?
Registering SessionFactory: 3f923512-fa45-426c-9047-88937e5f6f35 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Instantiated session factory
HHH000228: Running hbm2ddl schema update
HHH000102: Fetching database metadata
HHH000396: Updating schema
Processing hbm.xml files
Process annotated classes
Processing fk mappings (*ToOne and JoinedSubclass)
Processing extends queue
Processing extends queue
Processing collection mappings
Processing native query and ResultSetMapping mappings
Processing association property references
Creating tables' unique integer identifiers
Processing foreign key constraints
Resolving reference to class: com.inteltrader.entity.Instrument
Resolving reference to class: com.inteltrader.entity.Portfolio
HHH000261: Table found: TRADER_DB.instrument
HHH000037: Columns: [symbol_name]
HHH000108: Foreign keys: []
HHH000126: Indexes: [primary]
HHH000261: Table found: TRADER_DB.instrument_price
HHH000037: Columns: [totaltradedquantity, timestamp, priceid, lastcloseprice, highprice, symbol_name, openprice, closeprice, lowprice]
HHH000108: Foreign keys: [fk3189a2d153ed548d]
HHH000126: Indexes: [fk3189a2d153ed548d]
HHH000261: Table found: TRADER_DB.investment
HHH000037: Columns: [investment_id, associatedportfolio_portfolio_name, currentprice, quantity, investment_symbol]
HHH000108: Foreign keys: [fk8fe41ed3c804d4f3]
HHH000126: Indexes: [fk8fe41ed3c804d4f3, primary]
HHH000261: Table found: TRADER_DB.portfolio
HHH000037: Columns: [portfolio_name]
HHH000108: Foreign keys: []
HHH000126: Indexes: [primary]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
HHH000232: Schema update complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Statistics initialized [enabled=false]
Registering EntityManagerFactory: intelTrader 
HHH000436: Entity manager factory name (intelTrader) is already registered.  If entity manager will be clustered or passivated, specify a unique value for property 'hibernate.ejb.entitymanager_factory_name'
Finished creating instance of bean 'entityManagerFactory'
Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@5a5ea665: defining beans [org.springframework.context.annotation.internalAsyncAnnotationProcessor,org.springframework.context.annotation.internalScheduledAnnotationProcessor,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0,org.springframework.web.servlet.view.InternalResourceViewResolver#0,instrumentDao,portfolioDao,instrumentService,portfolioService,entityManagerFactory,transactionManager,instrument,investment,portfolio,instrumentServiceRest,portfolioServiceRest,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor]; parent: org.springframework.beans.factory.support.DefaultListableBeanFactory@4ca20429
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Creating instance of bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0' to allow for resolving potential circular references
Creating instance of bean '(inner bean)'
Creating shared instance of singleton bean 'transactionManager'
Creating instance of bean 'transactionManager'
Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
Returning cached instance of singleton bean 'entityManagerFactory'
Invoking afterPropertiesSet() on bean with name 'transactionManager'
Finished creating instance of bean 'transactionManager'
Creating instance of bean '(inner bean)'
Finished creating instance of bean '(inner bean)'
Invoking afterPropertiesSet() on bean with name '(inner bean)'
Finished creating instance of bean '(inner bean)'
Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Creating shared instance of singleton bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Creating instance of bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Eagerly caching bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Creating shared instance of singleton bean 'instrumentDao'
Creating instance of bean 'instrumentDao'
Eagerly caching bean 'instrumentDao' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'instrumentDao'
Creating shared instance of singleton bean 'portfolioDao'
Creating instance of bean 'portfolioDao'
Eagerly caching bean 'portfolioDao' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'portfolioDao'
Creating shared instance of singleton bean 'instrumentService'
Creating instance of bean 'instrumentService'
Registered injected element on class [com.inteltrader.service.InstrumentServiceImpl]: PersistenceElement for javax.persistence.EntityManagerFactory com.inteltrader.service.InstrumentServiceImpl.entityManagerFactory
Registered injected element on class [com.inteltrader.service.InstrumentServiceImpl]: AutowiredFieldElement for private com.inteltrader.dao.IInstrumentDao com.inteltrader.service.InstrumentServiceImpl.instrumentDao
Registered injected element on class [com.inteltrader.service.InstrumentServiceImpl]: AutowiredFieldElement for private com.inteltrader.service.PortfolioService com.inteltrader.service.InstrumentServiceImpl.portfolioService
Eagerly caching bean 'instrumentService' to allow for resolving potential circular references
Processing injected method of bean 'instrumentService': PersistenceElement for javax.persistence.EntityManagerFactory com.inteltrader.service.InstrumentServiceImpl.entityManagerFactory
Returning cached instance of singleton bean 'entityManagerFactory'
Processing injected method of bean 'instrumentService': AutowiredFieldElement for private com.inteltrader.dao.IInstrumentDao com.inteltrader.service.InstrumentServiceImpl.instrumentDao
Returning cached instance of singleton bean 'instrumentDao'
Autowiring by type from bean name 'instrumentService' to bean named 'instrumentDao'
Processing injected method of bean 'instrumentService': AutowiredFieldElement for private com.inteltrader.service.PortfolioService com.inteltrader.service.InstrumentServiceImpl.portfolioService
Creating shared instance of singleton bean 'portfolioService'
Creating instance of bean 'portfolioService'
Registered injected element on class [com.inteltrader.service.PortfolioServiceImpl]: PersistenceElement for private javax.persistence.EntityManagerFactory com.inteltrader.service.PortfolioServiceImpl.entityManagerFactory
Registered injected element on class [com.inteltrader.service.PortfolioServiceImpl]: AutowiredFieldElement for private com.inteltrader.dao.IPortfolioDao com.inteltrader.service.PortfolioServiceImpl.portfolioDao
Eagerly caching bean 'portfolioService' to allow for resolving potential circular references
Processing injected method of bean 'portfolioService': PersistenceElement for private javax.persistence.EntityManagerFactory com.inteltrader.service.PortfolioServiceImpl.entityManagerFactory
Returning cached instance of singleton bean 'entityManagerFactory'
Processing injected method of bean 'portfolioService': AutowiredFieldElement for private com.inteltrader.dao.IPortfolioDao com.inteltrader.service.PortfolioServiceImpl.portfolioDao
Returning cached instance of singleton bean 'portfolioDao'
Autowiring by type from bean name 'portfolioService' to bean named 'portfolioDao'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'portfolioService'
Autowiring by type from bean name 'instrumentService' to bean named 'portfolioService'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'instrumentService'
Returning cached instance of singleton bean 'portfolioService'
Returning cached instance of singleton bean 'entityManagerFactory'
Returning cached instance of singleton bean 'transactionManager'
Creating shared instance of singleton bean 'instrument'
Creating instance of bean 'instrument'
Eagerly caching bean 'instrument' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'instrument'
Creating shared instance of singleton bean 'investment'
Creating instance of bean 'investment'
Eagerly caching bean 'investment' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'investment'
Creating shared instance of singleton bean 'portfolio'
Creating instance of bean 'portfolio'
Eagerly caching bean 'portfolio' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'portfolio'
Creating shared instance of singleton bean 'instrumentServiceRest'
Creating instance of bean 'instrumentServiceRest'
Registered injected element on class [com.inteltrader.rest.InstrumentServiceRest]: AutowiredFieldElement for private com.inteltrader.service.InstrumentService com.inteltrader.rest.InstrumentServiceRest.instrumentService
Eagerly caching bean 'instrumentServiceRest' to allow for resolving potential circular references
Processing injected method of bean 'instrumentServiceRest': AutowiredFieldElement for private com.inteltrader.service.InstrumentService com.inteltrader.rest.InstrumentServiceRest.instrumentService
Returning cached instance of singleton bean 'instrumentService'
Autowiring by type from bean name 'instrumentServiceRest' to bean named 'instrumentService'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'instrumentServiceRest'
Creating shared instance of singleton bean 'portfolioServiceRest'
Creating instance of bean 'portfolioServiceRest'
Registered injected element on class [com.inteltrader.rest.PortfolioServiceRest]: AutowiredFieldElement for private com.inteltrader.service.PortfolioService com.inteltrader.rest.PortfolioServiceRest.portfolioService
Eagerly caching bean 'portfolioServiceRest' to allow for resolving potential circular references
Processing injected method of bean 'portfolioServiceRest': AutowiredFieldElement for private com.inteltrader.service.PortfolioService com.inteltrader.rest.PortfolioServiceRest.portfolioService
Returning cached instance of singleton bean 'portfolioService'
Autowiring by type from bean name 'portfolioServiceRest' to bean named 'portfolioService'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'portfolioServiceRest'
Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@5da6e5b7]
Returning cached instance of singleton bean 'lifecycleProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Unable to locate MultipartResolver with name 'multipartResolver': no multipart request handling provided
Creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Unable to locate LocaleResolver with name 'localeResolver': using default [org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver@1c2178ed]
Creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Unable to locate ThemeResolver with name 'themeResolver': using default [org.springframework.web.servlet.theme.FixedThemeResolver@51f59f68]
Creating instance of bean 'org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping'
Looking for URL mappings in application context: WebApplicationContext for namespace 'appServlet-servlet': startup date [Fri Apr 19 17:41:33 IST 2013]; parent: Root WebApplicationContext
Rejected bean name 'org.springframework.context.annotation.internalAsyncAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalScheduledAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalRequiredAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalCommonAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.aop.config.internalAutoProxyCreator': no URL paths identified
Rejected bean name 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0': no URL paths identified
Rejected bean name 'org.springframework.web.servlet.view.InternalResourceViewResolver#0': no URL paths identified
Rejected bean name 'instrumentDao': no URL paths identified
Rejected bean name 'portfolioDao': no URL paths identified
Rejected bean name 'instrumentService': no URL paths identified
Rejected bean name 'portfolioService': no URL paths identified
Rejected bean name 'entityManagerFactory': no URL paths identified
Rejected bean name 'transactionManager': no URL paths identified
Rejected bean name 'instrument': no URL paths identified
Rejected bean name 'investment': no URL paths identified
Rejected bean name 'portfolio': no URL paths identified
Rejected bean name 'instrumentServiceRest': no URL paths identified
Rejected bean name 'portfolioServiceRest': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor': no URL paths identified
Rejected bean name 'environment': no URL paths identified
Rejected bean name 'systemProperties': no URL paths identified
Rejected bean name 'systemEnvironment': no URL paths identified
Rejected bean name 'servletConfig': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry': no URL paths identified
Rejected bean name 'messageSource': no URL paths identified
Rejected bean name 'applicationEventMulticaster': no URL paths identified
Rejected bean name 'lifecycleProcessor': no URL paths identified
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping'
Creating instance of bean 'org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping'
Looking for URL mappings in application context: WebApplicationContext for namespace 'appServlet-servlet': startup date [Fri Apr 19 17:41:33 IST 2013]; parent: Root WebApplicationContext
Rejected bean name 'org.springframework.context.annotation.internalAsyncAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalScheduledAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalRequiredAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalCommonAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.aop.config.internalAutoProxyCreator': no URL paths identified
Rejected bean name 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0': no URL paths identified
Rejected bean name 'org.springframework.web.servlet.view.InternalResourceViewResolver#0': no URL paths identified
Rejected bean name 'instrumentDao': no URL paths identified
Rejected bean name 'portfolioDao': no URL paths identified
Rejected bean name 'instrumentService': no URL paths identified
Rejected bean name 'portfolioService': no URL paths identified
Rejected bean name 'entityManagerFactory': no URL paths identified
Rejected bean name 'transactionManager': no URL paths identified
Rejected bean name 'instrument': no URL paths identified
Rejected bean name 'investment': no URL paths identified
Rejected bean name 'portfolio': no URL paths identified
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/create/{symbol}] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/create/{symbol}.*] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/create/{symbol}/] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/update/{portfolioName}] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/update/{portfolioName}.*] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/update/{portfolioName}/] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/load/{symbol}] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/load/{symbol}.*] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/load/{symbol}/] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/create/{portfolioName}] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/create/{portfolioName}.*] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/create/{portfolioName}/] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/load/{portfolioName}] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/load/{portfolioName}.*] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/load/{portfolioName}/] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/addInvestment/{portfolioName}/{symbolName}] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/addInvestment/{portfolioName}/{symbolName}.*] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/addInvestment/{portfolioName}/{symbolName}/] onto handler 'portfolioServiceRest'
Rejected bean name 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor': no URL paths identified
Rejected bean name 'environment': no URL paths identified
Rejected bean name 'systemProperties': no URL paths identified
Rejected bean name 'systemEnvironment': no URL paths identified
Rejected bean name 'servletConfig': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry': no URL paths identified
Rejected bean name 'messageSource': no URL paths identified
Rejected bean name 'applicationEventMulticaster': no URL paths identified
Rejected bean name 'lifecycleProcessor': no URL paths identified
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping'
No HandlerMappings found in servlet 'appServlet': using default
Creating instance of bean 'org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter'
Creating instance of bean 'org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter'
Creating instance of bean 'org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter'
No HandlerAdapters found in servlet 'appServlet': using default
Creating instance of bean 'org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerExceptionResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerExceptionResolver'
Creating instance of bean 'org.springframework.web.servlet.mvc.annotation.ResponseStatusExceptionResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.annotation.ResponseStatusExceptionResolver'
Creating instance of bean 'org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver'
No HandlerExceptionResolvers found in servlet 'appServlet': using default
Creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Unable to locate RequestToViewNameTranslator with name 'viewNameTranslator': using default [org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@75ceeb77]
Returning cached instance of singleton bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Returning cached instance of singleton bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Unable to locate FlashMapManager with name 'flashMapManager': using default [org.springframework.web.servlet.support.SessionFlashMapManager@65c5b422]
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Searching for key 'spring.liveBeansView.mbeanDomain' in [servletConfigInitParams]
Searching for key 'spring.liveBeansView.mbeanDomain' in [servletContextInitParams]
Searching for key 'spring.liveBeansView.mbeanDomain' in [jndiProperties]
Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain]
Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException: Name [spring.liveBeansView.mbeanDomain] is not bound in this Context. Unable to find [spring.liveBeansView.mbeanDomain].
Looking up JNDI object with name [spring.liveBeansView.mbeanDomain]
JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: Name [spring.liveBeansView.mbeanDomain] is not bound in this Context. Unable to find [spring.liveBeansView.mbeanDomain].. Returning null.
Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
Published WebApplicationContext of servlet 'appServlet' as ServletContext attribute with name [org.springframework.web.servlet.FrameworkServlet.CONTEXT.appServlet]
FrameworkServlet 'appServlet': initialization completed in 522 ms
Servlet 'appServlet' configured successfully
DispatcherServlet with name 'appServlet' processing GET request for [/portfolio/create/myFirstTime]
Matching patterns for request [/portfolio/create/myFirstTime] are [/portfolio/create/{portfolioName}]
URI Template variables for request [/portfolio/create/myFirstTime] are {portfolioName=myFirstTime}
Mapping [/portfolio/create/myFirstTime] to HandlerExecutionChain with handler [com.inteltrader.rest.PortfolioServiceRest@15bda956] and 2 interceptors
Last-Modified value for [/portfolio/create/myFirstTime] is: -1
Invoking request handler method: public org.springframework.http.ResponseEntity com.inteltrader.rest.PortfolioServiceRest.createPortfolio(java.lang.String,javax.servlet.http.HttpServletRequest)
begin
Obtaining JDBC connection
Obtained JDBC connection
initial autocommit status: true
disabling autocommit
Generated identifier: myFirstTime, using strategy: org.hibernate.id.Assigned
committing
Processing flush-time cascades
Dirty checking collections
Collection found: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime], was: [<unreferenced>] (initialized)
Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
Listing entities:
com.inteltrader.entity.Portfolio{portfolioName=myFirstTime, investmentList=[]}
insert into TRADER_DB.PORTFOLIO (PORTFOLIO_NAME) values (?)
committed JDBC Connection
re-enabling autocommit
Written [SUCCESS] as "text/html" using [org.springframework.http.converter.StringHttpMessageConverter@730c148a]
Null ModelAndView returned to DispatcherServlet with name 'appServlet': assuming HandlerAdapter completed request handling
Successfully completed request
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
DispatcherServlet with name 'appServlet' processing GET request for [/portfolio/addInvestment/myFirstTime/AMTEKAUTO]
Matching patterns for request [/portfolio/addInvestment/myFirstTime/AMTEKAUTO] are [/portfolio/addInvestment/{portfolioName}/{symbolName}]
URI Template variables for request [/portfolio/addInvestment/myFirstTime/AMTEKAUTO] are {portfolioName=myFirstTime, symbolName=AMTEKAUTO}
Mapping [/portfolio/addInvestment/myFirstTime/AMTEKAUTO] to HandlerExecutionChain with handler [com.inteltrader.rest.PortfolioServiceRest@15bda956] and 2 interceptors
Last-Modified value for [/portfolio/addInvestment/myFirstTime/AMTEKAUTO] is: -1
Invoking request handler method: public org.springframework.http.ResponseEntity com.inteltrader.rest.PortfolioServiceRest.addInvestment(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
begin
Obtaining JDBC connection
Opening new JDBC connection
Created connection to: jdbc:mysql://localhost:3306/TRADER_DB, Isolation Level: 4
Obtained JDBC connection
initial autocommit status: true
disabling autocommit
Loading entity: [com.inteltrader.entity.Portfolio#myFirstTime]
select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_3_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_3_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Result set row: 0
Result row: null, EntityKey[com.inteltrader.entity.Portfolio#myFirstTime]
Result set contains (possibly empty) collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Resolving associations for [com.inteltrader.entity.Portfolio#myFirstTime]
Done materializing entity [com.inteltrader.entity.Portfolio#myFirstTime]
1 collections were found in result set for role: com.inteltrader.entity.Portfolio.investmentList
Collection fully initialized: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
1 collections initialized for role: com.inteltrader.entity.Portfolio.investmentList
Done entity load
Executing identity-insert immediately
insert into TRADER_DB.INVESTMENT (associatedPortfolio_PORTFOLIO_NAME, currentPrice, quantity, INVESTMENT_SYMBOL) values (?, ?, ?, ?)
Natively generated identity: 1
committing
Processing flush-time cascades
Dirty checking collections
Collection dirty: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Collection found: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime], was: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime] (initialized)
Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
Flushed: 0 (re)creations, 1 updates, 0 removals to 1 collections
Listing entities:
com.inteltrader.entity.Investment{investmentId=1, quantity=null, currentPrice=null, symbolName=AMTEKAUTO, associatedPortfolio=com.inteltrader.entity.Portfolio#myFirstTime}
com.inteltrader.entity.Portfolio{portfolioName=myFirstTime, investmentList=[com.inteltrader.entity.Investment#1]}
committed JDBC Connection
re-enabling autocommit
Written [SUCCESS] as "text/html" using [org.springframework.http.converter.StringHttpMessageConverter@730c148a]
Null ModelAndView returned to DispatcherServlet with name 'appServlet': assuming HandlerAdapter completed request handling
Successfully completed request
DispatcherServlet with name 'appServlet' processing GET request for [/portfolio/load/MyFirstTime]
Matching patterns for request [/portfolio/load/MyFirstTime] are [/portfolio/load/{portfolioName}]
URI Template variables for request [/portfolio/load/MyFirstTime] are {portfolioName=MyFirstTime}
Mapping [/portfolio/load/MyFirstTime] to HandlerExecutionChain with handler [com.inteltrader.rest.PortfolioServiceRest@15bda956] and 2 interceptors
Last-Modified value for [/portfolio/load/MyFirstTime] is: -1
Invoking request handler method: public org.springframework.http.ResponseEntity com.inteltrader.rest.PortfolioServiceRest.loadInstrument(java.lang.String,javax.servlet.http.HttpServletRequest)
Loading entity: [com.inteltrader.entity.Portfolio#MyFirstTime]
Obtaining JDBC connection
Opening new JDBC connection
Created connection to: jdbc:mysql://localhost:3306/TRADER_DB, Isolation Level: 4
Obtained JDBC connection
select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_3_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_3_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Result set row: 0
Result row: EntityKey[com.inteltrader.entity.Investment#1], EntityKey[com.inteltrader.entity.Portfolio#MyFirstTime]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Resolving associations for [com.inteltrader.entity.Investment#1]
Loading entity: [com.inteltrader.entity.Portfolio#myFirstTime]
select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_3_1_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_3_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.associatedPortfolio_PORTFOLIO_NAME where portfolio0_.PORTFOLIO_NAME=?
Result set row: 0
Result row: EntityKey[com.inteltrader.entity.Investment#1], EntityKey[com.inteltrader.entity.Portfolio#myFirstTime]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Resolving associations for [com.inteltrader.entity.Portfolio#myFirstTime]
Done materializing entity [com.inteltrader.entity.Portfolio#myFirstTime]
No collections were found in result set for role: com.inteltrader.entity.Portfolio.investmentList
Done entity load
Done materializing entity [com.inteltrader.entity.Investment#1]
Resolving associations for [com.inteltrader.entity.Portfolio#MyFirstTime]
Done materializing entity [com.inteltrader.entity.Portfolio#MyFirstTime]
1 collections were found in result set for role: com.inteltrader.entity.Portfolio.investmentList
Collection fully initialized: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
1 collections initialized for role: com.inteltrader.entity.Portfolio.investmentList
Loading collection: [com.inteltrader.entity.Portfolio.investmentList#MyFirstTime]
select investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_3_1_, investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.associatedPortfolio_PORTFOLIO_NAME as associat5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.associatedPortfolio_PORTFOLIO_NAME=?
Result set contains (possibly empty) collection: [com.inteltrader.entity.Portfolio.investmentList#MyFirstTime]
Result set row: 0
Result row: EntityKey[com.inteltrader.entity.Investment#1]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
1 collections were found in result set for role: com.inteltrader.entity.Portfolio.investmentList
Collection fully initialized: [com.inteltrader.entity.Portfolio.investmentList#MyFirstTime]
1 collections initialized for role: com.inteltrader.entity.Portfolio.investmentList
Done loading collection
Done entity load
Written [{"portfolioName":"MyFirstTime","investmentList":[]}] as "text/html" using [org.springframework.http.converter.StringHttpMessageConverter@730c148a]
Null ModelAndView returned to DispatcherServlet with name 'appServlet': assuming HandlerAdapter completed request handling
Successfully completed request
Initializing servlet 'appServlet'
Initializing new StandardServletEnvironment
Adding [servletConfigInitParams] PropertySource with lowest search precedence
Adding [servletContextInitParams] PropertySource with lowest search precedence
Adding [jndiProperties] PropertySource with lowest search precedence
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,jndiProperties,systemProperties,systemEnvironment]
FrameworkServlet 'appServlet': initialization started
Servlet with name 'appServlet' will try to create custom WebApplicationContext context of class 'org.springframework.web.context.support.XmlWebApplicationContext', using parent context [Root WebApplicationContext: startup date [Fri Apr 19 17:56:19 IST 2013]; root of context hierarchy]
Searching for key 'spring.profiles.active' in [servletConfigInitParams]
Searching for key 'spring.profiles.active' in [servletContextInitParams]
Searching for key 'spring.profiles.active' in [jndiProperties]
Looking up JNDI object with name [java:comp/env/spring.profiles.active]
Converted JNDI name [java:comp/env/spring.profiles.active] not found - trying original name [spring.profiles.active]. javax.naming.NameNotFoundException: Name [spring.profiles.active] is not bound in this Context. Unable to find [spring.profiles.active].
Looking up JNDI object with name [spring.profiles.active]
JNDI lookup for name [spring.profiles.active] threw NamingException with message: Name [spring.profiles.active] is not bound in this Context. Unable to find [spring.profiles.active].. Returning null.
Searching for key 'spring.profiles.active' in [systemProperties]
Searching for key 'spring.profiles.active' in [systemEnvironment]
Could not find key 'spring.profiles.active' in any property source. Returning [null]
Searching for key 'spring.profiles.default' in [servletConfigInitParams]
Searching for key 'spring.profiles.default' in [servletContextInitParams]
Searching for key 'spring.profiles.default' in [jndiProperties]
Looking up JNDI object with name [java:comp/env/spring.profiles.default]
Converted JNDI name [java:comp/env/spring.profiles.default] not found - trying original name [spring.profiles.default]. javax.naming.NameNotFoundException: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].
Looking up JNDI object with name [spring.profiles.default]
JNDI lookup for name [spring.profiles.default] threw NamingException with message: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].. Returning null.
Searching for key 'spring.profiles.default' in [systemProperties]
Searching for key 'spring.profiles.default' in [systemEnvironment]
Could not find key 'spring.profiles.default' in any property source. Returning [null]
Searching for key 'spring.profiles.default' in [servletConfigInitParams]
Searching for key 'spring.profiles.default' in [servletContextInitParams]
Searching for key 'spring.profiles.default' in [jndiProperties]
Looking up JNDI object with name [java:comp/env/spring.profiles.default]
Converted JNDI name [java:comp/env/spring.profiles.default] not found - trying original name [spring.profiles.default]. javax.naming.NameNotFoundException: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].
Looking up JNDI object with name [spring.profiles.default]
JNDI lookup for name [spring.profiles.default] threw NamingException with message: Name [spring.profiles.default] is not bound in this Context. Unable to find [spring.profiles.default].. Returning null.
Searching for key 'spring.profiles.default' in [systemProperties]
Searching for key 'spring.profiles.default' in [systemEnvironment]
Could not find key 'spring.profiles.default' in any property source. Returning [null]
Replacing [servletContextInitParams] PropertySource with [servletContextInitParams]
Replacing [servletConfigInitParams] PropertySource with [servletConfigInitParams]
Refreshing WebApplicationContext for namespace 'appServlet-servlet': startup date [Fri Apr 19 17:56:23 IST 2013]; parent: Root WebApplicationContext
Initializing new StandardEnvironment
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
Initializing new StandardEnvironment
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
Loading schema mappings from [META-INF/spring.schemas]
Loaded schema mappings: {http://www.springframework.org/schema/data/jpa/spring-jpa-1.2.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.2.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.1.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.1.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.5.xsd=org/springframework/data/repository/config/spring-repository-1.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.0.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.3.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.4.xsd=org/springframework/data/repository/config/spring-repository-1.4.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.3.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/data/repository/spring-repository.xsd=org/springframework/data/repository/config/spring-repository-1.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.0.xsd=org/springframework/data/repository/config/spring-repository-1.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.1.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.1.xsd
Found XML schema [http://www.springframework.org/schema/task/spring-task-3.0.xsd] in classpath: org/springframework/scheduling/config/spring-task-3.0.xsd
Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd
Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd
Found XML schema [http://www.springframework.org/schema/tx/spring-tx-3.1.xsd] in classpath: org/springframework/transaction/config/spring-tx-3.1.xsd
Loading bean definitions
Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/data/repository=org.springframework.data.repository.config.RepositoryNameSpaceHandler, http://www.springframework.org/schema/data/jpa=org.springframework.data.jpa.repository.config.JpaRepositoryNameSpaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
Neither XML 'id' nor 'name' specified - using generated bean name [org.springframework.web.servlet.view.InternalResourceViewResolver#0]
Neither XML 'id' nor 'name' specified - using generated bean name [org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver#749557ac]
Initializing new StandardEnvironment
Adding [systemProperties] PropertySource with lowest search precedence
Adding [systemEnvironment] PropertySource with lowest search precedence
Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
Looking for matching resources in directory tree [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Searching directory [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util] for files matching pattern [C:/Users/vvarm1/IdeaProjects/intelTrader/target/classes/com/inteltrader/**/*.class]
Resolved location pattern [classpath*:com/inteltrader/**/*.class] to resources [file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\Advice.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\FIFOList.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\InstrumentVo.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\Strategies.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\Strategy.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\advisor\StrategyMACD.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao\IInstrumentDao.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao\InstrumentDao.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao\IPortfolioDao.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\dao\PortfolioDao.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Instrument.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Investment.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Portfolio.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Price.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Transactions.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest\InstrumentServiceRest.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest\PortfolioServiceRest.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\AnalyserService.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\CronService.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\InstrumentService.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\InstrumentServiceImpl.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\PortfolioService.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\service\PortfolioServiceImpl.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util\DownloadZip.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util\ExtractZipFile.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util\ReadPriceCsv.class], file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\util\RestCodes.class]]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Instrument.class]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Investment.class]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\entity\Portfolio.class]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest\InstrumentServiceRest.class]
Identified candidate component class: file [C:\Users\vvarm1\IdeaProjects\intelTrader\target\classes\com\inteltrader\rest\PortfolioServiceRest.class]
Loaded 21 bean definitions from location pattern [/WEB-INF/applicationContext.xml]
Bean factory for WebApplicationContext for namespace 'appServlet-servlet': org.springframework.beans.factory.support.DefaultListableBeanFactory@2f924b3f: defining beans [org.springframework.context.annotation.internalAsyncAnnotationProcessor,org.springframework.context.annotation.internalScheduledAnnotationProcessor,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0,org.springframework.web.servlet.view.InternalResourceViewResolver#0,instrumentDao,portfolioDao,instrumentService,portfolioService,entityManagerFactory,transactionManager,instrument,investment,portfolio,instrumentServiceRest,portfolioServiceRest]; parent: org.springframework.beans.factory.support.DefaultListableBeanFactory@52f796fa
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Creating instance of bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Eagerly caching bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@4c721585]
Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@55e2f5f8]
Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.DelegatingThemeSource@278298d5]
Creating shared instance of singleton bean 'entityManagerFactory'
Creating instance of bean 'entityManagerFactory'
Eagerly caching bean 'entityManagerFactory' to allow for resolving potential circular references
Creating instance of bean 'org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver#749557ac'
Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Creating instance of bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0' to allow for resolving potential circular references
Creating instance of bean '(inner bean)'
Creating shared instance of singleton bean 'transactionManager'
Creating instance of bean 'transactionManager'
Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
Returning eagerly cached instance of singleton bean 'entityManagerFactory' that is not fully initialized yet - a consequence of a circular reference
Ignoring currently created advisor 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0': Error creating bean with name 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0': Cannot create inner bean '(inner bean)' of type [org.springframework.transaction.interceptor.TransactionInterceptor] while setting bean property 'transactionInterceptor'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)': Cannot resolve reference to bean 'transactionManager' while setting bean property 'transactionManager'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'transactionManager' defined in ServletContext resource [/WEB-INF/applicationContext.xml]: Cannot resolve reference to bean 'entityManagerFactory' while setting bean property 'entityManagerFactory'; nested exception is org.springframework.beans.factory.BeanCurrentlyInCreationException: Error creating bean with name 'entityManagerFactory': FactoryBean which is currently in creation returned null from getObject
Finished creating instance of bean 'org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver#749557ac'
Invoking afterPropertiesSet() on bean with name 'entityManagerFactory'
Building JPA container EntityManagerFactory for persistence unit 'intelTrader'
Adding type registration boolean -> org.hibernate.type.BooleanType@29b72284
Adding type registration boolean -> org.hibernate.type.BooleanType@29b72284
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@29b72284
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@53225e0
Adding type registration true_false -> org.hibernate.type.TrueFalseType@5c7ca13e
Adding type registration yes_no -> org.hibernate.type.YesNoType@660fba2
Adding type registration byte -> org.hibernate.type.ByteType@72034df1
Adding type registration byte -> org.hibernate.type.ByteType@72034df1
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@72034df1
Adding type registration character -> org.hibernate.type.CharacterType@34a5e78c
Adding type registration char -> org.hibernate.type.CharacterType@34a5e78c
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@34a5e78c
Adding type registration short -> org.hibernate.type.ShortType@241fe312
Adding type registration short -> org.hibernate.type.ShortType@241fe312
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@241fe312
Adding type registration integer -> org.hibernate.type.IntegerType@1715518c
Adding type registration int -> org.hibernate.type.IntegerType@1715518c
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1715518c
Adding type registration long -> org.hibernate.type.LongType@56d13e2f
Adding type registration long -> org.hibernate.type.LongType@56d13e2f
Adding type registration java.lang.Long -> org.hibernate.type.LongType@56d13e2f
Adding type registration float -> org.hibernate.type.FloatType@69fba7e4
Adding type registration float -> org.hibernate.type.FloatType@69fba7e4
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@69fba7e4
Adding type registration double -> org.hibernate.type.DoubleType@520f5bd5
Adding type registration double -> org.hibernate.type.DoubleType@520f5bd5
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@520f5bd5
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@58dae7fd
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@58dae7fd
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4787fa4c
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4787fa4c
Adding type registration string -> org.hibernate.type.StringType@6166432
Adding type registration java.lang.String -> org.hibernate.type.StringType@6166432
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6834778
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1990c3f5
Adding type registration url -> org.hibernate.type.UrlType@59bc9a45
Adding type registration java.net.URL -> org.hibernate.type.UrlType@59bc9a45
Adding type registration date -> org.hibernate.type.DateType@4c18982f
Adding type registration java.sql.Date -> org.hibernate.type.DateType@4c18982f
Adding type registration time -> org.hibernate.type.TimeType@629f76cf
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@629f76cf
Adding type registration timestamp -> org.hibernate.type.TimestampType@1b092897
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1b092897
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1b092897
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@158bdd29
Adding type registration calendar -> org.hibernate.type.CalendarType@53b79d3f
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@53b79d3f
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@53b79d3f
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@716f5d2f
Adding type registration locale -> org.hibernate.type.LocaleType@29c408c6
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@29c408c6
Adding type registration currency -> org.hibernate.type.CurrencyType@3408d38e
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3408d38e
Adding type registration timezone -> org.hibernate.type.TimeZoneType@2d7b9d2a
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2d7b9d2a
Adding type registration class -> org.hibernate.type.ClassType@1cc63c88
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1cc63c88
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@aacc49a
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@aacc49a
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4a55ddd0
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@22e31699
Adding type registration binary -> org.hibernate.type.BinaryType@7d3fe3aa
Adding type registration byte[] -> org.hibernate.type.BinaryType@7d3fe3aa
Adding type registration [B -> org.hibernate.type.BinaryType@7d3fe3aa
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@162382a5
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@162382a5
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@162382a5
Adding type registration image -> org.hibernate.type.ImageType@301e4154
Adding type registration characters -> org.hibernate.type.CharArrayType@47aef63a
Adding type registration char[] -> org.hibernate.type.CharArrayType@47aef63a
Adding type registration [C -> org.hibernate.type.CharArrayType@47aef63a
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@c9f1df
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@c9f1df
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@c9f1df
Adding type registration text -> org.hibernate.type.TextType@11dfdb5
Adding type registration ntext -> org.hibernate.type.NTextType@79fb73c5
Adding type registration blob -> org.hibernate.type.BlobType@1800c4b9
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1800c4b9
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1536e029
Adding type registration clob -> org.hibernate.type.ClobType@45c066e2
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@45c066e2
Adding type registration nclob -> org.hibernate.type.NClobType@30627bfc
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@30627bfc
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3da736e7
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5638c9df
Adding type registration serializable -> org.hibernate.type.SerializableType@5a10836b
Adding type registration object -> org.hibernate.type.ObjectType@20d7aa52
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@20d7aa52
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6effdc36
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5fd29628
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7a804d3d
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7d4f1e9f
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@556398fe
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7dd1777d
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@42fbf013
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2a4e91c0
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Processing PersistenceUnitInfo [
	name: intelTrader
	persistence provider classname: org.hibernate.ejb.HibernatePersistence
	classloader: WebappClassLoader
  context: 
  delegate: false
  repositories:
    /WEB-INF/classes/
----------> Parent Classloader:
ClassRealm[plugin>org.apache.tomcat.maven:tomcat7-maven-plugin:2.0, parent: sun.misc.Launcher$AppClassLoader@1875303f]

	Temporary classloader: org.springframework.instrument.classloading.SimpleThrowawayClassLoader@c42e9f3
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/vvarm1/IdeaProjects/intelTrader/src/main/webapp/WEB-INF/classes
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.inteltrader.entity.Instrument
		com.inteltrader.entity.Portfolio
		com.inteltrader.entity.Investment]
	Mapping files names []
	Properties [
		hibernate.connection.username: root
		hibernate.connection.password: root
		hibernate.dialect: org.hibernate.dialect.MySQLDialect
		hibernate.c3p0.min_size: 10
		hibernate.connection.url: jdbc:mysql://localhost:3306/TRADER_DB
		hibernate.show_sql: true
		hibernate.connection.driver_class: com.mysql.jdbc.Driver
		hibernate.hbm2ddl.auto: update]
Detect class: true; detect hbm: true
Detect class: true; detect hbm: true
Searching mapped entities in jar/par: file:/C:/Users/vvarm1/IdeaProjects/intelTrader/src/main/webapp/WEB-INF/classes
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.ejb.event.JpaIntegrator].
No JNDI name configured for binding Ejb3Configuration
Preparing to build session factory with filters : {}
Processing hbm.xml files
Process annotated classes
Binding entity from annotated class: com.inteltrader.entity.Instrument
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Instrument
Bind entity com.inteltrader.entity.Instrument on table INSTRUMENT
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=SYMBOL_NAME, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property symbolName with lazy=false
building SimpleValue for symbolName
Building property symbolName
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=priceList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=priceList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT), mappingColumn=priceList_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='priceList_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='SYMBOL_NAME', referencedColumn='', mappedBy=''}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Collection role: com.inteltrader.entity.Instrument.priceList
Building property priceList
Binding entity from annotated class: com.inteltrader.entity.Portfolio
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Portfolio
Bind entity com.inteltrader.entity.Portfolio on table PORTFOLIO
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=PORTFOLIO_NAME, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property portfolioName with lazy=false
building SimpleValue for portfolioName
Building property portfolioName
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='associatedPortfolio'}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=investmentList, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=element, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.PORTFOLIO), mappingColumn=investmentList_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='investmentList_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='associatedPortfolio'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='associatedPortfolio'}
Collection role: com.inteltrader.entity.Portfolio.investmentList
Building property investmentList
Binding entity from annotated class: com.inteltrader.entity.Investment
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Investment
Bind entity com.inteltrader.entity.Investment on table INVESTMENT
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=INVESTMENT_ID, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property investmentId with lazy=false
building SimpleValue for investmentId
Building property investmentId
Binding column: Ejb3JoinColumn{logicalColumnName='INVESTMENT_PORTFOLIO', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=associatedPortfolio, insertable=true, updatable=true, unique=false}
Building property associatedPortfolio
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=currentPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property currentPrice with lazy=false
building SimpleValue for currentPrice
Building property currentPrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=quantity, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property quantity with lazy=false
building SimpleValue for quantity
Building property quantity
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INVESTMENT), mappingColumn=INVESTMENT_SYMBOL, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property symbolName with lazy=false
building SimpleValue for symbolName
Building property symbolName
Setting SimpleValue typeName for symbolName
Setting SimpleValue typeName for portfolioName
Setting SimpleValue typeName for investmentId
Setting SimpleValue typeName for currentPrice
Setting SimpleValue typeName for quantity
Setting SimpleValue typeName for symbolName
Processing fk mappings (*ToOne and JoinedSubclass)
Processing extends queue
Processing extends queue
Processing collection mappings
Second pass for collection: com.inteltrader.entity.Instrument.priceList
Binding a collection of element: com.inteltrader.entity.Instrument.priceList
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=closePrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property closePrice with lazy=false
building SimpleValue for closePrice
Setting SimpleValue typeName for closePrice
Building property closePrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=highPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property highPrice with lazy=false
building SimpleValue for highPrice
Setting SimpleValue typeName for highPrice
Building property highPrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=lastClosePrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property lastClosePrice with lazy=false
building SimpleValue for lastClosePrice
Setting SimpleValue typeName for lastClosePrice
Building property lastClosePrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=lowPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property lowPrice with lazy=false
building SimpleValue for lowPrice
Setting SimpleValue typeName for lowPrice
Building property lowPrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=openPrice, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property openPrice with lazy=false
building SimpleValue for openPrice
Setting SimpleValue typeName for openPrice
Building property openPrice
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=priceId, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property priceId with lazy=false
building SimpleValue for priceId
Setting SimpleValue typeName for priceId
Building property priceId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=timeStamp, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property timeStamp with lazy=false
building SimpleValue for timeStamp
Setting SimpleValue typeName for timeStamp
Building property timeStamp
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TRADER_DB.INSTRUMENT_PRICE), mappingColumn=totalTradedQuantity, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property totalTradedQuantity with lazy=false
building SimpleValue for totalTradedQuantity
Setting SimpleValue typeName for totalTradedQuantity
Building property totalTradedQuantity
Mapped collection key: SYMBOL_NAME, element: closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity
Second pass for collection: com.inteltrader.entity.Portfolio.investmentList
Binding a OneToMany: com.inteltrader.entity.Portfolio.investmentList through a foreign key
Mapping collection: com.inteltrader.entity.Portfolio.investmentList -> INVESTMENT
Retrieving property com.inteltrader.entity.Investment.associatedPortfolio
Mapped collection key: INVESTMENT_PORTFOLIO, one-to-many: com.inteltrader.entity.Investment
Processing native query and ResultSetMapping mappings
Processing association property references
Creating tables' unique integer identifiers
Processing foreign key constraints
Resolving reference to class: com.inteltrader.entity.Instrument
Resolving reference to class: com.inteltrader.entity.Portfolio
HHH000022: c3p0 properties were encountered, but the org.hibernate.service.jdbc.connections.internal.C3P0ConnectionProvider provider class was not found on the classpath; these properties are going to be ignored.
HHH000402: Using Hibernate built-in connection pool (not for production use!)
HHH000115: Hibernate connection pool size: 20
HHH000006: Autocommit mode: true
HHH000401: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/TRADER_DB]
HHH000046: Connection properties: {user=root, password=root, autocommit=true, release_mode=auto}
Opening new JDBC connection
Created connection to: jdbc:mysql://localhost:3306/TRADER_DB, Isolation Level: 4
Database ->
       name : MySQL
    version : 5.6.10-log
      major : 5
      minor : 6
Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.9 ( Revision: ${svn.Revision} )
      major : 5
      minor : 1
JDBC version : 3.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: disabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
multi-tenancy strategy : NONE
Connection release mode: auto
HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
Maximum outer join fetch depth: 2
Default batch fetch size: 1
Generate SQL with comments: disabled
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
HHH000397: Using ASTQueryTranslatorFactory
Query language substitutions: {}
JPA-QL strict compliance: enabled
Second-level cache: enabled
Query cache: disabled
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
Optimize cache for minimal puts: disabled
Structured second-level cache entries: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Named query checking : enabled
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : : disabled
Building session factory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=C:\Users\vvarm1\IdeaProjects\intelTrader\target\tomcat, hibernate.connection.url=jdbc:mysql://localhost:3306/TRADER_DB, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.ejb.discard_pc_on_close=false, catalina.useNaming=true, hibernate.transaction.flush_before_completion=false, os.name=Windows 7, sun.boot.class.path=C:\Program Files\Java\jdk1.7.0_10\jre\lib\resources.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\rt.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\jce.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.7.0_10\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.7.0_10\jre\classes, java.util.logging.config.file=C:\Users\vvarm1\IdeaProjects\intelTrader\target\tomcat\conf\logging.properties, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.7.0_10-b18, hibernate.connection.autocommit=true, hibernate.c3p0.min_size=10, user.name=vvarm1, shared.loader=, guice.disable.misplaced.annotation.check=true, tomcat.util.buf.StringCache.byte.enabled=true, javax.persistence.validation.mode=AUTO, hibernate.connection.release_mode=auto, idea.launcher.bin.path=C:\Program Files (x86)\JetBrains\IntelliJ IDEA Community Edition 12.0.4\bin, user.language=en, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, sun.boot.library.path=C:\Program Files\Java\jdk1.7.0_10\jre\bin, classworlds.conf=C:\Program Files\Apache Software Foundation\apache-maven-3.0.5\bin\m2.conf, java.version=1.7.0_10, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, user.timezone=Asia/Calcutta, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.7.0_10\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, file.encoding.pkg=sun.io, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.tomcat.,org.apache.jasper., file.separator=\, java.specification.name=Java Platform API Specification, java.class.version=51.0, user.country=US, java.home=C:\Program Files\Java\jdk1.7.0_10\jre, java.vm.info=mixed mode, os.version=6.1, hibernate.transaction.factory_class=org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory, hibernate.query.jpaql_strict_compliance=true, path.separator=;, java.vm.version=23.6-b04, hibernate.connection.password=root, user.variant=, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.scan.DefaultJarScanner.jarsToSkip=bootstrap.jar,commons-daemon.jar,tomcat-juli.jar,annotations-api.jar,el-api.jar,jsp-api.jar,servlet-api.jar,catalina.jar,catalina-ant.jar,catalina-ha.jar,catalina-tribes.jar,jasper.jar,jasper-el.jar,ecj-*.jar,tomcat-api.jar,tomcat-util.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-jni.jar,tomcat-spdy.jar,tomcat-i18n-en.jar,tomcat-i18n-es.jar,tomcat-i18n-fr.jar,tomcat-i18n-ja.jar,tomcat-juli-adapters.jar,catalina-jmx-remote.jar,catalina-ws.jar,tomcat-jdbc.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,jstl.jar,geronimo-spec-jaxrpc*.jar,wsdl4j*.jar,ant.jar,ant-junit*.jar,aspectj*.jar,jmx.jar,h2*.jar,hibernate*.jar,httpclient*.jar,jmx-tools.jar,jta*.jar,log4j*.jar,mail*.jar,slf4j*.jar,xercesImpl.jar,xmlParserAPIs.jar,xml-apis.jar,access-bridge-64.jar,dnsns.jar,jaccess.jar,ldapsec.jar,localedata.jar,sunjce_provider.jar,sunmscapi.jar,sunpkcs11.jar,jhall.jar,tools.jar,sunec.jar,zipfs.jar,gnome-java-bridge.jar,pulse-java.jar,apple_provider.jar,AppleScriptEngine.jar,CoreAudio.jar,dns_sd.jar,j3daudio.jar,j3dcore.jar,j3dutils.jar,jai_core.jar,jai_codec.jar,mlibwrapper_jai.jar,MRJToolkit.jar,vecmath.jar,junit.jar,junit-*.jar,ant-launcher.jar, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.tomcat.,org.apache.jasper., user.script=, java.naming.factory.url.pkgs=org.apache.naming, user.home=C:\Users\vvarm1, org.apache.catalina.startup.ContextConfig.jarsToSkip=, java.specification.vendor=Oracle Corporation, hibernate.hbm2ddl.auto=update, java.library.path=C:\Program Files\Java\jdk1.7.0_10\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\JetBrains\IntelliJ IDEA Community Edition 12.0.4\bin\..\.\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\ThinkPad\Bluetooth Software\;C:\Program Files\ThinkPad\Bluetooth Software\syswow64;c:\Program Files\Intel\WiFi\bin\;c:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files (x86)\Git\cmd;C:\Users\vvarm1\Documents\play-2.0.3;C:\Program Files\Java\jdk1.7.0_10\bin;C:\Program Files\MySQL\MySQL Server 5.5\bin;C:\Program Files (x86)\QuickTime\QTSystem\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Java\jre6\bin;C:\Program Files\Apache Software Foundation\apache-maven-3.0.5\bin;c:\program files (x86)\jetbrains\intellij idea community edition 12.0.4\jre\jre\bin;., java.vendor.url=http://java.oracle.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, org.apache.catalina.startup.TldConfig.jarsToSkip=, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, common.loader=${catalina.base}/lib,${catalina.base}/lib/*.jar,${catalina.home}/lib,${catalina.home}/lib/*.jar, maven.home=C:\Program Files\Apache Software Foundation\apache-maven-3.0.5, java.runtime.name=Java(TM) SE Runtime Environment, java.class.path=C:\Program Files\Apache Software Foundation\apache-maven-3.0.5\boot\plexus-classworlds-2.4.jar;C:\Program Files (x86)\JetBrains\IntelliJ IDEA Community Edition 12.0.4\lib\idea_rt.jar, sun.java.command=com.intellij.rt.execution.application.AppMain org.codehaus.classworlds.Launcher --no-plugin-registry --fail-fast --strict-checksums --update-snapshots org.apache.tomcat.maven:tomcat7-maven-plugin:2.0:run, hibernate.bytecode.use_reflection_optimizer=false, idea.launcher.port=7533, java.vm.specification.name=Java Virtual Machine Specification, catalina.home=C:\Users\vvarm1\IdeaProjects\intelTrader\target\tomcat, java.vm.specification.version=1.7, sun.os.patch.level=Service Pack 1, sun.cpu.endian=little, java.io.tmpdir=C:\Users\vvarm1\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, server.loader=, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, java.ext.dirs=C:\Program Files\Java\jdk1.7.0_10\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, user.dir=C:\Users\vvarm1\IdeaProjects\intelTrader, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding=UTF-8, hibernate.use_identifier_rollback=false, java.specification.version=1.7, hibernate.show_sql=true}
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Static SQL for entity: com.inteltrader.entity.Investment
 Version select: select INVESTMENT_ID from TRADER_DB.INVESTMENT where INVESTMENT_ID =?
 Snapshot select: select investment_.INVESTMENT_ID, investment_.currentPrice as currentP2_2_, investment_.quantity as quantity2_, investment_.INVESTMENT_SYMBOL as INVESTMENT4_2_ from TRADER_DB.INVESTMENT investment_ where investment_.INVESTMENT_ID=?
 Insert 0: insert into TRADER_DB.INVESTMENT (INVESTMENT_PORTFOLIO, currentPrice, quantity, INVESTMENT_SYMBOL, INVESTMENT_ID) values (?, ?, ?, ?, ?)
 Update 0: update TRADER_DB.INVESTMENT set currentPrice=?, quantity=?, INVESTMENT_SYMBOL=? where INVESTMENT_ID=?
 Delete 0: delete from TRADER_DB.INVESTMENT where INVESTMENT_ID=?
 Identity insert: insert into TRADER_DB.INVESTMENT (INVESTMENT_PORTFOLIO, currentPrice, quantity, INVESTMENT_SYMBOL) values (?, ?, ?, ?)
Static SQL for entity: com.inteltrader.entity.Instrument
 Version select: select SYMBOL_NAME from TRADER_DB.INSTRUMENT where SYMBOL_NAME =?
 Snapshot select: select instrument_.SYMBOL_NAME from TRADER_DB.INSTRUMENT instrument_ where instrument_.SYMBOL_NAME=?
 Insert 0: insert into TRADER_DB.INSTRUMENT (SYMBOL_NAME) values (?)
 Update 0: null
 Delete 0: delete from TRADER_DB.INSTRUMENT where SYMBOL_NAME=?
Static SQL for entity: com.inteltrader.entity.Portfolio
 Version select: select PORTFOLIO_NAME from TRADER_DB.PORTFOLIO where PORTFOLIO_NAME =?
 Snapshot select: select portfolio_.PORTFOLIO_NAME from TRADER_DB.PORTFOLIO portfolio_ where portfolio_.PORTFOLIO_NAME=?
 Insert 0: insert into TRADER_DB.PORTFOLIO (PORTFOLIO_NAME) values (?)
 Update 0: null
 Delete 0: delete from TRADER_DB.PORTFOLIO where PORTFOLIO_NAME=?
Static SQL for collection: com.inteltrader.entity.Instrument.priceList
 Row insert: insert into TRADER_DB.INSTRUMENT_PRICE (SYMBOL_NAME, closePrice, highPrice, lastClosePrice, lowPrice, openPrice, priceId, timeStamp, totalTradedQuantity) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
 Row update: update TRADER_DB.INSTRUMENT_PRICE set closePrice=?, highPrice=?, lastClosePrice=?, lowPrice=?, openPrice=?, priceId=?, timeStamp=?, totalTradedQuantity=? where SYMBOL_NAME=? and priceId=? and totalTradedQuantity=?
 Row delete: delete from TRADER_DB.INSTRUMENT_PRICE where SYMBOL_NAME=? and priceId=? and totalTradedQuantity=?
 One-shot delete: delete from TRADER_DB.INSTRUMENT_PRICE where SYMBOL_NAME=?
Static SQL for collection: com.inteltrader.entity.Portfolio.investmentList
 Row insert: update TRADER_DB.INVESTMENT set INVESTMENT_PORTFOLIO=? where INVESTMENT_ID=?
 Row delete: update TRADER_DB.INVESTMENT set INVESTMENT_PORTFOLIO=null where INVESTMENT_PORTFOLIO=? and INVESTMENT_ID=?
 One-shot delete: update TRADER_DB.INVESTMENT set INVESTMENT_PORTFOLIO=null where INVESTMENT_PORTFOLIO=?
Static select for entity com.inteltrader.entity.Instrument [NONE]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for entity com.inteltrader.entity.Instrument [READ]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for entity com.inteltrader.entity.Instrument [UPGRADE]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [UPGRADE_NOWAIT]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [FORCE]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [PESSIMISTIC_READ]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? lock in share mode
Static select for entity com.inteltrader.entity.Instrument [PESSIMISTIC_WRITE]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [PESSIMISTIC_FORCE_INCREMENT]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=? for update
Static select for entity com.inteltrader.entity.Instrument [OPTIMISTIC]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for entity com.inteltrader.entity.Instrument [OPTIMISTIC_FORCE_INCREMENT]: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for action ACTION_MERGE on entity com.inteltrader.entity.Instrument: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for action ACTION_REFRESH on entity com.inteltrader.entity.Instrument: select instrument0_.SYMBOL_NAME as SYMBOL1_0_0_ from TRADER_DB.INSTRUMENT instrument0_ where instrument0_.SYMBOL_NAME=?
Static select for entity com.inteltrader.entity.Investment [NONE]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.INVESTMENT_PORTFOLIO as INVESTMENT5_2_1_, investment0_.currentPrice as currentP2_2_1_, investment0_.quantity as quantity2_1_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_1_, portfolio1_.PORTFOLIO_NAME as PORTFOLIO1_3_0_ from TRADER_DB.INVESTMENT investment0_ inner join TRADER_DB.PORTFOLIO portfolio1_ on investment0_.INVESTMENT_PORTFOLIO=portfolio1_.PORTFOLIO_NAME where investment0_.INVESTMENT_ID=?
Static select for entity com.inteltrader.entity.Investment [READ]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.INVESTMENT_PORTFOLIO as INVESTMENT5_2_1_, investment0_.currentPrice as currentP2_2_1_, investment0_.quantity as quantity2_1_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_1_, portfolio1_.PORTFOLIO_NAME as PORTFOLIO1_3_0_ from TRADER_DB.INVESTMENT investment0_ inner join TRADER_DB.PORTFOLIO portfolio1_ on investment0_.INVESTMENT_PORTFOLIO=portfolio1_.PORTFOLIO_NAME where investment0_.INVESTMENT_ID=?
Static select for entity com.inteltrader.entity.Investment [UPGRADE]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.INVESTMENT_PORTFOLIO as INVESTMENT5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [UPGRADE_NOWAIT]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.INVESTMENT_PORTFOLIO as INVESTMENT5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [FORCE]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.INVESTMENT_PORTFOLIO as INVESTMENT5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [PESSIMISTIC_READ]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.INVESTMENT_PORTFOLIO as INVESTMENT5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? lock in share mode
Static select for entity com.inteltrader.entity.Investment [PESSIMISTIC_WRITE]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.INVESTMENT_PORTFOLIO as INVESTMENT5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [PESSIMISTIC_FORCE_INCREMENT]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.INVESTMENT_PORTFOLIO as INVESTMENT5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=? for update
Static select for entity com.inteltrader.entity.Investment [OPTIMISTIC]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.INVESTMENT_PORTFOLIO as INVESTMENT5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=?
Static select for entity com.inteltrader.entity.Investment [OPTIMISTIC_FORCE_INCREMENT]: select investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.INVESTMENT_PORTFOLIO as INVESTMENT5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_ID=?
Static select for action ACTION_MERGE on entity com.inteltrader.entity.Investment: select investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.INVESTMENT_PORTFOLIO as INVESTMENT5_2_1_, investment0_.currentPrice as currentP2_2_1_, investment0_.quantity as quantity2_1_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_1_, portfolio1_.PORTFOLIO_NAME as PORTFOLIO1_3_0_ from TRADER_DB.INVESTMENT investment0_ inner join TRADER_DB.PORTFOLIO portfolio1_ on investment0_.INVESTMENT_PORTFOLIO=portfolio1_.PORTFOLIO_NAME where investment0_.INVESTMENT_ID=?
Static select for action ACTION_REFRESH on entity com.inteltrader.entity.Investment: select investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.INVESTMENT_PORTFOLIO as INVESTMENT5_2_1_, investment0_.currentPrice as currentP2_2_1_, investment0_.quantity as quantity2_1_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_1_, portfolio1_.PORTFOLIO_NAME as PORTFOLIO1_3_0_ from TRADER_DB.INVESTMENT investment0_ inner join TRADER_DB.PORTFOLIO portfolio1_ on investment0_.INVESTMENT_PORTFOLIO=portfolio1_.PORTFOLIO_NAME where investment0_.INVESTMENT_ID=?
Static select for entity com.inteltrader.entity.Portfolio [NONE]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_3_1_, investment1_.INVESTMENT_PORTFOLIO as INVESTMENT5_3_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.INVESTMENT_PORTFOLIO as INVESTMENT5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.INVESTMENT_PORTFOLIO where portfolio0_.PORTFOLIO_NAME=?
Static select for entity com.inteltrader.entity.Portfolio [READ]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_3_1_, investment1_.INVESTMENT_PORTFOLIO as INVESTMENT5_3_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.INVESTMENT_PORTFOLIO as INVESTMENT5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.INVESTMENT_PORTFOLIO where portfolio0_.PORTFOLIO_NAME=?
Static select for entity com.inteltrader.entity.Portfolio [UPGRADE]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_3_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [UPGRADE_NOWAIT]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_3_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [FORCE]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_3_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [PESSIMISTIC_READ]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_3_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? lock in share mode
Static select for entity com.inteltrader.entity.Portfolio [PESSIMISTIC_WRITE]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_3_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [PESSIMISTIC_FORCE_INCREMENT]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_3_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=? for update
Static select for entity com.inteltrader.entity.Portfolio [OPTIMISTIC]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_3_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=?
Static select for entity com.inteltrader.entity.Portfolio [OPTIMISTIC_FORCE_INCREMENT]: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_3_0_ from TRADER_DB.PORTFOLIO portfolio0_ where portfolio0_.PORTFOLIO_NAME=?
Static select for action ACTION_MERGE on entity com.inteltrader.entity.Portfolio: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_3_1_, investment1_.INVESTMENT_PORTFOLIO as INVESTMENT5_3_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.INVESTMENT_PORTFOLIO as INVESTMENT5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.INVESTMENT_PORTFOLIO where portfolio0_.PORTFOLIO_NAME=?
Static select for action ACTION_REFRESH on entity com.inteltrader.entity.Portfolio: select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_3_1_, investment1_.INVESTMENT_PORTFOLIO as INVESTMENT5_3_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.INVESTMENT_PORTFOLIO as INVESTMENT5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.INVESTMENT_PORTFOLIO where portfolio0_.PORTFOLIO_NAME=?
Static select for collection com.inteltrader.entity.Instrument.priceList: select pricelist0_.SYMBOL_NAME as SYMBOL1_0_0_, pricelist0_.closePrice as closePrice1_0_, pricelist0_.highPrice as highPrice1_0_, pricelist0_.lastClosePrice as lastClos4_1_0_, pricelist0_.lowPrice as lowPrice1_0_, pricelist0_.openPrice as openPrice1_0_, pricelist0_.priceId as priceId1_0_, pricelist0_.timeStamp as timeStamp1_0_, pricelist0_.totalTradedQuantity as totalTra9_1_0_ from TRADER_DB.INSTRUMENT_PRICE pricelist0_ where pricelist0_.SYMBOL_NAME=?
Static select for one-to-many com.inteltrader.entity.Portfolio.investmentList: select investment0_.INVESTMENT_PORTFOLIO as INVESTMENT5_3_1_, investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.INVESTMENT_PORTFOLIO as INVESTMENT5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_PORTFOLIO=?
Registering SessionFactory: 45f0803c-4d24-4edb-9e11-bb21653dea1a (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Instantiated session factory
HHH000228: Running hbm2ddl schema update
HHH000102: Fetching database metadata
HHH000396: Updating schema
Processing hbm.xml files
Process annotated classes
Processing fk mappings (*ToOne and JoinedSubclass)
Processing extends queue
Processing extends queue
Processing collection mappings
Processing native query and ResultSetMapping mappings
Processing association property references
Creating tables' unique integer identifiers
Processing foreign key constraints
Resolving reference to class: com.inteltrader.entity.Instrument
Resolving reference to class: com.inteltrader.entity.Portfolio
HHH000261: Table found: TRADER_DB.instrument
HHH000037: Columns: [symbol_name]
HHH000108: Foreign keys: []
HHH000126: Indexes: [primary]
HHH000261: Table found: TRADER_DB.instrument_price
HHH000037: Columns: [totaltradedquantity, timestamp, priceid, lastcloseprice, highprice, symbol_name, openprice, closeprice, lowprice]
HHH000108: Foreign keys: [fk3189a2d153ed548d]
HHH000126: Indexes: [fk3189a2d153ed548d]
HHH000261: Table found: TRADER_DB.investment
HHH000037: Columns: [investment_id, investment_portfolio, currentprice, quantity, investment_symbol]
HHH000108: Foreign keys: [fk8fe41ed32c4ccdd0]
HHH000126: Indexes: [fk8fe41ed32c4ccdd0, primary]
HHH000261: Table found: TRADER_DB.portfolio
HHH000037: Columns: [portfolio_name]
HHH000108: Foreign keys: []
HHH000126: Indexes: [primary]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
HHH000232: Schema update complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Statistics initialized [enabled=false]
Registering EntityManagerFactory: intelTrader 
HHH000436: Entity manager factory name (intelTrader) is already registered.  If entity manager will be clustered or passivated, specify a unique value for property 'hibernate.ejb.entitymanager_factory_name'
Finished creating instance of bean 'entityManagerFactory'
Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@2f924b3f: defining beans [org.springframework.context.annotation.internalAsyncAnnotationProcessor,org.springframework.context.annotation.internalScheduledAnnotationProcessor,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0,org.springframework.web.servlet.view.InternalResourceViewResolver#0,instrumentDao,portfolioDao,instrumentService,portfolioService,entityManagerFactory,transactionManager,instrument,investment,portfolio,instrumentServiceRest,portfolioServiceRest,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor]; parent: org.springframework.beans.factory.support.DefaultListableBeanFactory@52f796fa
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Creating instance of bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0' to allow for resolving potential circular references
Creating instance of bean '(inner bean)'
Creating shared instance of singleton bean 'transactionManager'
Creating instance of bean 'transactionManager'
Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
Returning cached instance of singleton bean 'entityManagerFactory'
Invoking afterPropertiesSet() on bean with name 'transactionManager'
Finished creating instance of bean 'transactionManager'
Creating instance of bean '(inner bean)'
Finished creating instance of bean '(inner bean)'
Invoking afterPropertiesSet() on bean with name '(inner bean)'
Finished creating instance of bean '(inner bean)'
Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Creating shared instance of singleton bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Creating instance of bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Eagerly caching bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Creating shared instance of singleton bean 'instrumentDao'
Creating instance of bean 'instrumentDao'
Eagerly caching bean 'instrumentDao' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'instrumentDao'
Creating shared instance of singleton bean 'portfolioDao'
Creating instance of bean 'portfolioDao'
Eagerly caching bean 'portfolioDao' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'portfolioDao'
Creating shared instance of singleton bean 'instrumentService'
Creating instance of bean 'instrumentService'
Registered injected element on class [com.inteltrader.service.InstrumentServiceImpl]: PersistenceElement for javax.persistence.EntityManagerFactory com.inteltrader.service.InstrumentServiceImpl.entityManagerFactory
Registered injected element on class [com.inteltrader.service.InstrumentServiceImpl]: AutowiredFieldElement for private com.inteltrader.dao.IInstrumentDao com.inteltrader.service.InstrumentServiceImpl.instrumentDao
Registered injected element on class [com.inteltrader.service.InstrumentServiceImpl]: AutowiredFieldElement for private com.inteltrader.service.PortfolioService com.inteltrader.service.InstrumentServiceImpl.portfolioService
Eagerly caching bean 'instrumentService' to allow for resolving potential circular references
Processing injected method of bean 'instrumentService': PersistenceElement for javax.persistence.EntityManagerFactory com.inteltrader.service.InstrumentServiceImpl.entityManagerFactory
Returning cached instance of singleton bean 'entityManagerFactory'
Processing injected method of bean 'instrumentService': AutowiredFieldElement for private com.inteltrader.dao.IInstrumentDao com.inteltrader.service.InstrumentServiceImpl.instrumentDao
Returning cached instance of singleton bean 'instrumentDao'
Autowiring by type from bean name 'instrumentService' to bean named 'instrumentDao'
Processing injected method of bean 'instrumentService': AutowiredFieldElement for private com.inteltrader.service.PortfolioService com.inteltrader.service.InstrumentServiceImpl.portfolioService
Creating shared instance of singleton bean 'portfolioService'
Creating instance of bean 'portfolioService'
Registered injected element on class [com.inteltrader.service.PortfolioServiceImpl]: PersistenceElement for private javax.persistence.EntityManagerFactory com.inteltrader.service.PortfolioServiceImpl.entityManagerFactory
Registered injected element on class [com.inteltrader.service.PortfolioServiceImpl]: AutowiredFieldElement for private com.inteltrader.dao.IPortfolioDao com.inteltrader.service.PortfolioServiceImpl.portfolioDao
Eagerly caching bean 'portfolioService' to allow for resolving potential circular references
Processing injected method of bean 'portfolioService': PersistenceElement for private javax.persistence.EntityManagerFactory com.inteltrader.service.PortfolioServiceImpl.entityManagerFactory
Returning cached instance of singleton bean 'entityManagerFactory'
Processing injected method of bean 'portfolioService': AutowiredFieldElement for private com.inteltrader.dao.IPortfolioDao com.inteltrader.service.PortfolioServiceImpl.portfolioDao
Returning cached instance of singleton bean 'portfolioDao'
Autowiring by type from bean name 'portfolioService' to bean named 'portfolioDao'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'portfolioService'
Autowiring by type from bean name 'instrumentService' to bean named 'portfolioService'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'instrumentService'
Returning cached instance of singleton bean 'portfolioService'
Returning cached instance of singleton bean 'entityManagerFactory'
Returning cached instance of singleton bean 'transactionManager'
Creating shared instance of singleton bean 'instrument'
Creating instance of bean 'instrument'
Eagerly caching bean 'instrument' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'instrument'
Creating shared instance of singleton bean 'investment'
Creating instance of bean 'investment'
Eagerly caching bean 'investment' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'investment'
Creating shared instance of singleton bean 'portfolio'
Creating instance of bean 'portfolio'
Eagerly caching bean 'portfolio' to allow for resolving potential circular references
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'portfolio'
Creating shared instance of singleton bean 'instrumentServiceRest'
Creating instance of bean 'instrumentServiceRest'
Registered injected element on class [com.inteltrader.rest.InstrumentServiceRest]: AutowiredFieldElement for private com.inteltrader.service.InstrumentService com.inteltrader.rest.InstrumentServiceRest.instrumentService
Eagerly caching bean 'instrumentServiceRest' to allow for resolving potential circular references
Processing injected method of bean 'instrumentServiceRest': AutowiredFieldElement for private com.inteltrader.service.InstrumentService com.inteltrader.rest.InstrumentServiceRest.instrumentService
Returning cached instance of singleton bean 'instrumentService'
Autowiring by type from bean name 'instrumentServiceRest' to bean named 'instrumentService'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'instrumentServiceRest'
Creating shared instance of singleton bean 'portfolioServiceRest'
Creating instance of bean 'portfolioServiceRest'
Registered injected element on class [com.inteltrader.rest.PortfolioServiceRest]: AutowiredFieldElement for private com.inteltrader.service.PortfolioService com.inteltrader.rest.PortfolioServiceRest.portfolioService
Eagerly caching bean 'portfolioServiceRest' to allow for resolving potential circular references
Processing injected method of bean 'portfolioServiceRest': AutowiredFieldElement for private com.inteltrader.service.PortfolioService com.inteltrader.rest.PortfolioServiceRest.portfolioService
Returning cached instance of singleton bean 'portfolioService'
Autowiring by type from bean name 'portfolioServiceRest' to bean named 'portfolioService'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'portfolioServiceRest'
Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@23cf08ee]
Returning cached instance of singleton bean 'lifecycleProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Unable to locate MultipartResolver with name 'multipartResolver': no multipart request handling provided
Creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Unable to locate LocaleResolver with name 'localeResolver': using default [org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver@106a3101]
Creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Unable to locate ThemeResolver with name 'themeResolver': using default [org.springframework.web.servlet.theme.FixedThemeResolver@636f3147]
Creating instance of bean 'org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping'
Looking for URL mappings in application context: WebApplicationContext for namespace 'appServlet-servlet': startup date [Fri Apr 19 17:56:23 IST 2013]; parent: Root WebApplicationContext
Rejected bean name 'org.springframework.context.annotation.internalAsyncAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalScheduledAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalRequiredAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalCommonAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.aop.config.internalAutoProxyCreator': no URL paths identified
Rejected bean name 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0': no URL paths identified
Rejected bean name 'org.springframework.web.servlet.view.InternalResourceViewResolver#0': no URL paths identified
Rejected bean name 'instrumentDao': no URL paths identified
Rejected bean name 'portfolioDao': no URL paths identified
Rejected bean name 'instrumentService': no URL paths identified
Rejected bean name 'portfolioService': no URL paths identified
Rejected bean name 'entityManagerFactory': no URL paths identified
Rejected bean name 'transactionManager': no URL paths identified
Rejected bean name 'instrument': no URL paths identified
Rejected bean name 'investment': no URL paths identified
Rejected bean name 'portfolio': no URL paths identified
Rejected bean name 'instrumentServiceRest': no URL paths identified
Rejected bean name 'portfolioServiceRest': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor': no URL paths identified
Rejected bean name 'environment': no URL paths identified
Rejected bean name 'systemProperties': no URL paths identified
Rejected bean name 'systemEnvironment': no URL paths identified
Rejected bean name 'servletConfig': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry': no URL paths identified
Rejected bean name 'messageSource': no URL paths identified
Rejected bean name 'applicationEventMulticaster': no URL paths identified
Rejected bean name 'lifecycleProcessor': no URL paths identified
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping'
Creating instance of bean 'org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping'
Looking for URL mappings in application context: WebApplicationContext for namespace 'appServlet-servlet': startup date [Fri Apr 19 17:56:23 IST 2013]; parent: Root WebApplicationContext
Rejected bean name 'org.springframework.context.annotation.internalAsyncAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalScheduledAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalRequiredAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalCommonAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor': no URL paths identified
Rejected bean name 'org.springframework.aop.config.internalAutoProxyCreator': no URL paths identified
Rejected bean name 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0': no URL paths identified
Rejected bean name 'org.springframework.web.servlet.view.InternalResourceViewResolver#0': no URL paths identified
Rejected bean name 'instrumentDao': no URL paths identified
Rejected bean name 'portfolioDao': no URL paths identified
Rejected bean name 'instrumentService': no URL paths identified
Rejected bean name 'portfolioService': no URL paths identified
Rejected bean name 'entityManagerFactory': no URL paths identified
Rejected bean name 'transactionManager': no URL paths identified
Rejected bean name 'instrument': no URL paths identified
Rejected bean name 'investment': no URL paths identified
Rejected bean name 'portfolio': no URL paths identified
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/create/{symbol}] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/create/{symbol}.*] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/create/{symbol}/] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/update/{portfolioName}] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/update/{portfolioName}.*] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/update/{portfolioName}/] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/load/{symbol}] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/load/{symbol}.*] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'instrumentServiceRest'
Mapped URL path [/instrument/load/{symbol}/] onto handler 'instrumentServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/create/{portfolioName}] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/create/{portfolioName}.*] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/create/{portfolioName}/] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/load/{portfolioName}] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/load/{portfolioName}.*] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/load/{portfolioName}/] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/addInvestment/{portfolioName}/{symbolName}] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/addInvestment/{portfolioName}/{symbolName}.*] onto handler 'portfolioServiceRest'
Returning cached instance of singleton bean 'portfolioServiceRest'
Mapped URL path [/portfolio/addInvestment/{portfolioName}/{symbolName}/] onto handler 'portfolioServiceRest'
Rejected bean name 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor': no URL paths identified
Rejected bean name 'environment': no URL paths identified
Rejected bean name 'systemProperties': no URL paths identified
Rejected bean name 'systemEnvironment': no URL paths identified
Rejected bean name 'servletConfig': no URL paths identified
Rejected bean name 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry': no URL paths identified
Rejected bean name 'messageSource': no URL paths identified
Rejected bean name 'applicationEventMulticaster': no URL paths identified
Rejected bean name 'lifecycleProcessor': no URL paths identified
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping'
No HandlerMappings found in servlet 'appServlet': using default
Creating instance of bean 'org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter'
Creating instance of bean 'org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter'
Creating instance of bean 'org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter'
No HandlerAdapters found in servlet 'appServlet': using default
Creating instance of bean 'org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerExceptionResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerExceptionResolver'
Creating instance of bean 'org.springframework.web.servlet.mvc.annotation.ResponseStatusExceptionResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.annotation.ResponseStatusExceptionResolver'
Creating instance of bean 'org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver'
No HandlerExceptionResolvers found in servlet 'appServlet': using default
Creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Unable to locate RequestToViewNameTranslator with name 'viewNameTranslator': using default [org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@5f5ce228]
Returning cached instance of singleton bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Returning cached instance of singleton bean 'org.springframework.web.servlet.view.InternalResourceViewResolver#0'
Creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor#0'
Finished creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Unable to locate FlashMapManager with name 'flashMapManager': using default [org.springframework.web.servlet.support.SessionFlashMapManager@36655c5]
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Searching for key 'spring.liveBeansView.mbeanDomain' in [servletConfigInitParams]
Searching for key 'spring.liveBeansView.mbeanDomain' in [servletContextInitParams]
Searching for key 'spring.liveBeansView.mbeanDomain' in [jndiProperties]
Looking up JNDI object with name [java:comp/env/spring.liveBeansView.mbeanDomain]
Converted JNDI name [java:comp/env/spring.liveBeansView.mbeanDomain] not found - trying original name [spring.liveBeansView.mbeanDomain]. javax.naming.NameNotFoundException: Name [spring.liveBeansView.mbeanDomain] is not bound in this Context. Unable to find [spring.liveBeansView.mbeanDomain].
Looking up JNDI object with name [spring.liveBeansView.mbeanDomain]
JNDI lookup for name [spring.liveBeansView.mbeanDomain] threw NamingException with message: Name [spring.liveBeansView.mbeanDomain] is not bound in this Context. Unable to find [spring.liveBeansView.mbeanDomain].. Returning null.
Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
Published WebApplicationContext of servlet 'appServlet' as ServletContext attribute with name [org.springframework.web.servlet.FrameworkServlet.CONTEXT.appServlet]
FrameworkServlet 'appServlet': initialization completed in 661 ms
Servlet 'appServlet' configured successfully
DispatcherServlet with name 'appServlet' processing GET request for [/portfolio/create/myFirstTime]
Matching patterns for request [/portfolio/create/myFirstTime] are [/portfolio/create/{portfolioName}]
URI Template variables for request [/portfolio/create/myFirstTime] are {portfolioName=myFirstTime}
Mapping [/portfolio/create/myFirstTime] to HandlerExecutionChain with handler [com.inteltrader.rest.PortfolioServiceRest@ae9cfa3] and 2 interceptors
Last-Modified value for [/portfolio/create/myFirstTime] is: -1
Invoking request handler method: public org.springframework.http.ResponseEntity com.inteltrader.rest.PortfolioServiceRest.createPortfolio(java.lang.String,javax.servlet.http.HttpServletRequest)
begin
Obtaining JDBC connection
Obtained JDBC connection
initial autocommit status: true
disabling autocommit
Generated identifier: myFirstTime, using strategy: org.hibernate.id.Assigned
committing
Processing flush-time cascades
Dirty checking collections
Collection found: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime], was: [<unreferenced>] (initialized)
Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
Listing entities:
com.inteltrader.entity.Portfolio{portfolioName=myFirstTime, investmentList=[]}
insert into TRADER_DB.PORTFOLIO (PORTFOLIO_NAME) values (?)
committed JDBC Connection
re-enabling autocommit
Written [SUCCESS] as "text/html" using [org.springframework.http.converter.StringHttpMessageConverter@6288e235]
Null ModelAndView returned to DispatcherServlet with name 'appServlet': assuming HandlerAdapter completed request handling
Successfully completed request
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
Returning cached instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
DispatcherServlet with name 'appServlet' processing GET request for [/portfolio/addInvestment/myFirstTime/AMTEKAUTO]
Matching patterns for request [/portfolio/addInvestment/myFirstTime/AMTEKAUTO] are [/portfolio/addInvestment/{portfolioName}/{symbolName}]
URI Template variables for request [/portfolio/addInvestment/myFirstTime/AMTEKAUTO] are {portfolioName=myFirstTime, symbolName=AMTEKAUTO}
Mapping [/portfolio/addInvestment/myFirstTime/AMTEKAUTO] to HandlerExecutionChain with handler [com.inteltrader.rest.PortfolioServiceRest@ae9cfa3] and 2 interceptors
Last-Modified value for [/portfolio/addInvestment/myFirstTime/AMTEKAUTO] is: -1
Invoking request handler method: public org.springframework.http.ResponseEntity com.inteltrader.rest.PortfolioServiceRest.addInvestment(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
begin
Obtaining JDBC connection
Opening new JDBC connection
Created connection to: jdbc:mysql://localhost:3306/TRADER_DB, Isolation Level: 4
Obtained JDBC connection
initial autocommit status: true
disabling autocommit
Loading entity: [com.inteltrader.entity.Portfolio#myFirstTime]
select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_3_1_, investment1_.INVESTMENT_PORTFOLIO as INVESTMENT5_3_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.INVESTMENT_PORTFOLIO as INVESTMENT5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.INVESTMENT_PORTFOLIO where portfolio0_.PORTFOLIO_NAME=?
Result set row: 0
Result row: null, EntityKey[com.inteltrader.entity.Portfolio#myFirstTime]
Result set contains (possibly empty) collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Resolving associations for [com.inteltrader.entity.Portfolio#myFirstTime]
Done materializing entity [com.inteltrader.entity.Portfolio#myFirstTime]
1 collections were found in result set for role: com.inteltrader.entity.Portfolio.investmentList
Collection fully initialized: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
1 collections initialized for role: com.inteltrader.entity.Portfolio.investmentList
Done entity load
Executing identity-insert immediately
insert into TRADER_DB.INVESTMENT (INVESTMENT_PORTFOLIO, currentPrice, quantity, INVESTMENT_SYMBOL) values (?, ?, ?, ?)
Natively generated identity: 1
committing
Processing flush-time cascades
Dirty checking collections
Collection dirty: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Collection found: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime], was: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime] (initialized)
Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
Flushed: 0 (re)creations, 1 updates, 0 removals to 1 collections
Listing entities:
com.inteltrader.entity.Investment{investmentId=1, quantity=null, currentPrice=null, symbolName=AMTEKAUTO, associatedPortfolio=com.inteltrader.entity.Portfolio#myFirstTime}
com.inteltrader.entity.Portfolio{portfolioName=myFirstTime, investmentList=[com.inteltrader.entity.Investment#1]}
committed JDBC Connection
re-enabling autocommit
Written [SUCCESS] as "text/html" using [org.springframework.http.converter.StringHttpMessageConverter@6288e235]
Null ModelAndView returned to DispatcherServlet with name 'appServlet': assuming HandlerAdapter completed request handling
Successfully completed request
DispatcherServlet with name 'appServlet' processing GET request for [/portfolio/load/MyFirstTime]
Matching patterns for request [/portfolio/load/MyFirstTime] are [/portfolio/load/{portfolioName}]
URI Template variables for request [/portfolio/load/MyFirstTime] are {portfolioName=MyFirstTime}
Mapping [/portfolio/load/MyFirstTime] to HandlerExecutionChain with handler [com.inteltrader.rest.PortfolioServiceRest@ae9cfa3] and 2 interceptors
Last-Modified value for [/portfolio/load/MyFirstTime] is: -1
Invoking request handler method: public org.springframework.http.ResponseEntity com.inteltrader.rest.PortfolioServiceRest.loadInstrument(java.lang.String,javax.servlet.http.HttpServletRequest)
Loading entity: [com.inteltrader.entity.Portfolio#MyFirstTime]
Obtaining JDBC connection
Opening new JDBC connection
Created connection to: jdbc:mysql://localhost:3306/TRADER_DB, Isolation Level: 4
Obtained JDBC connection
select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_3_1_, investment1_.INVESTMENT_PORTFOLIO as INVESTMENT5_3_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.INVESTMENT_PORTFOLIO as INVESTMENT5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.INVESTMENT_PORTFOLIO where portfolio0_.PORTFOLIO_NAME=?
Result set row: 0
Result row: EntityKey[com.inteltrader.entity.Investment#1], EntityKey[com.inteltrader.entity.Portfolio#MyFirstTime]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Resolving associations for [com.inteltrader.entity.Investment#1]
Loading entity: [com.inteltrader.entity.Portfolio#myFirstTime]
select portfolio0_.PORTFOLIO_NAME as PORTFOLIO1_3_1_, investment1_.INVESTMENT_PORTFOLIO as INVESTMENT5_3_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_3_, investment1_.INVESTMENT_ID as INVESTMENT1_2_0_, investment1_.INVESTMENT_PORTFOLIO as INVESTMENT5_2_0_, investment1_.currentPrice as currentP2_2_0_, investment1_.quantity as quantity2_0_, investment1_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.PORTFOLIO portfolio0_ left outer join TRADER_DB.INVESTMENT investment1_ on portfolio0_.PORTFOLIO_NAME=investment1_.INVESTMENT_PORTFOLIO where portfolio0_.PORTFOLIO_NAME=?
Result set row: 0
Result row: EntityKey[com.inteltrader.entity.Investment#1], EntityKey[com.inteltrader.entity.Portfolio#myFirstTime]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
Resolving associations for [com.inteltrader.entity.Portfolio#myFirstTime]
Done materializing entity [com.inteltrader.entity.Portfolio#myFirstTime]
No collections were found in result set for role: com.inteltrader.entity.Portfolio.investmentList
Done entity load
Done materializing entity [com.inteltrader.entity.Investment#1]
Resolving associations for [com.inteltrader.entity.Portfolio#MyFirstTime]
Done materializing entity [com.inteltrader.entity.Portfolio#MyFirstTime]
1 collections were found in result set for role: com.inteltrader.entity.Portfolio.investmentList
Collection fully initialized: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
1 collections initialized for role: com.inteltrader.entity.Portfolio.investmentList
Loading collection: [com.inteltrader.entity.Portfolio.investmentList#MyFirstTime]
select investment0_.INVESTMENT_PORTFOLIO as INVESTMENT5_3_1_, investment0_.INVESTMENT_ID as INVESTMENT1_2_1_, investment0_.INVESTMENT_ID as INVESTMENT1_2_0_, investment0_.INVESTMENT_PORTFOLIO as INVESTMENT5_2_0_, investment0_.currentPrice as currentP2_2_0_, investment0_.quantity as quantity2_0_, investment0_.INVESTMENT_SYMBOL as INVESTMENT4_2_0_ from TRADER_DB.INVESTMENT investment0_ where investment0_.INVESTMENT_PORTFOLIO=?
Result set contains (possibly empty) collection: [com.inteltrader.entity.Portfolio.investmentList#MyFirstTime]
Result set row: 0
Result row: EntityKey[com.inteltrader.entity.Investment#1]
Found row of collection: [com.inteltrader.entity.Portfolio.investmentList#myFirstTime]
1 collections were found in result set for role: com.inteltrader.entity.Portfolio.investmentList
Collection fully initialized: [com.inteltrader.entity.Portfolio.investmentList#MyFirstTime]
1 collections initialized for role: com.inteltrader.entity.Portfolio.investmentList
Done loading collection
Done entity load
Written [{"portfolioName":"MyFirstTime","investmentList":[]}] as "text/html" using [org.springframework.http.converter.StringHttpMessageConverter@6288e235]
Null ModelAndView returned to DispatcherServlet with name 'appServlet': assuming HandlerAdapter completed request handling
Successfully completed request
